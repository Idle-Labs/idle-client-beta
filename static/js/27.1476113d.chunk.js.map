{"version":3,"sources":["RoundIconButton/RoundIconButton.js","Breadcrumb/Breadcrumb.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js"],"names":["RoundIconButton","buttonProps","Object","assign","p","boxShadow","width","height","mainColor","borderRadius","disabled","this","props","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","color","name","iconName","size","iconSize","Component","Breadcrumb","_this","showPathMobile","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","id","alignItems","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_8__","text","length","ml","fontSize","fontWeight","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","DelegateField","state","functionsUtil","setProps","FunctionsUtil","loadUtils","prevProps","prevState","output","fieldInfo","delegate","fieldProps","flexProps","justifyContent","keys","forEach","react_default","index_es","opts","bgcolor","spotcolor","seed","value","formatMoney","BNify","toFixed","DelegatesList","page","filters","loading","rowsPerPage","totalRows","totalPages","activeFilters","processedRows","lastBlockNumber","applyFilters","setState","processList","resetFilters","status","arguments","undefined","delegates","values","sort","b","timestamp","maxRows","splice","Math","ceil","i","push","preventDefault","max","min","pageChanged","delegatesChanged","JSON","stringify","_this2","flexDirection","m","FlexLoader","minHeight","loaderProps","textProps","position","TableHeader","cols","delegateId","TableRow","rowProps","isInteractive","fieldComponent","rowId","cardId","mr","prevPage","nextPage","h3","textAlign","fontFamily","DelegateDetails","proposals","governanceUtil","GovernanceUtil","loadProposals","getProposals","Title","mb","pr","StatsCard","label","title","rank","labelTooltip","titleMinHeight","ExtLink","href","getEtherscanAddressUrl","ShortHash","lineHeight","hash","votes","mt","ProposalsList","filtersEnabled","fields","mobile","parentProps","Leaderboard","selectedDelegate","loadData","getDelegates","params","match","item_id","toLowerCase","foundProposal","find","d","Governance_DelegateDetails_DelegateDetails"],"mappings":"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","file":"static/js/27.1476113d.chunk.js","sourcesContent":["import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;"],"sourceRoot":""}