{"version":3,"sources":["RoundIconButton/RoundIconButton.js","Breadcrumb/Breadcrumb.js"],"names":["RoundIconButton","buttonProps","Object","assign","p","boxShadow","width","height","mainColor","borderRadius","disabled","this","props","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","color","name","iconName","size","iconSize","Component","Breadcrumb","_this","showPathMobile","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","id","alignItems","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_8__","text","length","ml","fontSize","fontWeight","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection"],"mappings":"+KAIMA,mLAEF,IAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAE,EACFC,UAAU,EACVC,MAAM,OACNC,OAAO,OACPC,UAAU,QACVC,aAAa,MACbC,SAASC,KAAKC,MAAMF,UACpBC,KAAKC,MAAMX,aAIb,OAFAA,EAAYY,SAAWZ,EAAYK,MAGhCQ,EAAAC,EAAAC,cAACC,EAAA,QAAD,CACEhB,YAAaA,EACbiB,YAAaP,KAAKC,MAAMM,aAExBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,MAAO,YACPC,KAAMV,KAAKC,MAAMU,SACjBC,KAAOZ,KAAKC,MAAMY,SAAWb,KAAKC,MAAMY,SAAW,kBAtBhCC,aA6BfzB,0IC5BT0B,mLACK,IAAAC,EAAAhB,KAEDiB,IAAmBjB,KAAKC,MAAMgB,eAEpC,OACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEvB,MAAO,EACPwB,GAAI,aACJC,WAAY,UAGVpB,KAAKC,MAAMM,aACVJ,EAAAC,EAAAC,cAACgB,EAAA,QAAD,CACE/B,YAAa,CACXK,MAAM,OACNC,OAAO,QAETiB,SAAU,QACVF,SAAU,YACVJ,YAAaP,KAAKC,MAAMM,cAI3BP,KAAKC,MAAMqB,MAAQtB,KAAKC,MAAMqB,KAAKC,OAAO,GACzCpB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEM,GAAI,CAAC,EAAE,GACPC,SAAU,CAAC,EAAE,GACbC,WAAY,EACZjB,MAAO,WACPkB,WAAY,YACZC,QAAS5B,KAAKC,MAAMM,aAEpBP,KAAKC,MAAMqB,QAIZtB,KAAKC,MAAM4B,UAAYZ,IAAmBjB,KAAKC,MAAM6B,MAAQ9B,KAAKC,MAAM6B,KAAKP,OAAO,GACpFvB,KAAKC,MAAM6B,KAAKC,IAAI,SAACD,EAAKE,GACxB,IAAMC,EAAOjB,EAAKf,MAAMiC,UAAYlB,EAAKf,MAAMiC,SAASF,IAAkB,KACpElB,EAAYmB,EAAOE,IAAOC,IAChC,OACEjC,EAAAC,EAAAC,cAACS,EAAD,CACEuB,GAAI,CAAC,EAAE,GACPb,GAAI,CAAC,EAAE,GACPE,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,WAAY,YACZW,MAAStB,EAAKf,MAAM4B,SAMhB,KAN2B,CAC7BU,SAAS,MACTC,SAAU,SACVC,WAAY,SACZC,aAAc,WACdC,WAAU,aAAAC,OAAeC,IAAMC,OAAOC,UAExCC,IAAG,mBAAAJ,OAAqBZ,GACxBvB,MAAOwB,EAAO,WAAa,YAC3BL,QAASK,EAAO,SAAAgB,GAAC,OAAIjC,EAAKf,MAAMiD,YAAYjB,IAAQ,MAEnDH,aA3DMhB,aAqEVC","file":"static/js/6.54919c5a.chunk.js","sourcesContent":["import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;"],"sourceRoot":""}