{"version":3,"sources":["RoundIconButton/RoundIconButton.js","Title/Title.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","TrancheField/TrancheField.js","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","PageNotFound/PageNotFound.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","Migrate/Migrate.js","FlexLoader/FlexLoader.js","AssetField/AssetField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","DashboardCard/DashboardCard.js","Staking/Staking.js","TrancheBox/TrancheBox.js","TrancheWelcome/TrancheWelcome.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDetails/TrancheDetails.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","PortfolioEquityTranches/PortfolioEquityTranches.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","ImageButton/ImageButton.js","ExtLink/ExtLink.js","SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js"],"names":["RoundIconButton","buttonProps","Object","assign","p","border","width","height","borderRadius","mainColor","disabled","this","props","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","color","name","iconName","size","iconSize","Component","Title","_this","fontWeight","fontSize","textAlign","lineHeight","keys","length","forEach","HeadingComponent","component","Heading","h1","children","CardIconButton","cardProps","py","px","react__WEBPACK_IMPORTED_MODULE_5___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","my","alignItems","flexDirection","justifyContent","image","align","src","isMobile","imageProps","useIconOnly","icon","iconColor","iconProps","mr","backgroundColor","iconBgColor","theme","colors","transactions","actionBg","redeem","textProps","text","CustomTooltip","key","point","id","left","data","itemPos","xFormatted","mb","AllocationChart","state","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","functionsUtil","componentUnmounted","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","selectedToken","setStateSafe","_this2","newState","callback","setState","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","display","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","concat","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","decimals","maxPrecision","number","unitProps","ml","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","type","Pie","showLoader","CustomTooltipRow","pr","style","flexBasis","flex","whiteSpace","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","index","hash","status","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","isNaN","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","map","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","formatMoney","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","abbreviateNumber","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","flexProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","hoverColor","rel","href","getEtherscanTransactionUrl","cancelTransaction","onClick","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","boxShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","className","styles","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","link","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomList","react_default","index_es","TableHeader","cols","rows","row","rowIndex","TableRow","fieldComponent","CustomField","rowId","cardId","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","includes","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","path","mobile","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","mx","src_TwitterShareButton_TwitterShareButton","React","TrancheField","ready","loadField","fieldName","fieldInfo","fieldProps","addGovTokens","output","_args","undefined","protocol","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","loader","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","trancheDetails","rgb","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_10__","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","module","exports","gradientButton","empty","select","selectDark","input","headerContainer","headerBgFiller","bgContainer","list","textContainer","TransactionField","hashChanged","bgColor","maxWidth","overflow","textOverflow","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","resolveAddress","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","SmartNumber","Image","Icon","Text","button","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FieldComponent","rowProps","colInfo","colIndex","visible","fieldIndex","colProps","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","_x5","payments","providers","getInitParams","render","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","baseToken","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","j","countries","remoteResources","url","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","methods","method","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imageSrc","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","bg","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","Migrate","nonce","approve","usePermit","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","checkButtonDisabled","lte","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","migration","oldContract","normalizeTokenAmount","txSucceeded","eventValue","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","getContractByName","checkTokenApproved","checkMigration","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","_ref4","_ref5","biconomyLimits","abi","initContract","getTokenDecimals","getContractBalance","genericContractCall","biconomy","checkBiconomyLimits","allowed","migrationEnabledCallback","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","callbackMigrate","callbackReceiptMigrate","callbackPermit","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","permitContract","functionInfo","migrationCallback","showBalanceSelector","integerValue","skipMintForDeposit","convertTokenBalance","gte","idle","encodeABI","sendBiconomyTxWithPersonalSign","functions","f","sendTxWithPermit","permitName","biconomyChanged","usePermitChanged","actionChanged","fastBalanceSelectorChanged","contractApproved","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","required","checked","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","isMigrationTool","migrateTextBefore","migrateText","showActions","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","route","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","balanceSelectorInfo","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationIcon","migrationText","migrationTextProps","approveText","FlexLoader","AssetField","govTokens","oldContractBalanceFormatted","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","redeemableBalanceEnd","redeemableBalanceStart","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","startTimestamp","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","loadAssetField","tokenBalance","getTokenGovTokens","showPrice","fee","amountToMigrate","earnings","getTokenFees","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","getCurveAPY","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPerc","earningsPercDirection","showAPR","oldProtocols","oldProtocol","foundProtocol","protocolPos","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","$allocationChartRowElement","jQuery","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","_d","getCachedData","add","random","getFrequencySeconds","idleRate","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","match","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","minPrecision","icon1","placement","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","ref","_ref12","_ref13","_ref14","_ref15","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","govToken","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","customFieldName","customFieldProps","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","slicedToArray","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","contract","contracts","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortenHash","shortHash","txStart","txEnd","getENSName","networkId","ensConfig","TTL","ens","ensName","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","trancheTokenBalance","tranchePrice","trancheUserInfo","trancheApy","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","previousHarvest","latestHarvest","previousBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","elapsedBlocks","elapsedSeconds","transferAmount","tokensPerBlock","tokensPerSecond","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getAmountDepositedTranche","_ref27","_callee19","_context19","_x17","_x18","_x19","_ref28","_callee20","_ref29","_ref30","userAvgPrice","_context20","_x20","_x21","getAmountLent","_callee21","amountLents","_args21","_context21","getEtherscanBaseTxs","_callee22","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args22","_context22","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee23","_args23","_context23","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee24","_ref35","allAvailableTokens","_args24","_context24","processStoredTxs","sort","_ref36","_callee25","_args25","_context25","_x22","_ref37","_callee26","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args26","_context26","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","objectSpread","iTxs","withdrawnValue","processEtherscanTransactions","_x23","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref38","_callee31","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args31","_context31","baseTokenConfig","baseTokenAddress","_ref39","_callee30","minedTxs","_context30","_ref40","_callee29","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context29","getCurveTokenPrice","_ref41","_callee27","_context27","getTransactionReceipt","_x28","_x29","topics","baseTokensConfig","t2","_ref42","_callee28","_context28","_x30","_x31","_x26","_x27","_x25","_x24","_ref43","_callee37","txsToProcess","_args37","_context37","_ref44","_callee36","_context36","_ref45","_callee35","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context35","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref46","_callee32","_context32","txReceipt","_x36","_x37","_ref47","_callee33","_context33","_x38","_x39","raw","_ref48","_callee34","_context34","_x40","_x41","decodeLog","internalType","_token","_x34","_x35","_x33","_x32","alias","getCustomAddress","setCustomAddress","customAddress","_ref49","_callee38","error_callback","config","_args38","_context38","catch","_x42","makeEtherscanApiRequest","_ref50","_callee39","apiKeyIndex","apiKey","_args39","_context39","_x43","_ref51","_callee40","return_data","_args40","_context40","_x44","code","errorCode","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee41","page","googlePageviewInfo","isOrigin","_args41","_context41","ga","_ref53","_callee43","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args43","_context43","addPostfixForTestnet","availableNetworks","_ref54","_callee42","_context42","hitCallback","hitCallbackFail","_x46","_x47","_x45","createContract","_ref55","_callee44","_context44","Contract","_x48","_x49","_x50","getWalletProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee47","activeOnly","whitelist","proposals","currTime","validProposals","_args47","_context47","addr","msg","payload","_ref57","_callee46","checkedStrategies","_context46","snapshot","metadata","strategies","_ref58","_callee45","_context45","symbol","_x52","_x51","_ref59","_callee48","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args48","_context48","rates","_x53","getTokenExchangeRate","_ref60","_callee49","exchangeRateParams","exchangeRate","_context49","_x54","_x55","_ref61","_callee50","_context50","_x56","aprs","allocations","avgApr","aprWeighted","allocation","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee51","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context51","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee52","contractPaused","_args52","_context52","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref64","_callee54","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context54","lastAllocationsPromise","_ref65","_callee53","lastAllocations","_context53","_x58","_x59","alloc","_x57","_ref66","_callee55","_context55","_x60","_x61","_ref67","_callee56","eventName","_args56","_context56","getContractPastEvents","_x62","_x63","estimateMethodGasUsage","_ref68","_callee57","methodParams","_contract$methods","functionCall","gasLimit","_ref69","_ref70","_args57","_context57","getGasPrice","estimateGas","_x64","_x65","_ref71","_callee58","userAddress","signedParameters","callback_receipt","_contract$methods2","_context58","on","once","confirmationNumber","receipt","_x66","_x67","_x68","_x69","_x70","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","chainId","soliditySHA3","toBuffer","_ref72","_callee59","biconomyInfo","res","_context59","limits","apiId","headers","x-api-key","_x71","_ref73","_callee60","_contract$methods3","messageToSign","_this$getSignaturePar","_context60","_address","personal","sign","_x72","_x73","_x74","_x75","_x76","_x77","buildBiconomyErc20ForwarderTx","_ref74","_callee61","tokenAddress","permitType","callData","buildParams","_context61","txGas","erc20ForwarderClient","buildTx","_x78","_x79","_x80","_x81","_x82","_ref75","_callee63","_context63","_ref76","_callee62","_context62","_x84","_x85","_x83","sendBiconomyTxWithErc20Forwarder","_ref77","_callee64","req","metaInfo","txResponse","fetchReceiptIntervalId","_context64","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x86","_x87","_x88","_x89","_ref78","_callee65","_this$getSignaturePar2","_context65","getNonce","call","_x90","_x91","_x92","_x93","signPermitEIP2612","_ref79","_callee66","erc20Name","owner","spender","deadline","domain","permit","domainData","_context66","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x94","_x95","_x96","_x97","_x98","_x99","_x100","_x101","signPermit","_ref80","_callee67","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","_args67","_context67","net","getId","round","nonceMethod","pow","response","_x102","_x103","_x104","_ref81","_callee68","permitParams","methodAbi","useNonce","_args68","_context68","_jsonInterface","inputs","unshift","_x105","_x106","_x107","_x108","_x109","_x110","_x111","sendSignedTx","_ref82","_callee69","MetaTransaction","dataToSign","_context69","_x112","_x113","_x114","_x115","_x116","_ref83","_callee70","contractAddr","walletAddr","_ref84","_ref85","allowance","_context70","getAllowance","_x117","_x118","_x119","_ref86","_callee71","_context71","_x120","_x121","_x122","contractMethodSendWrapperWithValue","txData","toTwosComplement","getTrancheStakedBalance","_ref87","_callee72","stakedBalance","_args72","_context72","_x123","_x124","_ref88","_callee73","field","_args73","_context73","_x125","_x126","_x127","_x128","_x129","_x130","_x131","_x132","_ref89","_callee74","formatValue","strategyConfig","idleStrategyAddress","_ref90","_ref91","totalSupply","virtualPrice","_ref92","_ref93","staked1","lastPrice1","_ref94","_ref95","deposited1","lastPrice","idleGovTokenConfig","rewardsTokensInfo","_ref96","_ref97","rewardsTokens","incentiveTokens","_args74","_context74","Strategy","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x133","_x134","_x135","_x136","_x137","_x138","_x139","_ref98","_callee75","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref99","_ref100","curveAvgBuyPrice","curveTokenBalance","_ref101","_ref102","amountLentCurve1","redeemableBalanceCurve","_ref103","_ref104","earningPerYear","_ref105","_ref106","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref107","_ref108","tokenPriceFirstDeposit","_ref109","_ref110","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref111","_ref112","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref113","_ref114","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref115","_ref116","amountLentCurve2","redeemableBalanceCurve1","_ref117","_ref118","redeemableBalance2","_args75","_context75","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x140","_x141","_x142","_x143","getIdleTokenSupply","_ref119","_callee76","idleTokenSupply","_args76","_context76","_x144","getIdleTokenPriceWithFee","_ref120","_callee77","_ref121","_ref122","priceWFee","_args77","_context77","eq","_x145","_x146","_ref123","_callee78","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args78","_context78","_x147","clearCachedData","useLocalStorage","expirationDate","_ref124","_callee79","_ref125","_ref126","idleTokensTotalSupply","userShare","_context79","_x148","_x149","_callee81","coverProtocolConfig","nexusMutualConfig","_args81","_context81","_ref128","_callee80","coverage","coverageTokens","protocolImage","_context80","tokens","expirationTimestamp","utc","_x150","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","_ref129","_callee83","incidentsInfo","_ref130","_ref131","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context83","directProps","startBlock","contractInfo","buyer","_ref132","_callee82","cover","coverId","claimSubmittedEvent","_ref133","_ref134","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref135","_ref136","_context82","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x152","_x151","getBatchedDepositExecutions","_ref137","_callee84","_context84","_x153","getBatchedDeposits","_callee86","filter_by_status","batchDepositConfig","batchedDeposits","_args86","_context86","_ref139","_callee85","currBatchIndex","batchIndex","_ref140","_ref141","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context85","_x154","getETHBalance","_ref142","_callee87","fixDecimals","_args87","_context87","_x155","_ref143","_callee88","_ref144","_ref145","_args88","_context88","_x156","_x157","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","body","isValidJSON","_ref146","_callee89","_args89","_context89","_x158","_ref147","_callee90","_args90","_context90","_x159","_ref148","_callee91","_args91","_context91","_x160","_x161","getProtocolBalance","_ref149","_callee92","_context92","_x162","_x163","getAprs","_ref150","_callee93","_context93","addresses","_x164","genericIdleCall","_ref151","_callee94","callParams","_args94","_context94","_x165","_ref152","_callee95","_contract$methods4","_args95","_context95","_x166","_x167","getTxDecodedLogs","_ref153","_callee97","logAddr","decodeLogs","internalTransfers","_context97","_ref154","_callee96","_context96","_x172","_x173","_x168","_x169","_x170","_x171","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee98","_context98","_ref156","_callee99","_context99","getBlock","_x174","_ref157","_callee100","_args100","_context100","getPastEvents","_x175","_x176","_ref158","_callee101","_args101","_context101","_x177","_x178","_ref159","_callee102","_contract$methods5","_args102","_context102","_x179","_x180","_ref160","_callee103","_args103","_context103","_x181","_x182","getUnlentBalance","_ref161","_callee104","unlentBalance","_context104","_x183","_ref162","_callee105","_args105","_context105","_x184","_ref163","_callee107","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref167","_ref168","_args107","_context107","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref164","_callee106","_ref165","_ref166","protocolBalance","protocolAllocation","_context106","_x186","_x187","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x185","getSushiswapPoolTokenPrice","_ref169","_callee108","pairAddresses","_ref170","_ref171","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref172","_ref173","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context108","getSushiswapConversionRate","_x188","_x189","_ref174","_callee109","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context109","_x190","_x191","_ref175","_callee110","unires","_context110","addressForPrice","_x192","_x193","getCurveDepositedTokens","_ref176","_callee111","idleTokensBalances","remainingCurveTokens","_args111","_context111","_x194","getCurveUnevenTokenAmounts","_ref177","_callee112","amounts","max_burn_amount","unevenAmounts","_context112","getCurveDepositContract","_x195","_x196","_callee113","curveRatesInfo","_context113","strategyTokens","getCurveAPYContract","_callee114","blocksForPrevTokenPrice","_ref180","_ref181","prevTokenPrice","blocksMultiplier","curveAPR","_context114","getCurveTokenSupply","_callee115","_context115","getCurvePoolContract","_callee116","_args116","_context116","_callee117","_args117","_context117","_ref185","_callee118","_ref186","_ref187","_context118","_x197","_callee119","depositContractInfo","_context119","getCurveZapContract","_callee120","zapContractInfo","_context120","_callee121","poolContractInfo","_context121","getCurveSwapContract","_callee122","_context122","getCurveIdleTokensAmounts","_callee124","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args124","_context124","_ref193","_callee123","coinIndex","curveIdleTokens","_context123","_x198","getCurveTokensAmounts","_callee126","useCoinIndex","_args126","_context126","_ref195","_callee125","_ref196","_ref197","idleTokenPrice","totalTokenSupply","_context125","_x199","getCurveAmounts","_ref198","_callee128","_args128","_context128","_ref199","_callee127","_context127","_x202","_x200","_x201","getCurveTokenAmount","_ref200","_callee129","_args129","_context129","_x203","getCurveSlippage","_ref201","_callee130","uneven_amounts","depositContract","_ref202","_ref203","Sv","_args130","_context130","_x204","_x205","_ref204","_callee131","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref205","_ref206","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args131","_context131","_x206","_callee133","_args133","_context133","_ref208","_callee132","_ref209","_ref210","_context132","_x207","getStkAaveApr","_ref211","_callee134","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args134","_context134","_x208","_x209","getCompAPR","_ref212","_callee135","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args135","_context135","_x210","_x211","getCompSpeed","_ref213","_callee136","cTokenAddress","compSpeed","_context136","_x212","_ref214","_callee137","cTokenInfo","compoundAllocationPerc","_ref215","_ref216","cTokenTotalSupply","compoundPoolShare","_args137","_context137","_x213","_callee139","_args139","_context139","_ref218","_callee138","_ref219","_ref220","_context138","_x214","_callee141","_args141","_context141","_ref222","_callee140","_ref223","_ref224","compApr","_context140","_x215","getTokensCsv","_callee144","csv","_context144","prototype","sum","pv","cv","avg","_ref226","_callee143","_context143","_ref227","_callee142","header","aprAvg","scoreAvg","lastRow","_context142","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x217","_x216","_callee146","convertToken","_args146","_context146","_ref229","_callee145","compTokenBalance","_context145","_x218","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref230","_callee148","govTokensUserDistribution","_args148","_context148","_ref231","_callee147","_context147","_x220","_x219","_ref232","_callee150","govTokensDistribution","tokenGovTokens","_args150","_context150","_ref233","_callee149","govSpeed","_context149","_x222","_x221","_ref234","_callee152","_args152","_context152","_ref235","_callee151","_ref236","_ref237","_ref238","_ref239","cTokenConfig","_context151","aprTooltipMode","_x225","_x223","_x224","_callee154","_args154","_context154","_ref241","_callee153","govTokenBalance","tokenConversionRate","fromTokenConfig","_context153","_x226","_callee155","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args155","_context155","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref243","_callee157","govTokensAmounts","_context157","getGovTokensUserAmounts","_ref244","_callee156","_context156","getGovTokenAddessByIndex","_x229","_x230","_x227","_x228","_ref245","_callee158","_context158","_x231","_x232","_ref246","_callee159","_context159","_x233","_x234","_callee162","govTokenConfigForced","_args162","_context162","_ref248","_callee161","_context161","_ref249","_callee160","_context160","_x236","_x237","_x235","_callee163","_args163","_context163","_callee164","_ref252","_ref253","gain","fees","_args164","_context164","_ref254","_callee165","_args165","_context165","_x238","getTotalTVL","_callee166","tokensTVL","_context166","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee170","_context170","_ref257","_callee169","_context169","_ref258","_callee168","oldTokenTVL","idleTokenName","_ref259","_ref260","_ref264","_ref265","oldTotalSupply","_context168","showAUM","_ref261","_callee167","_ref262","_ref263","govTokenConversionRate","govTokenBalanceConverted","_context167","_x241","_x240","_x239","getSubstackLatestFeed","_callee171","endpointInfo","idleSubstackFeed","latestFeed","_context171","items","getAggregatedStats","_callee172","tvls","totalAUM","_args172","_context172","getAggregatedStats_chain","_callee176","avgAPR","_args176","_context176","_ref269","_callee175","_context175","_ref270","_callee174","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context174","_ref271","_callee173","_ref272","_ref273","_context173","_x244","_x243","_x242","getTokenApy","_ref274","_callee177","_context177","_x245","getTokensToMigrate","_callee180","tokensToMigrate","_args180","_context180","_ref276","_callee179","_context179","_ref277","_callee178","_ref278","_context178","_x247","_x246","getProtocolsTokensBalances","_callee182","tokenBalances","minTokenBalance","protocolsTokens","_args182","_context182","_ref280","_callee181","tokenContract","_context181","_x248","_ref281","_callee183","_args183","_context183","_x249","_x250","_x251","getAvgAPYStats","_ref282","_callee184","apiResults","_args184","_context184","_x252","_x253","_ref283","_callee185","count","_conversionRate","_args185","_context185","_x254","_x255","_ref284","_callee186","_ref285","_ref286","_context186","protocolScore","getTokenScoreApi","_x256","_x257","_ref287","_callee187","scores","_context187","_x258","_x259","_ref288","_callee190","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args190","_context190","_ref289","_callee189","addrIndex","protocolApr","protocolApy","govTokenAPR","_context189","_ref290","_callee188","_context188","_x263","_x261","_x262","_x260","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","radioBtn","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","h4","description","Staking","selectedOption","toolProps","SelectedComponent","borderBottom","baseName","long","features","feature","selectTrancheType","tranchesDetails","trancheType","TrancheBox","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","call_callback","changeInputCallback","getFastBalanceSelector","checkContractApproved","executeTx","_amount","_params","getPermitTransactionParams","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","togglePermitEnabled","approveDescription","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","selectedSection","TranchePage","loadTransactions","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","TrancheWelcome","TransactionsList","transactionsList","availableActions","TranchesList","enabledProtocols","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","unit","PortfolioEquityTranches","ChartCustomTooltip","ChartCustomTooltipRow","Tranches","trancheRoute","userHasFunds","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","goToSection","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","Breadcrumb","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquityTranches_PortfolioEquityTranches","src_TranchesList_TranchesList","selectTranche","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","rewardToken","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","pl","estimationLabel","DashboardIconButton","StrategyPage","aggregatedValues","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationSucceeded","batchDepositEnabled","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","batchDepositInfo","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","appName","forumURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","best","descLong","descShort","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","react__WEBPACK_IMPORTED_MODULE_7___default","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h2","h3","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","enabledEnvs","crToken","fToken","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","TransactionListFilters","isOpened","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","componentHasChildren","fieldPath","formattedNumber","precision","showUnit","unitPos","showPathMobile","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","pathLink","Link","borderLeft","ShortHash","LoadingSpinner","src_LoadingSpinner_LoadingSpinner"],"mappings":"kKAIMA,mLAEF,IAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAE,EACFC,OAAO,EACPC,MAAM,OACNC,OAAO,OACPC,aAAa,MACbC,UAAU,eACVC,SAASC,KAAKC,MAAMF,UACpBC,KAAKC,MAAMX,aAIb,OAFAA,EAAYY,SAAWZ,EAAYK,MAGhCQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,YAAaA,EACbiB,YAAaP,KAAKC,MAAMM,aAExBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,MAAO,YACPC,KAAMV,KAAKC,MAAMU,SACjBC,KAAOZ,KAAKC,MAAMY,SAAWb,KAAKC,MAAMY,SAAW,kBAtBhCC,aA6BfzB,8oKC9BT0B,mLACK,IAAAC,EAAAhB,KACDC,EAAQ,CACZgB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZT,MAAM,YACNU,UAAU,SACVC,WAAW,WAITpB,KAAKC,OAASV,OAAO8B,KAAKrB,KAAKC,OAAOqB,QACxC/B,OAAO8B,KAAKrB,KAAKC,OAAOsB,QAAQ,SAAA9B,GAC9BQ,EAAMR,GAAKuB,EAAKf,MAAMR,KAI1B,IAAM+B,EAAmBxB,KAAKC,MAAMwB,UAAYzB,KAAKC,MAAMwB,UAAYC,IAAQC,GAE/E,OACExB,EAAAC,EAAAC,cAACmB,EACKvB,EAEHD,KAAKC,MAAM2B,iBAvBAd,aA6BLC,+GC5BTc,mLAEF,IAAMC,EAAYvC,OAAOC,OAAO,CAC9BuC,GAAG,EACHpC,MAAM,OACNqC,GAAG,CAAC,OAAO,IACXhC,KAAKC,MAAM6B,WAEb,OACGG,EAAA7B,EAAAC,cAAC6B,EAAA,EAAD,CACEJ,UAAWA,EACXK,eAAe,EACfC,SAAUpC,KAAKC,MAAMmC,SACrBC,WAAYrC,KAAKC,MAAMoC,WACvB9B,YAAaP,KAAKC,MAAMM,aAExB0B,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACEC,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAGf1C,KAAKC,MAAM0C,MACTV,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CACEoD,MAAO,SACPC,IAAK7C,KAAKC,MAAM0C,MAChB/C,OAASI,KAAKC,MAAM6C,SAAW,QAAU,QACzCnD,MAAQK,KAAKC,MAAM6C,SAAW,QAAU,SACpC9C,KAAKC,MAAM8C,aAEf/C,KAAKC,MAAM+C,YACbf,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CACEoD,MAAO,SACPlC,KAAMV,KAAKC,MAAMgD,KACjBrC,KAAOZ,KAAKC,MAAM6C,SAAW,QAAU,QACvCrC,MAAQT,KAAKC,MAAMiD,UAAYlD,KAAKC,MAAMiD,UAAY,UAClDlD,KAAKC,MAAMkD,YAGlBlB,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACEc,GAAI,EACJ3D,EAAG,CAAC,MAAM,OACVI,aAAc,MACd2C,WAAY,SACZE,eAAgB,SAChBW,gBAAkBrD,KAAKC,MAAMqD,YAActD,KAAKC,MAAMqD,YAActD,KAAKC,MAAMsD,MAAMC,OAAOC,aAAaC,SAASC,QAElH1B,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CACEoD,MAAO,SACPlC,KAAMV,KAAKC,MAAMgD,KACjBrC,KAAOZ,KAAKC,MAAM6C,SAAW,QAAU,QACvCrC,MAAQT,KAAKC,MAAMiD,UAAYlD,KAAKC,MAAMiD,UAAY,UAClDlD,KAAKC,MAAMkD,aAKrBlB,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CACEyB,WAAY,EACZC,SAAU,CAAC,EAAE,IACTlB,KAAKC,MAAM2D,WAEd5D,KAAKC,MAAM4D,eA/DI/C,aAuEde,gHCvETiC,mLAGF,OACE3D,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACE6B,IAAK/D,KAAKC,MAAM+D,MAAMC,GACtBnC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHrC,MAAM,EACNuE,KAAMlE,KAAKC,MAAM+D,MAAMG,KAAKC,QAAQ,GAAK,QAAU,MAGrDjE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAO,EACP8C,cAAe,UAGbzC,KAAKC,MAAM+D,MAAMG,KAAKE,YACpBlE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACE8D,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WACPU,UAAW,QAEVnB,KAAKC,MAAM+D,MAAMG,KAAKE,YAG5BrE,KAAKC,MAAM2B,kBA7BMd,aAoCbgD,0KChCTS,6MACJC,MAAQ,CACNC,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,QAI3BC,cAAgB,OAChBC,oBAAqB,6EAGfhF,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,6JAILnF,KAAKgF,oBAAqB,sJAI1BhF,KAAKoF,gMAGkBC,EAAUC,8EACjCtF,KAAKmF,YAEgBE,EAAUE,gBAAkBvF,KAAKC,MAAMsF,cAE1DvF,KAAKwF,aAAa,CAChBf,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,MACzB,WACAW,EAAKL,aAEEC,EAAUvC,WAAa9C,KAAKC,MAAM6C,UAC3C9C,KAAKoF,6LAIUM,wFAASC,iCAAS,KAC9B3F,KAAKgF,4DACDhF,KAAK4F,SAASF,EAASC,oCAEzB,2RAQG3F,KAAK+E,cAAcc,mBAAmB7F,KAAKC,MAAM6F,6BAHzDlB,oBACAC,yBACAC,6BAGIJ,EAAa,CACjBqB,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChB7C,OAAO,SAAA8C,GAAC,OAAIA,EAAE7F,OACd8F,aAAa,SAACpC,EAAMqC,GAClBC,EAAKjB,aAAa,CAChBb,cAAcR,KAGlBuC,aAAa,SAACvC,EAAMqC,GAClBC,EAAKjB,aAAa,CAChBb,cAAc,QAGlBgC,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzBC,YAAa,SAAAT,GACX,OAAO,MAET/C,MAAM,CACJyD,QAAS,CACPC,UAAWjH,KAAKC,MAAMiH,OAAS,CAC7BC,WAAYnH,KAAKC,MAAMsD,MAAMC,OAAO4D,QAClC,CACFC,QAAS,SAGbC,OAAO,CACLzD,KAAK,CACH5C,WAAW,IACXC,SAASlB,KAAKC,MAAM6C,SAAW,GAAK,GACpCyE,WAAYvH,KAAKC,MAAMsD,MAAMiE,MAAMC,YAGvCC,QAAQ,CACN7D,KAAK,CACH3C,SAAS,GACTD,WAAW,IACXsG,WAAYvH,KAAKC,MAAMsD,MAAMiE,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqBpI,KAAKC,MAAMiH,OAChCmB,sBAAsB,CAAEC,KAAM,SAC9BC,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,MACtDC,OAAQzI,KAAKC,MAAMiH,OAAS,CAACwB,IAAI,EAAEC,MAAM,GAAGC,OAAO,EAAE1E,KAAK,GAAMlE,KAAKC,MAAM6C,SAAW,CAAE4F,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAG1E,KAAM,IAAO,CAAEwE,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAG1E,KAAM,KAGvKO,EAAY,GAElBzE,KAAKC,MAAM6F,YAAY+C,UAAUtH,QAAQ,SAACuH,EAAaC,GACrD,IAAMC,EAAeF,EAAapI,KAC5BuI,EAAeH,EAAaI,QAAQC,cAC1C,GAAIrE,EAAyBmE,GAAc,CACzC,IAAMG,EAA+BC,WAAWvE,EAAyBmE,GAAcK,MAAM,KAAKC,QAAQ,IAC1G9E,EAAU+E,KAAK,CACbvF,GAAGgF,EACHvI,KAAKsI,EACLlC,MAAMsC,EACN3I,MAAM,OAAOgJ,IAAcC,MAAMb,UAAUG,GAAcvI,MAAMkJ,IAAIC,KAAK,KAAK,IAC7EC,MAAOJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQpD,EAAK1B,cAAc+E,WAAWd,QAKnJhJ,KAAKwF,aAAa,CAChBf,YACAC,aACAE,kBACAC,uBACAC,iKAMF,IAAMH,IAA6C,OAA7B3E,KAAKwE,MAAMG,gBAA0B3E,KAAKwE,MAAMK,qBAAqB7E,KAAKwE,MAAMG,cAAcV,MAAMjE,KAAKwE,MAAMK,qBAAqB7E,KAAKwE,MAAMG,cAAcV,IAC7K8F,EAA4C,OAA7B/J,KAAKwE,MAAMG,cAA0B8E,IAAcC,MAAMb,UAAU7I,KAAKwE,MAAMG,cAAcjE,OAAS+I,IAAcC,MAAMb,UAAU7I,KAAKwE,MAAMG,cAAcjE,MAAMuC,KAAOwG,IAAcC,MAAMb,UAAU7I,KAAKwE,MAAMG,cAAcjE,MAAMuC,KAAjM,GAAA+G,OAA2MhK,KAAKwE,MAAMG,cAAcjE,KAApO,QAAkP,KAE5S,OACEuJ,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEvK,MAAO,EACPwK,SAAU,YAGRnK,KAAKwE,MAAMI,kBAAoB5E,KAAKC,MAAMiH,QACxC+C,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEE,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZxE,KAAM,CAAC,MAAM,OACb/C,UAAW,SACXqB,WAAY,SACZ2H,SAAU,WACVxK,MAAO,CAAC,MAAM,OACdC,OAAQ,CAAC,MAAM,OACf6C,cAAe,SACfC,eAAgB,UAGdiC,EACEsF,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEvK,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBuH,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE5F,GAAI,EACJ3E,MAAO,CAAC,QAAQ,OAChBC,OAAQ,CAAC,QAAQ,OACjBiD,IAAG,qBAAAmH,OAAuBD,KAE5BE,EAAA7J,EAAAC,cAACgK,EAAA,EAAD,CACEnJ,SAAU,CAAC,EAAE,GACboJ,SAAU,EACVrJ,WAAY,EACZsJ,aAAc,EACdC,OAAQ7F,IAEVsF,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEhJ,SAAU,CAAC,EAAE,GACbD,WAAY,EACZR,MAAO,aAHT,YAKYT,KAAKwE,MAAMG,cAAckF,QAIvCI,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEvK,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBuH,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE5F,GAAI,EACJ3E,MAAO,CAAC,QAAQ,OAChBC,OAAQ,CAAC,QAAQ,OACjBiD,IAAG,0BAELoH,EAAA7J,EAAAC,cAACgK,EAAA,EAAD,CACEI,UAAW,CACTC,GAAG,EACHzJ,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdoJ,SAAU,EACVrJ,WAAY,EACZC,SAAU,CAAC,EAAE,GACbqJ,aAAc,EACdC,OAAQxK,KAAKwE,MAAMI,kBAErBqF,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEjJ,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,aAHT,iBAYZwJ,EAAA7J,EAAAC,cAACsK,EAAA,EAADpL,OAAAC,OAAA,CACEoL,KAAMC,IACNC,YAAY,GACR9K,KAAKC,MACLD,KAAKwE,MAAME,WAJjB,CAKEP,KAAMnE,KAAKwE,MAAMC,qBA3PG3D,aAkQfyD,wGCvQTwG,mLAGF,OACE9I,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACEgC,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEfR,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACE0I,GAAI,EACJC,MAAO,CACLC,UAAU,IACVC,KAAK,WAEP3I,WAAY,SACZE,eAAgB,cAGd1C,KAAKC,MAAMQ,OACXwB,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACEc,GAAI,EACJzD,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdwD,gBAAiBrD,KAAKC,MAAMQ,QAIhCwB,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACEpB,SAAU,EACVD,WAAY,EACZE,UAAW,OACXV,MAAO,YACPwK,MAAO,CACLG,WAAW,SACXC,cAAc,eAGfrL,KAAKC,MAAM4J,QAGhB5H,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACE2I,MAAO,CACLC,UAAU,IACVC,KAAK,WAEP3I,WAAY,SACZE,eAAgB,YAEhBT,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACEpB,SAAU,EACVD,WAAY,EACZR,MAAO,WACPU,UAAW,QACX8J,MAAO,CACLG,WAAW,UAEbE,wBAAyB,CACvBC,OAAQvL,KAAKC,MAAM6G,kBA5DFhG,aAsEhBiK,oKCjETS,6MACJhH,MAAQ,CACNiH,UAAU,KACVhH,UAAU,KACVC,WAAW,KACXgH,WAAW,KACXC,YAAY,QAId5G,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,2JAK9CD,KAAKmF,YACLnF,KAAK4L,qMAGkBvG,EAAWC,oFAClCtF,KAAKmF,YAEC0G,EAA4BxG,EAAUyG,qBAAuB9L,KAAKC,MAAM6L,oBACzDC,KAAKC,UAAU3G,EAAU4G,iBAAmBF,KAAKC,UAAUhM,KAAKC,MAAMgM,gBACvEJ,IAClB7L,KAAK4F,SAAS,CACZnB,UAAU,MACV,WACAgB,EAAKyG,sBAIHC,EAAgB9G,EAAUvC,WAAa9C,KAAKC,MAAM6C,SAClDsJ,EAAmB/G,EAAUgH,YAAcrM,KAAKC,MAAMoM,WACxDF,GAAiBC,IACnBpM,KAAK4L,uVAMHK,EAAgBjM,KAAKC,MAAMgM,gBACRA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKrB,KAAKC,MAAMqM,2BAGdtM,KAAK+E,cAAcwH,gBAAgBvM,KAAKC,MAAMuM,QAAQ,EAAE,SAASP,iBAAtFQ,SAEAhI,EAAY,GACdiI,EAAgB,GAChBC,EAAmB,eAEjB3M,KAAK+E,cAAc6H,aAAaX,EAAhC,eAAAY,EAAAtN,OAAAuN,EAAA,EAAAvN,CAAAwN,EAAA3M,EAAA4M,KAA8C,SAAAC,EAAO1H,GAAP,IAAA2H,EAAAC,EAAA,OAAAJ,EAAA3M,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElDb,EAAcnH,GAAiB,IAEzB2H,EAAc3N,OAAOiO,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUpI,MACxD2H,EAAY5L,SAEzB6L,EAAa1G,EAAK1B,cAAc6I,MAAM,GAE1CV,EAAY3L,QAAQ,SAACmM,EAAGG,GAGtB,IAAKH,EAAGI,MAASJ,EAAGK,QAAwB,YAAdL,EAAGK,OAC/B,OAAO,EAGTpB,EAAmBA,EAAmBqB,KAAKC,IAAItB,EAAiBuB,SAASR,EAAGS,YAAcD,SAASR,EAAGS,WAEtG,IAAMC,EAAc3H,EAAK1B,cAAc6I,MAAMF,EAAGU,aAEhD,OAAQV,EAAGW,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHlB,EAAaA,EAAWmB,KAAKF,GAC/B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHjB,EAAaA,EAAWoB,MAAMH,GAO9BjB,EAAWqB,GAAG,KAChBrB,EAAa1G,EAAK1B,cAAc6I,MAAM,IAGxC,IAAMa,EAAUtB,EACVkB,EAASX,EAAGW,OACZF,EAAYD,SAASR,EAAGS,WACxBO,EAAajI,EAAK1B,cAAc6I,MAAMF,EAAGgB,YACzCC,EAAalI,EAAK1B,cAAc6I,MAAMF,EAAGiB,YAE1CD,EAAWE,SAAYF,EAAWE,SACrClC,EAAcnH,GAAeiE,KAAK,CAChC6E,SACAI,UACAN,YACAO,aACAC,aACAP,mBAzD0C,wBAAAf,EAAAwB,SAAA5B,EAAAjN,SAA9C,gBAAA8O,GAAA,OAAAjC,EAAAkC,MAAA/O,KAAAgP,YAAA,YAiEFvD,EAAY,KACVwD,EAAcjP,KAAK+E,cAAcmK,YAAY,IAAIC,WAE/CnP,KAAKC,MAAM6L,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYwD,EAAYG,QAAQC,SAAS,EAAE,4CAG3C5D,EAAYwD,EAAYG,QAAQC,SAAS,EAAE,6CAG3C5D,EAAYwD,EAAYG,QAAQC,SAAS,EAAE,6CAG3C5D,EAAYwD,EAAYG,QAAQC,SAAS,EAAE,6CAG3C5D,EAAY,yCAIV6D,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB5B,UAAS,IAAIiB,MAAOY,UAAU,KAAM,MAEpDC,EAAa,GACbC,EAAyC,SAAhCjQ,KAAKC,MAAMiQ,2BAEpBlQ,KAAK+E,cAAc6H,aAAarN,OAAO8B,KAAKqL,GAA5C,eAAAyD,EAAA5Q,OAAAuN,EAAA,EAAAvN,CAAAwN,EAAA3M,EAAA4M,KAA2D,SAAAoD,EAAOzC,GAAP,OAAAZ,EAAA3M,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACrC9G,EAAK1B,cAAcuL,gBAAgB7J,EAAKxG,MAAMqM,gBAAgBqB,GAAOzE,QAAQ+G,EAAOtD,EAAiB,MAAK,EAAM,MAD3E,OAC/DqD,EAAWrC,GADoD0C,EAAAE,KAAA,wBAAAF,EAAAxB,SAAAuB,EAAApQ,SAA3D,gBAAAwQ,GAAA,OAAAL,EAAApB,MAAA/O,KAAAgP,YAAA,YAQN,IAFMyB,EAAmB,iBAIvB,IAAMC,EAAgB,GAChBC,EAAiB,GACvBxC,EAAYH,KAAKC,IAAI6B,EAAc3B,GACnCwB,EAAoBlJ,EAAK1B,cAAc6I,MAAM,GAI7CrO,OAAO8B,KAAKqL,GAAenL,QAAQ,SAAAoM,GAEjC,IAAIiD,EAAgB,KACdC,EAA0BtR,OAAOiO,OAAOwC,EAAWrC,IAAQmD,MAC3DC,EAAoBf,EAAWrC,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAGsD,WAAWxB,GAAiB9B,EAAGsD,WAAW7C,IACnG4C,GAAqBA,EAAkBzP,SACzCsP,EAAgBG,EAAkBD,OAG/BL,EAAiB9C,KACpB8C,EAAiB9C,GAASlH,EAAK1B,cAAc6I,MAAM,IAGrD,IACMqD,EADcxK,EAAKxG,MAAMqM,gBAAgBqB,GACbrD,SAC9B4G,EAAmBxE,EAAciB,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAGS,WAAWA,KAAeqB,GAAiB9B,EAAGS,UAAUqB,KAErH,GAAK0B,EAAiB5P,OAwBpB4P,EAAiB3P,QAAQ,SAAAmM,GACvB,OAAQA,EAAGW,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHoC,EAAiB9C,GAAS8C,EAAiB9C,GAAOW,KAAKZ,EAAGiB,YAC5D,MACA,QACE8B,EAAiB9C,GAAS8C,EAAiB9C,GAAOY,MAAMb,EAAGiB,YACvD8B,EAAiB9C,GAAOa,GAAG,KAC7BiC,EAAiB9C,GAASlH,EAAK1B,cAAc6I,MAAM,YAnC3D,GAAI2B,GAAgBA,EAAa5B,GAAO,CACtCuD,EAAmB3B,EAAa5B,GAChC,IAAMwD,EAAiB5R,OAAOC,OAAO,GAAG0R,GAAkBJ,MAI1D,GAHuBzH,WAAW8H,EAAe1C,SAG9B,GAAKN,EAAUxB,GAAoBiE,EAAc,CAClE,IAAMjC,EAAa8B,EAAiB9C,GAC9ByD,EAAY3K,EAAK1B,cAAcsM,iBAAiBT,EAAcQ,UAAUH,GAC1EK,EAAa3C,EAAWrF,MAAM8H,GAGlCD,EAAe1C,QAAU6C,EACzBH,EAAezC,WAAa0C,EAC5BF,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClBzC,QAAQhI,EAAK1B,cAAc6I,MAAM,GACjCc,WAAWjI,EAAK1B,cAAc6I,MAAM,KAuB1C,IAAM2D,EAAShS,OAAOC,OAAO,GAAG0R,GAAkBJ,MAE9CU,EAAgBf,EAAiB9C,GAAOrE,MAAMiI,EAAO7C,YAEzD,GAAI8C,EAAcC,GAAG,GAAG,CAEtB,IAAIC,EAAyB,KACvBC,EAAsBlL,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,EAAM,wBACvF,IAAKlH,EAAKxG,MAAM4R,YAAcF,EAAoB,CAChD,IAAMG,EAAiBlB,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KACxOG,IACFJ,EAAyBjL,EAAK1B,cAAcsM,iBAAiBS,EAAe,KACjDL,GAAG,KAC5BD,EAAgBA,EAAclI,MAAMoI,IAK1Cf,EAAehD,GAAS6D,EAExB7B,EAAoBA,EAAkBrB,KAAKkD,GAG7Cd,EAAc/C,GAASuD,IAGzB,IAAIa,EAAatL,EAAK1B,cAAcmK,YAAsB,IAAVf,GAEhD,GAAkB,OAAd1C,GAAuBsG,EAAWC,cAAcvG,IAAcsG,EAAWE,eAAe,IAAI9C,KAAO,OAAQ,CAO7G,IAAM+C,EAAgBH,EAAWI,OAAO,oBAGxC7C,EAAKyC,EAAWI,OAAO,eAAiB,EAExCxC,EAAoBtG,WAAWA,WAAWsG,EAAkBpG,QAAQ,KAEpEsG,EAAsBqC,GAAiBvB,EACvCf,EAAuBsC,GAAiBvC,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoB3B,KAAKC,IAAIwB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoB3B,KAAKoE,IAAI1C,EAAcC,GAGtFH,EAAgBrB,EAChBoB,EAAemB,OAzHRvC,EAAUxB,EAAiBwB,GAAW2B,EAAc3B,GAAWnO,KAAKC,MAAMoS,iBAAiBC,EAA3FnE,GAmLT,IAvDMoE,EAAqBhT,OAAO8B,KAAKuO,GAAwB4C,IAAI,SAAAC,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAE/C,EAAuB6C,GACzBG,SAAS/C,EAAsB4C,MAG7BI,EAAY,EAChBN,EAAmBhR,QAAS,SAACuR,EAAKjF,GAChC,IAAMzJ,EAAU4J,KAAK+E,MAAMF,EAAUN,EAAmBjR,OAAO,KAC/DiR,EAAmB1E,GAAOzJ,QAAUA,EACpCyO,MAwBIhB,EAAa7R,KAAKC,MAAM4R,WAAa7R,KAAKC,MAAM4R,WAAWmB,cAAgB,MAGjFvO,EAAU+E,KAAK,CACbvF,GAAG4N,EACHpR,MAAO,OAAQT,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,SAASC,EAAW,QAAQ,QAAQjI,KAAK,KAAK,IACzGzF,KAAKoO,IAGHU,EAAkB,EAClBvD,EAAcD,EAAc,IAC9BwD,EAAkB,GAGhBvD,IAAkBD,IACpBA,EAAgBzB,KAAKoE,IAAI,EAAE1C,EAAc,IAGtB,EACfwD,GAAaxD,EAAcD,GADZ,EAEf0D,EAAc,GACXpK,EAAE,EAAEA,GAHQ,EAGQA,IACrBqK,EAAa/J,WAAWA,WAAWoG,EAAe1G,EAAEmK,GAAY3J,QAAQ,IAC9E4J,EAAY3J,KAAK4J,GAGS,GACtBC,EAAY9T,OAAOiO,OAAO8B,GAAMhO,OAChCgS,EAAgBtF,KAAKoE,IAAI,EAAEpE,KAAKuF,KAAKF,EAFf,KAItB3O,EAAa,CACjB8O,OAAO,CACL5I,KAAM,OACNuH,OAAQ,kBAEVsB,OAAO,CACL7I,KAAM,SACN8I,SAAS,EACTzF,IAAKwB,EACL2C,IAAK1C,GAEPiE,QAAQ,gBACRC,QAAQ,SAAA9M,GAAK,OAAIL,EAAK1B,cAAc8O,YAAY/M,EAAMmM,IACtDa,WAAY9T,KAAKC,MAAM6C,SAAW,KAAO,CACvCiR,OAAQ,GACRC,SAAS,EACT7B,OAAQ,QACR8B,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAW,SAASf,EAAc,SAEpCH,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAUxU,KAAKC,MAAM6C,SAAW,KAAO,CACrCiR,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfE,WAAWlB,EACXiB,eAAgB,SAChBjC,OAAQ,SAAAvL,GAAC,OAAIH,EAAK1B,cAAc2P,iBAAiB9N,EAAE,KAErDZ,SAAQ,EACR2O,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBzR,OAAO,SAAA8C,GAAC,OAAIA,EAAE7F,OACdyU,mBAAmB,GACnBC,kBAAkB1F,EAClB2F,WAAW,CAAE9M,KAAM,QAASE,UAAW,IACvC6M,YAAqC,UAAzBrV,KAAKC,MAAMoM,UAAwB,GAAM,GACrD9I,MAAM,CACJ+R,KAAM,CACJC,MAAO,CACL1R,KAAM,CACJ3C,SAAS,GACTD,WAAW,IACXuU,KAAKxV,KAAKC,MAAMsD,MAAMC,OAAOuQ,OAC7BxM,WAAWvH,KAAKC,MAAMsD,MAAMiE,MAAMC,aAIxCgO,KAAM,CACJC,KAAM,CACJC,OAAQ3V,KAAKC,MAAMsD,MAAMC,OAAOoS,gBAAiBC,gBAAiB,SAaxEpN,OAAQzI,KAAKC,MAAM6C,SAAW,CAAE4F,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAI1E,KAAM,IAAO,CAAEwE,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAI1E,KAAM,IACrH4R,aAAa,SAACC,GAAc,IAEpB/R,EADY+R,EAAVC,MACYC,OAAO,GAC3B,OACEhM,EAAA7J,EAAAC,cAAC6V,EAAA,EAAD,CACElS,MAAOA,GAEPiG,EAAA7J,EAAAC,cAAC8V,EAAA,EAAD,CACE1V,MAAOuD,EAAMvD,MACboJ,MAAO7F,EAAMoS,QACbtP,MAAK,KAAAkD,OAAOhG,EAAMG,KAAKkS,cAGO,kBAAxBrS,EAAMG,KAAKyO,UAAyBrT,OAAO8B,KAAK2C,EAAMG,KAAKyO,UAAUtR,OAAO,GAClF/B,OAAO8B,KAAK2C,EAAMG,KAAKyO,UAAUJ,IAAI,SAAA7E,GACnC,GAAIA,IAAU3J,EAAMoS,QAClB,OAAO,KAET,IAAM3V,EAAQgG,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,EAAM,QAAQ,QAC3Ec,EAAUzK,EAAMG,KAAKyO,SAASjF,GAChC2I,EAAmB7P,EAAK1B,cAAc8O,YAAYpF,EAAQ,GAC9D,OAAIpF,WAAWoF,IAAU,IAErBxE,EAAA7J,EAAAC,cAAC8V,EAAA,EAAD,CACEtM,MAAO8D,EACPlN,MAAOA,EACPsD,IAAG,OAAAiG,OAAS2D,GACZ7G,MAAK,KAAAkD,OAAOsM,KAIX,UAQnBtW,KAAK4F,SAAS,CACZnB,YACAC,mJAKF,OACEuF,EAAA7J,EAAAC,cAACkW,EAAA,EAADhX,OAAAC,OAAA,CACEoL,KAAM4L,IACN1L,YAAY,GACR9K,KAAKwE,MAAME,WAHjB,CAIEP,KAAMnE,KAAKwE,MAAMC,UACjBgS,SAAUzW,KAAKC,MAAMwW,SACrB7W,OAAQI,KAAKC,MAAM0L,YACnB+K,eAAgB1W,KAAKC,MAAMyW,yBApeL5V,aA0ef0K,iLC5eTmL,6MACJnS,MAAQ,CACNoS,QAAQ,EACRC,MAAM,KACNC,OAAM,EACNC,WAAW,EACXC,YAAW,EACXC,YAAY,KACZC,aAAY,EACZC,cAAc,KACdC,cAAc,QAGhBpS,oBAAqB,IAGrBD,cAAgB,OAmChBmH,uCAAoB,SAAAmL,IAAA,OAAAC,EAAAlX,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,OAClBvM,EAAKwW,kBADa,wBAAAD,EAAA1I,SAAAwI,EAAArX,WAIpByX,oCAAiB,SAAAxK,IAAA,IAAAyK,EAAAhS,EAAA,OAAA4R,EAAAlX,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY,IAAIoK,QAAJ,eAAAC,EAAArY,OAAAsY,EAAA,EAAAtY,CAAA+X,EAAAlX,EAAA4M,KAAa,SAAA8K,EAAOC,EAASC,GAAhB,OAAAV,EAAAlX,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,OAEtCvM,EAAKf,MAAMiY,KAAKC,IAAIV,eAAezW,EAAKf,MAAM6N,KAAK,SAACsK,EAAIV,GACtDK,EAAQL,KAH4B,wBAAAO,EAAApJ,SAAAiJ,EAAA9X,SAAb,gBAAAqY,EAAAC,GAAA,OAAAV,EAAA7I,MAAA/O,KAAAgP,YAAA,IADZ,cACT0I,EADSrK,EAAAkD,KAUT7K,EAAW,GACbgS,EACFhS,EAASgS,YAAcA,GAEvBhS,EAASsR,YAAa,EACtBtR,EAASmR,MAAQ,kCAGnB7V,EAAK4E,SAASF,GAlBC2H,EAAAkL,OAAA,SAmBRb,GAnBQ,wBAAArK,EAAAwB,SAAA5B,EAAAjN,WAqEjBwY,kCAAe,SAAApI,IAAA,IAAAqI,EAAAC,EAAA,OAAApB,EAAAlX,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACIoL,IAAMC,IAAI,kDADd,YACPH,EADOpI,EAAAE,MAAA,CAAAF,EAAA9C,KAAA,eAGLmL,EAAYD,EAAGtU,KACrBnD,EAAK4E,SAAS,CACZ8S,cALSrI,EAAAkI,OAAA,SAOJG,GAPI,cAAArI,EAAAkI,OAAA,SASN,MATM,wBAAAlI,EAAAxB,SAAAuB,EAAApQ,WAYf6Y,wCAAqB,SAAAC,IAAA,IAAAL,EAAAM,EAAA,OAAAzB,EAAAlX,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,cAAAyL,EAAAzL,KAAA,EACFoL,IAAMC,IAAI,qDADR,YACbH,EADaO,EAAAzI,MAAA,CAAAyI,EAAAzL,KAAA,eAGXwL,EAAeN,EAAGtU,KACxBnD,EAAK4E,SAAS,CACZmT,iBALeC,EAAAT,OAAA,SAOVQ,GAPU,cAAAC,EAAAT,OAAA,SASZ,MATY,wBAAAS,EAAAnK,SAAAiK,EAAA9Y,WAYrBiZ,mBAAqB,SAACC,GACpB,IAAIC,EAAa,KAUjB,GATInY,EAAKwD,MAAMuU,cACb/X,EAAKwD,MAAMuU,aAAaxX,QAAQ,SAAC9B,EAAEsJ,GACjC,IAAKoQ,GAAc9P,WAAW5J,EAAE2Z,WAAW/P,WAAW6P,GAEpD,OADAC,EAAa1Z,GACN,IAKTuB,EAAKwD,MAAMkU,WAAaS,EAAW,CACrC,IAAME,EAAWrY,EAAKsY,cAAcH,EAAWnY,EAAKwD,MAAMkT,YAAY6B,KAGlEC,EAFeH,EAAS,GACNrY,EAAKwD,MAAMkU,UAAUe,WAI3C,OAFAD,EAAatL,SAASsL,EAAWjQ,QAAQ,IACzCvI,EAAK+D,cAAc2U,UAAU,qBAAqBP,EAAWnY,EAAKwD,MAAMkT,YAAY6B,IAAIF,EAASG,GAC1FA,EAGT,OAAO,QAGTG,4CAAyB,SAAAC,IAAA,IAAAxC,EAAAD,EAAA+B,EAAApJ,EAAA+J,EAAAC,EAAA/C,EAAA,OAAAO,EAAAlX,EAAAgN,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,UACnB6J,EAAgB,EAChBD,EAAgB,EAEfnW,EAAKwD,MAAMkT,cAAe1W,EAAKgE,mBAJb,CAAA+U,EAAAxM,KAAA,eAAAwM,EAAAxB,OAAA,UAKd,GALc,OAQlBvX,EAAKwD,MAAMkT,YAAYsC,cACpBd,EAAW7P,WAAWrI,EAAK+D,cAAc6I,MAAM5M,EAAKwD,MAAMkT,YAAYwB,UAAUe,IAAI,KAAKC,YAC/F9C,EAAgBpW,EAAKiY,mBAAmBC,IAG1C/B,EAAgBC,GAAgC,EAE5CpW,EAAKwD,MAAMyS,cACPnH,GAAgB,IAAIX,MAAOY,UAC3B8J,EAAgB3L,UAAU4B,EAAc5B,SAASlN,EAAKwD,MAAMyS,cAAc,KAGhFG,GAAiByC,EACjBzC,EAAgBpJ,KAAKoE,IAAIgF,EAAc,GAEvCpW,EAAK+D,cAAc2U,UAAU,iBAAiBvC,EAAc,gBAAgB0C,EAAc,qBAAqBzC,IAG3G0C,EAAa3C,EAAcC,EAC3BL,EAAaI,EAAc,EAAI9N,WAAWyQ,EAAW3C,GAAiB,EAE5EnW,EAAK4E,SAAS,CACZuR,gBACAC,gBACAL,eAGFoD,WAAW,WAAKnZ,EAAKoZ,qBAAqB,KAnCnB,yBAAAL,EAAAlL,SAAA+K,EAAA5Z,WAsCzBoa,kBAAoB,WAElB,GAAIpZ,EAAKgE,mBACP,OAAO,EAGT,IAAIoS,EAAgBpW,EAAKwD,MAAM4S,cAC/B,GAAIA,EAEF,KADAA,EAMO,CACL,IAAM0C,EAAa9Y,EAAKwD,MAAM2S,cAAcC,EACtCL,EAAa1N,WAAWyQ,EAAW9Y,EAAKwD,MAAM2S,eACpDnW,EAAK4E,SAAS,CACZmR,aACAK,kBAEF+C,WAAW,WAAKnZ,EAAKoZ,qBAAqB,UAX1CpZ,EAAK4E,SAAS,CACZmR,WAAW,EACXD,OAAM,SAYV9V,EAAK4E,SAAS,CACZmR,WAAW,EACXD,OAAM,OAKZuD,+BAAY,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAxD,EAAAvR,EAAAgV,EAAAC,EAAA5B,EAAAL,EAAA,OAAApB,EAAAlX,EAAAgN,KAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAArN,MAAA,UAGJgN,EAHI,oBAIJC,EAASxZ,EAAKf,MAAM6N,KAAK3E,cAE3BsR,EAAoB,KACpBxD,EAAc,KACdvR,EAAW,GAEXmV,eACFJ,EAAoBI,aAAaC,QAAQP,MAEvCE,EAAoB1O,KAAKgP,MAAMN,IAI9BA,GAAsBA,EAAkBD,GAjBnC,CAAAI,EAAArN,KAAA,gBAkBR0J,GAAc,IAAI9H,MAAOY,UAlBjB6K,EAAArN,KAAA,GAoB+BoK,QAAQqD,IAAI,CACjDha,EAAK6X,qBACL7X,EAAKwX,iBAtBC,QAAAkC,EAAAE,EAAArK,KAAAoK,EAAApb,OAAA0b,EAAA,EAAA1b,CAAAmb,EAAA,GAoBD3B,EApBC4B,EAAA,GAoBYjC,EApBZiC,EAAA,IAyBRF,EAAoB,IACFD,GAAU,CAC1BvD,cACAyB,YACAK,gBAIF/X,EAAK+D,cAAcmW,gBAAgBX,EAAiBxO,KAAKC,UAAUyO,IAEnE/U,EAAW+U,EAAkBD,GAExBzB,GAAiBL,IACpBhT,EAASmR,MAAQ,0BAtCX,QA0CV7V,EAAK4E,SAASF,GA1CJ,yBAAAkV,EAAA/L,SAAAyL,EAAAta,WA6CZwX,qCAAkB,SAAA2D,IAAA,IAAAzV,EAAAkR,EAAA,OAAAU,EAAAlX,EAAAgN,KAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,UAEXvM,EAAKf,MAAM6N,MAAS9M,EAAKf,MAAMiY,KAFpB,CAAAkD,EAAA7N,KAAA,eAAA6N,EAAA7C,OAAA,UAGP,GAHO,cAMV7S,EAAW,CACfwR,aAAY,GAEdlW,EAAK4E,SAASF,GATE0V,EAAA7N,KAAA,EAaUvM,EAAKyW,iBAbf,WAAA2D,EAAA7K,KAAA,CAAA6K,EAAA7N,KAAA,gBAAA6N,EAAA7N,KAAA,GAgBRvM,EAAKqZ,YAhBG,QAiBd,IACErZ,EAAK2Y,yBACL,MAAOvB,GACP1S,EAASmR,MAAQ,yBAInB7V,EAAK4E,SAASF,GAxBA0V,EAAA7N,KAAA,kBA0BRqJ,EAAU5V,EAAKwD,MAAMoS,WACf,GACV5V,EAAK4E,SAAS,CACZgR,WACA,WACAyE,OAAOlB,WAAW,WAChBnZ,EAAKwW,mBACL,OAjCQ,yBAAA4D,EAAAvM,SAAAsM,EAAAnb,oFA3QZA,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,oKAU9C,IAJAD,KAAKgF,oBAAqB,EAEtBf,EAAKoX,OAAOlB,WAAW,aAAe,GAEnClW,KACHoX,OAAOC,aAAarX,GAGxBoX,OAAO7D,gBAAkBxX,KAAKwX,+JAI9BxX,KAAKmF,+FAGkBE,mEACvBrF,KAAKmF,aAEAnF,KAAKwE,MAAM0S,aAAelX,KAAKC,MAAMiY,MACxClY,KAAKwX,2JAiCM2B,EAAYoC,GACzB,IAAIC,EACAC,EACAC,EAAMC,EAUNJ,EAAa,KACfG,EAVc,OACN,MASYvC,EAAU,oBARrB,QACF,KAOgEA,EAAU,WACjFwC,EAPe,QACF,MAMQxC,EAAU,oBALb,KAKoDA,EAAU,WAJ9D,QAMlBuC,EAbc,OACN,MAYYvC,EAAU,qBAVvB,KAUyDA,EAAU,WAC1EwC,EAVe,OAEG,KAQGxC,EAAU,YATlB,MASsDA,EAAU,qBAG/E,IACMyC,EAAO,GAAK,EADL5N,KAAK6N,KAAM,EAAIH,IAoB5B,OAhBEF,EADEI,EAAO,IACG,YACHA,EAAO,IAAMA,GAAQ,IAClB,SAEA,OAGdH,EAAezN,KAAK6N,IAAIF,IACL,IACjBF,EAAe,GAGbF,EAAa,MACfE,GAAgB,KAGX,CAACA,EAActC,EAAU,oBAAyBA,EAAU,WAAgBqC,iDA8MnF,GAAIxb,KAAKwE,MAAM4S,cAAc,GAAG,CAC9B,IAAM0E,EAAU9N,KAAK+E,MAAM/S,KAAKwE,MAAM4S,cAAc,IAC9C2E,EAAU/b,KAAKwE,MAAM4S,cAAuB,GAAR0E,EAC1C,OAAQ,IAAIA,GAASE,QAAQ,GAAG,KAAK,IAAID,GAASC,QAAQ,GAAG,OAE7D,OAAOhc,KAAKwE,MAAM4S,cAAc,qCAI3B,IAAA3R,EAAAzF,KACP,OACEic,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CAAMzZ,cAAe,SAAUD,WAAY,UAEV,OAA7BxC,KAAKwE,MAAM4S,cACTpX,KAAKwE,MAAMsS,MACTmF,EAAA7b,EAAAC,cAAC8b,EAAA,EAAD,CACEvY,UAAW,CACT8G,GAAG,EACHjK,MAAMT,KAAKC,MAAMmc,UAAYpc,KAAKC,MAAMmc,UAAY,aAEtDC,YAAW9c,OAAA+c,EAAA,EAAA/c,CAAA,CACTqB,KAAK,QACFZ,KAAKC,MAAMoc,aAEhBE,UAAW,CACTpb,UAAU,SACVqB,WAAW,SACXE,eAAe,UAEjBmB,KAAM7D,KAAKC,MAAMuc,WAAaxc,KAAKC,MAAMuc,WAAa,8BAGxDP,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACE5X,GAAI,EACJ9B,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBuZ,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CAAM5X,GAAI,EAAG7D,MAAQT,KAAKC,MAAMmc,UAAYpc,KAAKC,MAAMmc,UAAY,aAAepc,KAAKC,MAAMwc,SAAWzc,KAAKC,MAAMwc,SAAW,kBAA9H,IAAkJR,EAAA7b,EAAAC,cAAC6b,EAAA,EAAKQ,KAAN,CAAWjc,MAAQT,KAAKC,MAAMmc,UAAYpc,KAAKC,MAAMmc,UAAY,YAAanb,WAAY,GAAKjB,KAAK2c,wBACtPV,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CAAUpV,MAAQ9G,KAAKwE,MAAMuS,cAIZ,OAArB/W,KAAKwE,MAAMqS,OAAmB7W,KAAKwE,MAAMwS,WAoBvCiF,EAAA7b,EAAAC,cAAC8b,EAAA,EAAD,CACEvY,UAAW,CACT8G,GAAG,EACHjK,MAAMT,KAAKC,MAAMmc,UAAYpc,KAAKC,MAAMmc,UAAY,aAEtDC,YAAW9c,OAAA+c,EAAA,EAAA/c,CAAA,CACTqB,KAAK,QACFZ,KAAKC,MAAMoc,aAEhBE,UAAW,CACTpb,UAAU,SACVqB,WAAW,SACXE,eAAe,UAEjBmB,KAAO7D,KAAKwE,MAAMqS,MAAQ7W,KAAKwE,MAAMqS,MAAS7W,KAAKC,MAAM6N,KAAQ9N,KAAKC,MAAM2c,eAAiB5c,KAAKC,MAAM2c,eAAiB,gCAAoC5c,KAAKC,MAAM4c,eAAiB7c,KAAKC,MAAM4c,eAAiB,2BAjCvNZ,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACE1Z,WAAY,SACZC,cAAe,UAEfwZ,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACEtb,KAAM,MACNF,KAAM,UACND,MAAO,aAETwb,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACEY,GAAI,EACJ5b,SAAU,EACVC,UAAW,SACXV,MAAOT,KAAKC,MAAMmc,UAAYpc,KAAKC,MAAMmc,UAAY,YAEpDpc,KAAKwE,MAAMqS,QAwBpB7W,KAAKC,MAAM6N,KACTmO,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACEY,GAAI,EACJC,OAAQ,SACRC,WAAY,YACZC,IAAK,+BACLxc,MAAOT,KAAKC,MAAMmc,UAAYpc,KAAKC,MAAMmc,UAAY,WACrDc,KAAMld,KAAK+E,cAAcoY,2BAA2Bnd,KAAKC,MAAM6N,OAE/DmO,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACE1Z,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBuZ,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACEhb,SAAU,EACVC,UAAW,SACXV,MAAOT,KAAKC,MAAMmc,UAAYpc,KAAKC,MAAMmc,UAAY,YAHvD,qBAOAH,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACExR,GAAI,EACJ9J,KAAM,SACNF,KAAM,YACND,MAAOT,KAAKC,MAAMmc,UAAYpc,KAAKC,MAAMmc,UAAY,eAIjB,oBAAjCpc,KAAKC,MAAMmd,kBAClBnB,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACEY,GAAI,EACJI,KAAI,qBACJG,QAAU,SAAA7W,GAAC,OAAIf,EAAKxF,MAAMmd,qBAC1B3c,MAAOT,KAAKC,MAAMqd,gBAAkBtd,KAAKC,MAAMqd,gBAAkB,WACjEN,WAAYhd,KAAKC,MAAMsd,qBAAuBvd,KAAKC,MAAMsd,qBAAuB,aAEhFtB,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACE1Z,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBuZ,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACEhb,SAAU,EACVC,UAAW,SACXV,MAAOT,KAAKC,MAAMqd,gBAAkBtd,KAAKC,MAAMqd,gBAAkB,YAHnE,sBAOArB,EAAA7b,EAAAC,cAAC6b,EAAA,EAAD,CACExR,GAAI,EACJ9J,KAAM,SACNF,KAAM,SACND,MAAOT,KAAKC,MAAMqd,gBAAkBtd,KAAKC,MAAMqd,gBAAkB,eAIvE,aAndcxc,aA0db6V,0KCzdT6G,6MAEJhZ,MAAQ,KAGRO,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,mKAK9CD,KAAKmF,qBACCnF,KAAKyd,sMAGYpY,EAAUC,+EACjCtF,KAAKmF,YAECuY,EAAuBrY,EAAUE,gBAAkBvF,KAAKC,MAAMsF,cAC9DoY,EAAiB5R,KAAKC,UAAU3G,EAAUuY,WAAa7R,KAAKC,UAAUhM,KAAKC,MAAM2d,SACjFC,EAAsB9R,KAAKC,UAAU3G,EAAUyY,gBAAkB/R,KAAKC,UAAUhM,KAAKC,MAAM6d,cAC3FC,EAAoB1Y,EAAU2Y,oBAAsBhe,KAAKC,MAAM+d,mBAAqB3Y,EAAU4Y,uBAAyBje,KAAKC,MAAMge,sBAEpIN,GAAkBD,GAAwBG,GAAuBE,IACnE/d,KAAKyd,uSAMDS,EAAmB,SAAAje,GACvB,IAAM6B,EAAYvC,OAAOC,OACvBS,EAAMke,WACN,CACE1e,EAAE,EACFE,MAAM,EACNsL,MAAM,CAACmT,OAAO,YAEf3Y,EAAKxF,MAAMke,WAAa1Y,EAAKxF,MAAMke,WAAa,IAMnD,OAHIle,EAAMoe,aACRvc,EAAUwc,UAAY,GAGtBrU,EAAA7J,EAAAC,cAACke,EAAA,EAAD,CACEpc,eAAe,EACfL,UAAWA,GAEXmI,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEvK,MAAO,EACP8C,cAAe,OAEdxC,EAAM2B,YAMT4c,EAA2B,SAAAve,GAAK,OAAI,MAEpCwe,EAAa,SAAAxe,GACjB,IAAM6B,EAAYvC,OAAOC,OAAOS,EAAMke,WAAW,CAC/CrB,GAAG,EACH1S,OAAO,EACPkU,UAAU,KACVnU,SAAS,aAEX,OACEF,EAAA7J,EAAAC,cAACke,EAAA,EAAD,CACEzc,UAAWA,GAEV7B,EAAM2B,WAKPqc,EAAuBje,KAAKC,MAAMge,qBAAuBje,KAAKC,MAAMge,qBAAuB,SAAAhe,GAC/F,OACEgK,EAAA7J,EAAAC,cAAC6J,EAAA,EACKjK,EAAMke,WAEVlU,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEvK,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEfwH,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEjJ,WAAY,GAEXhB,EAAMye,YAAY5X,MAAM+C,UAO7BmU,EAAoBhe,KAAKC,MAAM+d,kBAAoBhe,KAAKC,MAAM+d,kBAAoB,SAAC/d,GACvF,OACEgK,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEvK,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEfwH,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,KACGjK,EAAM4J,SAMT8U,EAAuB3e,KAAKC,MAAM0e,qBAAuB3e,KAAKC,MAAM0e,qBAAuB,SAAC1e,GAEhG,OAAKA,EAAMye,YAAYE,aAKrB3U,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD3K,OAAAC,OAAA,GACMS,EADN,CAEEiB,SAAUuE,EAAKxF,MAAMsD,MAAMsb,UAAU,GACrCpe,MAAOgF,EAAKxF,MAAMsD,MAAMC,OAAOsb,UAC/B7d,WAAYwE,EAAKxF,MAAMsD,MAAMwb,YAAY,GACzCxX,WAAY9B,EAAKxF,MAAMsD,MAAMiE,MAAMC,UACnCpE,gBAAiBoC,EAAKxF,MAAMsD,MAAMC,OAAO4D,OACzC4X,UAAW,CAACC,IAAOC,YAAmC,SAAvBzZ,EAAKxF,MAAMoM,UAAqB4S,IAAOE,KAAO,KAAMlf,EAAMye,YAAYL,WAAwC,KAA3BY,IAAOG,sBAXpH,MAgBLC,EAAe,SAACpf,GAEpB,IAAM2d,EAAU3d,EAAMye,YAAYd,QAC9B0B,EAAgBrf,EAAMye,aAAeze,EAAMye,YAAY5X,OAAS7G,EAAMye,YAAY5X,MAAMA,MAQ5F,OALIwY,IAAyE,IAAxD1B,EAAQpL,IAAK,SAAA+M,GAAC,OAAIA,EAAEzY,QAAQ0Y,QAAQF,IAAyB7Z,EAAKxF,MAAM6d,eAC3FwB,EAAgB7Z,EAAKxF,MAAM6d,aAAahX,OAItCwY,GAAiBA,IAAkBrf,EAAM6G,MACpC,KAIPmD,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD3K,OAAAC,OAAA,CACEwC,GAAI,EACJD,GAAI,EACJpC,MAAO,GACHM,EAAMke,WAJZ,CAKE3b,WAAY,SACZC,cAAe,MACfwI,MAAO,CAACmT,OAAO,WACf1b,eAAgB,aAChBsc,UAAWC,IAAOQ,gBAClBpc,gBAAkBpD,EAAMyf,UAAY,kBAAoB,aAExDzV,EAAA7J,EAAAC,cAAC2d,EACK/d,cAMND,KAAK4F,SAAS,CAClB6Y,aACAY,eACAnB,mBACAD,uBACAU,uBACAH,gKAIK,IAAA/X,EAAAzG,KACD4e,EAAkD,qBAA5B5e,KAAKC,MAAM2e,cAA+B5e,KAAKC,MAAM2e,aACjF,OACE3U,EAAA7J,EAAAC,cAACsf,EAAA,EAAD,CACEjf,KAAMV,KAAKC,MAAMS,KACjBke,aAAcA,EACdhB,QAAS5d,KAAKC,MAAM2d,QACpBE,aAAc9d,KAAKC,MAAM6d,aACzB8B,SAAW,SAAAhZ,GAAC,OAAIH,EAAKxG,MAAM2f,SAAShZ,EAAEE,QACtC+Y,WAAY,CACRC,KAAM9f,KAAKwE,MAAMia,WACjBsB,OAAQ/f,KAAKwE,MAAM6a,aACnBW,QAAShgB,KAAKwE,MAAM0Z,iBACpB+B,MAAOjgB,KAAKwE,MAAMma,qBAClBuB,YAAalgB,KAAKwE,MAAMyZ,qBACxBkC,mBAAoBngB,KAAKwE,MAAMga,mCAnMb1d,aA0Mf0c,wCCjNf,IAAA4C,EAAAC,EAAA,IAAAC,EAAAD,EAAA,KAIeE,EAAA,GACbC,YAAa,CAAC,OAAQ,QAEtB3B,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrC0B,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERrZ,MAAO,CACLsZ,MAAO,2CACPrZ,UAAW,qCACXsZ,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCthB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BuhB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,iBAAiB,qBAC9BC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACP3hB,SAAU,IAEZyD,OAAQ,CACNme,QAASC,IAAKC,KACdC,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKzC,KAAK,GAC1B+C,OAAQ,UACRN,KAAM,UACNO,YAAa,UACbC,QAAS,UACTC,UAAW,UACXvD,UAAW,UACXwD,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,OACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cAIbC,MAAM,UACNC,YAAY,UACZC,cAAc,UACdC,gBAAgB,UAChBC,SAAS,UACTC,aAAa,UACb9N,gBAAgB,UAChB+N,qBAAqB,UACrBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,QAAS,UACTlD,QAAS,UACTpd,OAAQ,UACRugB,KAAK,UACLC,QAAS,UACTC,QAAS,UACTrQ,OAAQ,UACRsQ,OAAO,OACPC,UAAU,UACVld,OAAO,OACPmd,WAAW,UACXC,gBAAgB,OAChBC,gBAAgB,wCAChBC,YAAY,UACZC,WAAW,OACXC,WAAW,UACXC,aAAa,UACbphB,aAAa,CACX4K,OAAO,CACLyW,KAAK,UACLC,KAAK,UACLC,MAAM,UACNrhB,OAAO,UACPshB,QAAQ,UACRd,QAAQ,UACRe,QAAQ,UACRC,QAAQ,UACRf,QAAQ,UACRgB,QAAQ,UACRC,SAAS,UACTC,SAAS,UACTC,eAAe,UACfC,gBAAgB,WAElB9hB,SAAS,CACPohB,KAAK,UACLC,KAAK,UACLC,MAAM,UACNrhB,OAAO,UACPshB,QAAQ,UACRd,QAAQ,UACRe,QAAQ,UACRE,QAAQ,UACRD,QAAQ,UACRf,QAAQ,UACRkB,SAAS,UACTD,SAAS,UACTE,eAAe,UACfC,gBAAgB,WAElBzX,OAAO,CACL0X,UAAU,UACVC,QAAQ,UACRC,OAAO,YAGXC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZlE,KAAM,CACJphB,MAAOulB,YAAM,GAAK,QAClB3iB,gBAAiB4iB,YAAK,GAAK,QAC3B1d,YAAa,QAEf2d,QAAS,CACPzlB,MAAOulB,YAAM,GAAKG,IAAMtE,MACxBxe,gBAAiB4iB,YAAK,GAAKE,IAAMtE,MACjCtZ,YAAa4d,IAAMtE,MAErBuE,QAAS,CACP3lB,MAAOulB,YAAM,GAAKK,IAAOxE,MACzBxe,gBAAiB4iB,YAAK,GAAKI,IAAOxE,MAClCtZ,YAAa8d,IAAOxE,MAEtByE,OAAQ,CACN7lB,MAAOulB,YAAM,GAAKO,IAAI1E,MACtBxe,gBAAiB4iB,YAAK,GAAKM,IAAI1E,MAC/BtZ,YAAage,IAAI1E,MAEnB2E,KAAM,CACJ/lB,MAAOulB,YAAM,GAAKpE,IAAKC,MACvBxe,gBAAiB,UACjBkF,YAAa,YAGjBke,QAAS,CACP9E,QAAS,CACPlhB,MAAOmhB,IAAK/d,KACZR,gBAAiBue,IAAKC,KAEtB6E,eAAgB9E,IAAKC,KACrB8E,mBAAoB/E,IAAK/d,MAE3B+iB,OAAQ,CACNnmB,MAAO+hB,IAAWD,MAClBoE,mBAAoBnE,IAAWD,OAEjC2D,QAAS,CACPQ,eAAgBP,IAAMtE,KACtB8E,mBAAoBR,IAAMtiB,MAE5ByiB,OAAQ,CACNI,eAAgBH,IAAI1E,KACpB8E,mBAAoBJ,IAAI1iB,OAG5BgjB,YAAa,CACXC,MAAO,CACL5lB,SAAU,UACVtB,OAAQ,OACRM,SAAU,OACV6mB,QAAS,UAEXC,OAAQ,CACN9lB,SAAU,OACVtB,OAAQ,OACRM,SAAU,QAEZ+mB,MAAO,CACL/lB,SAAU,SACVtB,OAAQ,OACRM,SAAU,OACVL,aAAc,+KC3KLqnB,6MAnDb1iB,MAAQ,KAGRO,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,2JAK9CD,KAAKmF,iMAGkBE,EAAWC,mEAClCtF,KAAKmF,kJAGE,IAAAM,EAAAzF,KAEP,OACEmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnjB,GAAG,wBAAwBtE,MAAO,EAAG8C,cAAe,UACxD0kB,EAAA/mB,EAAAC,cAACgnB,EAAA,EAAD9nB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEqnB,KAAMtnB,KAAKC,MAAMqnB,KACjBxkB,SAAU9C,KAAKC,MAAM6C,YAEvBqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnjB,GAAG,cAAcxB,cAAe,UAElCzC,KAAKC,MAAMsnB,KAAK/U,IAAK,SAACgV,EAAIC,GACxB,OACEN,EAAA/mB,EAAAC,cAACqnB,EAAA,EAADnoB,OAAAC,OAAA,CACEgoB,IAAKA,GACD/hB,EAAKxF,MAFX,CAGE8D,IAAG,SAAAiG,OAAWyd,GACdE,eAAgBC,IAChBC,MAAK,aAAA7d,OAAeyd,GACpBK,OAAM,cAAA9d,OAAgByd,iBA1Cf3mB,aCDnBinB,6MAEJvjB,MAAQ,CACNwjB,QAAO,EACPC,gBAAgB,QAIlBljB,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,kQAILnF,KAAKkoB,qMAGkB7iB,EAAUC,mEACjCtF,KAAKmF,YAEkBE,EAAUmH,UAAYxM,KAAKC,MAAMuM,SAEtDxM,KAAKkoB,uRAKFloB,KAAKC,MAAMuM,kDACP,0BAGexM,KAAK+E,cAAcojB,mBAAmBnoB,KAAKC,MAAMuM,gBAAnE4b,SACAH,EAAkB,GACpBG,GAAaA,EAAU9mB,OAAO,GAChC8mB,EAAU7mB,QAAS,SAAA8mB,GACjB,IAAK5iB,EAAKxF,MAAMqM,kBAAoB7G,EAAKxF,MAAMqM,gBAAgBhL,QAAUmE,EAAKxF,MAAMqM,gBAAgBgc,SAASD,EAAEE,YAAY,CACzH,IAAMC,EAAe/iB,EAAKxF,MAAMsD,MAAMC,OAAOC,aAAasK,OACtD0a,EAAa,eACbC,EAAcF,EAAa/C,UAC/B,OAAQ4C,EAAEta,QACR,IAAK,UACH0a,EAAa,QACbC,EAAcF,EAAa7C,OAC7B,MACA,IAAK,UACH8C,EAAa,QACbC,EAAcF,EAAa9C,QAC7B,MACA,QACA,IAAK,SACH+C,EAAa,eACbC,EAAcF,EAAa/C,UAI/B,IAAMkD,EAAkB,CACtBloB,MAAMioB,GAGFE,EAAoBP,EAAEO,mBAAqB,MAEjDX,EAAgBze,KAAKjK,OAAOC,OAAO6oB,EAAE,CACnCI,aACAE,kBACAC,0BAMR5oB,KAAK4F,SAAS,CACZoiB,QAAO,EACPC,uJAIK,IAAAxhB,EAAAzG,KAEP,OAAKA,KAAKwE,MAAMwjB,OAKdb,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAKC,MAAM2gB,QAAW5gB,KAAKwE,MAAMyjB,iBAAmBjoB,KAAKwE,MAAMyjB,gBAAgB3mB,OAAO,GAAMtB,KAAKC,MAAM2B,WACrGulB,EAAA/mB,EAAAC,cAACU,EAAA,EACKf,KAAKC,MAAM4oB,WAEd7oB,KAAKC,MAAM2gB,OAKhB5gB,KAAKwE,MAAMyjB,iBAAmBjoB,KAAKwE,MAAMyjB,gBAAgB3mB,OAAO,EAC9D6lB,EAAA/mB,EAAAC,cAACyoB,EAADvpB,OAAAC,OAAA,CACE+nB,KAAMvnB,KAAKwE,MAAMyjB,gBACjB1nB,YAAcP,KAAKC,MAAM6C,SAAW,SAAC7C,GAAD,MAA8B,YAAnBA,EAAMunB,IAAIzZ,QAAsB9N,EAAMunB,IAAIuB,cAAgBtiB,EAAK1B,cAAcikB,WAAW/oB,EAAMunB,IAAIuB,eAAgB,KACjKzB,KAAM,CACJ,CACE1G,MAAM,WACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEre,KAAK,QACL3K,MAAM,CACJmD,GAAG,CAAC,EAAE,GACNxC,KAAKZ,KAAKC,MAAM6C,SAAW,QAAU,SAEvComB,KAAK,CAA0B,SAAzBlpB,KAAKC,MAAMoM,UAAuB,oBAAsB,kBAEhE,CACEzB,KAAK,OACLse,KAAK,CAAC,mBAIZ,CACEtI,MAAM,QACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEre,KAAK,QACL3K,MAAM,CACJmD,GAAG,CAAC,EAAE,GACNxC,KAAKZ,KAAKC,MAAM6C,SAAW,QAAU,SAEvComB,KAAK,CAAC,mBAER,CACEte,KAAK,OACLse,KAAK,CAAC,iBAIZ,CACEtI,MAAM,SACN3gB,MAAM,CACJN,MAAM,CAAC,IAAM,MAEfspB,OAAO,CACL,CACEre,KAAK,SACLse,KAAK,CAAC,WACNjpB,MAAM,CACJqK,SAAUtK,KAAKC,MAAM6C,SAAW,EAAK,IAGzC,CACE8H,KAAK,OACLse,KAAK,CAAC,SACNjpB,MAAM,CACJyK,GAAG,CAAC,EAAE,GACNO,MAAM,CACJI,cAAc,iBAMxB,CACE8d,QAAO,EACPvI,MAAM,kBACN3gB,MAAM,CACJN,MAAM,IACN+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEre,KAAK,OACLse,KAAK,CAAC,kBACNjpB,MAAM,MAMZ,CACEkpB,QAAO,EACPvI,MAAM,gBACN3gB,MAAM,CACJN,MAAM,IACN+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEre,KAAK,OACLse,KAAK,CAAC,qBACNjpB,MAAM,MAMZ,CACE2gB,MAAM,SACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEre,KAAK,OACLlK,KAAK,SACLwoB,KAAK,CAAC,cACNjpB,MAAM,CACJmD,GAAG,CAAC,EAAE,GACNxC,KAAKZ,KAAKC,MAAM6C,SAAW,QAAU,UAGzC,CACEqmB,QAAO,EACPzoB,KAAK,SACLwoB,KAAK,CAAC,UACNjpB,MAAM,CACJgL,MAAM,CACJI,cAAc,kBAMxB,CACEuV,MAAM,GACNuI,QAAO,EACPlpB,MAAM,CACJN,MAAM,KAERypB,YAAY,CACVzpB,MAAM,GAERspB,OAAO,CACL,CACEre,KAAK,SACLlK,KAAK,SACL2oB,UAAU,CACRxf,MAAM,SAAC5J,GAAD,OAAYA,EAAMunB,IAAI8B,aAC5BvpB,SAAS,SAACE,GAAD,OAAYA,EAAMunB,IAAI+B,iBAEjCtpB,MAAM,CACJN,MAAM,EACNuB,SAAS,EACTD,WAAW,EACXrB,OAAO,OACPC,aAAa,EACbye,UAAU,KACVxe,UAAU,SACVc,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,SACtCvC,YAAY,SAACN,GAAD,MAA8B,YAAnBA,EAAMunB,IAAIzZ,QAAsB9N,EAAMunB,IAAIgC,WAAa/iB,EAAK1B,cAAcikB,WAAW/oB,EAAMunB,IAAIgC,kBAM5HxpB,KAAKC,QAETD,KAAKC,MAAM2B,UA1LZ,YAxFMd,aAyRJinB,kKC7NA0B,6MArDb1kB,cAAgB,OAqBhB2kB,MAAQ,WAEN1oB,EAAK+D,cAAc4kB,yBAAyB,CAC1CC,cAAe,QACfC,YAAa,UACbC,WAAY9oB,EAAKf,MAAM8pB,SAGzB,IAAMC,EAAIhc,KAAKC,IAAIoN,OAAO4O,WAAW,KAE/BvX,GAAK2I,OAAO4O,WAAWD,GAAG,EAEhC3O,OAAO6O,KAAP,yCAAAlgB,OAAqDhJ,EAAKf,MAAMkqB,OAAQ,SAAxE,8CAAAngB,OADU,IACV,UAAAA,OAAyI0I,EAAzI,WAAA1I,OAAoJggB,EAApJ,YAAAhgB,OAHU,kFA5BNhK,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,oDAK9CD,KAAKmF,wDAILnF,KAAKmF,yDAILnF,KAAKmF,6CAkBE,IAAAM,EAAAzF,KACP,OACImnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEvnB,aAAc,EACdC,UAAW,UACXsqB,cAAe,QACf/M,QAAU,SAAA7W,GAAOf,EAAKikB,UAEtBvC,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,MAAOD,WAAY,SAAUE,eAAgB,UAChEykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAWC,IAAOoL,cACvBlD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAO,QAASQ,WAAY,EAAGyJ,GAAI,GAAK1K,KAAKC,MAAM4D,KAAO7D,KAAKC,MAAM4D,KAAO,kBAjD7D/C,gCCE3BwpB,6MAGJvlB,cAAgB,OAqBhBwlB,iDAAa,SAAAlT,EAAOhJ,GAAP,OAAAmc,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,WACWvM,EAAK+D,cAAc0lB,mBAEvBC,UAAUC,OAAOC,OAAOC,QAH/B,CAAAtT,EAAAhK,KAAA,eAAAgK,EAAAhK,KAAA,EAIHvM,EAAK+D,cAAc4kB,yBAAyB,CAChDC,cAAe,QACfC,YAAaxb,EACbyb,WAAY,eAPL,OAST9oB,EAAKf,MAAMsqB,aATFhT,EAAAhK,KAAA,eAWTvM,EAAKf,MAAMsqB,aAXF,wBAAAhT,EAAA1I,SAAAwI,EAAArX,0IAnBPA,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,oDAK9CD,KAAKmF,wDAILnF,KAAKmF,yDAILnF,KAAKmF,6CAkBE,IAAAM,EAAAzF,KACDmqB,EAAQ9O,OAAOyP,OAAO9qB,KAAKC,MAAMkqB,OACjCY,EAAa,CAACxf,OAAQvL,KAAKC,MAAM4D,MACvC,OACEsjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC4qB,EAAA,EAAD,CAAWC,UAAWlrB,KAAKC,MAAMsqB,YAE7BvqB,KAAKC,MAAMkrB,iBACXhE,EAAA/mB,EAAAC,cAAC+qB,EAAAhrB,EAAD,CACE6K,MAAO,CAAEd,SAAU,QAAQC,OAAS,MACpCihB,KAAK,EACLC,SAAS,EACT3rB,MAAO0b,OAAO4O,WACdrqB,OAAQyb,OAAOkQ,cAGnBpE,EAAA/mB,EAAAC,cAAC4qB,EAAA,EAAUO,OAAX,CAAkB5K,MAAO5gB,KAAKC,MAAM2gB,MAAO3d,KAAMjD,KAAKC,MAAMgD,OAC5DkkB,EAAA/mB,EAAAC,cAAC4qB,EAAA,EAAUQ,KAAX,KACEtE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,EAAG5C,MAAO,EAAG8C,cAAe,SAAUipB,GAAI,QAClDvE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAO,YAAaU,UAAW,SAAUD,SAAU,EAAGoD,GAAI,EAAGgH,wBAAyByf,KAE9F5D,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,EAAG7B,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EykB,EAAA/mB,EAAAC,cAACsrB,EAAD,CAAoBxB,MAAOA,EAAOtmB,KAAM,YAAakmB,OAAQ,eAC7D5C,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMtK,GAAI,EAAGO,QAAU,SAAA7W,GAAC,OAAIf,EAAK8kB,WAAW,6BAA8BvN,WAAY,QAAtF,uCA9DW4O,IAAM9qB,WAuEhBwpB,gKCrETuB,6MAEJrnB,MAAQ,CACNsnB,OAAM,KAIR/mB,cAAgB,OAChBC,oBAAqB,IA4DrB+mB,+BAAY,SAAA1U,IAAA,IAAA2U,EAAApmB,EAAAqmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAArd,UAAA,OAAAjC,EAAA3M,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,UAAMye,EAANK,EAAA/qB,OAAA,QAAAgrB,IAAAD,EAAA,GAAAA,EAAA,GAAgB,MAEtBrrB,EAAKgE,oBAAuBhE,EAAKf,MAAMssB,UAAavrB,EAAKf,MAAM0N,OAAU3M,EAAKf,MAAM6F,YAF9E,CAAAyR,EAAAhK,KAAA,eAAAgK,EAAAgB,OAAA,UAGD,GAHC,UAMJ3S,EAAyB,OAAdomB,EACXC,EAAYjrB,EAAKf,MAAMgsB,UACxBD,IACHA,EAAYC,EAAUvrB,MAKlBwrB,EAAaD,EAAUhsB,MAGvBksB,EAAkD,qBAA5BnrB,EAAKf,MAAMksB,cAA+BnrB,EAAKf,MAAMksB,aAE7EC,EAAS,MACTprB,EAAKf,MAAM0N,MApBL,CAAA4J,EAAAhK,KAAA,SAAAgK,EAAAiV,GAqBAR,EArBAzU,EAAAhK,KAAA,wBAAAgK,EAAAhK,KAAA,GAuBWvM,EAAK+D,cAAc0nB,iBAAiBT,EAAUE,EAAWlrB,EAAKf,MAAMssB,SAASvrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAMysB,QAAQ1rB,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAM0sB,cAAc3rB,EAAKf,MAAMuM,QAAQ2f,GAvB/L,eAuBJC,EAvBI7U,EAAAhH,OAwBU3K,GACZ5E,EAAKwE,aAALjG,OAAAqtB,EAAA,EAAArtB,CAAA,CACEusB,OAAM,GACLE,EAAWI,IA3BZ7U,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,SAkCH6T,GAlCG,yBAAA7U,EAAA1I,SAAAwI,EAAArX,oFAzDNA,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,8JAK9CD,KAAKgF,oBAAqB,yPAI1BhF,KAAKmF,kQAILnF,KAAK+rB,2LAGYrmB,wFAASC,iCAAS,KAC9B3F,KAAKgF,4DACDhF,KAAK4F,SAASF,EAASC,oCAEzB,4LAGgBN,EAAWC,kGAClCtF,KAAKmF,YAEC0nB,EAAexnB,EAAUsI,QAAU3N,KAAKC,MAAM0N,MAC9Cmf,EAAiBznB,EAAUmH,UAAYxM,KAAKC,MAAMuM,QAClDugB,EAAiB1nB,EAAUqnB,UAAY1sB,KAAKC,MAAMysB,QAClDvgB,EAAgB9G,EAAUvC,WAAa9C,KAAKC,MAAM6C,SAClDkqB,EAAkB3nB,EAAUknB,WAAavsB,KAAKC,MAAMssB,SACpDngB,EAAmB/G,EAAUgH,YAAcrM,KAAKC,MAAMoM,UACtD4gB,EAAe5nB,EAAU4mB,UAAUvrB,OAASV,KAAKC,MAAMgsB,UAAUvrB,KACjEwsB,EAAsB7nB,EAAU8nB,uBAAyBntB,KAAKC,MAAMktB,sBAAwBntB,KAAKC,MAAMktB,qBACvGC,EAAsB/nB,EAAU5B,cAAgBzD,KAAKC,MAAMwD,cAAgBlE,OAAOiO,OAAOnI,EAAU5B,cAAcgK,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGK,SAAqBzM,SAAW/B,OAAOiO,OAAOxN,KAAKC,MAAMwD,cAAcgK,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGK,SAAqBzM,OAEjP2rB,GAAgBJ,GAAgBG,GAAmBD,GAAkBD,GAAkBM,GAAwBF,IAAwBltB,KAAKwE,MAAMsnB,MAEpJ9rB,KAAKwF,aAAa,CAChBsmB,OAAM,GACN,WACArmB,EAAKsmB,eAEE5f,GAAiBC,KAEpBihB,EAAW9tB,OAAOC,OAAO,GAAGQ,KAAKwE,OACvCxE,KAAKwF,aAAa,CAChBsmB,OAAM,GACN,WACArmB,EAAKG,SAASynB,6IA0CZ,IAAA5mB,EAAAzG,KACAisB,EAAYjsB,KAAKC,MAAMgsB,UACzBG,EAAS,KAGPkB,OADsChB,IAAzBL,EAAUnhB,YAA4BmhB,EAAUnhB,WACtCb,EAAA7J,EAAAC,cAACktB,EAAA,EAAD,CAAQ3sB,KAAK,SAAa,KAEjDsrB,EAAa,CACjBjrB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZT,MAAM,WACN8b,UAAU,CACR7Z,eAAe,eAKfupB,EAAUhsB,OAASV,OAAO8B,KAAK4qB,EAAUhsB,OAAOqB,QAClD/B,OAAO8B,KAAK4qB,EAAUhsB,OAAOsB,QAAQ,SAAA9B,GACnCysB,EAAWzsB,GAAKwsB,EAAUhsB,MAAMR,KAKhCwsB,EAAU5C,WAAa9pB,OAAO8B,KAAK4qB,EAAU5C,WAAW/nB,QAC1D/B,OAAO8B,KAAK4qB,EAAU5C,WAAW9nB,QAAQ,SAAA9B,GACH,oBAAzBwsB,EAAU5C,UAAU5pB,KAC7BysB,EAAWzsB,GAAKwsB,EAAU5C,UAAU5pB,GAAGgH,EAAKxG,UAOlD,IAAMqK,EAAW4hB,GAAcA,EAAW5hB,SAAW4hB,EAAW5hB,SAAatK,KAAKC,MAAM6C,SAAW,EAAI,EAIjGyZ,EAAY2P,EAAW3P,UAG7B,cAFO2P,EAAW3P,UAEV0P,EAAUvrB,MAChB,IAAK,eACH0rB,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,CAAOqD,IAAG,oBAAAmH,OAAsBhK,KAAKC,MAAMssB,SAAjC,SAAqDL,IAEnE,MACA,IAAK,kBACH,IAAMsB,EAAiBxtB,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW5R,KAAKC,MAAMysB,UACjFN,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,CACEC,EAAG,MACHI,aAAc,MACd2C,WAAY,SACZE,eAAgB,SAChBW,gBAAe,QAAA2G,OAAUwjB,EAAe/sB,MAAMgtB,IAAI7jB,KAAK,KAAxC,UACX2S,GAEJtS,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,GACM0sB,EADN,CAEEtpB,MAAO,SACPlC,KAAM8sB,EAAevqB,KACrBxC,MAAO+sB,EAAe/sB,MAAMitB,QAIpC,MACA,IAAK,YACHtB,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,CAAOqD,IAAG,iBAAAmH,OAAmBhK,KAAKC,MAAM0N,MAA9B,SAA+Cue,IAE7D,MACA,IAAK,SACH,IAAMyB,EAAyC,oBAApB1B,EAAUpiB,MAAuBoiB,EAAUpiB,MAAM7J,KAAKC,OAASgsB,EAAUpiB,MACpGuiB,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,GAAY0sB,EAAZ,CAAwB7O,QAAS,kBAAM6O,EAAW3rB,YAAYkG,EAAKxG,UAAU0tB,GAEjF,MACA,IAAK,SACHvB,EACEniB,EAAA7J,EAAAC,cAACutB,EAAA,EAAD,CACEpG,IAAKxnB,KAAKC,MACVgsB,UAAWA,IAGjB,MACA,IAAK,YACL,IAAK,cACL,IAAK,iBACHG,EAASpsB,KAAKwE,MAAMynB,EAAUvrB,OAASnB,OAAO8B,KAAKrB,KAAKwE,MAAMynB,EAAUvrB,OAAOY,OAAO,EACpF2I,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,CACEG,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,cACZupB,EAAU7C,aAGZ7pB,OAAOiO,OAAOxN,KAAKwE,MAAMynB,EAAUvrB,OAAO8R,IAAK,SAACqb,EAAeC,GAAhB,OAC7C7jB,EAAA7J,EAAAC,cAAC0tB,EAAA,EAAD,CACEpgB,MAAOkgB,EAAelgB,MACtB7H,YAAa+nB,EACb9pB,IAAG,SAAAiG,OAAW8jB,GACd7B,UAAW,CACTvrB,KAAK,cACLstB,aAAa,CACXC,QAAQ,GAAAjkB,OAAG6jB,EAAelgB,QAASlH,EAAKjC,MAAM0pB,+BAAiCznB,EAAKjC,MAAM0pB,8BAA8BL,EAAelgB,OAApG,KAAA3D,OAAkHvD,EAAKjC,MAAM0pB,8BAA8BL,EAAelgB,OAAOpE,QAAQe,GAAzL,KAAAN,OAAsM6jB,EAAeM,sBAArN,yBAAoQ,KAEzSluB,MAAM,CACJJ,aAAa,MACbsK,SAAS,WACTvK,OAAO,CAAC,QAAQ,OAChB8K,GAAGojB,EAAgB,QAAU,EAC7B1jB,OAAO7K,OAAOiO,OAAO/G,EAAKjC,MAAMynB,EAAUvrB,OAAOY,OAAOwsB,EACxDxP,UAAU,CAAC,kCAAkC,0CAOvDte,KAAKwE,MAAMynB,EAAUvrB,MACvBuJ,EAAA7J,EAAAC,cAACktB,EAAA,EAASrB,EAAV,KACEoB,EACN,MACA,QACE,IAAIc,EAAiBpuB,KAAKwE,MAAMynB,EAAUvrB,MACtCV,KAAKwE,MAAMynB,EAAUvrB,OAASV,KAAKwE,MAAMynB,EAAUvrB,MAAM2tB,eAC3DD,EAAiBpuB,KAAKwE,MAAMynB,EAAUvrB,MAAM6I,QAAQe,IAEtD8hB,EAASpsB,KAAKwE,MAAMynB,EAAUvrB,MAC5BuJ,EAAA7J,EAAAC,cAACktB,EAAA,EAASrB,EAAakC,GACrBd,EAGR,OAAOlB,SAhPgBtrB,aAoPZ+qB,ww8DC9PTyC,mLAGF,IAAMxsB,EAAYvC,OAAOC,OAAO,CAC9BC,EAAE,GACFO,KAAKC,MAAM6B,WACb,OACEG,EAAA7B,EAAAC,cAAC6B,EAAA,EAAD,CACEJ,UAAWA,EACXM,SAAUpC,KAAKC,MAAMmC,SACrBmsB,UAAWvuB,KAAKC,MAAMsuB,UACtBpsB,cAAenC,KAAKC,MAAMkC,eAE1BF,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACEE,WAAY,SACZC,cAAe,UAEfR,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CACEoB,KAAM,QACNH,MAAO,WACPC,KAAMV,KAAKC,MAAMgD,KAAOjD,KAAKC,MAAMgD,KAAO,eACtCjD,KAAKC,MAAMkD,YAGfnD,KAAKC,MAAM4D,MACT5B,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CACEsd,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,SACXmK,wBAAyB,CACvBC,OAAOvL,KAAKC,MAAM4D,OAEhB7D,KAAKC,MAAM2D,YAInB5D,KAAKC,MAAM2B,kBArCDd,aA6CPwtB,iHC3CTE,6MACJhqB,MAAQ,CACN7E,MAAM,KACNC,OAAO,QAGToF,oBAAqB,sFAGnBqW,OAAOoT,iBAAiB,SAAUzuB,KAAK0uB,uBAAuBC,KAAK3uB,sDAInEA,KAAKgF,oBAAqB,EAC1BqW,OAAOuT,oBAAoB,SAAU5uB,KAAK0uB,oEAI1C1uB,KAAK0uB,oEAGYrpB,GACbA,EAAUvC,WAAa9C,KAAKC,MAAM6C,UACpC9C,KAAK0uB,0EAKP,GAAI1uB,KAAKgF,mBACP,OAAO,EAGT,IAAMU,EAAQnG,OAAA+c,EAAA,EAAA/c,CAAA,GAAOS,KAAKwE,OAE1B,GAAIxE,KAAKC,MAAMwW,SAAS,CACtB,IAAMoY,EAAiBC,SAASC,eAAe/uB,KAAKC,MAAMwW,UAC1D,GAAIoY,EAAe,CACjB,IAAMG,EAAa3lB,WAAWwlB,EAAeI,aAAa,EAAIJ,EAAeI,YAAc,EAEvFD,GAAcA,IAAetpB,EAAS/F,QACxC+F,EAAS/F,MAAQqvB,IASvB,IAJKtpB,EAAS/F,OAASK,KAAKC,MAAMN,OAASK,KAAKC,MAAMN,QAAU+F,EAAS/F,QACvE+F,EAAS/F,MAAQK,KAAKC,MAAMN,OAG1BK,KAAKC,MAAMyW,eAAe,CAC5B,IAAMwY,EAAkBJ,SAASC,eAAe/uB,KAAKC,MAAMyW,gBAC3D,GAAIwY,EAAgB,CAClB,IAAMvjB,EAActC,WAAW6lB,EAAgBD,aAAa,EAAIC,EAAgBD,YAAc,EAC1FtjB,GAAeA,IAAgBjG,EAAS9F,SAC1C8F,EAAS9F,OAAS+L,EACbjG,EAAS/F,QACZ+F,EAAS/F,MAAQgM,MAMpBjG,EAAS9F,QAAUI,KAAKC,MAAML,QAAUI,KAAKC,MAAML,SAAW8F,EAAS9F,SAC1E8F,EAAS9F,OAASI,KAAKC,MAAML,QAG/B8F,EAAS9F,OAAS8F,EAAS9F,QAAU8F,EAAS/F,MAE1CJ,OAAO8B,KAAKqE,GAAUpE,OAAO,GAC/BtB,KAAK4F,SAASF,oCAKhB,IAAMypB,EAAYnvB,KAAKC,MAAM2K,KAEvBhL,EAASI,KAAKwE,MAAM5E,SAAWgP,MAAM5O,KAAKwE,MAAM5E,QAAUsO,SAASlO,KAAKwE,MAAM5E,QAAU,IACxFD,EAAQK,KAAKwE,MAAM7E,QAAUiP,MAAM5O,KAAKwE,MAAM7E,OAASuO,SAASlO,KAAKwE,MAAM7E,OAAS,EAEtF+E,EAAanF,OAAOC,OAAO,GAAGQ,KAAKC,OAOvC,QANAyE,EAAUnF,OAAA+c,EAAA,EAAA/c,CAAA,GACLmF,EADK,CAER9E,SACAD,WAGgBmL,YAAgBpG,EAAWP,MAASxE,GAAUC,EAc5DI,KAAKC,MAAMkE,MACbhE,EAAAC,EAAAC,cAAC8uB,EACKzqB,GAfNvE,EAAAC,EAAAC,cAAC+uB,EAAA,EAAD,CACE7S,UAAW,CACT9Z,cAAc,MACd4sB,UAAUzvB,GAEZyc,YAAcrc,KAAKC,MAAMoc,YAAcrc,KAAKC,MAAMoc,YAAc,CAC9Dzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,UAAiCyoB,IAA1BtsB,KAAKC,MAAMqvB,WAA2BtvB,KAAKC,MAAMqvB,WAAa,iCAlGlDxuB,aA4GZ0tB,wJC5GTe,6MAEJ/qB,MAAQ,CACNoZ,QAAQ,KACRE,aAAa,KACbE,kBAAkB,KAClBC,qBAAqB,QAIvBlZ,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,gDAIhC,IAAAwF,EAAAzF,KACR4d,EAAUre,OAAO8B,KAAKrB,KAAKC,MAAMqM,iBAAiBkG,IAAI,SAAA7E,GAE1D,MAAO,CACL7G,MAAM6G,EACN9D,MAAM8D,EACN7H,YAJkBL,EAAKxF,MAAMqM,gBAAgBqB,MAQ3CmQ,EAAe9d,KAAKC,MAAMsF,cAAgBqY,EAAQ4R,KAAK,SAAA5oB,GAAC,OAAKA,EAAEE,MAAMkM,gBAAkBvN,EAAKxF,MAAMsF,cAAcyN,gBAAkB,KAyKxIhT,KAAK4F,SAAS,CACZgY,UACAE,eACAE,kBA1KwB,SAAA/d,GACxB,IAAM0N,EAAQ1N,EAAM6G,MACdhB,EAAc7F,EAAMkE,KAAK2B,YAE/B,OACEmE,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CACE9vB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBuH,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CACEjtB,WAAY,UAEZyH,EAAA7J,EAAAC,cAAC0tB,EAAA,EAAD,CACEpgB,MAAOA,EACP7H,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHzD,MAAM,MACNC,OAAO,UAIbqK,EAAA7J,EAAAC,cAAC0tB,EAAA,EAAD,CACEpgB,MAAOA,EACPse,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,iBAMZgF,EAAKjB,MAAMvE,MAAMyvB,gBACfzlB,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CACEjtB,WAAY,SACZE,eAAgB,YAEhBuH,EAAA7J,EAAAC,cAAC0tB,EAAA,EAADxuB,OAAAC,OAAA,CACEmO,MAAOA,GACHlI,EAAKjB,MAAMvE,MAFjB,CAGEgsB,UAAW,CACTvrB,KAAK+E,EAAKjB,MAAMvE,MAAMyvB,gBACtBzvB,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,aAGVqF,YAAaA,EACb0G,QAAS/G,EAAKjB,MAAMvE,MAAMuM,QAC1BmjB,WAAYlqB,EAAKxF,MAAM0vB,WACvBC,cAAenqB,EAAKxF,MAAM2vB,kBAG5BnqB,EAAKxF,MAAM4vB,aACb5lB,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CACEjtB,WAAY,SACZE,eAAgB,YAEhBuH,EAAA7J,EAAAC,cAAC0tB,EAAA,EAADxuB,OAAAC,OAAA,CACEmO,MAAOA,GACHlI,EAAKjB,MAAMvE,MAFjB,CAGEgsB,UAAW,CACTvrB,KAAK,eACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,aAGVqF,YAAaA,EACb0G,QAAS/G,EAAKjB,MAAMvE,MAAMuM,QAC1BmjB,WAAYlqB,EAAKxF,MAAM0vB,WACvBC,cAAenqB,EAAKxF,MAAM2vB,oBA2FtC3R,qBAnF2B,SAAAhe,GAC3B,IACMye,GAA4D,IADlDze,EAAMye,YAAYd,QACN4B,QAAQvf,EAAMye,YAAY5X,OAAgB7G,EAAMye,YAAY5X,MAAQgX,EAEhG,IAAKY,EACH,OAAO,KAGT,IAAM/Q,EAAQ+Q,EAAY5X,MACpBhB,EAAc4Y,EAAY5Y,YAChC,OACEmE,EAAA7J,EAAAC,cAACovB,EAAA,EAADlwB,OAAAC,OAAA,CACEyL,MAAO,CACLE,KAAK,KAEPzI,eAAgB,iBACZzC,EAAMke,YAEVlU,EAAA7J,EAAAC,cAACovB,EAAA,EAADlwB,OAAAC,OAAA,CACEC,EAAG,EACHE,MAAO,GACHM,EAAMke,WAHZ,CAIE3b,WAAY,SACZC,cAAe,MACfwI,MAAO,CAACmT,OAAO,WACf1b,eAAgB,eAEhBuH,EAAA7J,EAAAC,cAAC0tB,EAAA,EAAD,CACEpgB,MAAOA,EACP7H,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,UAIbqK,EAAA7J,EAAAC,cAAC0tB,EAAA,EAAD,CACEpgB,MAAOA,EACPse,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,iBAOZgF,EAAKxF,MAAM4vB,aACT5lB,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CACEjtB,WAAY,SACZE,eAAgB,YAEhBuH,EAAA7J,EAAAC,cAAC0tB,EAAA,EAADxuB,OAAAC,OAAA,CACEmO,MAAOA,GACHlI,EAAKjB,MAAMvE,MAFjB,CAGEgsB,UAAW,CACTvrB,KAAK,eACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,aAGVqF,YAAaA,EACb0G,QAAS/G,EAAKjB,MAAMvE,MAAMuM,QAC1BmjB,WAAYlqB,EAAKxF,MAAM0vB,WACvBC,cAAenqB,EAAKxF,MAAM2vB,2KAiBxC5vB,KAAKmF,YACLnF,KAAKyd,iBAELzd,KAAK4F,SAAS,CACZ3F,MAAMD,KAAKC,6LAIUoF,EAAUC,yEACjCtF,KAAKmF,YAECuY,EAAuBrY,EAAUE,gBAAkBvF,KAAKC,MAAMsF,eACrCwG,KAAKC,UAAUzM,OAAO8B,KAAKgE,EAAUiH,oBAAsBP,KAAKC,UAAUzM,OAAO8B,KAAKrB,KAAKC,MAAMqM,mBAClGoR,IAC5B1d,KAAKyd,uJAKP,OAAKzd,KAAKwE,MAAMoZ,SAAY5d,KAAKwE,MAAMsZ,cAAiB9d,KAAKwE,MAAMwZ,mBAAsBhe,KAAKwE,MAAMyZ,sBAAyBje,KAAKC,MAAMqM,iBAAoB/M,OAAO8B,KAAKrB,KAAKC,MAAMqM,iBAAiBhL,OAKlM2I,EAAA7J,EAAAC,cAACyvB,EAAA,EAADvwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEES,KAAM,SACNkd,QAAS5d,KAAKwE,MAAMoZ,QACpBO,WAAYne,KAAKC,MAAMke,WACvBS,aAAc5e,KAAKC,MAAM2e,aACzBd,aAAc9d,KAAKwE,MAAMsZ,aACzBvY,cAAevF,KAAKC,MAAMsF,cAC1ByY,kBAAmBhe,KAAKwE,MAAMwZ,kBAC9BC,qBAAsBje,KAAKwE,MAAMyZ,qBACjC2B,SAAW5f,KAAKC,MAAM2f,SAAW5f,KAAKC,MAAM2f,SAAW5f,KAAKC,MAAM8vB,eAd7D,YApOejvB,aAwPbyuB,2BC7PfS,EAAAC,QAAA,CAAkBC,eAAA,+BAAAC,MAAA,sBAAAC,OAAA,uBAAAC,WAAA,2BAAAC,MAAA,4CCAlBN,EAAAC,QAAA,CAAkBM,gBAAA,6BAAAC,eAAA,4BAAAC,YAAA,yBAAAC,KAAA,kBAAAC,cAAA,sLCMZC,6MAEJpsB,MAAQ,KAGRO,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,kQAILnF,KAAK+rB,iMAGkB1mB,EAAWC,2EAClCtF,KAAKmF,YAEC0rB,EAAcxrB,EAAUyI,OAAS9N,KAAKC,MAAM6N,KAC5Cgf,EAAiBznB,EAAUmH,UAAYxM,KAAKC,MAAMuM,SACnCnH,EAAU4mB,UAAUvrB,OAASV,KAAKC,MAAMgsB,UAAUvrB,MACnDmwB,GAAe/D,IACjC9sB,KAAK+rB,sQAKDE,EAAYjsB,KAAKC,MAAMgsB,WACzBjsB,KAAKC,MAAM6N,OAAQ9N,KAAKC,MAAMuM,8BACxByf,EAAUvrB,YACX,gBAEA,gBAGA,kBAGA,gBAEA,kBAEA,mBAEA,kBAEA,+PAST,IAAIuC,EAAO,KACPxC,EAAQ,KACR2rB,EAAS,KACPH,EAAYjsB,KAAKC,MAAMgsB,UACvBvU,EAAc1X,KAAKC,MAAMyX,YAC3BoZ,EAAUvtB,IAAMC,OAAOC,aAAaC,SAAS0hB,QAE3C8G,EAAa,CACjBjrB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZT,MAAM,WACNwK,MAAM,CACJ8lB,SAAS,OACTC,SAAU,SACVC,aAAc,YAEhB1U,UAAU,CACR7Z,eAAe,eAWnB,OANIupB,EAAUhsB,OAASV,OAAO8B,KAAK4qB,EAAUhsB,OAAOqB,QAClD/B,OAAO8B,KAAK4qB,EAAUhsB,OAAOsB,QAAQ,SAAA9B,GACnCysB,EAAWzsB,GAAKwsB,EAAUhsB,MAAMR,KAI5BwsB,EAAUvrB,MAChB,IAAK,OAKH,OAJIgX,EAAYrJ,SACd5N,EAAQ8C,IAAMC,OAAOC,aAAa4K,OAAOqJ,EAAYrJ,OAAOlF,eAAiB5F,IAAMC,OAAOC,aAAa4K,OAAOqJ,EAAYrJ,OAAOlF,eAAiB1I,EAClJqwB,EAAUvtB,IAAMC,OAAOC,aAAaC,SAASgU,EAAYrJ,OAAOlF,eAAiB5F,IAAMC,OAAOC,aAAaC,SAASgU,EAAYrJ,OAAOlF,eAAiB2nB,GAElJpZ,EAAYrJ,OAAOlF,eACzB,IAAK,UACL,IAAK,WACL,IAAK,cACL,IAAK,kBACHlG,EAAO,gBACT,MACA,IAAK,QACHA,EAAO,aACT,MACA,IAAK,SACL,IAAK,UACL,IAAK,aACL,IAAK,iBACHA,EAAO,cACT,MACA,IAAK,OACHA,EAAO,OACT,MACA,IAAK,UACHA,EAAO,OACT,MACA,IAAK,UAEHA,EAAO,SACT,MACA,IAAK,OAGL,IAAK,UACHA,EAAO,YACT,MACA,IAAK,WACHA,EAAO,cACT,MACA,QACEA,EAAO,UAGXmpB,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,CACEC,EAAG,MACHI,aAAc,OACVqsB,EAHN,CAIE1pB,WAAY,SACZa,gBAAiBytB,EACjBpuB,eAAgB,WAEhBuH,EAAA7J,EAAAC,cAACktB,EAAA,EAAD,CACE7sB,KAAMuC,EACNxC,MAAOA,EACPmC,MAAO,SACPhC,KAAMZ,KAAKC,MAAM6C,SAAW,MAAQ,WAI5C,MACA,IAAK,OACC4U,EAAY5J,OACdse,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAAD,CACExQ,OAAQ,SACRE,IAAK,+BACLC,KAAI,2BAAAlT,OAA6B0N,EAAY5J,OAE7C7D,EAAA7J,EAAAC,cAAC6wB,EAAA,EAAD3xB,OAAAC,OAAA,CACE0B,SAAU,EACVT,MAAO,SACHyrB,EAHN,CAIEiF,gBAAgB,EAChBrjB,KAAM4J,EAAY5J,UAK5B,MACA,IAAK,SACH,IAAIO,EAASqJ,EAAYrJ,OACzB,OAAQqJ,EAAYrJ,QAClB,IAAK,OACHA,EAAS,UACX,MACA,IAAK,UACHA,EAAS,WAKb+d,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAASrB,EAAa7d,EAAO2E,eAElC,MACA,IAAK,OACH,IAAMd,EAAgBwF,EAAY3F,WAAWI,OAAO,gBACpDia,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAASrB,EAAaha,GAE3B,MACA,IAAK,aAEH,OADAzR,EAAQ8C,IAAMC,OAAOC,aAAasK,OAAO2J,EAAY3J,OAAO5E,eACpDuO,EAAY3J,QAClB,IAAK,YACH9K,EAAO,OACT,MACA,IAAK,UACHA,EAAO,YACT,MACA,IAAK,SACHA,EAAO,eAKXmpB,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,CACEC,EAAG,CAAC,EAAE,OACNI,aAAc,OACVqsB,EAHN,CAIE1pB,WAAY,SACZ7C,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB8C,eAAgB,SAChBhD,OAASM,KAAKC,MAAM6C,SAAX,aAAAkH,OAAmCvJ,GAAnC,aAAAuJ,OAA0DvJ,KAEnEwJ,EAAA7J,EAAAC,cAACktB,EAAA,EAAD,CACE7sB,KAAMuC,EACNxC,MAAOA,EACPmC,MAAO,SACPhC,KAAOZ,KAAKC,MAAM6C,SAAW,MAAQ,WAI7C,MACA,IAAK,SACHspB,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAASrB,EAAaxU,EAAY3J,QAEvC,MACA,IAAK,SACHqe,EACEniB,EAAA7J,EAAAC,cAAC+wB,EAAA,EAAD7xB,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B1hB,OAAQkN,EAAY2Z,UAErD,MACA,IAAK,YACH,IAAMC,EAAc5Z,EAAY4Z,YAAYte,cACtClN,EAAc9F,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,SAAS0f,IACnEC,EAAUzrB,GAAeA,EAAY7C,KAAO6C,EAAY7C,KAA9C,iBAAA+G,OAAsEsnB,EAAtE,QAChBlF,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAADhuB,OAAAC,OAAA,CAAOqD,IAAK0uB,GAAarF,IAE7B,MACA,IAAK,YACHE,EACEniB,EAAA7J,EAAAC,cAACktB,EAAA,EAASrB,EAAaxU,EAAY4Z,YAAYte,eAEnD,MACA,IAAK,SACH,IAAIwe,EAAkB,KAClBC,EAAczxB,KAAK+E,cAAc2sB,aAAazF,EAAU/C,KAAKlpB,KAAKC,MAAMyX,aAC5E,OAAQuU,EAAUrhB,MAChB,IAAK,SACH6mB,EAAczxB,KAAK+E,cAAc6I,MAAM6jB,GAAavX,WACpDsX,EAAkBG,IAClBzF,EAAW1hB,OAASinB,EACpBA,EAAc,KAChB,MACA,IAAK,QACHD,EAAkBI,IAClB1F,EAAWrpB,IAAM4uB,EACjBA,EAAc,KAChB,MACA,IAAK,OACHD,EAAkBK,IAClB3F,EAAWxrB,KAAO+wB,EAClBA,EAAc,KAChB,MACA,QACED,EAAkBM,IAGtB1F,EAASqF,EACPxnB,EAAA7J,EAAAC,cAACmxB,EAAoBtF,EAAauF,GAChCxnB,EAAA7J,EAAAC,cAACmxB,EAAoBtF,GAK7B,OAAOE,SA5RoBtrB,aAgShB8vB,4BCtSfZ,EAAAC,QAAA,CAAkBM,gBAAA,sCAAAC,eAAA,qCAAAC,YAAA,kCAAAC,KAAA,2BAAAC,cAAA,2DCAlBX,EAAAC,QAAA,CAAkB8B,OAAA,mmJCIZC,6MAEJxtB,MAAQ,CACNytB,SAAS,KACTjb,WAAW,CACTwD,OAAO,KACP0X,SAAQ,MAKZntB,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,iMAGkBE,EAAUC,mEACjCtF,KAAKmF,qQAILnF,KAAK4F,SAAS,CACZoR,WAAY,CACVwD,OAAO,KACP0X,SAAQ,qQAONvsB,EAAW,SAAC+H,EAAGmJ,GAEnBsb,QAAQC,IAAI,WAAW1kB,EAAGmJ,GAG1B,IAAMwb,EAAY,CAChBzI,cAAe,cACfE,WAAYrkB,EAAKxF,MAAMqyB,WACvBzI,YAAapkB,EAAKxF,MAAMsyB,cAGtB1b,IACFwb,EAAUvI,WAAarkB,EAAKV,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrBtI,EAAKV,cAAc4kB,yBAAyB0I,GAG1B3kB,GAAoB,YAAdA,EAAGK,QAEQ,oBAAxBtI,EAAKxF,MAAM0F,UACpBF,EAAKxF,MAAM0F,SAAS+H,GAIxBjI,EAAKG,SAAS,CACZoR,WAAY,CACVwD,OAAO,KACP0X,SAAQ,GAEVD,SAASvkB,EAAKA,EAAGK,OAAS,QAIxB0kB,EAAkB,SAAC/kB,GACvB,IAAM8M,EAAS9M,EAAGglB,gBAClBjtB,EAAKG,SAAS,SAACN,GAAD,MAAgB,CAC5B2sB,SAAS,aACTjb,WAAWzX,OAAA+c,EAAA,EAAA/c,CAAA,GACN+F,EAAU0R,WADL,CAERwD,eAKNxa,KAAK4F,SAAS,SAACN,GAAD,MAAgB,CAC5B2sB,SAAS,UACTjb,WAAWzX,OAAA+c,EAAA,EAAA/c,CAAA,GACN+F,EAAU0R,WADL,CAERkb,SAAQ,OAIRS,EAAS3yB,KAAKC,MAAM0yB,OACuB,oBAApC3yB,KAAKC,MAAM2yB,qCACpBD,EAAS3yB,KAAKC,MAAM2yB,iDACqC,oBAAzC5yB,KAAKC,MAAM4yB,4DACZ7yB,KAAKC,MAAM4yB,oCAA1BF,oBAGGA,0BACH3yB,KAAK4F,SAAS,SAACN,GAAD,MAAgB,CAC5B2sB,SAAS,KACTjb,WAAWzX,OAAA+c,EAAA,EAAA/c,CAAA,GACN+F,EAAU0R,WADL,CAERkb,SAAQ,0BAGL,WAKLlyB,KAAKC,MAAM6yB,mBACb9yB,KAAK+E,cAAcguB,0BAA0B/yB,KAAKC,MAAMsyB,aAAavyB,KAAKC,MAAMqyB,WAAWK,EAAOhtB,EAAS8sB,EAAgB,MAAK,EAAKE,GAErI3yB,KAAK+E,cAAcguB,0BAA0B/yB,KAAKC,MAAMsyB,aAAavyB,KAAKC,MAAMqyB,WAAWK,EAAOhtB,EAAS8sB,uIAK7G,IAAMO,EAAmBhzB,KAAKC,MAAMa,UACpC,OACEmyB,EAAA7yB,EAAAC,cAAC6yB,EAAA,EACKlzB,KAAKC,MAAMmpB,YAGW,YAAxBppB,KAAKwE,MAAMytB,UAA0BjyB,KAAKC,MAAM2B,SAC9C5B,KAAKC,MAAM2B,SACX5B,KAAKwE,MAAMwS,YAAchX,KAAKwE,MAAMwS,WAAWkb,QAC/Ce,EAAA7yB,EAAAC,cAAC8yB,EAAA,EAAD5zB,OAAAC,OAAA,CACE0Y,KAAMlY,KAAKC,MAAMiY,KACjBkb,QAASpzB,KAAKC,MAAMmzB,SAChBpzB,KAAKC,MAAMozB,iBAHjB,CAIEvlB,KAAM9N,KAAKwE,MAAMwS,WAAWwD,OAC5B4C,kBAAmBpd,KAAKod,kBAAkBuR,KAAK3uB,MAC/Cwc,WAAU,cAAAxS,OAAgBhK,KAAKC,MAAMoO,OAA3B,eACVoO,SAAQ,GAAAzS,OAAKhK,KAAK+E,cAAc+E,WAAW9J,KAAKC,MAAMoO,QAA9C,oBAGV4kB,EAAA7yB,EAAAC,cAAC2yB,EAADzzB,OAAAC,OAAA,CACE6d,QAASrd,KAAKszB,QAAQ3E,KAAK3uB,OACvBA,KAAKC,MAAMszB,gBAEdvzB,KAAKC,MAAMszB,eAAezsB,eAlJRhG,aA2JlBkxB,2BC/JfhC,EAAAC,QAAA,CAAkBuD,eAAA,sCAAAC,OAAA,8BAAAC,YAAA,mCAAAC,QAAA,+BAAA5zB,SAAA,uUCGZ2nB,mLACK,IAAA1mB,EAAAhB,KACD4zB,EAAiB5zB,KAAKC,MAAM0nB,eAC5BxlB,EAAkD,oBAA3BnC,KAAKC,MAAMM,YACxC,OACEJ,EAAAC,EAAAC,cAAC6B,EAAA,EAAD3C,OAAAC,OAAA,CACEsC,UAAW,CACTwC,GAAG,EACH3E,MAAM,EACNqC,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,SAERkC,GAAIjE,KAAKC,MAAM6nB,QACX9nB,KAAKC,MAAM4zB,SARjB,CASE7U,UAAWhf,KAAKC,MAAM0N,MACtBxL,cAAeA,EACf5B,YAAc4B,EAAgB,SAAAqE,GAAC,OAAIxF,EAAKf,MAAMM,YAAYS,EAAKf,QAAS,OAExEE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEiC,cAAe,MACfwB,GAAIjE,KAAKC,MAAM4nB,OAGb7nB,KAAKC,MAAMqnB,KAAK9U,IAAI,SAACshB,EAAQC,GAC3B,OAAwB,IAApBD,EAAQE,UAAyC,IAAnBF,EAAQ3K,QAAoBnoB,EAAKf,MAAM6C,SAChE,KAGP3C,EAAAC,EAAAC,cAACG,EAAA,EAADjB,OAAAC,OAAA,CACEuE,IAAG,OAAAiG,OAAS+pB,IACRD,EAAQ7zB,OAEZE,EAAAC,EAAAC,cAACG,EAAA,EAADjB,OAAAC,OAAA,CACEG,MAAO,EACP6C,WAAY,SACZC,cAAe,OACXqxB,EAAQ1K,aAGV0K,EAAQ7K,OAAOzW,IAAI,SAACyZ,EAAUgI,GAC5B,OAA0B,IAAtBhI,EAAU+H,UAA2C,IAArB/H,EAAU9C,QAAoBnoB,EAAKf,MAAM6C,SACpE,KAGP3C,EAAAC,EAAAC,cAACG,EAAA,EAADjB,OAAAC,OAAA,CACEI,OAAQ,OACR6C,cAAe,SACfD,WAAY,aACZE,eAAgB,UACZupB,EAAU7C,YALhB,CAMEne,MAAOghB,EAAUhhB,OAAS,CACxB+lB,SAAS,UAEXrxB,MAAOm0B,EAAQ7K,OAAO3nB,OAAO,EAAI,OAAS,EAC1C2C,GAAE,SAAA+F,OAAW+pB,EAAX,KAAA/pB,OAAuBiqB,EAAvB,KAAAjqB,OAAqCiiB,EAAUvrB,MACjDqD,IAAG,SAAAiG,OAAW+pB,EAAX,KAAA/pB,OAAuBiqB,EAAvB,KAAAjqB,OAAqCiiB,EAAUvrB,QAElDP,EAAAC,EAAAC,cAACuzB,EAADr0B,OAAAC,OAAA,GACMwB,EAAKf,MADX,CAEEgsB,UAAWA,EACXiI,SAAUJ,EAAQ7zB,MAClBwW,SAAQ,SAAAzM,OAAW+pB,EAAX,KAAA/pB,OAAuBiqB,EAAvB,KAAAjqB,OAAqCiiB,EAAUvrB,yBA7D9DI,aA8ER4mB,gHC9ETL,mLACK,IAAArmB,EAAAhB,KACP,OACEG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAO,EACPqC,GAAI,CAAC,EAAE,GACPmyB,GAAI,CAAC,EAAE,GACP1xB,cAAe,OAGbzC,KAAKC,MAAMqnB,KAAK9U,IAAI,SAACshB,EAAQC,GAE3B,OAAwB,IAApBD,EAAQE,UAAyC,IAAnBF,EAAQ3K,QAAoBnoB,EAAKf,MAAM6C,SAChE,KAGDgxB,EAAQlT,OAASkT,EAAQlT,MAAMtf,OACrCnB,EAAAC,EAAAC,cAAC+zB,EAAA,EAAD70B,OAAAC,OAAA,GACMwB,EAAKf,MACL6zB,EAAQ7zB,MAFd,CAGEo0B,KAAMP,EAAQO,KACdzT,MAAOkT,EAAQlT,MACf7c,IAAG,cAAAiG,OAAgB+pB,KAElBD,EAAQlT,OAGXzgB,EAAAC,EAAAC,cAACG,EAAA,EAADjB,OAAAC,OAAA,CAAMuE,IAAG,cAAAiG,OAAgB+pB,IAAgBD,EAAQ7zB,kBA3BrCa,aAoCXumB,8ICnCTiN,6MAGJvvB,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,iMAGkBE,EAAUC,mEACjCtF,KAAKmF,kJAKL,IAAIrD,EAAY,CACdrC,EAAE,EACFE,MAAM,IACN40B,YAAYv0B,KAAKC,MAAMs0B,aAGrB3wB,EAAY,CACd1C,SAAS,EACTD,WAAW,EACXE,UAAU,SACVV,MAAMT,KAAKC,MAAMmC,SAAW,YAAc,YAM5C,OAHAN,EAAY9B,KAAK+E,cAAcyvB,kBAAkB1yB,EAAU9B,KAAKC,MAAM6B,WACtE8B,EAAY5D,KAAK+E,cAAcyvB,kBAAkB5wB,EAAU5D,KAAKC,MAAM2D,WAGpEqG,EAAA7J,EAAAC,cAACo0B,EAAA,EAAD,CACEtyB,eAAe,EACfL,UAAWA,EACXM,SAAUpC,KAAKC,MAAMmC,UAErB6H,EAAA7J,EAAAC,cAACovB,EAAA,EACK7rB,EAEH5D,KAAKC,MAAM8W,WAHd,aA7C0BjW,aAuDnBwzB,uRC5CTI,6MAEJlwB,MAAQ,CACNmwB,eAAe,KACfC,iBAAiB,GACjBC,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBxvB,cAAcvE,EAAKf,MAAM+0B,YAkF3BjwB,cAAgB,OA+ChBkwB,0DAAsB,SAAAhoB,EAAOzG,EAAE0uB,EAASC,GAAlB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAr1B,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEd6nB,EAFc,eAAAjlB,EAAA5Q,OAAAm2B,EAAA,EAAAn2B,CAAAk2B,EAAAr1B,EAAA4M,KAEF,SAAAqK,EAAO3J,GAAP,OAAA+nB,EAAAr1B,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,OAEhB8N,OAAOsa,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,QAAA7rB,OAAUhJ,EAAKwD,MAAMe,cAArB,wBAChBuwB,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGXj1B,EAAKf,MAAMi2B,oBAVK,wBAAA3e,EAAA1I,SAAAwI,EAAArX,SAFE,gBAAAwQ,GAAA,OAAAL,EAAApB,MAAA/O,KAAAgP,YAAA,GAedqmB,EAfc,eAAAzd,EAAArY,OAAAm2B,EAAA,EAAAn2B,CAAAk2B,EAAAr1B,EAAA4M,KAeJ,SAAA8K,EAAOtR,GAAP,OAAAivB,EAAAr1B,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cAAA0K,EAAAM,OAAA,UACP,GADO,wBAAAN,EAAApJ,SAAAiJ,EAAA9X,SAfI,gBAAAm2B,GAAA,OAAAve,EAAA7I,MAAA/O,KAAAgP,YAAA,GAmBdsmB,EAAkB7rB,IAAc2sB,SAASC,UAAUnB,GACnDK,EAAaD,GAAmBA,EAAgBgB,cAAgBhB,EAAgBgB,cAAct1B,EAAKf,MAAMwJ,IAAc0rB,EAAUC,EAAUC,GAAW,KApBxIhoB,EAAAmf,GAuBZ0I,EAvBY7nB,EAAAE,KAAA,qBAyBsB,oBAA3B+nB,EAAgBiB,SACnBf,EAAej2B,OAAOC,OAAO,GAAGwB,EAAKwD,OAC3C8wB,EAAgBiB,OAAOhB,EAAW,KAAKC,EAAa/rB,MA3BtC4D,EAAAkL,OAAA,sBAiChB9O,IAAcihB,UAAUC,OAAOC,OAAOC,QAjCtB,CAAAxd,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkCZvM,EAAK+D,cAAc4kB,yBAAyB,CAChDC,cAAe,MACfC,YAAa,kBACbC,WAAYoL,IArCI,QAwClBl0B,EAAKupB,WAAW/jB,GAxCE6G,EAAAE,KAAA,iBA0ClBvM,EAAKupB,WAAW/jB,GA1CE,yBAAA6G,EAAAwB,SAAA5B,EAAAjN,qEA8CtBw2B,OAAS,SAAChwB,GACRA,EAAEiwB,iBAEEz1B,EAAKwD,MAAMswB,iBACb9zB,EAAK4E,SAAS,CACZkvB,iBAAiB,OAEV9zB,EAAKwD,MAAMmwB,eACpB3zB,EAAK4E,SAAS,CACZ+uB,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,OAEV9zB,EAAKwD,MAAMe,cACpBvE,EAAK4E,SAAS,CACZ+uB,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBvvB,cAAcvE,EAAKf,MAAM+0B,WAG3Bh0B,EAAK01B,gBAITA,WAAa,WACX11B,EAAK4E,SAAS,CACZ+uB,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBxvB,cAAcvE,EAAKf,MAAM+0B,WAG3Bh0B,EAAK21B,wBAGPpM,WAAa,SAAC/jB,GACZxF,EAAK01B,aACA11B,EAAKf,MAAM22B,YAA+C,oBAA1B51B,EAAKf,MAAMsqB,YAC9CvpB,EAAKf,MAAMsqB,gBAIfsM,gBAAkB,SAAC3B,GACjB,IAAKzrB,IAAc2sB,SAASC,UAAUnB,GACpC,OAAO,EAET,IAAI4B,EAAertB,IAAc2sB,SAASC,UAAUnB,GACpD,GAAoC,oBAAzB4B,EAAaC,QAAuB,CAC7C,IAAMC,EAAkBF,EAAaC,QAAQ/1B,EAAKwD,OAC9CwyB,GAAmBz3B,OAAO8B,KAAK21B,GAAiB11B,SAClDw1B,EAAev3B,OAAOC,OAAOs3B,EAAaE,IAG9C,OAAOF,KAGTG,0BAA4B,SAACtC,GAC3B,IAAMuC,EAAgBl2B,EAAKwD,MAAMowB,iBAAiBD,GAClD,OAAIuC,GAAiBA,EAAcC,gBAC1BD,EAAcC,gBAEhB,QAGTC,6BAA+B,SAACzC,EAAepvB,GAC7C,IAAMwvB,EAAqB,GAE3Bx1B,OAAO8B,KAAKoI,IAAc2sB,SAASC,WAAW7jB,IAAI,SAAC0iB,EAASnsB,GAC1D,IAAM+tB,EAAertB,IAAc2sB,SAASC,UAAUnB,GAChDmC,GAAmF,IAA3DP,EAAaQ,iBAAiB9X,QAAQmV,GAC9D4C,EAAuBhyB,GAAyE,IAAzDuxB,EAAaU,gBAAgBhY,QAAQja,IAA6F,IAApEuxB,EAAaU,gBAAgBhY,QAAQxe,EAAKf,MAAMsF,iBAA4F,IAAnEuxB,EAAaU,gBAAgBhY,QAAQ/V,IAAcguB,WAIvO,OAHIX,EAAajM,SAAWwM,GAAyBE,GACnDxC,EAAmBvrB,KAAK0rB,GAEnBA,IAGT,IAAMwC,EAAyB12B,EAAKi2B,0BAA0BtC,GAE9D,OAAI+C,GAA0B12B,EAAKwD,MAAMowB,iBAAiBD,GAAgBgD,kBAA2E,IAAxD5C,EAAmBvV,QAAQkY,GAC/G,CAACA,GAGH3C,KAGT6C,eAAiB,SAACpxB,EAAEsuB,GAKlB,GAJItuB,GACFA,EAAEiwB,kBAGC3B,IAAqBrrB,IAAc2sB,SAASC,UAAUvB,GACzD,OAAO9zB,EAAK4E,SAAS,CACnBkvB,iBAAiB,OAIrB,IAAMgC,EAAertB,IAAc2sB,SAASC,UAAUvB,GACtD,GAAIgC,EAAa,CAEf,GAAI91B,EAAKwD,MAAMe,cAEb,YADAvE,EAAKi0B,oBAAoBzuB,EAAEsuB,EAAiB9zB,EAAKwD,OAInD,IAAMqzB,GAAkF,IAAnEf,EAAaU,gBAAgBhY,QAAQ/V,IAAcguB,WAClEK,GAAqF,IAApEhB,EAAaU,gBAAgBhY,QAAQxe,EAAKf,MAAMsF,eAGjE+G,EAAkB,GACxB,KAAMurB,GAAgBC,IAAoBA,GASxC,YADA92B,EAAKi0B,oBAAoBzuB,EAAEsuB,EAAiB9zB,EAAKwD,OAP7CqzB,GACFvrB,EAAgB9C,KAAKC,IAAcguB,WAEjCK,GACFxrB,EAAgB9C,KAAKxI,EAAKf,MAAMsF,eAOpCvE,EAAK4E,SAAS,CACZ0G,kBACAwoB,yBAKNiD,aAAe,SAACvxB,EAAEmuB,GAKhB,GAJInuB,GACFA,EAAEiwB,kBAGsE,IAAtEl3B,OAAO8B,KAAKL,EAAKwD,MAAMowB,kBAAkBpV,QAAQmV,GAAuB,CAC1E,IAAMI,EAAqB/zB,EAAKo2B,6BAA6BzC,EAAe3zB,EAAKwD,MAAMe,eAGvFvE,EAAK+D,cAAc4kB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,gBACbC,WAAY6K,IAGd3zB,EAAK4E,SAAS,CACZmvB,qBACAJ,uBAKNqD,YAAc,SAACxxB,EAAEjB,GACXiB,GACFA,EAAEiwB,iBAIJz1B,EAAK+D,cAAc4kB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,eACbC,WAAYvkB,IAGdvE,EAAK4E,SAAS,CAAEL,iBAAhBhG,OAAAm2B,EAAA,EAAAn2B,CAAAk2B,EAAAr1B,EAAA4M,KAAiC,SAAAoD,IAAA,OAAAqlB,EAAAr1B,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,WAC3BvM,EAAKwD,MAAMswB,iBADgB,CAAAzkB,EAAA9C,KAAA,eAAA8C,EAAAkI,OAAA,SAEtBvX,EAAKi0B,oBAAoBzuB,EAAExF,EAAKwD,MAAMswB,iBAAiB9zB,EAAKwD,QAFtC,OAI7BxD,EAAKi3B,sBAJwB,wBAAA5nB,EAAAxB,SAAAuB,EAAApQ,aASnCk4B,oBAAsB,SAAArD,GAGhBprB,IAAcihB,UAAUC,OAAOC,OAAOC,SAAWgK,GACnD7zB,EAAK+D,cAAc4kB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,iBACbC,WAAY+K,EAAgB/tB,QAIhC9F,EAAK4E,SAAS,CACZivB,uBAIJsD,sBAAwB,WACtB,IAAMC,EAAqB,GAwB3B,OAvBAp3B,EAAKwD,MAAMuwB,mBAAmBxzB,QAAQ,SAAC2zB,EAASnsB,GAC9C,IAAM+tB,EAAe91B,EAAK61B,gBAAgB3B,GACpCmC,GAA8F,IAAtEP,EAAaQ,iBAAiB9X,QAAQxe,EAAKwD,MAAMmwB,gBACzE4C,EAAuBv2B,EAAKwD,MAAMe,eAAoF,IAApEuxB,EAAaU,gBAAgBhY,QAAQxe,EAAKwD,MAAMe,gBAA6F,IAApEuxB,EAAaU,gBAAgBhY,QAAQxe,EAAKf,MAAMsF,iBAA4F,IAAnEuxB,EAAaU,gBAAgBhY,QAAQ/V,IAAcguB,WAGxPX,EAAajM,SAAYwM,GAA0BE,GAKxDT,EAAauB,mBAAmB92B,QAAQ,SAAC+2B,EAAYC,GAC9CH,EAAmBE,KACtBF,EAAmBE,GAAe,CAChCjC,UAAU,GACVxsB,MAAMJ,IAAc+uB,UAAUF,GAC9BxxB,MAAMwxB,IAGVF,EAAmBE,GAAajC,UAAU7sB,KAAK0rB,OAI5C31B,OAAOiO,OAAO4qB,+MAjYhBp4B,KAAKwE,MAAMe,wDACP,UAIThG,OAAO8B,KAAKoI,IAAc2sB,SAASC,WAAW90B,QAAQ,SAAC2zB,EAASnsB,GAE9D,IAAM+tB,EAAertB,IAAc2sB,SAASC,UAAUnB,GACtD,GAAI4B,EAAajM,SAAWiM,EAAa2B,mBAAwF,IAApE3B,EAAaU,gBAAgBhY,QAAQ/Z,EAAKjB,MAAMe,iBAA4F,IAAnEuxB,EAAaU,gBAAgBhY,QAAQ/V,IAAcguB,YAAmB,CAE1M,IAAMgB,EAAkB3B,EAAa2B,gBAErCl5B,OAAO8B,KAAKo3B,GAAiBl3B,QAAQ,SAACm3B,EAAIH,GAIxC,OAFqBG,EAAIC,MAAM,KAAK7nB,MAAM3H,eAGxC,IAAK,KACH,IAAMyvB,EAAQ,UAAA5uB,OAAakrB,EAAb,KAAAlrB,OAAyBuuB,EAAzB,KAAAvuB,OAA8BvE,EAAKjB,MAAMe,eAEvD,IAAKupB,SAASC,eAAe6J,GAAU,CACrC,IAAMC,EAAS/J,SAASzuB,cAAc,UAChCy4B,EAAuBL,EAAgBC,GACvC/yB,EAAWmzB,GAAwBA,EAAqBnzB,SAAWmzB,EAAqBnzB,SAAW,KACnGozB,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAElGA,GAA8B,oBAAZA,GACpBA,EAAQtzB,EAAKjB,MAAMiF,IAAcqtB,GAG/BnxB,GAAgC,oBAAbA,IACjBkzB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BtzB,MAIJkzB,EAAOK,OAASvzB,GAIpBkzB,EAAO50B,GAAK20B,EACZC,EAAO7Z,UAAP,UAAAhV,OAA6BkrB,GAC7B2D,EAAOh2B,IAAM61B,EACbG,EAAOM,OAAQ,EAEXL,GAAwBA,EAAqBM,cAC/CN,EAAqBM,cAAcC,YAAYR,GAE/C/J,SAASwK,KAAKD,YAAYR,GAGhC,MACA,IAAK,MACH,IAAMU,EAAY,cAAAvvB,OAAiBkrB,EAAjB,KAAAlrB,OAA6BuuB,GAE/C,IAAKzJ,SAASC,eAAewK,GAAc,CACzC,IAAMtuB,EAAQ6jB,SAASzuB,cAAc,QAErC4K,EAAMhH,GAAKs1B,EACXtuB,EAAMgS,IAAM,aACZhS,EAAMiS,KAAOwb,EAEb5J,SAASwK,KAAKD,YAAYpuB,gJAclCjL,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,sDAI1B,IAAAwG,EAAAzG,KACd40B,EAAmB,IACI50B,KAAKC,MAAM20B,kBAAoB50B,KAAKC,MAAM20B,iBAAiBtzB,OAAStB,KAAKC,MAAM20B,iBAAmBr1B,OAAO8B,KAAKoI,IAAc2sB,SAASoD,UAE7Ij4B,QAAQ,SAAAk4B,GAC3B,IAAM1E,EAAqBtuB,EAAK2wB,6BAA6BqC,EAAOhzB,EAAKjC,MAAMe,eAC/E,GAAIwvB,GAAsBA,EAAmBzzB,OAAO,EAAE,CACpD,IAAMo4B,EAAajwB,IAAc2sB,SAASoD,QAAQC,GAClDC,EAAW3E,mBAAqBA,EAChCH,EAAiB6E,GAAUC,KAI/B15B,KAAK4F,SAAS,CACZgvB,kEAKF50B,KAAKmF,YAELnF,KAAK25B,uBACL35B,KAAKi4B,0KAILj4B,KAAKmF,iMAGkBE,mEAEvBrF,KAAKmF,YAEAnF,KAAKC,MAAM+0B,UAAY3vB,EAAU2vB,WAAah1B,KAAKC,MAAM+0B,UAC5Dh1B,KAAKg4B,YAAY,KAAKh4B,KAAKC,MAAM+0B,8IA4Q5B,IAAA4E,EAAA55B,KAEH4gB,EAAQ,KACqB,OAA7B5gB,KAAKwE,MAAMe,cACbqb,EAAQ,aAERA,EAAQ,OAAO5gB,KAAKwE,MAAMe,cACQ,OAA9BvF,KAAKwE,MAAMmwB,iBACb/T,GAAS,MAAM5gB,KAAKwE,MAAMowB,iBAAiB50B,KAAKwE,MAAMmwB,gBAAgB10B,MAAM45B,UAIhF,IAAIvtB,EAAkBtM,KAAKC,MAAMqM,iBAAmB/M,OAAO8B,KAAKrB,KAAKC,MAAMqM,iBAAiBhL,OAAO,EAA7E,CAAkFmI,IAAcguB,WAAhGztB,OAAAzK,OAAAu6B,EAAA,EAAAv6B,CAA6GA,OAAO8B,KAAKrB,KAAKC,MAAMqM,mBAAoB,CAAC7C,IAAcguB,WAGzLz3B,KAAKC,MAAM85B,gBACbztB,EAAkB,GAClB/M,OAAO8B,KAAKoI,IAAc2sB,SAASC,WAAW90B,QAAS,SAAA2zB,GACrD,IAAM4B,EAAertB,IAAc2sB,SAASC,UAAUnB,GAClD4B,EAAaU,iBACfV,EAAaU,gBAAgBj2B,QAAQ,SAAAoM,GAC9BrB,EAAgBgc,SAAS3a,IAC5BrB,EAAgB9C,KAAKmE,QAO/B,IAAMqsB,EAAiB,SAAA/5B,GAAK,OAC1BgK,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAKhK,SAAW05B,EAAK35B,MAAM22B,WAAa,OAAS,CAAC,OAAO,SAE1B,OAA7BgD,EAAKp1B,MAAMe,cACT0E,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAK5F,GAAI,GACP2F,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE5F,GAAI,CAAC,EAAE,GACPrD,WAAY,EACZE,UAAW,SACXD,SAAU,CAAC,EAAG04B,EAAK35B,MAAM22B,WAAa,EAAI,IAJ5C,mCAQA3sB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE5F,GAAI,EACJ2G,MAAO,CACLgvB,SAAS,QAEXz3B,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAGzB6J,EAAgBkG,IAAI,SAAC7E,EAAM5E,GACzB,OACEkB,EAAA7J,EAAAC,cAAC65B,EAAA,EAAD,CACEL,QAASlsB,EACT5J,IAAG,SAAAiG,OAAW2D,GACd7K,SAAU82B,EAAK35B,MAAM6C,SACrBq3B,SAAQ,iBAAAnwB,OAAmB2D,EAAnB,QACRpN,YAAc,SAAAiG,GAAOozB,EAAK5B,YAAYxxB,EAAEmH,IACxC5K,WAAa62B,EAAK35B,MAAM6C,SAAW,CAAClD,OAAO,QAAU,CAACH,EAAE,CAAC,EAAE,GAAGG,OAAO,QACrEN,YAAes6B,EAAK35B,MAAM6C,SAItB,KAJiC,CACnCmI,MAAM,CACJE,KAAO,oBASW,OAA9ByuB,EAAKp1B,MAAMmwB,eACb1qB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,KACED,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM5F,GAAI,EAAG7B,cAAe,SAAUC,eAAgB,SAAUF,WAAY,WAEvEo3B,EAAK35B,MAAM22B,YACV3sB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAOtK,OAAQ,EAAG0E,GAAI,EAAGzB,IAAG,iBAAAmH,OAAmB4vB,EAAKp1B,MAAMe,cAA9B,UAEhC0E,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM/I,UAAW,SAAUF,WAAY,IAAKC,SAAU,CAAC,EAAG04B,EAAK35B,MAAM22B,WAAa,EAAI,GAAIr0B,GAAI,GAE1Fq3B,EAAK35B,MAAM22B,YAAcgD,EAAK35B,MAAM+0B,SAApC,6BAAAhrB,OAA4E4vB,EAAK35B,MAAM+0B,SAAvF,+EAAAhrB,OAA+K4vB,EAAKp1B,MAAMe,cAA1L,OAIN0E,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM5F,GAAIs1B,EAAK35B,MAAM22B,WAAa,EAAI,EAAGn0B,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE5GnD,OAAO8B,KAAKu4B,EAAKp1B,MAAMowB,kBAAkBpiB,IAAI,SAACinB,EAAO1wB,GACnD,IAAM2wB,EAAaE,EAAKp1B,MAAMowB,iBAAiB6E,GAC3C12B,EAAa22B,EAAWz5B,OAASy5B,EAAWz5B,MAAM8C,WAAa22B,EAAWz5B,MAAM8C,WAAa,GAC3Fq3B,EAAqBR,EAAK35B,MAAM6C,SAAW,CAAClD,OAAO,QAAU,CAACA,OAAO,QAG3E,OAFAmD,EAAaxD,OAAOC,OAAOuD,EAAWq3B,GAGpCnwB,EAAA7J,EAAAC,cAAC65B,EAAA,EAAD36B,OAAAC,OAAA,GACMk6B,EAAWz5B,MADjB,CAEEX,YAAa,CACXI,OAAO,GAETqE,IAAG,UAAAiG,OAAYyvB,GACf12B,WAAaA,EACbD,SAAW82B,EAAK35B,MAAM6C,SACtBvC,YAAc,SAAAiG,GAAC,OAAIozB,EAAK7B,aAAavxB,EAAEizB,WAOnB,WAA9BG,EAAKp1B,MAAMmwB,eACT1qB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAK4S,GAAI,EAAGxY,GAAI,GACd2F,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM/I,UAAW,SAAUF,WAAY,EAAGC,SAAU,EAAGqB,GAAI,GACzD0H,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAKvK,MAAO,QACRsK,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM5F,GAAIs1B,EAAK35B,MAAM22B,WAAa,EAAI,EAAGn0B,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9Gk3B,EAAKp1B,MAAMuwB,mBAAmBzzB,OAAS,EAEnC2I,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,KACED,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM/I,UAAW,SAAUF,WAAY,EAAGC,SAAU,EAAGoD,GAAI,CAAC,EAAE,IAA9D,2CAIEs1B,EAAKp1B,MAAMuwB,mBAAmBviB,IAAI,SAAC0iB,EAASnsB,GAC1C,IAAM+tB,EAAe8C,EAAK/C,gBAAgB3B,GAC1C,OACEjrB,EAAA7J,EAAAC,cAAC65B,EAAA,EAAD36B,OAAAC,OAAA,CAAauE,IAAG,oBAAAiG,OAAsBkrB,IAAgB4B,EAAtD,CAAoEv2B,YAAc,SAAAiG,GAAOozB,EAAK3E,oBAAoBzuB,EAAE0uB,EAAS0E,EAAKp1B,cAO5IyF,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM/I,UAAW,SAAUF,WAAY,EAAGC,SAAU,EAAGqB,GAAI,GAA3D,wEAUd0H,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEvK,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,eAGbk3B,EAAKp1B,MAAMswB,kBACZ7qB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE5F,GAAI,EACJysB,SAAW6I,EAAK35B,MAAM22B,WAAa,OAAS,UAC5Cj3B,MAASi6B,EAAK35B,MAAM22B,aAAegD,EAAK35B,MAAM6C,SAAY,IAAO,IAG9D82B,EAAK35B,MAAM22B,YACV3sB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAMzH,cAAe,SAAUC,eAAgB,SAAUF,WAAY,UACnEyH,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAOtK,OAAQ,EAAG0E,GAAI,EAAGzB,IAAG,iBAAAmH,OAAmB4vB,EAAKp1B,MAAMe,cAA9B,WAGlC0E,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM/I,UAAW,SAAUF,WAAa24B,EAAK35B,MAAM22B,WAAa,EAAI,EAAI11B,SAAU,EAAGoD,GAAI,GAAzF,wBAGA2F,EAAA7J,EAAAC,cAACg6B,EAAA,EAAD,CACEC,GAAI,UACJj3B,gBAAiB,UACjByD,MAAO8yB,EAAKp1B,MAAMqwB,gBAClB0F,YAAa,sBACb3a,SAAUga,EAAK1B,oBACfta,QAASgc,EAAKzB,wBACdpH,SAAW6I,EAAK35B,MAAM22B,aAAegD,EAAK35B,MAAM6C,SAAW,OAAS,OACpE03B,iBAAmB,SAACC,GAAD,MAAgB,wCACnCzb,UAAoC,UAAzB4a,EAAK35B,MAAMoM,UAAwB4S,IAAOmR,OAASnR,IAAOoR,cAI3EpmB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAMzH,cAAe,SAAUC,eAAgB,SAAUF,WAAY,SAAU6sB,UAAW,UAErFuK,EAAKp1B,MAAMswB,mBACqB,OAA/B8E,EAAKp1B,MAAMqwB,gBACT5qB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAKvK,MAAO,QACVsK,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM/I,UAAW,SAAUF,WAAY,EAAGC,SAAU,EAAGoD,GAAI,CAAC,EAAE,IAA9D,2CAGA2F,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM5F,GAAIs1B,EAAK35B,MAAM22B,WAAa,EAAI,EAAGn0B,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9Gk3B,EAAKp1B,MAAMqwB,gBAAgBwB,UAAU/0B,OAAS,EAC5Cs4B,EAAKp1B,MAAMqwB,gBAAgBwB,UAAU7jB,IAAI,SAAC0iB,EAASnsB,GACjD,IAAM+tB,EAAe8C,EAAK/C,gBAAgB3B,GAC1C,OACEjrB,EAAA7J,EAAAC,cAAC65B,EAAA,EAAD36B,OAAAC,OAAA,CAAauE,IAAG,oBAAAiG,OAAsBkrB,IAAgB4B,EAAtD,CAAoEv2B,YAAc,SAAAiG,GAAMozB,EAAKhC,eAAepxB,EAAE0uB,SAIlHjrB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM/I,UAAW,SAAUF,WAAY,EAAGC,SAAU,EAAGoD,GAAI,GAA3D,sEAQN2F,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAM/I,UAAW,SAAUF,WAAY,EAAGC,SAAU,EAAGoD,GAAI,GAA3D,wDA6BZs1B,EAAK35B,MAAM22B,YAA2C,OAA7BgD,EAAKp1B,MAAMe,gBAAoD,OAAxBq0B,EAAK35B,MAAM+0B,UAAmD,OAA9B4E,EAAKp1B,MAAMmwB,iBACzG1qB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE1H,WAAY,SACZE,eAAgB,UAEhBuH,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE3H,GAAI,EACJmpB,GAAI,CAAC,EAAG,GACR9qB,KAAM,SACNf,aAAc,EACdC,UAAW,OACXud,QAAU,SAAA7W,GAAC,OAAIozB,EAAKpD,OAAOhwB,KAN7B,cAgBV,OAAIxG,KAAKC,MAAM22B,WAEX3sB,EAAA7J,EAAAC,cAAC25B,EACKh6B,KAAKC,OAMbgK,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAO8gB,OAAQhrB,KAAKC,MAAM+qB,QACxB/gB,EAAA7J,EAAAC,cAACq6B,EAAA,EAAD,CAAWxP,UAAWlrB,KAAKuqB,YACzBtgB,EAAA7J,EAAAC,cAACq6B,EAAA,EAAUlP,OAAX,CAAkB5K,MAAOA,IAEzB3W,EAAA7J,EAAAC,cAACq6B,EAAA,EAAUjP,KAAX,KACExhB,EAAA7J,EAAAC,cAAC25B,EAAD,OAEF/vB,EAAA7J,EAAAC,cAACq6B,EAAA,EAAUC,OAAX,KACE1wB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CAAMlI,GAAI,CAAC,EAAE,GAAIS,cAAe,CAAC,SAAU,OAAQ9C,MAAO,EAAG+C,eAAgB,UAC3EuH,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE3H,GAAI,EACJmpB,GAAI,CAAC,EAAG,GACR7rB,aAAc,EACdC,UAAW,OACXud,QAAU,SAAA7W,GAAC,OAAIozB,EAAKrP,WAAW/jB,IAC/B5F,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UANxC,SAW+B,OAA7B9C,KAAKwE,MAAMe,gBAAmD,OAAxBvF,KAAKC,MAAM+0B,UAAmD,OAA9Bh1B,KAAKwE,MAAMmwB,iBAC/E1qB,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE3H,GAAI,EACJmpB,GAAI,CAAC,EAAG,GACR7rB,aAAc,EACdwd,QAAU,SAAA7W,GAAC,OAAIozB,EAAKpD,OAAOhwB,IAC3BwY,UAAWC,IAAOiR,eAClBtvB,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UANxC,sBA5qBK8oB,IAAM9qB,WAgsBd4zB,0ZC1sBTkG,6MAGJ71B,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,iMAGkBE,EAAUC,mEACjCtF,KAAKmF,kJAIL,OACE8E,EAAA7J,EAAAC,cAACke,EAAA,EAAD,CACEzc,UAASvC,OAAA+c,EAAA,EAAA/c,CAAA,CACPE,EAAE,EACFqd,GAAG,GACA9c,KAAKC,MAAM6B,YAGhBmI,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE1H,WAAY,SACZC,cAAe,UAEfwH,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACEtJ,KAAM,QACNF,KAAM,QACND,MAAO,aAETwJ,EAAA7J,EAAAC,cAAC6J,EAAA,EAAD,CACE4S,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,uDAQA8I,EAAA7J,EAAAC,cAACw6B,EAAA,EAAD,CACEv7B,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,KAEXY,YAAaP,KAAKC,MAAM66B,2BAL1B,oBA/Ceh6B,aA8DV85B,8OCzDTG,6MAEJv2B,MAAQ,CACNw2B,MAAM,EACN9I,SAAQ,EACR7jB,OAAO,UACP2I,WAAW,CACTikB,QAAQ,CACNzgB,OAAO,KACP0X,SAAQ,GAEV9N,QAAQ,CACN5J,OAAO,KACP0X,SAAQ,GAEVvuB,OAAO,CACL6W,OAAO,KACP0X,SAAQ,IAGZuI,WAAW,GACXS,WAAU,EACVC,aAAa,KACbC,cAAc,KACdC,eAAc,EACdC,gBAAe,EACfC,iBAAiB,KACjBC,oBAAoB,GACpBC,mBAAmB,KACnBC,sBAAqB,EACrBC,yBAAwB,EACxBC,yBAAyB,KACzBC,0BAA0B,QAI5B92B,cAAgB,OAUhB+2B,UAAY,SAACztB,GACI,OAAXA,GACFrN,EAAK4E,SAAS,CACZyI,cAKN0tB,oBAAsB,SAACV,GACrBr6B,EAAK4E,SAAS,CACZy1B,kBAG4C,oBAAnCr6B,EAAKf,MAAM87B,qBACpB/6B,EAAKf,MAAM87B,oBAAoBV,MAInCW,iBAAmB,SAACx1B,GAClB,IAAKxF,EAAKwD,MAAM6J,OACd,OAAO,EAET,IAAMgjB,EAAS7qB,EAAEuW,OAAOjW,MAAMxF,SAAWsN,MAAMpI,EAAEuW,OAAOjW,OAAS9F,EAAK+D,cAAc6I,MAAMpH,EAAEuW,OAAOjW,OAAS9F,EAAK+D,cAAc6I,MAAM,GAErI5M,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bk2B,oBAAoBj8B,OAAA08B,EAAA,EAAA18B,CAAA,GACf+F,EAAUk2B,oBADIj8B,OAAA28B,EAAA,EAAA38B,CAAA,GAEhByB,EAAKwD,MAAM6J,OAAS,OAEvBosB,WAAWl7B,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAUm1B,WADLl7B,OAAA28B,EAAA,EAAA38B,CAAA,GAEPyB,EAAKwD,MAAM6J,OAASgjB,UAK3B8K,oBAAsB,WAAiB,IAAhB9K,EAAgBriB,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAKhO,EAAKwD,MAAM6J,OACd,OAAO,EAEJgjB,IACHA,EAASrwB,EAAKwD,MAAMi2B,WAAWz5B,EAAKwD,MAAM6J,SAE5C,IAAIitB,GAAiB,EACrB,GAAIjK,EAEF,OADAiK,EAAiBjK,EAAO+K,IAAI,GACpBp7B,EAAKwD,MAAM6J,QACjB,IAAK,UACL,IAAK,SACHitB,EAAiBA,GAAkBjK,EAAO5f,GAAGzQ,EAAKwD,MAAM42B,eAM9Dp6B,EAAK4E,SAAS,CACZ01B,sBAIJe,cAAgB,WACd,IAAKr7B,EAAKwD,MAAM6J,QAAgE,OAAtDrN,EAAKwD,MAAMg3B,oBAAoBx6B,EAAKwD,MAAM6J,QAClE,OAAO,EAGT,IAAIgjB,EAAS,KACPiL,EAAqBt7B,EAAK+D,cAAc6I,MAAM5M,EAAKwD,MAAMg3B,oBAAoBx6B,EAAKwD,MAAM6J,SAAS4L,IAAI,KAE3G,OAAOjZ,EAAKwD,MAAM6J,QAChB,IAAK,UACL,IAAK,SACHgjB,EAASrwB,EAAKwD,MAAM42B,cAAgBp6B,EAAK+D,cAAc6I,MAAM5M,EAAKwD,MAAM42B,eAAe9xB,MAAMgzB,GAAsB,KAMvHt7B,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bm1B,WAAWl7B,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAUm1B,WADLl7B,OAAA28B,EAAA,EAAA38B,CAAA,GAEPyB,EAAKwD,MAAM6J,OAASgjB,UAK3BkL,uBAAyB,SAACxlB,GACxB,IAAK/V,EAAKwD,MAAM6J,OACd,OAAO,EAETrN,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bk2B,oBAAoBj8B,OAAA08B,EAAA,EAAA18B,CAAA,GACf+F,EAAUk2B,oBADIj8B,OAAA28B,EAAA,EAAA38B,CAAA,GAEhByB,EAAKwD,MAAM6J,OAAS0I,UAK3BylB,mCAAgB,SAAAnlB,IAAA,IAAAojB,EAAAvI,EAAAuK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxlB,EAAAlX,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,UAERktB,EAAaz5B,EAAKwD,MAAMi2B,WAAWz5B,EAAKwD,MAAM6J,SAEhDrN,EAAKwD,MAAM82B,gBAAmBb,IAAcz5B,EAAK+D,cAAc6I,MAAM6sB,GAAY2B,IAAI,GAJ3E,CAAA7kB,EAAAhK,KAAA,eAAAgK,EAAAgB,OAAA,UAKL,GALK,OAQR2Z,GAAU,EARF3a,EAAAiV,GAUNxrB,EAAKwD,MAAM6J,OAVLkJ,EAAAhK,KAWP,WAXOgK,EAAAiV,GAAA,qBAaLxrB,EAAKf,MAAM6F,YAAYi3B,WAAc/7B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YAbjE,CAAAzlB,EAAAhK,KAAA,eAAAgK,EAAAgB,OAAA,UAcD,GAdC,cAiBJkkB,EAAkBz7B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YAAYt8B,KAE/Dg8B,EAAoB17B,EAAK+D,cAAck4B,qBAAqBxC,EAAW,KAGtD,EACD,KAUhBmC,GADAD,EAAgG,IAClDr7B,SAAyD,IAA/Cq7B,EAA6Bnd,QAAQ,KAAcxe,EAAK+D,cAAc6I,MAAM,MAAW5M,EAAK+D,cAAc6I,MAAM,KAExKivB,EAAiB,SAACnvB,EAAGmJ,GACzB,IAAMqmB,EAA4B,YAAdxvB,EAAGK,OAGjBskB,EAAY,CAChBzI,cAAa,aACbC,YAAa7oB,EAAKf,MAAMsF,cACxBukB,WAAYpc,EAAGK,OACfovB,WAAYjvB,SAASusB,IAGnB5jB,IACFwb,EAAUvI,WAAa9oB,EAAK+D,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrB/M,EAAK+D,cAAc4kB,yBAAyB0I,GAG9CrxB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADLzX,OAAA28B,EAAA,EAAA38B,CAAA,GAEPyB,EAAKwD,MAAM6J,OAAQ,CAClBmM,OAAO,KACP0X,SAAQ,QAKVgL,GACFl8B,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bm1B,WAAWl7B,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAUm1B,WADLl7B,OAAA28B,EAAA,EAAA38B,CAAA,GAEPyB,EAAKwD,MAAM6J,OAASrN,EAAK+D,cAAc6I,MAAM,SAMhDkvB,EAAwB,SAACpvB,GAC7B,IAAM8M,EAAS9M,EAAGglB,gBAClB1xB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADLzX,OAAA28B,EAAA,EAAA38B,CAAA,GAEPyB,EAAKwD,MAAM6J,OAFJ9O,OAAA08B,EAAA,EAAA18B,CAAA,GAGH+F,EAAU0R,WAAWhW,EAAKwD,MAAM6J,QAH7B,CAINmM,iBAMRxZ,EAAKf,MAAM8yB,0BAA0B0J,EAAiB,kBAAmB,CACvEC,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtCrlB,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,oBAgGdvX,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADLzX,OAAA28B,EAAA,EAAA38B,CAAA,GAEPyB,EAAKwD,MAAM6J,OAFJ9O,OAAA08B,EAAA,EAAA18B,CAAA,GAGH+F,EAAU0R,WAAWhW,EAAKwD,MAAM6J,QAH7B,CAIN6jB,iBArGQ,yBAAA3a,EAAA1I,SAAAwI,EAAArX,WAoJhBo9B,8BAAgC,SAACzB,GAC/B36B,EAAK4E,SAAS,CACZ+1B,+BAIJ0B,oDAAiC,SAAAvlB,IAAA,IAAAwlB,EAAAC,EAAAd,EAAAe,EAAA,OAAAlmB,EAAAlX,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,WAC3BvM,EAAKf,MAAM6F,YAAYi3B,YAAa/7B,EAAKf,MAAM6F,YAAYi3B,UAAUU,kBAD1C,CAAAxlB,EAAA1K,KAAA,YAEvB+vB,EAAwBt8B,EAAKf,MAAM6F,YAAYi3B,UAAUU,kBACzDF,EAAwBD,EAAsB58B,MAC1BM,EAAK+D,cAAc24B,kBAAkBH,GAJlC,CAAAtlB,EAAA1K,KAAA,gBAMrBkvB,EAAkBz7B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YAAYt8B,KAN1CuX,EAAA1K,KAAA,EAOCvM,EAAK+D,cAAc44B,mBAAmBlB,EAAgBa,EAAsBp0B,QAAQlI,EAAKf,MAAMuM,SAPhG,cAOrBgxB,EAPqBvlB,EAAA1H,KAAA0H,EAAAM,OAAA,SAQpBilB,GARoB,eAAAvlB,EAAAM,OAAA,UAWxB,GAXwB,yBAAAN,EAAApJ,SAAAiJ,EAAA9X,WAcjC49B,oCAAiB,SAAA3wB,IAAA,IAAAilB,EAAAqJ,EAAAJ,EAAA0C,EAAAjC,EAAAC,EAAAiC,EAAA1C,EAAAK,EAAAsC,EAAAC,EAAAC,EAAAxB,EAAAO,EAAAS,EAAAS,EAAAC,EAAAjD,EAAAx1B,EAAA04B,EAAA,OAAA9mB,EAAAlX,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEVvM,EAAKf,MAAM6F,aAAgB9E,EAAKf,MAAMuM,QAF5B,CAAAa,EAAAE,KAAA,eAAAF,EAAAkL,OAAA,UAGN,GAHM,UAMX2Z,GAAU,EACdlxB,EAAK4E,SAAS,CACZssB,UACAlb,WAAW,CACTikB,QAAQ,CACNzgB,OAAO,KACP0X,SAAQ,GAEV9N,QAAQ,CACN5J,OAAO,KACP0X,SAAQ,GAEVvuB,OAAO,CACL6W,OAAO,KACP0X,SAAQ,MAKVqJ,GAAmB,EACnBJ,EAAe,aACf0C,EAAyB,KACzBjC,EAA2B,KAC3BC,GAA4B,EAC5BiC,EAAgB98B,EAAK+D,cAAc6I,MAAM,GACzCwtB,EAAgBp6B,EAAK+D,cAAc6I,MAAM,GACzC6tB,EAAqBz6B,EAAK+D,cAAc6I,MAAM,GAC5CmwB,OAA6CzR,IAA7BtrB,EAAKf,MAAM89B,eAA8B/8B,EAAKf,MAAM89B,eAGtE/8B,EAAKf,MAAM6F,YAAYi3B,YAAa/7B,EAAKf,MAAM6F,YAAYi3B,UAAUlS,QApC1D,CAAAxd,EAAAE,KAAA,YAqCPywB,EAAkBh9B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YACnDiB,EAAiBD,EAAgBK,IACjC5B,EAAkBuB,EAAgBt9B,MACpCs8B,EAAch8B,EAAK+D,cAAc24B,kBAAkBjB,MAGnCwB,EA3CP,CAAA5wB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4CSvM,EAAKf,MAAMq+B,aAAa7B,EAAgBuB,EAAgB90B,QAAQ+0B,GA5CzE,QA4CXjB,EA5CW3vB,EAAAkD,KAAA,YA+CTktB,EAAoBz8B,EAAK+D,cAAc24B,kBAAkB18B,EAAKf,MAAM6F,YAAYi3B,UAAUU,kBAAkB/8B,SAEtFM,EAAKf,MAAM6F,YAAYi3B,UAAUU,kBAAkBY,IAjDhE,CAAAhxB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkDevM,EAAKf,MAAMq+B,aAAat9B,EAAKf,MAAM6F,YAAYi3B,UAAUU,kBAAkB/8B,KAAKM,EAAKf,MAAM6F,YAAYi3B,UAAUU,kBAAkBv0B,QAAQlI,EAAKf,MAAM6F,YAAYi3B,UAAUU,kBAAkBY,KAlD7M,QAkDXZ,EAlDWpwB,EAAAkD,KAAA,YAqDTysB,IAAeS,EArDN,CAAApwB,EAAAE,KAAA,gBAuDX4tB,EAAen6B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YAAYrvB,MAvDjDN,EAAAE,KAAA,GA8DDoK,QAAQqD,IAAI,CAEpBha,EAAK+D,cAAcw5B,iBAAiB9B,GAEpCz7B,EAAKq8B,iCAELr8B,EAAK+D,cAAcy5B,mBAAmB/B,EAAgBz7B,EAAKf,MAAMuM,SAEhEuxB,EAAgB/8B,EAAK+D,cAAc05B,oBAAoBhC,EAAgB,cAAgB,OAtE/E,QAAAyB,EAAA7wB,EAAAkD,KAAA4tB,EAAA5+B,OAAA0b,EAAA,EAAA1b,CAAA2+B,EAAA,GA0DTtC,EA1DSuC,EAAA,GA2DTtC,EA3DSsC,EAAA,GA4DT1C,EA5DS0C,EAAA,GA6DTL,EA7DSK,EAAA,GA2EP1C,IAEFL,EAAgBp6B,EAAK+D,cAAcsM,iBAAiBoqB,EAAmBG,GACnEkC,IACFA,EAAgB98B,EAAK+D,cAAcsM,iBAAiBysB,EAAc98B,EAAKf,MAAM6F,YAAYwE,UACzFuzB,EAAyB78B,EAAK+D,cAAc6I,MAAMwtB,GAAe9xB,MAAMtI,EAAK+D,cAAc6I,MAAMkwB,KAGlGvC,EAAmBv6B,EAAK+D,cAAc6I,MAAM6tB,GAAoBhqB,GAAG,IAnF1D,WAwFfygB,GAAU,EAGJgJ,EAAYl6B,EAAKf,MAAMi7B,UAEvBx1B,EAAW,CACfwsB,UACAgJ,YACAC,eACAC,gBACAG,mBACAE,qBACAoC,yBACAjC,2BACAC,8BAGE76B,EAAKf,MAAMy+B,SAzGA,CAAArxB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0GgBvM,EAAK+D,cAAc45B,oBAAoB39B,EAAKf,MAAMuM,SA1GlE,SA0GP4xB,EA1GO/wB,EAAAkD,QA2GU6tB,EAAeQ,UACpCl5B,EAASg2B,sBAAuB,GA5GrB,cAgHoC,oBAAxC16B,EAAKf,MAAM4+B,0BACpB79B,EAAKf,MAAM4+B,yBAAyBtD,GAjHvBluB,EAAAkL,OAAA,SAuHRvX,EAAK4E,SAASF,IAvHN,yBAAA2H,EAAAwB,SAAA5B,EAAAjN,WA0HjB8+B,0DAAsB,SAAA1uB,EAAO5J,GAAP,IAAA82B,EAAA,OAAAhmB,EAAAlX,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,OAChB/G,GACFA,EAAEiwB,iBAEE6G,EAAwBt8B,EAAKf,MAAM6F,YAAYi3B,UAAUU,kBACrCz8B,EAAK+D,cAAc24B,kBAAkBJ,EAAsB58B,OAEnFM,EAAK+9B,aAAa,KAAK/9B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YAAYt8B,KAAK48B,EAAsBp0B,SAP7E,wBAAAmH,EAAAxB,SAAAuB,EAAApQ,iEAWtBod,uCAAoB,SAAAtE,IAAA,OAAAxB,EAAAlX,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,OAClBvM,EAAK4E,SAAS,CACZoR,WAAY,CACVikB,QAAQ,CACNzgB,OAAO,KACP0X,SAAQ,GAEV9N,QAAQ,CACN5J,OAAO,KACP0X,SAAQ,GAEVvuB,OAAO,CACL6W,OAAO,KACP0X,SAAQ,MAbI,wBAAAlZ,EAAAnK,SAAAiK,EAAA9Y,WAmBpBg/B,uDAAmB,SAAAplB,EAAOpT,GAAP,IAAA82B,EAAA2B,EAAAC,EAAA,OAAA5nB,EAAAlX,EAAAgN,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,UACb/G,GACFA,EAAEiwB,iBAEE6G,EAAwBt8B,EAAKf,MAAM6F,YAAYi3B,UAAUU,mBACrCz8B,EAAK+D,cAAc24B,kBAAkBJ,EAAsB58B,MALpE,CAAAqZ,EAAAxM,KAAA,eAAAwM,EAAAxM,KAAA,EASyBvM,EAAKq8B,iCAT9B,OAAAtjB,EAAAxJ,KA8EbvP,EAAK4E,SAAS,CACZi2B,2BAA0B,KAlEtBoD,EAAkB,SAACvxB,EAAGmJ,GAE1B,IAAMwb,EAAY,CAChBzI,cAAe,UACfC,YAAa,UACbC,WAAYpc,EAAKA,EAAGK,OAAS,MAGzBmvB,EAAcxvB,GAAoB,YAAdA,EAAGK,OAIzB8I,IACFwb,EAAUvI,WAAa9oB,EAAK+D,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrB/M,EAAK+D,cAAc4kB,yBAAyB0I,GAG9CrxB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bu2B,0BAA2BqB,EAC3BlmB,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADL,CAERikB,QAAQ,CACNzgB,OAAO,KACP0X,SAAQ,QAK4B,oBAA/BlxB,EAAKf,MAAMg/B,iBAAkC/B,GACtDl8B,EAAKf,MAAMg/B,gBAAgBvxB,GAG7B1M,EAAK48B,kBAGDsB,EAAyB,SAACxxB,GAC9B,IAAM8M,EAAS9M,EAAGglB,gBAClB1xB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADL,CAERikB,QAAQ17B,OAAA08B,EAAA,EAAA18B,CAAA,GACH+F,EAAU0R,WAAWikB,QADnB,CAELzgB,iBAMRxZ,EAAK+D,cAAco6B,YAAYn+B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YAAYt8B,KAAK48B,EAAsBp0B,QAAQ+1B,EAAgBC,GAE/Hl+B,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADL,CAERikB,QAAQ,CACNzgB,OAAO,KACP0X,SAAQ,KAGZ2J,2BAA0B,MA3Ef,wBAAA9hB,EAAAlL,SAAA+K,EAAA5Z,iEAqFnBokB,8CAAU,SAAA9J,EAAO9T,EAAE44B,GAAT,IAAA9B,EAAAG,EAAA4B,EAAAC,EAAAC,EAAAC,EAAApE,EAAAqE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1oB,EAAAlX,EAAAgN,KAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAArN,MAAA,UACR/G,EAAEiwB,iBAEI6G,EAAwBt8B,EAAKf,MAAM6F,YAAYi3B,UAAUU,oBACzDA,EAAoBz8B,EAAK+D,cAAc24B,kBAAkBJ,EAAsB58B,OAJ7E,CAAAka,EAAArN,KAAA,YAaE8xB,EAAkB,SAAC3xB,EAAGmJ,IAErBA,GAASnJ,GAAoB,UAAdA,EAAGK,OACrB8I,EAAQ,CACNoX,QAAQ,kBAEAvgB,GAAMmJ,IAChBnJ,EAAK,CACHK,OAAO,UAIX,IAAMmvB,EAAcxvB,GAAoB,YAAdA,EAAGK,OAGvBskB,EAAY,CAChBzI,cAAe,UACfC,YAAauV,EACbtV,WAAYpc,EAAKA,EAAGK,OAAS,KAC7BovB,WAAYjvB,SAASktB,IAGnBvkB,IACFwb,EAAUvI,WAAa9oB,EAAK+D,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrB/M,EAAK+D,cAAc4kB,yBAAyB0I,GAK1C6K,GAEF7hB,OAAOsa,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGPj1B,EAAKf,MAAMggC,mBAA6D,oBAAjCj/B,EAAKf,MAAMggC,mBACpDj/B,EAAKf,MAAMggC,kBAAkBvyB,KAI/B2N,OAAOsa,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIXj1B,EAAK48B,kBAGP58B,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bi2B,kBAAiB2B,EACjBlmB,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADL,CAERoN,QAAQ,CACN5J,OAAO,KACP0X,SAAQ,SAMVoN,EAAyB,SAAC5xB,GAC9B,IAAM8M,EAAS9M,EAAGglB,gBAClB1xB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADL,CAERoN,QAAQ7kB,OAAA08B,EAAA,EAAA18B,CAAA,GACH+F,EAAU0R,WAAWoN,QADnB,CAEL5J,iBAMF+kB,EAAiB,WACoB,oBAA9Bv+B,EAAKf,MAAMs/B,gBACpBv+B,EAAKf,MAAMs/B,kBAITC,GAAqC,IAAzBx+B,EAAKf,MAAMu/B,WAAuBx+B,EAAKf,MAAMy+B,UAAY19B,EAAKwD,MAAMm3B,0BAA4B36B,EAAKwD,MAAMk3B,qBAGvHN,EAAgBp6B,EAAKwD,MAAM42B,cAC3BqE,EAAYz+B,EAAKf,MAAMigC,oBAAsBl/B,EAAK+D,cAAco7B,aAAan/B,EAAK+D,cAAck4B,qBAAqBj8B,EAAKwD,MAAMi2B,WAAWz5B,EAAKwD,MAAM6J,QAAQrN,EAAKwD,MAAMo3B,2BAA6B56B,EAAK+D,cAAco7B,aAAan/B,EAAKwD,MAAMi3B,oBAGnPiE,EAAsE,qBAA9C1+B,EAAKf,MAAM6F,YAAYs6B,mBAAqCp/B,EAAKf,MAAM6F,YAAYs6B,mBAAqBp/B,EAAK+D,cAAc6M,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnM+tB,EAAwB,MAExBD,EApHA,CAAA9kB,EAAArN,KAAA,cAwHAoyB,EADEH,EACsBx+B,EAAK+D,cAAc6M,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnE5Q,EAAK+D,cAAc6M,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BA1H3F,CAAAgJ,EAAArN,KAAA,gBAAAqN,EAAArN,KAAA,GA8H8BvM,EAAK+D,cAAcs7B,oBAAoBjF,EAAcp6B,EAAKf,MAAMsF,cAAcvE,EAAKf,MAAM6F,aAAY,GA9HnI,QAAA8U,EAAArK,KA+HoB+vB,IAAIt/B,EAAK+D,cAAc6I,MAAM+xB,MAC/CD,GAAiB,GAhInB,QAuI2B,oBAF3BE,EAAkB5+B,EAAKf,MAAM2/B,gBAAkB5+B,EAAKf,MAAM2/B,gBAAkB,CAACH,EAAUz+B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YAAY9zB,QAAQlI,EAAKf,MAAM6F,YAAYy6B,KAAKr3B,QAAQlI,EAAKf,MAAM6F,YAAYoD,QAAQw2B,MAGjNE,EAAkBA,EAAgBH,IAIhCD,GACIM,GAAoBD,EAAApC,EAAkBjE,SAAQ4F,GAA1BrwB,MAAA8wB,EAAAtgC,OAAAu6B,EAAA,EAAAv6B,CAA8CqgC,IAAiBY,YACzFx/B,EAAK+D,cAAc07B,+BAA+BnD,EAAsB58B,KAAMo/B,EAAmBT,EAAiBC,KAG5GS,EAAiB/+B,EAAK+D,cAAc24B,kBAAkB18B,EAAKf,MAAM6F,YAAYpF,MAC7Es/B,EAAe1C,EAAsBoD,UAAUlR,KAAM,SAAAmR,GAAC,OAAIA,EAAEjgC,OAAS0+B,IACvEp+B,EAAKf,MAAMi7B,WAAa6E,EAC1B/+B,EAAK+D,cAAc67B,iBAAiB5/B,EAAKf,MAAM6F,YAAYpF,KAAMM,EAAKf,MAAMuM,QAAS8wB,EAAsB58B,KAAMs/B,EAAaa,WAAYjB,EAAiBP,EAAiBC,EAAwBC,GAGpMv+B,EAAK+D,cAAcguB,0BAA0BuK,EAAsB58B,KAAM0+B,EAAiBQ,EAAiBP,EAAiBC,IAMhIt+B,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAA08B,EAAA,EAAA18B,CAAA,GACN+F,EAAU0R,WADL,CAERoN,QAAQ,CACN5J,OAAO,KACP0X,SAAQ,QAlKV,eAAAtX,EAAArC,OAAA,UAyKD,GAzKC,yBAAAqC,EAAA/L,SAAAyL,EAAAta,4IA7fJA,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,oDAiN9CD,KAAKmF,YACLnF,KAAK49B,yGAOYv4B,EAAUC,GAC3BtF,KAAKmF,YAEL,IAAM2nB,EAAiBznB,EAAUmH,UAAYxM,KAAKC,MAAMuM,QAClDs0B,EAAkBz7B,EAAUq5B,WAAa1+B,KAAKC,MAAMy+B,SACpDqC,EAAmB17B,EAAU61B,YAAcl7B,KAAKC,MAAMi7B,WACvC71B,EAAUE,gBAAkBvF,KAAKC,MAAMsF,gBAAmBF,EAAUS,aAAe9F,KAAKC,MAAM6F,aAE/FgnB,GAAkBgU,GAAmBC,IACvD/gC,KAAK49B,iBAGP,IAAMoD,EAAgBhhC,KAAKwE,MAAM6J,SAAW/I,EAAU+I,OAChD4yB,EAA6BjhC,KAAKwE,MAAMg3B,oBAAoBx7B,KAAKwE,MAAM6J,UAAY/I,EAAUk2B,oBAAoBx7B,KAAKwE,MAAM6J,SAC9H2yB,GAAiBC,IACnBjhC,KAAKq8B,gBAGmB/2B,EAAUm1B,aAAez6B,KAAKwE,MAAMi2B,YAE5Dz6B,KAAKm8B,sBAGyB72B,EAAUu2B,4BAA8B77B,KAAKwE,MAAMq3B,2BAGvC,oBAA/B77B,KAAKC,MAAMg/B,iBACpBj/B,KAAKC,MAAMg/B,gBAAgBj/B,KAAKwE,MAAMq3B,4DAkbnC,IAAAp2B,EAAAzF,KAEP,IAAKA,KAAKC,MAAM6F,cAAgB9F,KAAKC,MAAMsF,cACzC,OAAO,KAGT,IAAM27B,EAAmBlhC,KAAKC,MAAMi7B,WAAal7B,KAAKwE,MAAMq3B,0BACtDsF,EAAqBnhC,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,mBACjEwvB,EAAwBD,EAAmBtW,SAAkG,qBAAhFsW,EAAmBlhC,MAAMqM,gBAAgBtM,KAAKC,MAAM6F,YAAYy6B,KAAK5yB,OAClI0zB,EAA+BF,EAAmBG,eAIlDC,EAAyB,SAACthC,GAAD,OAC7BuhC,EAAAphC,EAAAC,cAACohC,EAAA,EAAD,CACE3/B,UAAW,CACT2W,GAAG,EACH0b,GAAG,EACHnyB,GAAG,EACHsC,GAAG,EACH+C,QAAQ,OACR7E,WAAW,SACXC,cAAc,SACdC,eAAe,SACfoa,GAAGrX,EAAKjB,MAAM62B,cAAgB,EAAI,IAGpCmG,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE/hC,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB8+B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE9gC,KAAM,QACNH,MAAO,WACPC,KAAM,iBAGV8gC,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEC,UAAU,EACVC,QAASn8B,EAAKjB,MAAM62B,cACpBxxB,MAAK,wCACL+V,SAAW,SAAApZ,GAAC,OAAIf,EAAKs2B,oBAAoBv1B,EAAEuW,OAAO6kB,cAKlDC,EAAkB7hC,KAAK+E,cAAc6M,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgB5R,KAAKwE,MAAMk3B,qBAExH,OACE17B,KAAKwE,MAAM0tB,SAAWlyB,KAAKC,MAAMuM,QAC/Bg1B,EAAAphC,EAAAC,cAACohC,EAAA,EAAD,CACE3/B,UAAW,CACTrC,EAAE,EACFqd,GAAG,EACHuS,UAAU,QACVpkB,MAAM,CACJ5D,QAAQ,OACR7E,WAAW,SACXE,eAAe,YAInB8+B,EAAAphC,EAAAC,cAACyhC,EAAA,EAAD,CACEvlB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,2BAIT7D,KAAKwE,MAAM+2B,mBAAqBv7B,KAAKwE,MAAM62B,cAC1CmG,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CAAK/hC,MAAO,IAEPK,KAAKC,MAAM8hC,iBACZP,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJra,cAAe,UAEf++B,EAAAphC,EAAAC,cAACohC,EAAA,EAAD,CACE3/B,UAAW,CACTrC,EAAE,IAGJ+hC,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEl/B,WAAY,SACZC,cAAe,UAEf++B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE9gC,KAAM,QACNH,MAAO,WACPC,KAAOV,KAAKC,MAAM8hC,gBAAkB,YAAc,YAEpDP,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAEwB,OAAjCnB,KAAKC,MAAM+hC,kBAA6BhiC,KAAKC,MAAM+hC,kBAAoB,KACtC,OAAjChiC,KAAKC,MAAM+hC,mBACXR,EAAAphC,EAAAC,cAAA,WARJ,OAUSL,KAAKC,MAAM8hC,gBAA4B,GAAV,QAVtC,SAU0DP,EAAAphC,EAAAC,cAAA,cAASL,KAAKwE,MAAM42B,cAAc7xB,QAAQ,GAA1C,IAA+CvJ,KAAKwE,MAAM22B,aAA1D,IAAyEn7B,KAAKwE,MAAMq5B,uBAAX,IAAA7zB,OAAwChK,KAAKwE,MAAMq5B,uBAAuBt0B,QAAQ,GAAlF,KAAAS,OAAwFhK,KAAKC,MAAMsF,cAAnG,KAAsH,IAVzP,eAUiRi8B,EAAAphC,EAAAC,cAAA,WAClP,OAA3BL,KAAKC,MAAMgiC,YAAuBjiC,KAAKC,MAAMgiC,YAAc,+EAOzC3V,IAA3BtsB,KAAKC,MAAMiiC,aAA6BliC,KAAKC,MAAMiiC,cAClDV,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJra,cAAe,WAGZzC,KAAKC,MAAM8hC,iBACVP,EAAAphC,EAAAC,cAACkhC,EAAD,MAEJC,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CAAMp9B,GAAI,GAAV,sBAGAk9B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEl/B,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB8+B,EAAAphC,EAAAC,cAACohC,EAAA,EAAD,CACE3/B,UAAW,CACTrC,EAAE,EACFE,MAAM,IACN40B,YAAY,WACV9uB,EAAKq2B,UAAU,aAGnB35B,eAAe,EACfC,SAAiC,YAAtBpC,KAAKwE,MAAM6J,QAEtBmzB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEn/B,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB8+B,EAAAphC,EAAAC,cAAC8hC,EAAA,EAAD,CACEzqB,YAAa,CACXrJ,OAAO,WAET4d,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,MAITo+B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACExgC,SAAU,EACVD,WAAY,GAFd,aAQJugC,EAAAphC,EAAAC,cAACohC,EAAA,EAAD,CACE3/B,UAAW,CACTrC,EAAE,EACFE,MAAM,IACN40B,YAAY,WACV9uB,EAAKq2B,UAAU,YAGnB35B,eAAe,EACfC,SAAiC,WAAtBpC,KAAKwE,MAAM6J,QAEtBmzB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEn/B,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB8+B,EAAAphC,EAAAC,cAAC8hC,EAAA,EAAD,CACEzqB,YAAa,CACXrJ,OAAO,UAET4d,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,MAITo+B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACExgC,SAAU,EACVD,WAAY,GAFd,cAYY,YAAtBjB,KAAKwE,MAAM6J,OACTmzB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJxY,GAAI,EACJ7B,cAAe,UAGZ2+B,GAAyBC,IAAiCrhC,KAAKC,MAAM8hC,iBACpEP,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEp9B,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB8+B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEvgC,UAAW,SACX6b,WAAY,UACZE,KAAI,sBAAAlT,OAAwBm3B,EAAmBiB,MAA3C,KAAAp4B,OAAoDhK,KAAKC,MAAM6F,YAAYy6B,KAAK5yB,QAHtF,wDAOA6zB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEh3B,GAAI,EACJ9J,KAAM,MACNH,MAAO,UACPC,KAAM,qBAKZwgC,EACElhC,KAAKwE,MAAMwS,WAAWoN,QAAQ8N,QAC5BsP,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJra,cAAe,UAEf++B,EAAAphC,EAAAC,cAACgiC,EAAA,EAAD9iC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6N,KAAM9N,KAAKwE,MAAMwS,WAAWoN,QAAQ5J,OACpCgC,WAAU,kCACVY,kBAAmBpd,KAAKod,kBAAkBuR,KAAK3uB,MAC/Cyc,SAAWzc,KAAKC,MAAMwc,SAAWzc,KAAKC,MAAMwc,SAAW,yBACvDI,eAAiB7c,KAAKC,MAAMy+B,UAAY1+B,KAAKwE,MAAMm3B,wBAA0B,8BAAgC,6BAG/G37B,KAAKC,MAAMigC,oBACbsB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJra,cAAe,UAEf++B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEp9B,GAAI,EACJ3E,MAAO,EACP8C,cAAe,UAEf++B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEp9B,GAAI,EACJ9B,WAAY,SACZC,cAAe,MACfC,eAAgB1C,KAAKC,MAAMqiC,oBAAsB,gBAAkB,YAGjEtiC,KAAKC,MAAMqiC,qBACTd,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE/hC,MAAO,EACPoxB,SAAU,MACVvuB,WAAY,SACZC,cAAe,OAEf++B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACExgC,SAAU,EACVD,WAAY,EACZE,UAAW,OACX8J,MAAO,CACL8lB,SAAS,OACTC,SAAS,SACT5lB,WAAW,SACX6lB,aAAa,YAEfxwB,MAAOT,KAAKC,MAAMqiC,oBAAoB7hC,MAAQT,KAAKC,MAAMqiC,oBAAoB7hC,MAAQ,aAEpFT,KAAKC,MAAMqiC,oBAAoBz+B,OAMtC7D,KAAKwE,MAAM42B,eACToG,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE/hC,MAAO,EACPoxB,SAAU,MACVvuB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhB8+B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACExgC,SAAU,EACVD,WAAY,EACZR,MAAO,YACPU,UAAW,QACX6b,WAAY,YACZK,QAAU,SAAC7W,GAAD,OAAOf,EAAK82B,uBAAuB,OAN/C,YAQYv8B,KAAKwE,MAAM42B,cAAc7xB,QAAQ,GAR7C,IAQkDvJ,KAAKC,MAAMsF,iBAMrEi8B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEzzB,IAAK,EACLrD,KAAM,SACN+2B,UAAU,EACV/hC,OAAQ,QACRC,aAAc,EACdoB,WAAY,IACZsH,YAAa,aACblF,gBAAiB,SACjBib,UAAW,kBACXic,YAAa,gBACb3a,SAAU5f,KAAKg8B,iBAAiBrN,KAAK3uB,MACrCN,OAAM,aAAAsK,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOygB,SAC7Cnd,MAAO9G,KAAKwE,MAAMi2B,WAAWz6B,KAAKwE,MAAM6J,QAAUrO,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMi2B,WAAWz6B,KAAKwE,MAAM6J,SAAS9E,UAAY,KAEnIi4B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJta,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK8P,IAAK,SAAAuE,GAAU,OAC5ByqB,EAAAphC,EAAAC,cAACkiC,EAAA,EAAD,CACExrB,WAAYA,EACZhT,IAAG,YAAAiG,OAAc+M,GACjBwd,YAAa,kBAAI9uB,EAAK82B,uBAAuBxlB,IAC7C3U,SAAUqD,EAAKjB,MAAMg3B,oBAAoB/1B,EAAKjB,MAAM6J,UAAYH,SAAS6I,SAMnFyqB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZE,eAAgB,UAGd1C,KAAKC,MAAM6F,YAAYi3B,UAAUU,kBAAkBiD,UAAUluB,IAAI,SAACwtB,EAAaj3B,GAC7E,IAAMy5B,EAAexC,EAAat/B,KAClC,OACE8gC,EAAAphC,EAAAC,cAACoiC,EAAA,EAAD,CACEnjC,YAAa,CACXK,MAAM,CAAC,EAAE,IACTI,SAAS0F,EAAKjB,MAAM82B,eACpBx7B,UAAU2F,EAAKxF,MAAMsD,MAAMC,OAAO4gB,SAEpCrgB,IAAG,WAAAiG,OAAajB,GAChBxI,YAAc,SAAAiG,GAAC,OAAIf,EAAK2e,QAAQ5d,EAAEg8B,KAEhCxC,EAAan2B,WAQ3B23B,EAAAphC,EAAAC,cAACohC,EAAA,EAAD,CACE3/B,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAGL0kB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEl/B,WAAY,SACZC,cAAe,UAGbzC,KAAKC,MAAMyiC,eACTlB,EAAAphC,EAAAC,cAACqhC,EAAA,EACK1hC,KAAKC,MAAMyiC,gBAGjBlB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE9gC,KAAM,QACNH,MAAO,WACPC,KAAOV,KAAKC,MAAM0iC,cAAgB3iC,KAAKC,MAAM0iC,cAAiB3iC,KAAKC,MAAM8hC,gBAAkB,YAAc,WAI/GP,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAGTnB,KAAKC,MAAM2iC,cACTpB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAKhlB,KAAN,CACEmmB,mBAAoB7iC,KAAKC,MAAM4iC,mBAC/Bv3B,wBAAyB,CACvBC,OAAOvL,KAAKC,MAAM2iC,iBAKtBpB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAKhlB,KAAN,CACEjc,MAAO,YADT,oDAGqDT,KAAKC,MAAM8hC,gBAAkB/hC,KAAKwE,MAAM42B,cAAc7xB,QAAQ,GAAK,MAHxH,IAGiIvJ,KAAKwE,MAAM22B,aAAen7B,KAAKC,MAAM8hC,gBAAX,kBAAA/3B,OAA+ChK,KAAKC,MAAM6F,YAAY6H,MAAtE,KAAA3D,OAA+EhK,KAAKC,MAAMiQ,iBAA1F,aAAwH,GAHnR,MAQNsxB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE/hC,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAGhBm/B,GACEL,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE3/B,GAAI,EACJC,GAAI,EACJ8a,GAAI,EACJnd,MAAO,EACPE,aAAc,EACd2C,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBW,gBAAiB,cACjB3D,OAAM,aAAAsK,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOsgB,YAE7C0d,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAGTnB,KAAKC,MAAMy+B,SAAX,0HAGE,4GAIN1+B,KAAKC,MAAMy+B,UACT8C,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJ6kB,UAAU,EACV93B,MAAO,gCACP+3B,QAAS5hC,KAAKwE,MAAMm3B,wBACpB/b,SAAW,SAAApZ,GAAC,OAAIf,EAAK23B,8BAA8B52B,EAAEuW,OAAO6kB,aAMpE5hC,KAAKC,MAAM6F,YAAYi3B,UAAUU,kBAAkBiD,UAAUluB,IAAI,SAACwtB,EAAaj3B,GAC7E,IAAMy5B,EAAexC,EAAat/B,KAClC,OACE8gC,EAAAphC,EAAAC,cAACoiC,EAAA,EAAD,CACEnjC,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,IACTG,UAAU2F,EAAKxF,MAAMsD,MAAMC,OAAO4gB,SAEpCrgB,IAAG,WAAAiG,OAAajB,GAChBxI,YAAc,SAAAiG,GAAC,OAAIf,EAAK2e,QAAQ5d,EAAEg8B,KAEhCxC,EAAan2B,YAS3B7J,KAAKwE,MAAMwS,WAAWikB,QAAQ/I,QAChCsP,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJra,cAAe,UAEf++B,EAAAphC,EAAAC,cAACgiC,EAAA,EAAD9iC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEwc,SAAQ,uBACR3O,KAAM9N,KAAKwE,MAAMwS,WAAWikB,QAAQzgB,OACpCgC,WAAU,gCACVY,kBAAmBpd,KAAKod,kBAAkBuR,KAAK3uB,UAInDwhC,EAAAphC,EAAAC,cAACohC,EAAA,EAAD,CACE3/B,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAGL0kB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEl/B,WAAY,SACZC,cAAe,UAEf++B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE9gC,KAAM,QACNF,KAAM,WACND,MAAO,aAET+gC,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAGTnB,KAAKC,MAAM6iC,YAAc9iC,KAAKC,MAAM6iC,YAApC,mBAAA94B,OAAuEhK,KAAKC,MAAM8hC,gBAA0B,GAAR,MAApG,KAAA/3B,OAAmHhK,KAAKwE,MAAM22B,aAA9H,mDAGJqG,EAAAphC,EAAAC,cAACoiC,EAAA,EAAD,CACEnjC,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,KAEXY,YAAaP,KAAKg/B,iBAAiBrQ,KAAK3uB,OAL1C,cAeTA,KAAKwE,MAAMwS,WAAWhX,KAAKwE,MAAM6J,QAAQ6jB,QAmExCsP,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJra,cAAe,UAEf++B,EAAAphC,EAAAC,cAACgiC,EAAA,EAAD9iC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEmd,kBAAmBpd,KAAKod,kBAAkBuR,KAAK3uB,MAC/C8N,KAAM9N,KAAKwE,MAAMwS,WAAWhX,KAAKwE,MAAM6J,QAAQmM,OAC/CgC,WAAU,cAAAxS,OAAgBhK,KAAKwE,MAAM6J,OAA3B,eACVoO,SAAQ,GAAAzS,OAAKhK,KAAK+E,cAAc+E,WAAW9J,KAAKwE,MAAM6J,QAA9C,qBA3EZmzB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJra,cAAe,UAEf++B,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACEzzB,IAAK,EACLrD,KAAM,SACN+2B,UAAU,EACV/hC,OAAQ,QACRC,aAAc,EACdoB,WAAY,IACZ+d,UAAWC,IAAOqR,MAClB/nB,YAAa,aACblF,gBAAiB,SACjBib,UAAW,kBACXsB,SAAU5f,KAAKg8B,iBAAiBrN,KAAK3uB,MACrCN,OAAM,aAAAsK,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOygB,SAC7CsW,YAAW,UAAAvwB,OAAYhK,KAAKwE,MAAM22B,aAAvB,WACXr0B,MAAoD,OAA7C9G,KAAKwE,MAAMi2B,WAAWz6B,KAAKwE,MAAM6J,QAAmBrO,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMi2B,WAAWz6B,KAAKwE,MAAM6J,SAAS6L,WAAa,KAE7IsnB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJta,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhB8+B,EAAAphC,EAAAC,cAACkiC,EAAA,EAAD,CACExrB,WAAY,GACZwd,YAAa,kBAAI9uB,EAAK82B,uBAAuB,KAC7Cn6B,SAAUpC,KAAKwE,MAAMg3B,oBAAoBx7B,KAAKwE,MAAM6J,UAAYH,SAAS,MAE3EszB,EAAAphC,EAAAC,cAACkiC,EAAA,EAAD,CACExrB,WAAY,GACZwd,YAAa,kBAAI9uB,EAAK82B,uBAAuB,KAC7Cn6B,SAAUpC,KAAKwE,MAAMg3B,oBAAoBx7B,KAAKwE,MAAM6J,UAAYH,SAAS,MAE3EszB,EAAAphC,EAAAC,cAACkiC,EAAA,EAAD,CACExrB,WAAY,GACZwd,YAAa,kBAAI9uB,EAAK82B,uBAAuB,KAC7Cn6B,SAAUpC,KAAKwE,MAAMg3B,oBAAoBx7B,KAAKwE,MAAM6J,UAAYH,SAAS,MAE3EszB,EAAAphC,EAAAC,cAACkiC,EAAA,EAAD,CACExrB,WAAY,IACZwd,YAAa,kBAAI9uB,EAAK82B,uBAAuB,MAC7Cn6B,SAAUpC,KAAKwE,MAAMg3B,oBAAoBx7B,KAAKwE,MAAM6J,UAAYH,SAAS,QAG7EszB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE5kB,GAAI,EACJpa,eAAgB,UAEhB8+B,EAAAphC,EAAAC,cAACoiC,EAAA,EAAD,CACEnjC,YAAa,CACXK,MAAM,CAAC,EAAE,IACTI,SAASC,KAAKwE,MAAM82B,eACpBrwB,MAAM,CACJI,cAAc,eAGlB9K,YAAaP,KAAKwE,MAAM82B,eAAiB,KAAOt7B,KAAKw8B,cAAc7N,KAAK3uB,OAEvEA,KAAKwE,MAAM6J,WAsB1BmzB,EAAAphC,EAAAC,cAACqhC,EAAA,EAAD,CACE/hC,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,WAGZ1C,KAAKC,MAAM8hC,iBAAmB/hC,KAAKwE,MAAM+2B,kBACzCiG,EAAAphC,EAAAC,cAACkhC,EAAD,MAGFvhC,KAAKC,MAAM2B,SAAW5B,KAAKC,MAAM2B,SAAW,aAp1CpCd,aA61CPi6B,qOCr2CTgI,mLAEF,OACE9gC,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CACEG,MAAO,EACP6C,WAAY,SACZE,eAAgB,UACZ1C,KAAKC,MAAMsc,WAEfta,EAAA7B,EAAAC,cAACiC,EAAA,EAAWtC,KAAKC,MAAMoc,aAErBrc,KAAKC,MAAM4D,MACT5B,EAAA7B,EAAAC,cAACiC,EAAA,EAAStC,KAAKC,MAAM2D,UAAY5D,KAAKC,MAAM4D,cAZ/B/C,aAmBViiC,m+iCCTTC,6MAEJx+B,MAAQ,CACNsnB,OAAM,KAIR/mB,cAAgB,OAChBC,oBAAqB,IAwDrB+mB,+BAAY,SAAA1U,IAAA,IAAA2U,EAAA/b,EAAArK,EAAAqmB,EAAAC,EAAA5hB,EAAA6hB,EAAAC,EAAA6W,EAAA/U,EAAAxf,EAAAyB,EAAA+yB,EAAAtrB,EAAAurB,EAAAC,EAAAlF,EAAAmF,EAAAC,EAAAnF,EAAAoF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlpB,EAAAmpB,EAAAC,EAAAC,EAAAC,EAAArpB,EAAAspB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAtV,GAAAuV,GAAAvyB,GAAA5J,GAAAo8B,GAAAzyB,GAAAL,GAAA+yB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAApd,GAAAmD,GAAArd,UAAA,OAAAjC,EAAA3M,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,UAAMye,EAANK,GAAA/qB,OAAA,QAAAgrB,IAAAD,GAAA,GAAAA,GAAA,GAAgB,MAItBrrB,EAAKgE,oBAAuBhE,EAAKf,MAAM0N,OAAU3M,EAAKf,MAAM6F,YAJtD,CAAAyR,EAAAhK,KAAA,eAAAgK,EAAAgB,OAAA,UAKD,GALC,UAQJtI,EAAyC,SAAhCjP,EAAKf,MAAMiQ,iBAEpBtK,EAAyB,OAAdomB,EACXC,EAAYjrB,EAAKf,MAAMgsB,UACxBD,IACHA,EAAYC,EAAUvrB,MAGlBwrB,EAAaD,EAAUhsB,MACvBqK,EAAW4hB,GAAcA,EAAW5hB,SAAW4hB,EAAW5hB,SAAatJ,EAAKf,MAAM6C,SAAW,EAAI,EAEjGqpB,EAAkD,qBAA5BnrB,EAAKf,MAAMksB,cAA+BnrB,EAAKf,MAAMksB,aAE7EC,EAAS,MACTprB,EAAKf,MAAM0N,MAtBL,CAAA4J,EAAAhK,KAAA,UAAAgK,EAAAiV,GAuBAR,EAvBAzU,EAAAhK,KAwBD,iBAxBCgK,EAAAiV,GAAA,GAgCD,cAhCCjV,EAAAiV,GAAA,GAwCD,eAxCCjV,EAAAiV,GAAA,GAoDD,QApDCjV,EAAAiV,GAAA,GA4DD,oBA5DCjV,EAAAiV,GAAA,GAwED,eAxECjV,EAAAiV,GAAA,GAgFD,qBAhFCjV,EAAAiV,GAAA,GAwFD,kCAxFCjV,EAAAiV,GAAA,GA6GD,6BA7GCjV,EAAAiV,GAAA,GAkID,aAlICjV,EAAAiV,GAAA,GA0ID,gBA1ICjV,EAAAiV,GAAA,GAmKD,yBAnKCjV,EAAAiV,GAAA,GA2LD,oBA3LCjV,EAAAiV,GAAA,GAoND,sBApNCjV,EAAAiV,GAAA,GA4ND,UA5NCjV,EAAAiV,GAAA,IAqOD,SArOCjV,EAAAiV,GAAA,IA6OD,sBA7OCjV,EAAAiV,GAAA,IAsPD,iBAtPCjV,EAAAiV,GAAA,IA+PD,QA/PCjV,EAAAiV,GAAA,IA2QD,WA3QCjV,EAAAiV,GAAA,IAiTD,aAjTCjV,EAAAiV,GAAA,IAgUD,aAhUCjV,EAAAiV,GAAA,IA+UD,qBA/UCjV,EAAAiV,GAAA,IA+VD,QA/VCjV,EAAAiV,GAAA,IAkXD,oBAlXCjV,EAAAiV,GAAA,IAyZD,aAzZCjV,EAAAiV,GAAA,IAgkBD,qBAhkBCjV,EAAAiV,GAAA,IAgrBD,WAhrBCjV,EAAAiV,GAAA,6BAAAjV,EAAAhK,KAAA,GAyBWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAzBlH,eAyBJC,EAzBI7U,EAAAhH,OA0BU3K,GACZ5E,EAAKwE,aAAa,CAChBghC,aAAapa,EAAOlS,aA5BpB3C,EAAAgB,OAAA,4BAiCE0qB,EAAYjiC,EAAK+D,cAAc0hC,kBAAkBzlC,EAAKf,MAAM6F,aAjC9DyR,EAAAhK,KAAA,GAkCwCvM,EAAK+D,cAAcmpB,8BAA8BltB,EAAKf,MAAM6F,aAlCpG,eAkCEooB,EAlCF3W,EAAAhH,KAmCJvP,EAAKwE,aAAa,CAChBy9B,YACA/U,kCArCE3W,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GAyCWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAzClH,eAyCJC,EAzCI7U,EAAAhH,OA0CU3K,IACR8I,EAAa,KAC+B,qBAArC1N,EAAKf,MAAM6F,YAAY4gC,WAA6B1lC,EAAKf,MAAM6F,YAAY4gC,aACpFh4B,EAAa0d,EAAOlS,YAEtBlZ,EAAKwE,aAAa,CAChBkJ,gBAhDA6I,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GAqDWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GArDlH,eAqDJC,EArDI7U,EAAAhH,OAsDU3K,GACZ5E,EAAKwE,aAAa,CAChBmhC,IAAIva,EAAOlS,aAxDX3C,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GA+DMvM,EAAK+D,cAAc64B,eAAe58B,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GA/DlF,eAAAhc,EAAAoH,EAAAhH,KA8DF2yB,EA9DE/yB,EA8DF+yB,4BAGEt9B,GAAYs9B,IACdliC,EAAKwE,aAAa,CAChBohC,gBAAgB1D,EAA4BhpB,aAE9CkS,EAAS8W,GArEP3rB,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GAyEWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAzElH,eAyEJC,EAzEI7U,EAAAhH,OA0EU3K,GACZ5E,EAAKwE,aAAa,CAChB2H,WAAWif,EAAOlS,aA5ElB3C,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GAiFWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAjFlH,eAiFJC,EAjFI7U,EAAAhH,OAkFU3K,GACZ5E,EAAKwE,aAAa,CAChBiL,iBAAiB2b,EAAOlS,aApFxB3C,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GA4FMvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GA5F7G,eAAAvU,EAAAL,EAAAhH,KA0FF4yB,EA1FEvrB,EA0FFurB,2BACAC,EA3FExrB,EA2FFwrB,8BAGiCD,IAC7Bv9B,GACF5E,EAAKwE,aAAa,CAChBsmB,OAAM,EACNqX,4BACAC,gCAIJhX,EAAS,CACP+W,4BACAC,gCAzGA7rB,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GAiHMvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAjH7G,eAAA+R,EAAA3mB,EAAAhH,KA+GF8yB,EA/GEnF,EA+GFmF,sBACAC,EAhHEpF,EAgHFoF,yBAG4BD,IACxBz9B,GACF5E,EAAKwE,aAAa,CAChBsmB,OAAM,EACNuX,uBACAC,2BAIJlX,EAAS,CACPiX,uBACAC,2BA9HA/rB,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GAmIWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAnIlH,eAmIJC,EAnII7U,EAAAhH,OAoIU3K,GACZ5E,EAAKwE,aAAa,CAChBqhC,SAASza,EAAOlS,aAtIhB3C,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GA2I0CoK,QAAQqD,IAAI,CACxDha,EAAK+qB,UAAU,mBACf/qB,EAAK+D,cAAc+hC,aAAa9lC,EAAKf,MAAM6F,eA7IzC,eAAAq4B,EAAA5mB,EAAAhH,KAAAgzB,EAAAhkC,OAAAwnC,EAAA,EAAAxnC,CAAA4+B,EAAA,GA2IGqF,EA3IHD,EAAA,GA2ImBE,EA3InBF,EAAA,GAgJAC,GAAmBA,EAAgBW,eAAiBX,EAAgBa,aAAeZ,IAE/EC,EAAYF,EAAgBW,cAAc76B,MAAMm6B,GAChDE,EAAUH,EAAgBa,YAAY/6B,MAAMm6B,GAE9C79B,GACF5E,EAAKwE,aAAa,CAChBsmB,OAAM,EACN6X,UACAD,cAIJtX,EAAS,CACPuX,UACAD,cA/JAnsB,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GAoKwDoK,QAAQqD,IAAI,CACtEha,EAAK+D,cAAciiC,cACnBhmC,EAAK+D,cAAcwhC,eAAe,gBAAgBvlC,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAC7GnrB,EAAK+D,cAAcwhC,eAAe,kBAAkBvlC,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,KAvK7G,eAAAyX,EAAArsB,EAAAhH,KAAAmK,EAAAnb,OAAAwnC,EAAA,EAAAxnC,CAAAqkC,EAAA,GAoKGC,EApKHnpB,EAAA,GAoKYopB,EApKZppB,EAAA,IAoK+BqpB,EApK/BrpB,EAAA,KA0KmBopB,GAAsBD,IACrCG,EAAmBD,EAAgBtyB,GAAG,GAAKsyB,EAAgBz6B,MAAMu6B,EAAS5pB,IAAI,MAAM3L,KAAKw1B,GAAsB,EAEjHl+B,GACF5E,EAAKwE,aAAa,CAChBsmB,OAAM,EACNkY,mBACAF,uBAIJ1X,EAAS,CACP4X,mBACAF,uBAvLAvsB,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GA4L8CoK,QAAQqD,IAAI,CAC5Dha,EAAK+D,cAAcwhC,eAAe,MAAMvlC,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GACnGnrB,EAAK+D,cAAcwhC,eAAe,WAAWvlC,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GACxGnrB,EAAK+D,cAAcwhC,eAAe,aAAavlC,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,KA/LxG,eAAAxR,EAAApD,EAAAhH,KAAA0zB,EAAA1kC,OAAAwnC,EAAA,EAAAxnC,CAAAob,EAAA,GA4LCupB,EA5LDD,EAAA,GA4LWE,EA5LXF,EAAA,IA4LyBG,EA5LzBH,EAAA,KAmMeE,GAAiBD,IAC5BG,EAAcD,EAAY3yB,GAAG,GAAK2yB,EAAY96B,MAAM46B,EAAUjqB,IAAI,MAAM3L,KAAK61B,GAAiB,EAEhGv+B,GACF5E,EAAKwE,aAAa,CAChBsmB,OAAM,EACNuY,cACAF,kBAIJ/X,EAAS,CACPiY,cACAF,kBAhNA5sB,EAAAgB,OAAA,4BAAAhB,EAAAhK,KAAA,GAqNWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GArNlH,eAqNJC,EArNI7U,EAAAhH,OAsNU3K,GACZ5E,EAAKwE,aAAa,CAChByhC,kBAAkB7a,EAAOlS,aAxNzB3C,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IA6NqBvM,EAAK+D,cAAcmiC,cAAclmC,EAAKf,MAAM6F,YAAYmK,GA7N7E,gBA6NEq0B,EA7NF/sB,EAAAhH,KA8NA3K,GACF5E,EAAKwE,aAAa,CAChB2hC,MAAM7C,IAA0B,IAGpClY,EAASkY,EAnOL/sB,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IAsOWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAtOlH,gBAsOJC,EAtOI7U,EAAAhH,OAuOU3K,GACZ5E,EAAKwE,aAAa,CAChB4hC,SAAShb,EAAOlS,aAzOhB3C,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IA8OWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GA9OlH,gBA8OJC,EA9OI7U,EAAAhH,OA+OU3K,GACZ5E,EAAKwE,aAAa,CAChB6hC,2BAA2Bh+B,WAAW+iB,GAAQ,EAAI,KAAO,OACzDkb,kBAAkBj+B,WAAW+iB,GAAQ7iB,QAAQe,KAlP7CiN,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IAuPWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAvPlH,gBAuPJC,EAvPI7U,EAAAhH,OAwPU3K,GACZ5E,EAAKwE,aAAa,CAChB+hC,aAAal+B,WAAW+iB,GAAQ7iB,QAAQe,GACxCk9B,sBAAsBn+B,WAAW+iB,GAAQ,EAAI,KAAO,SA3PpD7U,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IAgQWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAhQlH,gBAgQJC,EAhQI7U,EAAAhH,OAiQU3K,IACR2+B,EAAW,KAC+B,qBAAnCvjC,EAAKf,MAAM6F,YAAY2hC,SAA2BzmC,EAAKf,MAAM6F,YAAY2hC,WAClFlD,EAAWl7B,WAAW+iB,GAAQ7iB,QAAQe,IAExCtJ,EAAKwE,aAAa,CAChB++B,cAvQAhtB,EAAAgB,OAAA,0BA4QAvX,EAAKf,MAAM6F,YAAYi3B,YAAa/7B,EAAKf,MAAM6F,YAAYi3B,UAAUC,YA5QrE,CAAAzlB,EAAAhK,KAAA,iBA6QIi3B,EAAiBjlC,OAAOC,OAAO,GAAGwB,EAAKf,MAAM6F,cACpCy6B,KAAOhhC,OAAOC,OAAO,GAAGwB,EAAKf,MAAM6F,YAAYi3B,UAAUC,aACxEwH,EAAe37B,UAAYtJ,OAAOiO,OAAOxM,EAAKf,MAAM6F,YAAY+C,WAGhE27B,EAAejE,KAAK5yB,MAAQ62B,EAAejE,KAAK7/B,KAG5C8jC,EAAezH,UAAU2K,cAC3BlD,EAAezH,UAAU2K,aAAanmC,QAAS,SAAAomC,GAC7C,IAAMC,EAAgBpD,EAAe37B,UAAU2mB,KAAM,SAAA/vB,GAAC,OAAKA,EAAEiB,OAASinC,EAAYjnC,OAClF,GAAIknC,EAAc,CAChB,IAAMC,EAAcrD,EAAe37B,UAAU2W,QAAQooB,GACrDpD,EAAe37B,UAAUg/B,GAAeF,KA1R5CpwB,EAAAhK,KAAA,IA+RavM,EAAK+D,cAAcwhC,eAAe,MAAMvlC,EAAKf,MAAM0N,MAAM62B,EAAexjC,EAAKf,MAAMuM,SAAQ,GA/RxG,SA+RF4f,EA/RE7U,EAAAhH,KAAAgH,EAAAhK,KAAA,0BAAAgK,EAAAhK,KAAA,IAkSavM,EAAK+qB,UAAU,YAlS5B,SAkSFK,EAlSE7U,EAAAhH,KAAA,gBAqSA6b,GAAUxmB,IACPwmB,EAAOxd,QAKV5N,EAAKwE,aAAa,CAChBsiC,QAAO,IALT9mC,EAAKwE,aAAa,CAChBsiC,OAAOz+B,WAAW+iB,GAAQ7iB,QAAQe,MAxSpCiN,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IAkTWvM,EAAK+D,cAAcwhC,eAAe,MAAMvlC,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,SAAQ,GAlT9G,gBAkTJ4f,EAlTI7U,EAAAhH,OAoTU3K,IACPwmB,EAAOxd,QAKV5N,EAAKwE,aAAa,CAChBuiC,eAAc,IALhB/mC,EAAKwE,aAAa,CAChBuiC,cAAc1+B,WAAW+iB,GAAQ7iB,QAAQe,MAvT3CiN,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IAiUWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAjUlH,gBAiUJC,EAjUI7U,EAAAhH,OAmUU3K,IACPwmB,EAAOxd,QAKV5N,EAAKwE,aAAa,CAChBq+B,UAAS,IALX7iC,EAAKwE,aAAa,CAChBq+B,SAASx6B,WAAW+iB,GAAQ7iB,QAAQe,MAtUtCiN,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IAgVWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAhVlH,gBAgVJC,EAhVI7U,EAAAhH,OAkVU3K,IACPwmB,EAAOxd,QAKV5N,EAAKwE,aAAa,CAChBwiC,kBAAiB,IALnBhnC,EAAKwE,aAAa,CAChBwiC,kBAAqC,IAAnB3+B,WAAW+iB,IAAa7iB,QAAQe,MArVpDiN,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IAgWWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GAhWlH,cAgWJC,EAhWI7U,EAAAhH,QAkWU3K,EAlWV,CAAA2R,EAAAhK,KAAA,aAmWG6e,EAAOxd,QAnWV,CAAA2I,EAAAhK,KAAA,aAoWMk3B,EAAWp7B,WAAW+iB,GAAQ7iB,QAAQe,MACvBtJ,EAAKf,MAAM6C,eAAuCwpB,IAA1BL,EAAUgc,aAA6Bhc,EAAUgc,aArW9F,CAAA1wB,EAAAhK,KAAA,iBAAAgK,EAAAhK,KAAA,IAsW0CvM,EAAK+D,cAAcmjC,iBAAiBlnC,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,aAtW1G,SAAAyR,EAAA4wB,GAAA5wB,EAAAhH,KAAAgH,EAAAhK,KAAA,mBAAAgK,EAAA4wB,GAsWyH,KAtWzH,SAsWMzD,EAtWNntB,EAAA4wB,GAuWAnnC,EAAKwE,aAAa,CAChBi/B,WACAC,kBAzWFntB,EAAAhK,KAAA,mBA4WAvM,EAAKwE,aAAa,CAChBi/B,UAAS,IA7WX,gBAAAltB,EAAAgB,OAAA,6BAmXAosB,EAAuB,EACvBC,GAAwB,GAEtBC,GAAwB,WAC5B,IAAMuD,EAA4BtZ,SAASC,eAAe/tB,EAAKf,MAAMwW,UAAYqY,SAASC,eAAe/tB,EAAKf,MAAMwW,UAAYqY,SAASC,eAAe/tB,EAAKf,MAAM4nB,OACnK,GAAIugB,EAA0B,CAC5B,IAAMC,EAA6BhtB,OAAOitB,OAAOF,GACjDzD,EAAuB0D,EAA2Bpe,aAAa5gB,WAAWg/B,EAA2BE,IAAI,kBAAkBl/B,WAAWg/B,EAA2BE,IAAI,iBACrK3D,GAAwByD,EAA2B9c,cAGnDoZ,EAAuBz2B,SAASy2B,GAAsB,EAAI32B,KAAKC,IAAI02B,EAAqBC,IAAyBA,GACjHA,GAAwBD,EAGpBA,IAAyB3jC,EAAKwD,MAAMmgC,sBAClC/+B,GACF5E,EAAKwE,aAAa,CAChBm/B,uBACAC,gCASVvpB,OAAOuT,oBAAoB,SAAUiW,GAAsBlW,KAAtBpvB,OAAAipC,EAAA,EAAAjpC,QAAAipC,EAAA,EAAAjpC,CAAAyB,MACrCqa,OAAOoT,iBAAiB,SAAUoW,GAAsBlW,KAAtBpvB,OAAAipC,EAAA,EAAAjpC,QAAAipC,EAAA,EAAAjpC,CAAAyB,MAE9B4E,GACF5E,EAAKwE,aAAa,CAChBm/B,uBACAC,2BArZArtB,EAAAgB,OAAA,yBA2ZEusB,GAAuB70B,EAASjP,EAAK+D,cAAc6M,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/GmzB,GAAyB90B,EAAS60B,GAAsB,OAAc92B,KAAKoE,IAAIpR,EAAK+D,cAAc6M,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAASlN,EAAK+D,cAAcmK,YAAYlO,EAAK+D,cAAcmK,YAAY,IAAIC,MAAQgD,OAAO,uBAAuB,uBAAuB9C,SAAS,EAAE,QAAQo5B,GAAG14B,UAAU,MAGxUi1B,GAAe,KACbC,GAhaF,YAAAj7B,OAga8BhJ,EAAKf,MAAM6F,YAAYoD,QAharD,KAAAc,OAgagEiG,GAC9D0f,GAAa3uB,EAAK+D,cAAc2jC,cAAczD,IAEpDD,GAAe,CAAC,CACd/gC,GAAGjD,EAAKf,MAAM0N,MACdlN,MAAOO,EAAKf,MAAMQ,MAAQO,EAAKf,MAAMQ,MAAQ,OAAOO,EAAK+D,cAAc6M,gBAAgB,CAAC,QAAQ,SAAS5Q,EAAKf,MAAM0N,MAAM,QAAQ,QAAQ/D,KAAK,KAAK,IACpJzF,KAAM,KAGW,OAAfwrB,GAzaA,CAAApY,EAAAhK,KAAA,UA0aFy3B,GAAerV,GA1abpY,EAAAhK,KAAA,sBA8auB,SAArBvM,EAAKf,MAAM0N,MA9ab,CAAA4J,EAAAhK,KAAA,UAkbA,IAHAy3B,GAAa,GAAG7gC,KAAO,GACjB+gC,IAAiB,IAAI/1B,MAAOY,UAC9B4C,GAAI,GACC5J,GAAE,EAAGA,IAAG,GAAIA,KACbo8B,GAAQnkC,EAAK+D,cAAcmK,YAAYg2B,IAAgByD,IAAI5/B,GAAE,OAC7D2J,GAAIyyB,GAAMhzB,OAAO,oBAElBpJ,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzB4J,IAAiB,EAAd3E,KAAK46B,SAAW,EAInBj2B,IAAiB,EAAd3E,KAAK46B,SAAW,EAGrB5D,GAAa,GAAG7gC,KAAKqF,KAAK,CAACkJ,KAAEC,OA9b/B4E,EAAAhK,KAAA,0BAicM8E,GAAmBrR,EAAK+D,cAAc8jC,oBAAoB,OAAO,IAjcvEtxB,EAAAhK,KAAA,IAkciCvM,EAAK+D,cAAcuL,gBAAgBtP,EAAKf,MAAM6F,YAAYoD,QAAQ+G,EAAO80B,GAAuBD,IAAqB,EAAMzyB,IAlc5J,SAAAkF,EAAAhH,KAwcmBhP,QAAQ,SAAC+E,EAAEyC,GAC5B,IAAM2J,EAAI1R,EAAK+D,cAAcmK,YAAwB,IAAZ5I,EAAE0K,WAAgBmB,OAAO,oBAC5DQ,EAAItJ,WAAWrI,EAAK+D,cAAcsM,iBAAiB/K,EAAEwiC,SAAS,KACpE9D,GAAa,GAAG7gC,KAAKqF,KAAK,CAAEkJ,IAAGC,QA3cjC,SA+cF3R,EAAK+D,cAAc6qB,cAAcqV,GAAcD,IA/c7C,gBAodgC,IAAhCA,GAAa,GAAG7gC,KAAK7C,UACjB8jC,GAAW7lC,OAAOC,OAAO,GAAGwlC,GAAa,GAAG7gC,KAAK,KAC9CuO,EAAI1R,EAAK+D,cAAcmK,YAAYk2B,GAAS,oBAAoBuD,IAAI,EAAE,SAASx2B,OAAO,oBAC/F6yB,GAAa,GAAG7gC,KAAKqF,KAAK47B,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAMwD,EAAqBja,SAASC,eAAe/tB,EAAKf,MAAMwW,UAAYqY,SAASC,eAAe/tB,EAAKf,MAAMwW,UAAYqY,SAASC,eAAe/tB,EAAKf,MAAM4nB,OAC5J,GAAIkhB,EAAmB,CACrB,IAAMC,EAAsB3tB,OAAOitB,OAAOS,GAC1C1D,GAAgB2D,EAAoB/e,aAAa5gB,WAAW2/B,EAAoBT,IAAI,kBAAkBl/B,WAAW2/B,EAAoBT,IAAI,iBACzIjD,GAAiB0D,EAAoBzd,cACjC8Z,KAAkBrkC,EAAKwD,MAAM6gC,eAAkBrkC,EAAKwD,MAAM8gC,gBAC5DtkC,EAAKwE,aAAa,CAChB6/B,iBACAC,eAAgBtkC,EAAKwD,MAAM8gC,eAAiBtkC,EAAKwD,MAAM8gC,eAAiBA,UAQhFjqB,OAAOuT,oBAAoB,SAAU2W,GAAe5W,KAAfpvB,OAAAipC,EAAA,EAAAjpC,QAAAipC,EAAA,EAAAjpC,CAAAyB,MACrCqa,OAAOoT,iBAAiB,SAAU8W,GAAe5W,KAAfpvB,OAAAipC,EAAA,EAAAjpC,QAAAipC,EAAA,EAAAjpC,CAAAyB,MAG5BwkC,GAAehvB,IAEfivB,GAAgB,CACpBnxB,UAAU,EACV20B,UAAU,EACV10B,SAAQ,EACRC,SAAS,KACTxO,SAAQ,EACR8N,WAAW,KACXc,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjB9S,eAAc,EACdqB,OAAO,SAAA8C,GAAC,OAAIA,EAAE7F,OACdyoC,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAG3oC,MAAO,WACpB,CAAE2oC,OAAQ,GAAI3oC,MAAO,cAG3BoU,cAAa7T,EAAKf,MAAM6C,UAAmB,IAC3C8Q,QAAQ,SAAA9M,GAAK,OAAIuC,WAAWvC,GAAOyC,QAAQ,GAAG,KAC9CiM,KAAK,CACH,CAAE6zB,MAAO,CAAEplC,GAAIjD,EAAKf,MAAM0N,OAAU1J,GAAI,iBAE1CwE,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAG1E,KAAM,GAC9C4R,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACFhS,EAAQgS,EAAMC,OAAO,GAC3B,OACEqzB,EAAAlpC,EAAAC,cAACkpC,EAAA,EAAD,CACEvlC,MAAOA,GAGiB,kBAAjBgS,EAAMC,QAAuBD,EAAMC,OAAO3U,QAC/C0U,EAAMC,OAAOzD,IAAI,SAAAxO,GACf,IAAMgF,EAAehF,EAAMoS,QACrBozB,EAAkBxlC,EAAMG,KAAKkS,WAEnC,OACEizB,EAAAlpC,EAAAC,cAACopC,EAAA,EAAD,CACE1lC,IAAKC,EAAMC,GACXxD,MAAOuD,EAAMvD,MACboJ,MAAOb,EACPlC,MAAO0iC,SAUnBxoC,EAAKf,MAAMyE,YAET1D,EAAKf,MAAMyE,YAAcnF,OAAO8B,KAAKL,EAAKf,MAAMyE,YAAYpD,QAC9D/B,OAAO8B,KAAKL,EAAKf,MAAMyE,YAAYnD,QAAQ,SAAA9B,GACzCgmC,GAAchmC,GAAKuB,EAAKf,MAAMyE,WAAWjF,KAK3CmG,GACF5E,EAAKwE,aAAa,CAChBsmB,OAAM,EACN0Z,gBACAR,gBACAS,iBACAJ,iBACAC,oBAGJlZ,EAAS4Y,GA9jBLztB,EAAAgB,OAAA,6BAikBAmtB,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAM4D,EAA6B5a,SAASC,eAAe/tB,EAAKf,MAAMwW,UAAYqY,SAASC,eAAe/tB,EAAKf,MAAMwW,UAAYqY,SAASC,eAAe/tB,EAAKf,MAAM4nB,OACpK,GAAI6hB,EAA2B,CAC7B,IAAMC,EAA8BtuB,OAAOitB,OAAOoB,GAClD9D,GAAwB+D,EAA4B1f,aAAa5gB,WAAWsgC,EAA4BpB,IAAI,kBAAkBl/B,WAAWsgC,EAA4BpB,IAAI,iBACzK1C,GAAyB8D,EAA4Bpe,cACjDqa,KAA0B5kC,EAAKwD,MAAMohC,uBAA0B5kC,EAAKwD,MAAMqhC,wBAC5E7kC,EAAKwE,aAAa,CAChBogC,yBACAC,uBAAwB7kC,EAAKwD,MAAMqhC,uBAAyB7kC,EAAKwD,MAAMqhC,uBAAyBA,UAQxGxqB,OAAOuT,oBAAoB,SAAUkX,GAAuBnX,KAAvBpvB,OAAAipC,EAAA,EAAAjpC,QAAAipC,EAAA,EAAAjpC,CAAAyB,MACrCqa,OAAOoT,iBAAiB,SAAUqX,GAAuBnX,KAAvBpvB,OAAAipC,EAAA,EAAAjpC,QAAAipC,EAAA,EAAAjpC,CAAAyB,MAE5B+kC,GAAe/kC,EAAK+D,cAAcmK,YAAYlO,EAAK+D,cAAcmK,YAAY,IAAIC,MAAQE,SAAS,EAAE,OAAO8C,OAAO,oBAAoB,oBACtI6zB,GAAiBD,GAAa32B,QAAQC,SAAS,EAAE,QAGjD42B,GAAuBj4B,KAAKoE,IAAIpR,EAAK+D,cAAc6M,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAAS83B,GAAeyC,GAAG14B,UAAU,MAzmBtJwH,EAAAhK,KAAA,IA4mBmCvM,EAAK+D,cAAcuL,gBAAgBtP,EAAKf,MAAM6F,YAAYoD,QAAQ+G,EAAOg2B,GAAoB,MAAK,EAAM,OA5mB3I,gBA4mBAC,GA5mBA3uB,EAAAhH,KA8mBE41B,GAAuBD,GAA2B1zB,IAAI,SAAClM,EAAEyC,GAC7D,IAAI4J,EAAI,EACFD,EAAI1R,EAAK+D,cAAcmK,YAAwB,IAAZ5I,EAAE0K,WAAgBmB,OAAO,oBAC5DzD,EAAa1N,EAAK+D,cAAcsM,iBAAiB/K,EAAE8K,UAAUpQ,EAAKf,MAAM6F,YAAYwE,UAY1F,OAVKo7B,GAGH/yB,EAAItJ,WAAWqF,EAAWuL,IAAIyrB,IAAiBn3B,MAAM,GAAGjF,MAAM,MAF9Do8B,GAAkBh3B,EAKG,OAAnBi3B,KACFA,GAAiBz3B,SAAS5H,EAAEsjC,cAGvB,CAAEl3B,IAAGC,OAGRyzB,GAAuB,CAAC,CAC5BniC,GAAG,OACHxD,MAAO,OAAOO,EAAK+D,cAAc6M,gBAAgB,CAAC,QAAQ,SAAS5Q,EAAKf,MAAM0N,MAAM,QAAQ,QAAQ/D,KAAK,KAAK,IAC9GzF,KAAMgiC,KAIFE,GAAuB7vB,IAEvB8vB,GAAwB,CAC5BhyB,UAAU,EACV20B,UAAU,EACV10B,SAAQ,EACRvO,SAAQ,EACRwO,SAAS,KACTV,WAAW,KACXc,YAAW,EACXI,aAAY,EACZF,aAAY,EACZC,MAAM,YACNF,cAAa,EACbI,iBAAiB,EACjBzR,OAAO,SAAA8C,GAAC,OAAIA,EAAE7F,OACdyU,mBAAmB,GACnBzM,OAAQ,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAG1E,KAAM,IAG3ClD,EAAKf,MAAMyE,YAET1D,EAAKf,MAAMyE,YAAcnF,OAAO8B,KAAKL,EAAKf,MAAMyE,YAAYpD,QAC9D/B,OAAO8B,KAAKL,EAAKf,MAAMyE,YAAYnD,QAAQ,SAAA9B,GACzC6mC,GAAsB7mC,GAAKuB,EAAKf,MAAMyE,WAAWjF,KAKnDmG,GACF5E,EAAKwE,aAAa,CAChBsmB,OAAM,EACNua,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJzZ,EAASga,GA9qBL7uB,EAAAgB,OAAA,6BAirBE2Q,GAAO+C,EAAU/C,MACvBkD,EAASprB,EAAK+D,cAAc2sB,aAAaxI,GAAKloB,EAAKf,MAAM6F,eAEvD9E,EAAKwE,aAALjG,OAAAqtB,EAAA,EAAArtB,CAAA,GACGysB,EAAWI,IArrBZ7U,EAAAgB,OAAA,6BAAAhB,EAAAhK,KAAA,IA0rBWvM,EAAK+D,cAAcwhC,eAAeva,EAAUhrB,EAAKf,MAAM0N,MAAM3M,EAAKf,MAAM6F,YAAY9E,EAAKf,MAAMuM,QAAQ2f,GA1rBlH,gBA0rBJC,EA1rBI7U,EAAAhH,OA2rBU3K,GACZ5E,EAAKwE,aAALjG,OAAAqtB,EAAA,EAAArtB,CAAA,CACEusB,OAAM,GACLE,EAAWI,IA9rBZ7U,EAAAgB,OAAA,6BAAAhB,EAAAgB,OAAA,SAqsBH6T,GArsBG,0BAAA7U,EAAA1I,SAAAwI,EAAArX,oFArDNA,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,8JAK9CD,KAAKgF,oBAAqB,yPAI1BhF,KAAKmF,kQAILnF,KAAK+rB,2LAGYrmB,wFAASC,iCAAS,KAC9B3F,KAAKgF,4DACDhF,KAAK4F,SAASF,EAASC,oCAEzB,4LAGgBN,EAAWC,8FAClCtF,KAAKmF,YAEC0nB,EAAexnB,EAAUsI,QAAU3N,KAAKC,MAAM0N,MAC9Cmf,EAAiBznB,EAAUmH,UAAYxM,KAAKC,MAAMuM,QAClDL,EAAgB9G,EAAUvC,WAAa9C,KAAKC,MAAM6C,SAClDsJ,EAAmB/G,EAAUgH,YAAcrM,KAAKC,MAAMoM,UACtD4gB,EAAe5nB,EAAU4mB,UAAUvrB,OAASV,KAAKC,MAAMgsB,UAAUvrB,KACjEwsB,EAAsB7nB,EAAU8nB,uBAAyBntB,KAAKC,MAAMktB,sBAAwBntB,KAAKC,MAAMktB,qBACvGC,EAAsB/nB,EAAU5B,cAAgBzD,KAAKC,MAAMwD,cAAgBlE,OAAOiO,OAAOnI,EAAU5B,cAAcgK,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGK,SAAqBzM,SAAW/B,OAAOiO,OAAOxN,KAAKC,MAAMwD,cAAcgK,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGK,SAAqBzM,OAEjP2rB,GAAgBJ,GAAgBC,GAAkBM,GAAwBF,IAAwBltB,KAAKwE,MAAMsnB,MAC/G9rB,KAAKwF,aAAa,CAChBsmB,OAAM,GACN,WACArmB,EAAKsmB,eAEE5f,GAAiBC,KACpBihB,EAAW9tB,OAAOC,OAAO,GAAGQ,KAAKwE,OACvCxE,KAAKwF,aAAa,CAChBsmB,OAAM,GACN,WACArmB,EAAKG,SAASynB,4IA6sBZ,IAAA5mB,EAAAzG,KACAisB,EAAYjsB,KAAKC,MAAMgsB,UACzBG,EAAS,KAGPkB,OADsChB,IAAzBL,EAAUnhB,YAA4BmhB,EAAUnhB,WACtCw+B,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAD,CAAQjpC,KAAK,SAAa,KAEjDsrB,EAAa,CACjBjrB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZT,MAAM,WACN8b,UAAU,CACR7Z,eAAe,eAKfupB,EAAUhsB,OAASV,OAAO8B,KAAK4qB,EAAUhsB,OAAOqB,QAClD/B,OAAO8B,KAAK4qB,EAAUhsB,OAAOsB,QAAQ,SAAA9B,GACnCysB,EAAWzsB,GAAKwsB,EAAUhsB,MAAMR,KAKhCwsB,EAAU5C,WAAa9pB,OAAO8B,KAAK4qB,EAAU5C,WAAW/nB,QAC1D/B,OAAO8B,KAAK4qB,EAAU5C,WAAW9nB,QAAQ,SAAA9B,GACH,oBAAzBwsB,EAAU5C,UAAU5pB,KAC7BysB,EAAWzsB,GAAKwsB,EAAU5C,UAAU5pB,GAAGgH,EAAKxG,UAKlD,IAAM6F,EAAc9F,KAAKC,MAAM6F,aAAe9F,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,SAAS5R,KAAKC,MAAM0N,QAExGpD,EAAe2hB,GAAcA,EAAW3hB,aAAe2hB,EAAW3hB,aAAe,EACjFD,EAAW4hB,GAAcA,EAAW5hB,SAAW4hB,EAAW5hB,SAAatK,KAAKC,MAAM6C,SAAW,EAAI,EACjGgnC,EAAe5d,GAAcA,EAAW4d,aAAe5d,EAAW4d,aAAiB9pC,KAAKC,MAAM6C,SAAW,EAAI,EAEnH,OAAQmpB,EAAUvrB,MAChB,IAAK,cACH,IAAMqpC,EAAQjkC,GAAeA,EAAY7C,KAAO6C,EAAY7C,KAA9C,iBAAA+G,OAAsEhK,KAAKC,MAAM0N,MAAjF,QACdye,EACEkd,EAAAlpC,EAAAC,cAACwpC,EAAA,EAADtqC,OAAAC,OAAA,CACEwqC,UAAW,MACX/b,QAASjuB,KAAKC,MAAM0N,OAChBse,EAAU+B,cAEdsb,EAAAlpC,EAAAC,cAACwpC,EAAA,EAADtqC,OAAAC,OAAA,CAAOqD,IAAKknC,GAAW7d,KAG7B,MACA,IAAK,OACH,IAAM+d,EAAQnkC,GAAeA,EAAY7C,KAAO6C,EAAY7C,KAA9C,iBAAA+G,OAAsEhK,KAAKC,MAAM0N,MAAjF,QACdye,EACEkd,EAAAlpC,EAAAC,cAACwpC,EAAA,EAADtqC,OAAAC,OAAA,CAAOqD,IAAKonC,GAAW/d,IAE3B,MACA,IAAK,YACHE,EACEkd,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAalsB,KAAKC,MAAM0N,OAEtC,MACA,IAAK,eACH,IAAMu8B,EAAelqC,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa5R,KAAKC,MAAM6F,YAAYqkC,SAAS,SAClGD,IACF9d,EACEkd,EAAAlpC,EAAAC,cAACwpC,EAAA,EAADtqC,OAAAC,OAAA,CAAOqD,IAAKqnC,GAAkBhe,KAGpC,MACA,IAAK,eACH,IAAMke,EAAepqC,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa5R,KAAKC,MAAM6F,YAAYqkC,SAAS,UACtG/d,EACEkd,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAake,GAE3B,MACA,IAAK,eACHhe,EAASpsB,KAAKwE,MAAMgiC,aAClB8C,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B4d,aAAcA,EAAct/B,OAAQxK,KAAKwE,MAAMgiC,gBAC1ElZ,EACN,MACA,IAAK,MACHlB,EAASpsB,KAAKwE,MAAMmiC,IAClB2C,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B4d,aAAcA,EAAct/B,OAAQxK,KAAKwE,MAAMmiC,OAC1ErZ,EACN,MACA,IAAK,aACHlB,EAASpsB,KAAKwE,MAAMkK,WAClB46B,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B4d,aAAcA,EAAct/B,OAAQxK,KAAKwE,MAAMkK,cAC1E4e,EACN,MACA,IAAK,kBACHlB,EAASpsB,KAAKwE,MAAMoiC,gBAClB0C,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B4d,aAAcA,EAAct/B,OAAQxK,KAAKwE,MAAMoiC,mBAC1EtZ,EACN,MACA,IAAK,mBACHlB,EAASpsB,KAAKwE,MAAMiM,iBAClB64B,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B4d,aAAcA,EAAct/B,OAAQxK,KAAKwE,MAAMiM,oBAC1E6c,EACN,MACA,IAAK,gCACHlB,EAASpsB,KAAKwE,MAAMsnB,OAAS9rB,KAAKwE,MAAM4+B,6BAA+BpjC,KAAKwE,MAAM2+B,0BAChFmG,EAAAlpC,EAAAC,cAACiqC,EAAAlqC,EAAD,CACEmqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVrgC,SAAUA,EACVsgC,IAAKvhC,WAAWrJ,KAAKwE,MAAM2+B,2BAC3B0H,MAAOxhC,WAAWrJ,KAAKwE,MAAM4+B,6BAC7B0H,aAAe,SAAAC,GAAC,OAAItkC,EAAK1B,cAAc2P,iBAAiBq2B,EAAEzgC,EAASC,EAAau/B,KAE/E,SAAAkB,GAAA,IAAGC,EAAHD,EAAGC,WAAHD,EAAeH,MAAf,OACCvB,EAAAlpC,EAAAC,cAAA,QAAM4K,MAAOihB,EAAWjhB,MAAOigC,IAAKD,MAGtC3d,EACN,MACA,IAAK,2BACHlB,EAASpsB,KAAKwE,MAAMsnB,OAAS9rB,KAAKwE,MAAM8+B,wBAA0BtjC,KAAKwE,MAAM6+B,qBAC3EiG,EAAAlpC,EAAAC,cAACiqC,EAAAlqC,EAAD,CACEmqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVrgC,SAAUA,EACVsgC,IAAKvhC,WAAWrJ,KAAKwE,MAAM6+B,sBAC3BwH,MAAOxhC,WAAWrJ,KAAKwE,MAAM8+B,wBAC7BwH,aAAe,SAAAC,GAAC,OAAItkC,EAAK1B,cAAc2P,iBAAiBq2B,EAAEzgC,EAASC,EAAau/B,KAE/E,SAAAqB,GAAA,IAAGF,EAAHE,EAAGF,WAAHE,EAAeN,MAAf,OACCvB,EAAAlpC,EAAAC,cAAA,QAAM4K,MAAOihB,EAAWjhB,MAAOigC,IAAKD,MAGtC3d,EACN,MACA,IAAK,cACHlB,EAASpsB,KAAKwE,MAAMsnB,OAAS9rB,KAAKwE,MAAMk/B,WAAa1jC,KAAKwE,MAAMm/B,QAC9D2F,EAAAlpC,EAAAC,cAACiqC,EAAAlqC,EAAD,CACEmqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVrgC,SAAUA,EACVsgC,IAAKvhC,WAAWrJ,KAAKwE,MAAMm/B,SAC3BkH,MAAOxhC,WAAWrJ,KAAKwE,MAAMk/B,WAC7BoH,aAAe,SAAAC,GAAC,OAAItkC,EAAK1B,cAAc2P,iBAAiBq2B,EAAEzgC,EAASC,EAAau/B,KAE/E,SAAAsB,GAAA,IAAGH,EAAHG,EAAGH,WAAHG,EAAeP,MAAf,OACCvB,EAAAlpC,EAAAC,cAAA,QAAM4K,MAAOihB,EAAWjhB,MAAOigC,IAAKD,MAGtC3d,EACN,MACA,IAAK,uBACHlB,EAASpsB,KAAKwE,MAAMsnB,OAAS9rB,KAAKwE,MAAMs/B,oBAAsB9jC,KAAKwE,MAAMw/B,iBACvEsF,EAAAlpC,EAAAC,cAACiqC,EAAAlqC,EAAD,CACEmqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVrgC,SAAUA,EACVsgC,IAAKvhC,WAAWrJ,KAAKwE,MAAMw/B,kBAC3B6G,MAAOxhC,WAAWrJ,KAAKwE,MAAMs/B,oBAC7BgH,aAAe,SAAAC,GAAC,OAAItkC,EAAK1B,cAAc2P,iBAAiBq2B,EAAEzgC,EAASC,EAAau/B,KAE/E,SAAAuB,GAAA,IAAGJ,EAAHI,EAAGJ,WAAHI,EAAeR,MAAf,OACCvB,EAAAlpC,EAAAC,cAAA,QAAM4K,MAAOihB,EAAWjhB,MAAOigC,IAAKD,MAGtC3d,EACN,MACA,IAAK,kBACHlB,EAASpsB,KAAKwE,MAAMsnB,OAAS9rB,KAAKwE,MAAM2/B,eAAiBnkC,KAAKwE,MAAM6/B,YAClEiF,EAAAlpC,EAAAC,cAACiqC,EAAAlqC,EAAD,CACEmqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVrgC,SAAUA,EACVsgC,IAAKvhC,WAAWrJ,KAAKwE,MAAM6/B,aAC3BwG,MAAOxhC,WAAWrJ,KAAKwE,MAAM2/B,eAC7B2G,aAAe,SAAAC,GAAC,OAAItkC,EAAK1B,cAAc2P,iBAAiBq2B,EAAEzgC,EAASC,EAAau/B,KAE/E,SAAAwB,GAAA,IAAGL,EAAHK,EAAGL,WAAHK,EAAeT,MAAf,OACCvB,EAAAlpC,EAAAC,cAAA,QAAM4K,MAAOihB,EAAWjhB,MAAOigC,IAAKD,MAGtC3d,EACN,MACA,IAAK,oBACHlB,EAASpsB,KAAKwE,MAAMyiC,kBAClBqC,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B5hB,SAAUA,EAAUw/B,aAAcA,EAAcv/B,aAAcA,EAAcC,OAAQxK,KAAKwE,MAAMyiC,qBAC1H3Z,EACN,MACA,IAAK,YACHlB,EAASpsB,KAAKwE,MAAMy+B,WAAa1jC,OAAO8B,KAAKrB,KAAKwE,MAAMy+B,WAAW3hC,OAAO,EACxEgoC,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAD,CACElqC,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,cAGdnD,OAAOiO,OAAOxN,KAAKwE,MAAMy+B,WAAWzwB,IAAK,SAACqb,EAAeC,GAAhB,OACvCwb,EAAAlpC,EAAAC,cAAC2iC,EAAD,CACEr1B,MAAOkgB,EAAelgB,MACtB7H,YAAa+nB,EACb9pB,IAAG,SAAAiG,OAAW8jB,GACd7B,UAAW,CACTvrB,KAAK,cACLstB,aAAa,CACXC,QAAQ,GAAAjkB,OAAG6jB,EAAelgB,QAASlH,EAAKjC,MAAM0pB,+BAAiCznB,EAAKjC,MAAM0pB,8BAA8BL,EAAelgB,OAApG,KAAA3D,OAAkHvD,EAAKjC,MAAM0pB,8BAA8BL,EAAelgB,OAAOpE,QAAQe,GAAzL,KAAAN,OAAsM6jB,EAAeM,sBAArN,yBAAoQ,KAEzSluB,MAAM,CACJJ,aAAa,MACbsK,SAAS,WACTvK,OAAO,CAAC,QAAQ,OAChB8K,GAAGojB,EAAgB,QAAU,EAC7B1jB,OAAO7K,OAAOiO,OAAO/G,EAAKjC,MAAMy+B,WAAW3hC,OAAOwsB,EAClDxP,UAAU,CAAC,kCAAkC,0CAOvDte,KAAKwE,MAAMy+B,UACbqG,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAV,KACEoB,EACN,MACA,IAAK,kBACHlB,EAASpsB,KAAKwE,MAAMu/B,gBAClBuF,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B5hB,SAAUA,EAAUw/B,aAAcA,EAAcv/B,aAAcA,EAAcC,OAAQxK,KAAKwE,MAAMu/B,mBAC1HzW,EACN,MACA,IAAK,aACHlB,EAASpsB,KAAKwE,MAAM2I,WAClBm8B,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B5hB,SAAUA,EAAUw/B,aAAcA,EAAcv/B,aAAcA,EAAcC,OAAQxK,KAAKwE,MAAM2I,cAC1HmgB,EACN,MACA,IAAK,OACHlB,EAASpsB,KAAKwE,MAAM4iC,SAClBkC,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B5hB,SAAUA,EAAUw/B,aAAcA,EAAcv/B,aAAcA,EAAcC,OAAQxK,KAAKwE,MAAM4iC,YAC1H9Z,EACN,MACA,IAAK,QACHlB,OAA8BE,IAArBtsB,KAAKwE,MAAM2iC,OAA4C,OAArBnnC,KAAKwE,MAAM2iC,OAAkBnnC,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAM2iC,OAAO11B,GAAG,GACpH63B,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GAAiB0sB,EAAjB,CAA6B5hB,SAAU,EAAGE,OAAQxK,KAAKwE,MAAM2iC,SAC3DnnC,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAM2iC,OAAO/K,IAAI,GAAK,IAAM9O,EAChE,MACA,IAAK,eACHlB,EAASpsB,KAAKwE,MAAM+iC,aACkB,qBAA5Btb,EAAUsf,eAAiCtf,EAAUsf,cAC3DjC,EAAAlpC,EAAAC,cAACmrC,EAAA,EAAD,CACE1oC,SAAU9C,KAAKC,MAAM6C,SACrB2oC,UAAWzrC,KAAKwE,MAAMgjC,uBAEtB8B,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAalsB,KAAKwE,MAAM+iC,aAAlC,MAGF+B,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAalsB,KAAKwE,MAAM+iC,aAAlC,KAEFja,EACJ,MACA,IAAK,oBACHlB,EAASpsB,KAAKwE,MAAM8iC,kBACkB,qBAA5Brb,EAAUsf,eAAiCtf,EAAUsf,cAC3DjC,EAAAlpC,EAAAC,cAACmrC,EAAA,EAAD,CACE1oC,SAAU9C,KAAKC,MAAM6C,SACrB2oC,UAAWzrC,KAAKwE,MAAM6iC,4BAEtBiC,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAalsB,KAAKwE,MAAM8iC,kBAAlC,MAGFgC,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAalsB,KAAKwE,MAAM8iC,kBAAlC,KAEFha,EACJ,MACA,IAAK,gBACHlB,EAASpsB,KAAKwE,MAAMknC,cAClBpC,EAAAlpC,EAAAC,cAACmrC,EAAA,EAAD,CACEC,UAAW,KACX3oC,SAAU9C,KAAKC,MAAM6C,UAErBwmC,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GACM0sB,EADN,CAEE5hB,SAAUA,EACVw/B,aAAcA,EACdt/B,OAAQxK,KAAKwE,MAAMknC,kBAGrBpe,EACN,MACA,IAAK,WACHlB,EAASpsB,KAAKwE,MAAMqiC,SAClByC,EAAAlpC,EAAAC,cAACmrC,EAAA,EAAD,CACEC,UAAW,KACX3oC,SAAU9C,KAAKC,MAAM6C,UAErBwmC,EAAAlpC,EAAAC,cAACgqC,EAAA,EAAD9qC,OAAAC,OAAA,GACM0sB,EADN,CAEE5hB,SAAUA,EACVw/B,aAAcA,EACdt/B,OAAQxK,KAAKwE,MAAMqiC,aAGrBvZ,EACN,MACA,IAAK,mBACH,IAAMqe,EAAsB3rC,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa,QAAQ,cAC/Eg6B,EAAkB5rC,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY+5B,IACxEvf,EAASpsB,KAAKwE,MAAMqnC,iBAClBvC,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAV,IAAwBlsB,KAAKwE,MAAMqnC,iBAAiBtiC,QAAQe,GAA5D,SAA6EshC,EAAgBzd,uBAC3Fb,EACN,MACA,IAAK,wBACHlB,EAASpsB,KAAKwE,MAAMsnC,sBAClBxC,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAalsB,KAAKwE,MAAMsnC,sBAAsBviC,QAAQe,GAAhE,IAA4EtK,KAAKC,MAAM6F,YAAYqoB,uBACjGb,EACN,MACA,IAAK,oBACHlB,EAASpsB,KAAKwE,MAAMunC,kBAClBzC,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAalsB,KAAKwE,MAAMunC,kBAAkBxiC,QAAQe,IAC1DgjB,EACN,MACA,IAAK,MACHlB,EAASpsB,KAAKwE,MAAM+/B,SAClB+E,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAalsB,KAAKwE,MAAM+/B,SAAW31B,MAAMvF,WAAWrJ,KAAKwE,MAAM+/B,WAAmB,GAAN,KACpFjX,EACN,MACA,IAAK,SACHlB,OAA+BE,IAAtBtsB,KAAKwE,MAAMsjC,OAClBwB,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,GAAmC,IAAtBlsB,KAAKwE,MAAMsjC,OAAmB9nC,KAAKwE,MAAMsjC,OAAS,IAAKwB,EAAAlpC,EAAAC,cAAA,mBAC5EitB,EACN,MACA,IAAK,WACHlB,OAAsCE,IAA7BtsB,KAAKwE,MAAMujC,cAClBuB,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,GAA0C,IAA7BlsB,KAAKwE,MAAMujC,cAA0B/nC,KAAKwE,MAAMujC,cAAgB,IAAKuB,EAAAlpC,EAAAC,cAAA,mBAC1FitB,EACN,MACA,IAAK,WACHlB,OAAiCE,IAAxBtsB,KAAKwE,MAAMq/B,SAClByF,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,GAAqC,IAAxBlsB,KAAKwE,MAAMq/B,SAAqB7jC,KAAKwE,MAAMq/B,SAAW,IAAKyF,EAAAlpC,EAAAC,cAAA,mBAChFitB,EACN,MACA,IAAK,mBACHlB,OAAyCE,IAAhCtsB,KAAKwE,MAAMwjC,iBAClBsB,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,GAA6C,IAAhClsB,KAAKwE,MAAMwjC,iBAA6BhoC,KAAKwE,MAAMwjC,iBAAmB,IAAKsB,EAAAlpC,EAAAC,cAAA,mBAChGitB,EACN,MACA,IAAK,MACHlB,OAAiCE,IAAxBtsB,KAAKwE,MAAMigC,SAClB6E,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAD,CACErnC,WAAY,SACZC,cAAe,OAEf6mC,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,GAAqC,IAAxBlsB,KAAKwE,MAAMigC,SAAqBzkC,KAAKwE,MAAMigC,SAAW,IAAK6E,EAAAlpC,EAAAC,cAAA,mBAEhFL,KAAKwE,MAAMkgC,eAAiBnlC,OAAO8B,KAAKrB,KAAKwE,MAAMkgC,eAAepjC,OAAO,GACvEgoC,EAAAlpC,EAAAC,cAAC2iC,EAAD,CACE/W,UAAW,CACTvrB,KAAK,UACLT,MAAM,CACJkD,UAAU,CACRuH,GAAG,GAELs/B,UAAU,MACV/b,QAAQ1uB,OAAO8B,KAAKrB,KAAKwE,MAAMkgC,eAAelyB,IAAK,SAAAw5B,GACjD,IAAM7d,EAAwB1nB,EAAK1B,cAAc6M,gBAAgB,CAAC,YAAYo6B,EAAS,0BACjFC,EAAcxlC,EAAK1B,cAAc6M,gBAAgB,CAAC,YAAYo6B,EAAS,mBACzEllC,EAAQL,EAAKjC,MAAMkgC,cAAcsH,GAAUziC,QAAQe,GACvD,OAAQ2hC,GACN,QACA,IAAK,MACHnlC,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAAkD,OAAMlD,EAAN,KAAAkD,OAAemkB,GAGxB,SAAAnkB,OAAUgiC,EAAV,MAAAhiC,OAAuBlD,KACtB8C,KAAK,WAMlB0jB,EACN,MACA,IAAK,SACH,IAAMK,EAAyC,oBAApB1B,EAAUpiB,MAAuBoiB,EAAUpiB,MAAM7J,KAAKC,OAASgsB,EAAUpiB,MACpGuiB,EACEkd,EAAAlpC,EAAAC,cAACwpC,EAAA,EAADtqC,OAAAC,OAAA,GAAY0sB,EAAZ,CAAwB7O,QAAS,kBAAM6O,EAAW3rB,YAAYkG,EAAKxG,UAAU0tB,GAEjF,MACA,IAAK,mBACHvB,EAASpsB,KAAKwE,MAAM4hC,qBAClBkD,EAAAlpC,EAAAC,cAAC6rC,EAAA,EAAD3sC,OAAAC,OAAA,GACMQ,KAAKwE,MAAM8hC,sBADjB,CAEE17B,KAAM5K,KAAKwE,MAAM6hC,qBACjBliC,KAAMnE,KAAKwE,MAAM4hC,qBACjBzmC,MAAOK,KAAKwE,MAAMohC,sBAClBhmC,OAAQI,KAAKwE,MAAMqhC,0BAEnBvY,EACN,MACA,IAAK,kBACHlB,EAASpsB,KAAKwE,MAAMmgC,sBAAwB3kC,KAAKwE,MAAMogC,sBACrD0E,EAAAlpC,EAAAC,cAAC8rC,EAAA,EAAD5sC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEoc,YAAa,CACXzb,KAAK,QAEP0uB,WAAY,GACZ/pB,cAAevF,KAAKC,MAAM0N,MAC1BhO,MAAOK,KAAKwE,MAAMmgC,qBAClB/kC,OAAQI,KAAKwE,MAAMogC,sBACnB19B,OAAqC,qBAAtBlH,KAAKC,MAAMiH,QAAyBlH,KAAKC,MAAMiH,OAC9D4D,WAA6C,qBAA1B9K,KAAKC,MAAM6K,YAA6B9K,KAAKC,MAAM6K,cAEtEwiB,EACN,MACA,IAAK,UACHlB,EACEkd,EAAAlpC,EAAAC,cAACwpC,EAAA,EACK3d,EAEJod,EAAAlpC,EAAAC,cAACwpC,EAAA,EAADtqC,OAAAC,OAAA,CACEkL,GAAI,EACJhK,KAAM,OACNE,KAAM,MACNH,MAAO,aACHyrB,EAAW/oB,aAIvB,MACA,IAAK,WACHipB,EAASpsB,KAAKwE,MAAMwgC,aAClBsE,EAAAlpC,EAAAC,cAAC6rC,EAAA,EAAD3sC,OAAAC,OAAA,GACMQ,KAAKwE,MAAMihC,cADjB,CAEE76B,KAAM5K,KAAKwE,MAAMghC,aACjBrhC,KAAMnE,KAAKwE,MAAMwgC,aACjBrlC,MAAOK,KAAKwE,MAAM6gC,cAClBzlC,OAAQI,KAAKwE,MAAM8gC,kBAEnBhY,EACN,MACA,IAAK,SACH,IAAIkE,EAAkB,KAClBC,EAAczxB,KAAKwE,MAAMynB,EAAUvrB,MACvC,OAAQurB,EAAUrhB,MAChB,IAAK,SACH6mB,EAAczxB,KAAK+E,cAAc6I,MAAM6jB,GAAavX,WACpDsX,EAAkBG,IAClBzF,EAAW1hB,OAASinB,EACtB,MACA,IAAK,OACHD,EAAkBK,IAClB3F,EAAWxrB,KAAO+wB,EAClB,IAAM2a,EAAkB7sC,OAAOiO,OAAOye,EAAU/C,MAAMpY,MACtD,GAAI9Q,KAAKC,MAAM6F,YAAX,GAAAkE,OAA0BoiC,EAA1B,UAAkD,CACpD,IAAMC,EAAmBrsC,KAAKC,MAAM6F,YAAX,GAAAkE,OAA0BoiC,EAA1B,UAErBC,GAAoB9sC,OAAO8B,KAAKgrC,GAAkB/qC,QACpD/B,OAAO8B,KAAKgrC,GAAkB9qC,QAAQ,SAAA9B,GACpCysB,EAAWzsB,GAAK4sC,EAAiB5sC,KAIzC,MACA,QACE+xB,EAAkBM,IAGtB1F,EAASqF,EACP6X,EAAAlpC,EAAAC,cAACmxB,EAAoBtF,EAAauF,GAChCnE,EACN,MACA,QACE,IAAIc,EAAiBpuB,KAAKwE,MAAMynB,EAAUvrB,MACtCV,KAAKwE,MAAMynB,EAAUvrB,OAASV,KAAKwE,MAAMynB,EAAUvrB,MAAM2tB,eAC3DD,EAAiBpuB,KAAKwE,MAAMynB,EAAUvrB,MAAM6I,QAAQe,IAEtD8hB,EAASpsB,KAAKwE,MAAMynB,EAAUvrB,MAC5B4oC,EAAAlpC,EAAAC,cAACwpC,EAAA,EAAS3d,EAAakC,GACrBd,EAGR,OAAOlB,SAxvCctrB,aA4vCVkiC,sLC/hCAsJ,EAhOb,SAAAA,EAAYrsC,GAAM,IAAAe,EAAAhB,KAAAT,OAAAgtC,EAAA,EAAAhtC,CAAAS,KAAAssC,GAAAtsC,KANlBC,MAAQ,GAMUD,KALlBwsC,UAAY,KAKMxsC,KAJlB8F,YAAc,KAII9F,KAHlB+E,cAAgB,KAGE/E,KAKlBiF,SAAW,SAAAhF,GACTe,EAAKf,MAAQA,EAETe,EAAK+D,cACP/D,EAAK+D,cAAcE,SAASjE,EAAKf,OAEjCe,EAAK+D,cAAgB,IAAIG,EAAclE,EAAKf,OAG9Ce,EAAKwrC,UAAYxrC,EAAK+D,cAAc6M,gBAAgB,CAAC,aAAa,QAAQ,cAC1E5Q,EAAK8E,YAAc9E,EAAK+D,cAAc6M,gBAAgB,CAAC,YAAY5Q,EAAKwrC,aAfxDxsC,KAkBlBysC,WAlBkBltC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkBL,SAAAqK,IAAA,IAAA5I,EAAA,OAAA+b,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,cAAAgK,EAAAhK,KAAA,EACSvM,EAAK+D,cAAc4nC,gBAAgB3rC,EAAKwrC,UAAUxrC,EAAKf,MAAMuM,SADtE,cACPiC,EADO8I,EAAAhH,QAEKvP,EAAK+D,cAAc6I,MAAMa,GAASG,UAChDH,EAAUzN,EAAK+D,cAAc6I,MAAM,IAH1B2J,EAAAgB,OAAA,SAKJ9J,GALI,wBAAA8I,EAAA1I,SAAAwI,EAAArX,SAlBKA,KA0BlB4sC,aA1BkB,eAAAz8B,EAAA5Q,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA0BH,SAAA8K,EAAOnS,EAAS8sB,GAAhB,OAAAjI,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cAAA0K,EAAAM,OAAA,SACNvX,EAAK+D,cAAcguB,0BAA0B,eAAgB,QAAS,GAAIptB,EAAU8sB,IAD9E,wBAAAxa,EAAApJ,SAAAiJ,EAAA9X,SA1BG,gBAAAqY,EAAAC,GAAA,OAAAnI,EAAApB,MAAA/O,KAAAgP,YAAA,GAAAhP,KA8BlB6sC,cA9BkBttC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA8BF,SAAAC,IAAA,IAAAT,EAAAsgC,EAAAC,EAAA/9B,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdf,GADqBA,EAAPugC,EAAAzrC,OAAA,QAAAgrB,IAAAygB,EAAA,GAAAA,EAAA,GAAe,OACC/rC,EAAKf,MAAMuM,QAD3Ba,EAAAE,KAAA,EAESvM,EAAK+D,cAAc05B,oBAAoBz9B,EAAKwrC,UAAU,gBAAgB,CAAChgC,IAFhF,YAEVsgC,EAFUz/B,EAAAkD,MAAA,CAAAlD,EAAAE,KAAA,eAAAF,EAAAkL,OAAA,SAILvX,EAAK+D,cAAc6I,MAAMk/B,IAJpB,cAAAz/B,EAAAkL,OAAA,SAMP,MANO,wBAAAlL,EAAAwB,SAAA5B,EAAAjN,SA9BEA,KAuClBgtC,iBAvCkBztC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAuCC,SAAAoD,IAAA,OAAAoa,EAAApqB,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAAkI,OAAA,SACVvX,EAAK+D,cAAc05B,oBAAoB,iBAAiB,sBAD9C,wBAAApuB,EAAAxB,SAAAuB,EAAApQ,SAvCDA,KA2ClBitC,mBA3CkB1tC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA2CG,SAAA8L,IAAA,OAAA0R,EAAApqB,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,cAAAyL,EAAAT,OAAA,SAOZvX,EAAK+D,cAAc6I,MAAM,IAPb,wBAAAoL,EAAAnK,SAAAiK,EAAA9Y,SA3CHA,KAqDlBktC,OArDkB,eAAA3J,EAAAhkC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAqDT,SAAA4M,EAAOjM,EAAM7H,GAAb,IAAAgM,EAAAq7B,EAAAlI,EAAAmI,EAAAxJ,EAAAlpB,EAAAmxB,EAAAwB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAz+B,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,UAAyBuE,EAAzB27B,EAAAnsC,OAAA,QAAAgrB,IAAAmhB,EAAA,GAAAA,EAAA,GAAwC,MACzCN,EAAkBnsC,EAAK+D,cAAc6M,gBAAgB,CAAC,YAAY5Q,EAAKwrC,aACxD3hB,QAFd,CAAA9Q,EAAAxM,KAAA,eAAAwM,EAAAxB,OAAA,UAGE,GAHF,cAMD0sB,EANC,cAAAj7B,OAM6BlE,EAAYy6B,KAAK5yB,MAN9C,KAAA3D,OAMuD8H,GAQ1Ds7B,EAAMpsC,EAAK+D,cAAc6I,MAAM,GAd5BmM,EAAAxM,KAAA,EAmBGoK,QAAQqD,IAAI,CACpBha,EAAK0sC,gBAAgB5nC,GACrB9E,EAAK+D,cAAcc,mBAAmBC,GAAY,GAAM,KArBnD,UAAA89B,EAAA7pB,EAAAxJ,KAAAmK,EAAAnb,OAAAouC,EAAA,EAAApuC,CAAAqkC,EAAA,GAiBLiI,EAjBKnxB,EAAA,GAkBL2yB,EAlBK3yB,EAAA,IAwBHmxB,IAAoBwB,EAxBjB,CAAAtzB,EAAAxM,KAAA,YA0BC+/B,EAAiBtsC,EAAK+D,cAAc6M,gBAAgB,CAAC,QAAQ,SAAS,QAGvEE,EA7BA,CAAAiI,EAAAxM,KAAA,gBAAAwM,EAAAzM,KAAA,GAAAyM,EAAAxM,KAAA,GA+BsBvM,EAAK+D,cAAc6oC,yBAAyBN,EAAeH,GA/BjF,QA+BDr7B,EA/BCiI,EAAAxJ,KAAAwJ,EAAAxM,KAAA,iBAAAwM,EAAAzM,KAAA,GAAAyM,EAAAyS,GAAAzS,EAAA,kBAmCEjI,IAAkBA,EAAelD,UACpCkD,EAAiB9Q,EAAK+D,cAAc6I,MAAM,IApCzC,WAwCAkE,IAAkB9Q,EAAK+D,cAAc6I,MAAMkE,GAAgBsqB,IAAI,GAxC/D,CAAAriB,EAAAxM,KAAA,gBAAAwM,EAAAxB,OAAA,SAyCIvX,EAAK+D,cAAc6I,MAAM,IAzC7B,eAAAmM,EAAAxM,KAAA,GA4CmBvM,EAAK+D,cAAcs7B,oBAAoBgN,EAAgBQ,0BAA0BlgC,EAAM7H,GA5C1G,eA4CCynC,EA5CDxzB,EAAAxJ,KA8CCi9B,EAA4BxsC,EAAK+D,cAAc6I,MAAMkE,GAAgBxI,MAAMuiC,GACjFuB,EAAMI,EAA0BvzB,IAAIszB,GAAWjkC,MAAM,KA/ChDyQ,EAAAxB,OAAA,SAmDEvX,EAAK+D,cAAc6qB,cAAcqV,EAAcmI,IAnDjD,eAAArzB,EAAAxB,OAAA,SAsDA60B,GAtDA,yBAAArzB,EAAAlL,SAAA+K,EAAA5Z,KAAA,cArDS,gBAAA8O,EAAA0B,GAAA,OAAA+yB,EAAAx0B,MAAA/O,KAAAgP,YAAA,GAAAhP,KA+GlB8tC,SA/GkB,eAAAnzB,EAAApb,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+GP,SAAAsN,EAAOyzB,GAAP,IAAA9I,EAAAtV,EAAAqe,EAAA,OAAAxjB,EAAApqB,EAAAgN,KAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAArN,MAAA,UAEH03B,EAFG,gBAAAj7B,OAE6B+jC,GAGnB,QAFbpe,EAAa3uB,EAAK+D,cAAckpC,8BAA8BhJ,KAExCjkC,EAAK+D,cAAc6I,MAAM+hB,GAAY/gB,QALxD,CAAAgM,EAAArN,KAAA,eAAAqN,EAAArC,OAAA,SAMAvX,EAAK+D,cAAc6I,MAAM+hB,IANzB,cAAA/U,EAAArN,KAAA,EAScvM,EAAK+D,cAAc05B,oBAAoB,iBAAiB,aAAa,CAACsP,IATpF,YASLC,EATKpzB,EAAArK,OAWUvP,EAAK+D,cAAc6I,MAAMogC,GAAYp/B,QAX/C,CAAAgM,EAAArN,KAAA,gBAYPygC,EAAahtC,EAAK+D,cAAc6I,MAAMogC,GAZ/BpzB,EAAArC,OAAA,SAaAvX,EAAK+D,cAAcmpC,8BAA8BjJ,EAAc+I,EAAW,OAb1E,eAAApzB,EAAArC,OAAA,SAeF,MAfE,yBAAAqC,EAAA/L,SAAAyL,EAAAta,SA/GO,gBAAAm2B,GAAA,OAAAxb,EAAA5L,MAAA/O,KAAAgP,YAAA,GAAAhP,KAiIlB0tC,gBAjIkB,eAAAzJ,EAAA1kC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAiIA,SAAAmO,EAAOrV,GAAP,IAAAm/B,EAAAtV,EAAAqe,EAAAG,EAAAC,EAAA,OAAA5jB,EAAApqB,EAAAgN,KAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,UAEV03B,EAFU,uBAAAj7B,OAE6BlE,EAAYy6B,KAAK5yB,OAE3C,QADbgiB,EAAa3uB,EAAK+D,cAAckpC,8BAA8BhJ,KACxCjkC,EAAK+D,cAAc6I,MAAM+hB,GAAY/gB,QAJjD,CAAAwM,EAAA7N,KAAA,eAAA6N,EAAA7C,OAAA,SAKPvX,EAAK+D,cAAc6I,MAAM+hB,IALlB,cAAAvU,EAAA7N,KAAA,EASSvM,EAAK8sC,SAAShoC,EAAYy6B,KAAKr3B,SATxC,YASV8kC,EATU5yB,EAAA7K,MAAA,CAAA6K,EAAA7N,KAAA,YAcR4gC,EAAgBntC,EAAK+D,cAAc6M,gBAAgB,CAAC,UAAU,kBAG9Dw8B,EAAeptC,EAAK+D,cAAc6I,MAAMogC,GAAY1kC,MAAMtI,EAAK+D,cAAc6I,MAAMugC,IAAgBl0B,IAAI,MAExGjZ,EAAK+D,cAAc6I,MAAMwgC,GAAcx/B,QAnB9B,CAAAwM,EAAA7N,KAAA,gBAAA6N,EAAA7C,OAAA,SAoBLvX,EAAK+D,cAAcmpC,8BAA8BjJ,EAAcmJ,IApB1D,eAAAhzB,EAAA7C,OAAA,SAwBT,MAxBS,yBAAA6C,EAAAvM,SAAAsM,EAAAnb,SAjIA,gBAAAquC,GAAA,OAAApK,EAAAl1B,MAAA/O,KAAAgP,YAAA,GAAAhP,KA4JlBsuC,oBA5JkB/uC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA4JI,SAAAuhC,IAAA,IAAA/hC,EAAAF,EAAAkiC,EAAAC,EAAAC,EAAA1/B,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAuhC,GAAA,cAAAA,EAAArhC,KAAAqhC,EAAAphC,MAAA,UAAOf,EAAPkiC,EAAAptC,OAAA,QAAAgrB,IAAAoiB,EAAA,GAAAA,EAAA,GAAe,KAAKpiC,EAApBoiC,EAAAptC,OAAA,QAAAgrB,IAAAoiB,EAAA,GAAAA,EAAA,GAAoC,KAAKF,EAAzCE,EAAAptC,OAAA,QAAAgrB,IAAAoiB,EAAA,IAAAA,EAAA,GACfliC,IACHA,EAAUxL,EAAKf,MAAMuM,UAElBF,GAAmBtL,EAAKf,MAAMiQ,mBACjC5D,EAAkBtL,EAAKf,MAAM2uC,oBAAoB5tC,EAAKf,MAAMiQ,mBAGzD1D,GAAYF,EARG,CAAAqiC,EAAAphC,KAAA,eAAAohC,EAAAp2B,OAAA,UASX,GATW,cAYhBk2B,EAAaztC,EAAK+D,cAAc6I,MAAM,GAZtB+gC,EAAAphC,KAAA,GAadvM,EAAK+D,cAAc6H,aAAarN,OAAO8B,KAAKiL,GAA5C,eAAA6+B,EAAA5rC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA6D,SAAA6hC,EAAOlhC,GAAP,IAAA7H,EAAAslC,EAAAC,EAAAyD,EAAAC,EAAAC,EAAA,OAAAxkB,EAAApqB,EAAAgN,KAAA,SAAA6hC,GAAA,cAAAA,EAAA3hC,KAAA2hC,EAAA1hC,MAAA,UAC3DzH,EAAcwG,EAAgBqB,IAEhC3M,EAAK8E,cAAe9E,EAAK8E,YAAYopC,eAAe5mB,SAASxiB,EAAYy6B,KAAK5yB,OAHjB,CAAAshC,EAAA1hC,KAAA,eAAA0hC,EAAA12B,OAAA,wBAAA02B,EAAA1hC,KAAA,EAUvDoK,QAAQqD,IAAI,CACpBha,EAAK8sC,SAAShoC,EAAYy6B,KAAKr3B,SAC/BlI,EAAK+D,cAAcoqC,iBAAiB3iC,EAAQ1G,KAZmB,OAAAslC,EAAA6D,EAAA1+B,KAAA86B,EAAA9rC,OAAAouC,EAAA,EAAApuC,CAAA6rC,EAAA,GAQ/D0D,EAR+DzD,EAAA,GAS/D0D,EAT+D1D,EAAA,GAe7DyD,GAAaC,IACTC,EAAaF,EAAUxlC,MAAMylC,GACnCN,EAAaA,EAAWngC,KAAK0gC,IAjBkC,yBAAAC,EAAApgC,SAAAggC,EAAA7uC,SAA7D,gBAAAovC,GAAA,OAAAjE,EAAAp8B,MAAA/O,KAAAgP,YAAA,IAbc,eAkChBw/B,IACFC,EAAaztC,EAAK+D,cAAcsM,iBAAiBo9B,EAAWztC,EAAK8E,YAAYwE,UAC7EmkC,EAAaztC,EAAK+D,cAAcsqC,qBAAqBZ,EAAWztC,EAAK8E,YAAYqoB,wBApC/DwgB,EAAAp2B,OAAA,SAuCbk2B,GAvCa,yBAAAE,EAAA9/B,SAAA0/B,EAAAvuC,SA5JJA,KAsMlBsvC,UAtMkB/vC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAsMN,SAAAuiC,IAAA,IAAAjjC,EAAA8f,EAAAxnB,EAAA4qC,EAAAxgC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAqiC,GAAA,cAAAA,EAAAniC,KAAAmiC,EAAAliC,MAAA,cAAOjB,EAAPkjC,EAAAluC,OAAA,QAAAgrB,IAAAkjB,EAAA,GAAAA,EAAA,GAAuB,QAE/BljC,EAAkBtL,EAAKf,MAAM2uC,oBAAoB5tC,EAAKf,MAAMiQ,mBAE1Dkc,EAASprB,EAAK+D,cAAc6I,MAAM,GAClChJ,EAAkB5D,EAAK+D,cAAc6I,MAAM,GALrC6hC,EAAAliC,KAAA,EAMJvM,EAAK+D,cAAc6H,aAAarN,OAAO8B,KAAKiL,GAA5C,eAAAojC,EAAAnwC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA6D,SAAA2iC,EAAOhiC,GAAP,IAAA7H,EAAA8pC,EAAAC,EAAAC,EAAAzC,EAAA,OAAA7iB,EAAApqB,EAAAgN,KAAA,SAAA2iC,GAAA,cAAAA,EAAAziC,KAAAyiC,EAAAxiC,MAAA,cAC3DzH,EAAcwG,EAAgBqB,GAD6BoiC,EAAAxiC,KAAA,EAEzBoK,QAAQqD,IAAI,CAClDha,EAAKksC,OAAOv/B,EAAM7H,GAClB9E,EAAK+D,cAAcc,mBAAmBC,GAAY,GAAM,KAJO,OAAA8pC,EAAAG,EAAAx/B,KAAAs/B,EAAAtwC,OAAAouC,EAAA,EAAApuC,CAAAqwC,EAAA,GAE1DE,EAF0DD,EAAA,GAElDxC,EAFkDwC,EAAA,GAO7DC,GAAWzC,IACbjhB,EAASA,EAAO9d,KAAKwhC,EAAQxmC,MAAM+jC,EAAgBzoC,kBACnDA,EAAkBA,EAAgB0J,KAAK++B,EAAgBzoC,kBATQ,wBAAAmrC,EAAAlhC,SAAA8gC,EAAA3vC,SAA7D,gBAAAgwC,GAAA,OAAAN,EAAA3gC,MAAA/O,KAAAgP,YAAA,IANI,cAmBVod,EAASA,EAAOnS,IAAIrV,GAnBV6qC,EAAAl3B,OAAA,SAqBH6T,GArBG,wBAAAqjB,EAAA5gC,SAAA0gC,EAAAvvC,SArMVA,KAAKiF,SAAShF,uCCDZgwC,EAAgBC,EAAQ,KACxBC,EAAMC,8/CAEZ/0B,OAAOg1B,SAAW,OAEZnrC,aAOJ,SAAAA,EAAYjF,GAAM,IAAAe,EAAAhB,KAAAT,OAAAgtC,EAAA,EAAAhtC,CAAAS,KAAAkF,GAAAlF,KAJlBC,MAAQ,GAIUD,KAHlBswC,aAAe,KAGGtwC,KAKlBiF,SAAW,SAAAhF,GACTe,EAAKf,MAAQA,GANGD,KAQlBuwC,QAAU,SAAAp4B,GACR,OAAOnX,EAAK4M,MAAMuK,GAAK5O,QAAQ,IATfvJ,KAWlBwwC,KAAO,SAAAzF,GAAC,OAAI,IAAI/pC,EAAKf,MAAMiY,KAAKu4B,MAAMC,GAAG3F,IAXvB/qC,KAYlB2wC,MAAQ,SAAAC,GACN,OAAK5vC,EAAKf,MAAMiY,KAGTlX,EAAKf,MAAMiY,KAAKu4B,MAAMI,SAC1BD,GAAO,GAAG12B,WACX,SAJO,MAdOla,KAqBlB8wC,MAAQ,SAAA34B,GACN,OAAKnX,EAAKf,MAAMiY,KAGTlX,EAAKf,MAAMiY,KAAKu4B,MAAMK,OAC1B34B,GAAO,GAAG+B,WACX,SAJO,MAvBOla,KA8BlB+wC,WAAa,SAAAzgB,GACX,IAAI9pB,EAAIsoB,SAASzuB,cAAc,YAE/B,OADAmG,EAAEwqC,UAAY1gB,EACiB,IAAxB9pB,EAAEyqC,WAAW3vC,OAAe,GAAKkF,EAAEyqC,WAAW,GAAGC,WAjCxClxC,KAmClBmxC,UAAY,SAAAC,GAAC,OAAI,IAAIC,IAAUD,IAnCbpxC,KAoClB4N,MAAQ,SAAAwjC,GAAC,OAAI,IAAIC,IAAwB,kBAAND,EAAiBA,EAAIE,OAAOF,KApC7CpxC,KAqClB0Z,UAAY,WAAc,QAAA63B,EAAAviC,UAAA1N,OAAVrB,EAAU,IAAAuxC,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVxxC,EAAUwxC,GAAAziC,UAAAyiC,GAAMhoC,IAAcioC,KAAKC,iBAAiB3wC,EAAK0Y,UAAL3K,MAAA/N,EAAI,CAAW4wC,MAASz/B,OAAO,aAA3BnI,OAA0C/J,KArChGD,KAsClB6xC,eAAiB,WAAc,QAAAC,EAAAC,EAAA/iC,UAAA1N,OAAVrB,EAAU,IAAAuxC,MAAAO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAV/xC,EAAU+xC,GAAAhjC,UAAAgjC,GAAMvoC,IAAcioC,KAAKO,gBAAeH,EAAA3f,SAAQtb,MAAR9H,MAAA+iC,EAAA,CAAcF,MAASz/B,OAAO,aAA9BnI,OAA6C/J,KAtClGD,KAuClB09B,kBAAoB,SAACnL,GACnB,IAAM2f,EAAWlxC,EAAKf,MAAMkyC,UAAU3iB,KAAK,SAAAnH,GAAC,OAAIA,EAAE3nB,OAAS6xB,IAC3D,QAAK2f,GAGEA,EAASA,UA5CAlyC,KA8ClBoyC,8BAAgC,SAACrH,GAC/B,OAAOA,EAAEsH,QAAQ,YAAY,MACpBA,QAAQ,OAAO,IACfA,QAAQ,QAAQ,IAChBA,QAAQ,UAAU,KAClBA,QAAQ,SAAS,KAnDVryC,KAqDlB8J,WAAa,SAACwoC,GACZ,OAAOA,EAAMA,EAAIt2B,OAAO,EAAE,GAAGhJ,cAAcs/B,EAAIt2B,OAAO,GAAK,IAtD3Chc,KAwDlBkP,YAAc,SAACuD,GAAqB,IAAhBN,EAAgBnD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KACzB,OAAO4iC,IAAOn/B,EAAKN,IAzDHnS,KA2DlBw0B,kBAAoB,SAAC+d,EAAKC,GAOxB,OANIA,GAAQjzC,OAAO8B,KAAKmxC,GAAMlxC,QAC5B/B,OAAO8B,KAAKmxC,GAAMjxC,QAAQ,SAAA9B,GACxB8yC,EAAK9yC,GAAK+yC,EAAK/yC,KAIZ8yC,GAlESvyC,KAoElByyC,UAAY,SAACC,GACV,IAAIC,EAAM7jB,SAASzuB,cAAc,OAEjC,OADAsyC,EAAI3B,UAAY0B,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IAvE5B7yC,KA0ElB8yC,SAAW,SAACC,EAAIpI,GACd,IAAME,EAAQxvB,OAAO23B,QACfC,EAASF,EAAKlI,EAEhBqI,EAAc,EAElBllC,KAAKmlC,cAAgB,SAAUC,EAAGC,EAAGhrB,EAAG/hB,GAEtC,OADA8sC,GAAK9sC,EAAE,GACC,EAAU+hB,EAAE,EAAE+qB,EAAEA,EAAIC,GAEpBhrB,EAAE,KADV+qB,GACkBA,EAAE,GAAK,GAAKC,IAGV,SAAhBC,IACFJ,GAXc,GAYd,IAAIK,EAAMvlC,KAAKmlC,cAAcD,EAAarI,EAAOoI,EAAQtI,GACzDtvB,OAAOy3B,SAAS,EAAES,GACfL,EAAcvI,GACftvB,OAAOlB,WAAWm5B,EAfN,IAmBlBA,IAhGgBtzC,KAkGlBwzC,8BAAgC,SAAC9yC,GAAqC,IAA/Bg4B,EAA+B1pB,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAzBqM,OAAOo4B,SAASv2B,KAE3Dxc,EAAOA,EAAK2xC,QAAQ,UAAW,QAC/B,IACIqB,EADQ,IAAIC,OAAO,OAASjzC,EAAO,qBACnBkzC,KAAKlb,GACzB,OAAKgb,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGrB,QAAQ,MAAO,MAD5B,GADH,MAvGLryC,KA2GlB8zC,YAAc,SAACpmC,EAAG5H,GAEhB,IAAKA,EAAYy6B,KACf,OAAO,KAGT,IAAMwN,EAAmBjoC,EAAYy6B,KAAKr3B,QACpC6qC,EAA2B/yC,EAAK4Q,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChFoiC,EAAwBluC,EAAYi3B,WAAaj3B,EAAYi3B,UAAUU,kBAAoB33B,EAAYi3B,UAAUU,kBAAkBv0B,QAAU,KAC7I+qC,EAA4BnuC,EAAYi3B,WAAaj3B,EAAYi3B,UAAUU,mBAAqB33B,EAAYi3B,UAAUU,kBAAkByW,aAAepuC,EAAYi3B,UAAUU,kBAAkByW,aAAe,GAC9MC,EAAiBnzC,EAAK4Q,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkB9L,EAAYy6B,KAAK5yB,QAC3GymC,EAA6BD,GAAkBA,EAAe1W,kBAAoB0W,EAAe1W,kBAAkBv0B,QAAU,KAG7HmrC,EADqBD,GAA8B1mC,EAAGpF,KAAKa,gBAAkBirC,EAA2BjrC,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAC5M6qC,IAA0BtmC,EAAGpF,KAAKa,gBAAkB6qC,EAAsB7qC,gBAAuH,IAAtG8qC,EAA0BzhC,IAAI,SAAC5L,GAAQ,OAAOA,EAAEuC,gBAAkBqW,QAAQ9R,EAAGpF,KAAKa,iBAA2BuE,EAAG4mC,gBAAgBnrC,gBAAkB4kC,EAAiB5kC,cACrSorC,GAAoBF,GAAiB3mC,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkB4kC,EAAiB5kC,cACzJqrC,GAAuBH,GAAiB3mC,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkB4kC,EAAiB5kC,cAC1JsrC,GAAeJ,IAAkBE,IAAqBC,IAAwB9mC,EAAGqlC,GAAG5pC,gBAAkB4kC,EAAiB5kC,eAAkB4qC,GAA4BrmC,EAAGqlC,GAAG5pC,gBAAkB4qC,EAAyB7qC,QAAQC,eAC9NurC,GAAcL,IAAkBE,IAAqBC,GAAuB9mC,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,cACvHwrC,GAAYN,IAAkBE,IAAqBC,IAAwBC,GAAe/mC,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkB4kC,EAAiB5kC,cAE9MkF,EAAS,KAkBb,OAhBIomC,EACFpmC,EAAS,UACAqmC,EACTrmC,EAAS,SACAgmC,EACThmC,EAAS,UACAkmC,EACTlmC,EAAS,OACAmmC,EACTnmC,EAAS,UACAsmC,EACTtmC,EAAS,OACAsmC,IACTtmC,EAAS,WAGJA,GAlJSrO,KAoJlB40C,YAAc,SAAA9mC,GACZ,IAAI+mC,EAAY/mC,EACVgnC,EAAUD,EAAU74B,OAAO,EAAG,GAC9B+4B,EAAQF,EAAU74B,OAAO64B,EAAUvzC,OAAS,GAElD,OADAuzC,EAAYC,EAAU,MAAQC,GAxJd/0C,KA2JlBg1C,WA3JkB,eAAAnoC,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA2JL,SAAAqK,EAAOnO,GAAP,IAAA+rC,EAAAC,EAAAjQ,EAAAtV,EAAAwlB,EAAAjgB,EAAAkgB,EAAAC,EAAAC,EAAA,OAAA9qB,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,UAEL0nC,EAAYj0C,EAAKf,MAAMmzB,QAAQmiB,QAAQtxC,IAAMjD,EAAK4Q,gBAAgB,CAAC,UAAU,qBAC7EsjC,EAAYl0C,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,SAE/CiZ,SAAYqqB,EAAUM,kBAAkBltB,SAAS2sB,GALrD,CAAA19B,EAAAhK,KAAA,eAAAgK,EAAAgB,OAAA,SAMF,MANE,UASNvX,EAAKy0C,aAAavsC,IAAalI,EAAKf,MAAMiY,KATpC,CAAAX,EAAAhK,KAAA,eAAAgK,EAAAgB,OAAA,SAUF,MAVE,UAaL0sB,EAbK,cAAAj7B,OAayBd,KAC9BymB,EAAa3uB,EAAKitC,8BAA8BhJ,IAd3C,CAAA1tB,EAAAhK,KAAA,gBAAAgK,EAAAgB,OAAA,SAgBFoX,GAhBE,WAmBLwlB,EAAM,KACNjgB,EAAWl0B,EAAKf,MAAMiY,KAAKw9B,gBACf,IAAdT,EArBO,CAAA19B,EAAAhK,KAAA,gBAsBH6nC,EAAM,IAAIO,IAAI,CAAEzgB,WAAU0gB,WAAYC,wBAAcZ,EAAU/6B,cAtB3D3C,EAAAhK,KAAA,GAuBa6nC,EAAIU,QAAQ5sC,GAvBzB,aAuBHmsC,EAvBG99B,EAAAhH,QAwBM8kC,EAAQ30C,KAxBd,CAAA6W,EAAAhK,KAAA,gBAAAgK,EAAAhK,KAAA,GAyBoB6nC,EAAI10C,KAAK20C,EAAQ30C,MAAMq1C,aAzB3C,aAyBDT,EAzBC/9B,EAAAhH,OA0BarH,EAAQC,gBAAkBmsC,EAAansC,cA1BpD,CAAAoO,EAAAhK,KAAA,gBAAAgK,EAAAgB,OAAA,SA2BEvX,EAAKktC,8BAA8BjJ,EAAcoQ,EAAQ30C,KAAKy0C,IA3BhE,eAAA59B,EAAAgB,OAAA,SAgCJ,MAhCI,yBAAAhB,EAAA1I,SAAAwI,EAAArX,SA3JK,gBAAAqY,GAAA,OAAAxL,EAAAkC,MAAA/O,KAAAgP,YAAA,GAAAhP,KA6LlBg2C,4BA7LkBz2C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA6LY,SAAA8L,IAAA,IAAAm9B,EAAAzpC,EAAA0pC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxnC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,UAAO0oC,EAAPO,EAAAl1C,OAAA,QAAAgrB,IAAAkqB,EAAA,GAAAA,EAAA,GAAyB,KAAKhqC,EAA9BgqC,EAAAl1C,OAAA,QAAAgrB,IAAAkqB,EAAA,GAAAA,EAAA,GAAsC,KAC5DN,EAAY,CAChBzyC,aAAa,GACbgzC,gBAAgB,GAChBL,OAAOp1C,EAAK4M,MAAM,GAClB8oC,aAAa11C,EAAK4M,MAAM,GACxByoC,cAAcr1C,EAAK4M,MAAM,GACzB0oC,gBAAgBt1C,EAAK4M,MAAM,GAC3B2oC,kBAAkBv1C,EAAK4M,MAAM,IAG/BqoC,EAAoBA,GAAwCj1C,EAAKf,MAAMg2C,mBACvEzpC,EAAUA,GAAoBxL,EAAKf,MAAMuM,UAExBypC,EAdW,CAAAj9B,EAAAzL,KAAA,eAAAyL,EAAAT,OAAA,SAenB29B,GAfmB,cAkBtBC,EAAWn1C,EAAK4Q,gBAAgB,CAAC,aAlBXoH,EAAAzL,KAAA,GAoBtBvM,EAAK4L,aAAarN,OAAO8B,KAAK40C,GAA9B,eAAAr+B,EAAArY,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAiD,SAAAoD,EAAOmc,GAAP,IAAAoqB,EAAA,OAAAnsB,EAAApqB,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAC/CopC,EAAiBV,EAAkB1pB,GADYlc,EAAA9C,KAAA,EAE/CvM,EAAK4L,aAAarN,OAAO8B,KAAKs1C,GAA9B,eAAAzY,EAAA3+B,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8C,SAAAC,EAAOU,GAAP,IAAA7H,EAAA,OAAA0kB,EAAApqB,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC5CzH,EAAc6wC,EAAehpC,GADeN,EAAAE,KAAA,EAE5CvM,EAAK4L,aAAarN,OAAO8B,KAAK80C,GAA9B,eAAAhY,EAAA5+B,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAwC,SAAA8K,EAAO4U,GAAP,IAAAC,EAAAiqB,EAAAC,EAAArQ,EAAAjD,EAAAK,EAAAkT,EAAAC,EAAAC,EAAAC,EAAA,OAAAzsB,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cACtCof,EAAgB7mB,EAAY4mB,GADUzU,EAAA1K,KAAA,EAEVvM,EAAKk2C,oBAAoB,mBAAmB,GAAG3qB,EAAS5e,EAAM+e,EAAQ5mB,EAAY6mB,EAAcngB,GAFtF,YAEtCoqC,EAFsC3+B,EAAA1H,MAAA,CAAA0H,EAAA1K,KAAA,gBAAA0K,EAAA1K,KAAA,EAIfvM,EAAKk2C,oBAAoB,eAAe,GAAG3qB,EAAS5e,EAAM+e,EAAQ5mB,EAAY6mB,EAAcngB,GAJ7E,UAIpCqqC,EAJoC5+B,EAAA1H,KAKpCi2B,EAAeoQ,EAAoBttC,MAAMutC,GAE1C71C,EAAK4M,MAAMipC,GAAcjoC,SAAY5N,EAAK4M,MAAM44B,GAAc53B,QAPzB,CAAAqJ,EAAA1K,KAAA,gBAAA0K,EAAA1K,KAAA,GAW9BoK,QAAQqD,IAAI,CACpBha,EAAKm2C,mBAAmBrxC,EAAY6mB,EAAcngB,GAClDxL,EAAKk2C,oBAAoB,aAAa,GAAG3qB,EAAS5e,EAAM+e,EAAQ5mB,EAAY6mB,EAAcngB,KAbpD,QAAA+2B,EAAAtrB,EAAA1H,KAAAqzB,EAAArkC,OAAAouC,EAAA,EAAApuC,CAAAgkC,EAAA,GAStCuT,EATsClT,EAAA,GAUtCmT,EAVsCnT,EAAA,GAgBlCoT,EAAkBF,EAAgBE,gBAClCC,EAAkBzQ,EAAaj4B,MAAMyoC,GAG3Cd,EAAUzyC,aAAVlE,OAAA63C,EAAA,EAAA73C,CAA6B22C,EAAUzyC,cAAvCuG,OAAAzK,OAAA63C,EAAA,EAAA73C,CAAuDu3C,EAAgBrzC,eAEvEyyC,EAAUO,gBAAgBjtC,KAAK,CAC7BmE,QACA+e,UACAH,WACAwqB,aACAF,eACArQ,eACAyQ,kBACAD,kBACAJ,wBAMFV,EAAUQ,aAAeR,EAAUQ,aAAapoC,KAAKk4B,GArCb,yBAAAvuB,EAAApJ,SAAAiJ,EAAA9X,SAAxC,gBAAAwQ,GAAA,OAAA2tB,EAAApvB,MAAA/O,KAAAgP,YAAA,IAF4C,wBAAA3B,EAAAwB,SAAA5B,EAAAjN,SAA9C,gBAAA8O,GAAA,OAAAovB,EAAAnvB,MAAA/O,KAAAgP,YAAA,IAF+C,wBAAAqB,EAAAxB,SAAAuB,EAAApQ,SAAjD,gBAAAsY,GAAA,OAAAV,EAAA7I,MAAA/O,KAAAgP,YAAA,IApBsB,eAoExBonC,EAASp1C,EAAK4M,MAAM,GACpByoC,EAAgBr1C,EAAK4M,MAAM,GAC3B0oC,EAAkBt1C,EAAK4M,MAAM,GAC7B2oC,EAAoBv1C,EAAK4M,MAAM,GAGnCsoC,EAAUO,gBAAgBl1C,QAAS,SAAA81C,GACjC,IAAMN,EAAa/1C,EAAK4M,MAAMypC,EAAYN,YACpCO,EAAgBD,EAAY7Q,aAAavsB,IAAIi8B,EAAUQ,cAG7DW,EAAYC,cAAgBA,EAExBD,EAAYJ,kBACdZ,EAAgBA,EAAc/nC,KAAK+oC,EAAYJ,kBAG7CF,IACFX,EAASA,EAAO9nC,KAAKyoC,EAAWztC,MAAMguC,KAGpCD,EAAYL,kBACdV,EAAkBA,EAAgBhoC,KAAK+oC,EAAYL,oBAInDV,EAAgB7kC,GAAG,KACrB8kC,EAAoBF,EAAcp8B,IAAIq8B,GAAiBhtC,MAAM,MAG/D4sC,EAAUE,OAASA,EACnBF,EAAUG,cAAgBA,EAC1BH,EAAUI,gBAAkBA,EAC5BJ,EAAUK,kBAAoBA,EArGFv9B,EAAAT,OAAA,SAuGrB29B,GAvGqB,yBAAAl9B,EAAAnK,SAAAiK,EAAA9Y,SA7LZA,KAsSlBu3C,oBAtSkBh4C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAsSI,SAAAmO,IAAA,IAAA7O,EAAAE,EAAA0pC,EAAAjmC,EAAAunC,EAAAC,EAAArB,EAAAC,EAAAC,EAAAC,EAAAmB,EAAA1oC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,UAAOjB,EAAPorC,EAAAp2C,OAAA,QAAAgrB,IAAAorB,EAAA,GAAAA,EAAA,GAAuB,KAAKlrC,EAA5BkrC,EAAAp2C,OAAA,QAAAgrB,IAAAorB,EAAA,GAAAA,EAAA,GAAoC,KAClDxB,EAAY,CAChBxpC,cAAc,GACd0pC,OAAOp1C,EAAK4M,MAAM,GAClB8oC,aAAa11C,EAAK4M,MAAM,GACxByoC,cAAcr1C,EAAK4M,MAAM,GACzB0oC,gBAAgBt1C,EAAK4M,MAAM,GAC3B2oC,kBAAkBv1C,EAAK4M,MAAM,GAC7B+pC,sBAAsB32C,EAAK4M,MAAM,IAGnCtB,EAAkBA,GAAoCtL,EAAKf,MAAMqM,iBACjEE,EAAUA,GAAoBxL,EAAKf,MAAMuM,UAExBF,EAdG,CAAA8O,EAAA7N,KAAA,eAAA6N,EAAA7C,OAAA,SAeX29B,GAfW,cAkBdjmC,EAAyC,SAAhCjP,EAAKf,MAAMiQ,iBAlBNkL,EAAA7N,KAAA,GAoBdvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAAqO,EAAApb,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAA4M,EAAOjM,GAAP,IAAA7H,EAAA2K,EAAA/B,EAAA83B,EAAAoR,EAAA,OAAAptB,EAAApqB,EAAAgN,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,cAC7CzH,EAAcwG,EAAgBqB,GADeoM,EAAAxM,KAAA,EAEpBvM,EAAK2rC,gBAAgB7mC,EAAYy6B,KAAK5yB,MAAMnB,GAFxB,YAE7CiE,EAF6CsJ,EAAAxJ,MAAA,CAAAwJ,EAAAxM,KAAA,gBAAAwM,EAAAxM,KAAA,EAKxBvM,EAAK62C,kBAAkB/xC,GALC,cAK3C4I,EAL2CqL,EAAAxJ,KAM3Ci2B,EAAe/1B,EAAiBnH,MAAMoF,GANKqL,EAAAxM,KAAA,GAObvM,EAAKq/B,oBAAoBmG,EAAa74B,EAAM7H,EAAYmK,GAP3C,QAO3C2nC,EAP2C79B,EAAAxJ,KAS5C7B,EAAWE,SAAY43B,EAAa53B,UACvCsnC,EAAUxpC,cAAciB,GAAS,CAC/Be,aACA83B,eACA/1B,mBACAmnC,yBAIF1B,EAAUQ,aAAeR,EAAUQ,aAAapoC,KAAKk4B,GACrD0P,EAAUyB,sBAAwBzB,EAAUyB,sBAAsBrpC,KAAKspC,IAnBxB,yBAAA79B,EAAAlL,SAAA+K,EAAA5Z,SAA/C,gBAAAm2B,GAAA,OAAAxb,EAAA5L,MAAA/O,KAAAgP,YAAA,IApBc,eA4CdwoC,EAAuB,GAC7Bj4C,OAAO8B,KAAKiL,GAAiB/K,QAAS,SAAAoM,GAChCuoC,EAAUxpC,cAAciB,KAC1B6pC,EAAqB7pC,GAASuoC,EAAUxpC,cAAciB,MAI1DuoC,EAAUxpC,cAAgB8qC,EAEpBC,EAAkBl4C,OAAO8B,KAAK60C,EAAUxpC,eAAee,OAAO,SAAAE,GAAK,OAAM3M,EAAK4M,MAAMsoC,EAAUxpC,cAAciB,GAAO8C,kBAAkBgB,GAAG,KAE1I2kC,EAASp1C,EAAK4M,MAAM,GACpByoC,EAAgBr1C,EAAK4M,MAAM,GAC3B0oC,EAAkBt1C,EAAK4M,MAAM,GAC7B2oC,EAAoBv1C,EAAK4M,MAAM,GA1DfwN,EAAA7N,KAAA,GA6DdvM,EAAK4L,aAAa6qC,EAAlB,eAAAxT,EAAA1kC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAkC,SAAAsN,EAAO3M,GAAP,IAAA7H,EAAAkxC,EAAAY,EAAA5M,EAAAG,EAAA2M,EAAArT,EAAAsT,EAAAC,EAAAC,EAAA,OAAAztB,EAAApqB,EAAAgN,KAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAArN,MAAA,cAChCzH,EAAcwG,EAAgBqB,GADEiN,EAAArN,KAAA,EAERvM,EAAKk3C,mBAAmBpyC,EAAY0G,GAF5B,cAEhCwqC,EAFgCp8B,EAAArK,KAMhCqnC,EAAwB1B,EAAUxpC,cAAciB,GAAOiqC,sBANvBh9B,EAAArN,KAAA,EAU5BoK,QAAQqD,IAAI,CACpBha,EAAKm3C,aAAaryC,KAXkB,cAAAklC,EAAApwB,EAAArK,KAAA46B,EAAA5rC,OAAAouC,EAAA,EAAApuC,CAAAyrC,EAAA,GAQpC8M,EARoC3M,EAAA,GAehC1G,EAAWzjC,EAAK4M,MAAMkqC,EAAUM,QAChCL,EAAcH,EAAsB39B,IAAIi8B,EAAUyB,uBAhBlB/8B,EAAArN,KAAA,GAiBRvM,EAAKq/B,oBAAoB2W,EAAgBrpC,EAAM7H,EAAYmK,GAjBnD,QAiBhC+nC,EAjBgCp9B,EAAArK,MAkBhC0nC,EAAgBL,EAAsBrpC,MAAMypC,MAGhD3B,EAAgBA,EAAc/nC,KAAK2pC,IAGjCxT,IACF2R,EAASA,EAAO9nC,KAAKm2B,EAASn7B,MAAMyuC,KAGlCC,IACF1B,EAAkBA,EAAgBhoC,KAAK0pC,IA7BH,yBAAAp9B,EAAA/L,SAAAyL,EAAAta,SAAlC,gBAAAquC,GAAA,OAAApK,EAAAl1B,MAAA/O,KAAAgP,YAAA,IA7Dc,eAgGhBsnC,EAAgB7kC,GAAG,KACrB8kC,EAAoBF,EAAcp8B,IAAIq8B,GAAiBhtC,MAAM,MAG/D4sC,EAAUE,OAASA,EACnBF,EAAUG,cAAgBA,EAC1BH,EAAUI,gBAAkBA,EAC5BJ,EAAUK,kBAAoBA,EAvGVn7B,EAAA7C,OAAA,SA2Gb29B,GA3Ga,yBAAA96B,EAAAvM,SAAAsM,EAAAnb,SAtSJA,KAmZlBq4C,oBAnZkB94C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAmZI,SAAA6hC,IAAA,IAAA5iC,EAAAO,EAAAF,EAAAgsC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5pC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA6hC,GAAA,cAAAA,EAAA3hC,KAAA2hC,EAAA1hC,MAAA,UAAOtB,EAAP2sC,EAAAt3C,OAAA,QAAAgrB,IAAAssB,EAAA,GAAAA,EAAA,GAAqB,GAAGpsC,EAAxBosC,EAAAt3C,OAAA,QAAAgrB,IAAAssB,EAAA,GAAAA,EAAA,GAAgC,OAAhCA,EAAAt3C,OAAA,QAAAgrB,IAAAssB,EAAA,KAAAA,EAAA,GACpBpsC,EAAUA,GAAoBxL,EAAKf,MAAMuM,QADrB,CAAAyiC,EAAA1hC,KAAA,eAAA0hC,EAAA12B,OAAA,SAIX,IAJW,cAOdjM,EAAkBtL,EAAK63C,0BAExB5sC,GAAkBA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKiL,IAG1BgsC,EAAe,GACbC,EAAkB,GACpBC,EAAqBx3C,EAAK4M,MAAM,GAfhBqhC,EAAA1hC,KAAA,GAgBGvM,EAAK83C,YAAYtsC,EAAQ,EAAE,SAASP,GAhBvC,eAgBdwsC,EAhBcxJ,EAAA1+B,OAkBJkoC,EAASn3C,QAEvBm3C,EAASl3C,QAAQ,SAACmM,EAAGG,GAGnB,IAAKH,EAAGI,OAASJ,EAAGqrC,cAAgBrrC,EAAGsrC,gBACrC,OAAO,EAGT,IAAM5qC,EAAcpN,EAAK4M,MAAMF,EAAGU,aAC9B2qC,EAAc/3C,EAAK4M,MAAMF,EAAGqrC,aAC1BC,EAAkBh4C,EAAK4M,MAAMF,EAAGsrC,iBAEtC,OAAQtrC,EAAGW,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdX,EAAGW,QACDR,EAAM,GAAK2qC,EAAmB/mC,GAAG,GACnC,OAIC6mC,EAAa5qC,EAAGI,QACnBwqC,EAAa5qC,EAAGI,MAAQ,CACtBmrC,MAAM,KACNC,SAAS,KACTC,SAAS,KACTC,UAAUp4C,EAAK4M,MAAM,KAIzB0qC,EAAa5qC,EAAGI,MAAMsrC,UAAYd,EAAa5qC,EAAGI,MAAMsrC,UAAU9qC,KAAKF,GAChC,OAAnCkqC,EAAa5qC,EAAGI,MAAMorC,WACxBZ,EAAa5qC,EAAGI,MAAMmrC,MAAQD,EAC9BV,EAAa5qC,EAAGI,MAAMorC,SAAWH,EAAYzvC,MAAM0vC,IAIvD,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAYzvC,MAAMtI,EAAK4M,OAAO,IAO3C2qC,EAAgB7qC,EAAGI,SACtB0qC,EAAqBA,EAAmBlqC,KAAKyqC,IACtB3c,IAAI,KACzBoc,EAAqBx3C,EAAK4M,MAAM,IAKlC2qC,EAAgB7qC,EAAGI,OAAQ,KAO7B4qC,EAAc13C,EAAK4M,MAAM,GACzB+qC,EAAiB33C,EAAK4M,MAAM,GAChCrO,OAAOiO,OAAO8qC,GAAc/2C,QAAS,SAAAmM,GACnC,IAAMyrC,EAAWzrC,EAAGwrC,SAASj/B,IAAIvM,EAAG0rC,WAAW7qC,MAAM,GACrDmqC,EAAcA,EAAYpqC,KAAK6qC,EAAS7vC,MAAMoE,EAAG0rC,YACjDT,EAAiBA,EAAerqC,KAAKZ,EAAG0rC,aAG1CV,EAAcA,EAAYz+B,IAAI0+B,GAAgBrvC,OAAO,GA5FjC2lC,EAAA12B,OAAA,SAiGbmgC,GAjGa,yBAAAzJ,EAAApgC,SAAAggC,EAAA7uC,SAnZJA,KAsflBq5C,oBAtfkB95C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAsfI,SAAAuhC,IAAA,IAAAtiC,EAAAO,EAAAF,EAAAgsC,EAAAgB,EAAAd,EAAAC,EAAA/J,EAAA1/B,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAuhC,GAAA,cAAAA,EAAArhC,KAAAqhC,EAAAphC,MAAA,UAAOtB,EAAPyiC,EAAAptC,OAAA,QAAAgrB,IAAAoiB,EAAA,GAAAA,EAAA,GAAqB,GACzCliC,GAD4CA,EAAxBkiC,EAAAptC,OAAA,QAAAgrB,IAAAoiB,EAAA,GAAAA,EAAA,GAAgC,OACtB1tC,EAAKf,MAAMuM,QADrB,CAAAmiC,EAAAphC,KAAA,eAAAohC,EAAAp2B,OAAA,SAIX,IAJW,cAOdjM,EAAkBtL,EAAK63C,0BAExB5sC,GAAkBA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKiL,IAGxBgsC,EAAe,GACjBgB,EAAct4C,EAAK4M,MAAM,GACzB4qC,EAAqBx3C,EAAK4M,MAAM,GAfhB+gC,EAAAphC,KAAA,GAgBGvM,EAAK83C,YAAYtsC,EAAQ,EAAE,SAASP,GAhBvC,eAgBdwsC,EAhBc9J,EAAAp+B,OAoBJkoC,EAASn3C,QAEvBm3C,EAASl3C,QAAQ,SAACmM,EAAGG,GAMnB,GAJKyqC,EAAa5qC,EAAGI,QACnBwqC,EAAa5qC,EAAGI,MAAQ,KAGtBwqC,EAAa5qC,EAAGI,MAAMwa,SAAS5a,EAAGW,QAAtC,CAKA,IAAKX,EAAGI,OAASJ,EAAGqrC,cAAgBrrC,EAAGsrC,gBACrC,OAAO,EAGT,IAAMO,EAAkBD,EACpBP,EAAc/3C,EAAK4M,MAAMF,EAAGqrC,aAC1BC,EAAkBh4C,EAAK4M,MAAMF,EAAGsrC,iBAGtC,OAAQtrC,EAAGW,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdX,EAAGW,QACDR,EAAM,GAAK2qC,EAAmB/mC,GAAG,GACnC,OAGJ6nC,EAAcP,EAAYzvC,MAAM0vC,GAAiB1qC,KAAKirC,EAAgBjwC,MAAMkvC,IAAqBv+B,IAAIu+B,EAAmBlqC,KAAKyqC,IAC/H,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAYzvC,MAAMtI,EAAK4M,OAAO,KAOhD4qC,EAAqBA,EAAmBlqC,KAAKyqC,IACtB3c,IAAI,KACzBkd,EAAct4C,EAAK4M,MAAM,GACzB4qC,EAAqBx3C,EAAK4M,MAAM,IAGlC0qC,EAAa5qC,EAAGI,MAAMtE,KAAKkE,EAAGW,WAvEdsgC,EAAAp2B,OAAA,SA+Eb+gC,GA/Ea,yBAAA3K,EAAA9/B,SAAA0/B,EAAAvuC,SAtfJA,KAukBlBw5C,eAvkBkBj6C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAukBD,SAAA2iC,IAAA,IAAA1jC,EAAAO,EAAA4f,EAAA3f,EAAAgtC,EAAAzqC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA2iC,GAAA,cAAAA,EAAAziC,KAAAyiC,EAAAxiC,MAAA,UAAOtB,EAAPwtC,EAAAn4C,OAAA,QAAAgrB,IAAAmtB,EAAA,GAAAA,EAAA,GAAqB,IACpCjtC,GADuCA,EAAxBitC,EAAAn4C,OAAA,EAAAm4C,EAAA,QAAAntB,IACetrB,EAAKf,MAAMuM,UAExBP,GAAkBA,EAAc3K,QAAWN,EAAKf,MAAMqM,gBAHxD,CAAAyjC,EAAAxiC,KAAA,eAAAwiC,EAAAx3B,OAAA,SAIN,IAJM,cAOT6T,EAAS,GAPA2jB,EAAAxiC,KAAA,EAQYvM,EAAKuL,gBAAgBC,EAAQ,EAAE,SAASP,GARpD,cAQTQ,EARSsjC,EAAAx/B,KAUftE,EAAc1K,QAAS,SAAAgE,GAErB6mB,EAAO7mB,GAAiB,GACxB,IAAI+zC,EAAct4C,EAAK4M,MAAM,GAEzB8rC,EAAmB14C,EAAK4M,MAAM,GAC5BV,EAAc3N,OAAOiO,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUpI,IAEvE2H,GAAeA,EAAY5L,QAE7B4L,EAAY3L,QAAQ,SAACmM,EAAGG,GAGtB,IAAKH,EAAGI,MAASJ,EAAGK,QAAwB,YAAdL,EAAGK,SAA0BL,EAAGiB,aAAejB,EAAGgB,WAC9E,OAAO,EAGT,IAAM6qC,EAAkBD,EACpB3qC,EAAa3N,EAAK4M,MAAMF,EAAGiB,YACzBD,EAAa1N,EAAK4M,MAAMF,EAAGgB,YAGjC,OAAQhB,EAAGW,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,WACHirC,EAAc3qC,EAAWrF,MAAMoF,GAAYJ,KAAKirC,EAAgBjwC,MAAMowC,IAAoBz/B,IAAIy/B,EAAkBprC,KAAKK,IACvH,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHA,EAAaA,EAAWrF,MAAMtI,EAAK4M,OAAO,KAO9C8rC,EAAoBA,EAAkBprC,KAAKK,IACrBytB,IAAI,KACxBkd,EAAct4C,EAAK4M,MAAM,GACzB8rC,EAAoB14C,EAAK4M,MAAM,MAOrCwe,EAAO7mB,GAAiB+zC,IA9DXvJ,EAAAx3B,OAAA,SAiER6T,GAjEQ,yBAAA2jB,EAAAlhC,SAAA8gC,EAAA3vC,SAvkBCA,KA0oBlB25C,kBA1oBkBp6C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA0oBE,SAAAuiC,IAAA,IAAAtjC,EAAAO,EAAAC,EAAAmtC,EAAApK,EAAAxgC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAqiC,GAAA,cAAAA,EAAAniC,KAAAmiC,EAAAliC,MAAA,UAAOtB,EAAPujC,EAAAluC,OAAA,QAAAgrB,IAAAkjB,EAAA,GAAAA,EAAA,GAAqB,IACvChjC,GAD0CA,EAAxBgjC,EAAAluC,OAAA,EAAAkuC,EAAA,QAAAljB,IACYtrB,EAAKf,MAAMuM,UAExBP,GAAkBA,EAAc3K,QAAWN,EAAKf,MAAMqM,gBAHrD,CAAAmjC,EAAAliC,KAAA,eAAAkiC,EAAAl3B,OAAA,SAIT,IAJS,cAAAk3B,EAAAliC,KAAA,EAOSvM,EAAKuL,gBAAgBC,EAAQ,EAAE,SAASP,GAPjD,cAOZQ,EAPYgjC,EAAAl/B,KASZqpC,EAAW,GAEjB3tC,EAAc1K,QAAQ,SAACgE,GACrB,IAAI4H,EAAanM,EAAK4M,MAAM,GACxBisC,EAAiB,KACrBD,EAASr0C,GAAiBs0C,EAE1B,IAAM3sC,EAAc3N,OAAOiO,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUpI,IACvE2H,GAAeA,EAAY5L,QAE7B4L,EAAY3L,QAAQ,SAACmM,EAAGG,GAEtB,IAAKH,EAAGI,MAASJ,EAAGK,QAAwB,YAAdL,EAAGK,SAA0BL,EAAGU,YAC5D,OAAO,EAGT,OAAQV,EAAGW,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACHlB,EAAaA,EAAWmB,KAAKZ,EAAGU,aAC3ByrC,IACHA,EAAiBnsC,GAErB,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHP,EAAaA,EAAWoB,MAAMb,EAAGU,aAOjCjB,EAAWqB,GAAG,KAChBrB,EAAanM,EAAK4M,MAAM,GACxBisC,EAAiB,QAMvBD,EAASr0C,GAAiBs0C,IAtDVpK,EAAAl3B,OAAA,SAyDXqhC,GAzDW,yBAAAnK,EAAA5gC,SAAA0gC,EAAAvvC,SA1oBFA,KAqsBlB85C,uBAAyB,SAACC,GACxB,SAAA/vC,OAAUqR,OAAOo4B,SAASuG,OAA1B,MAAAhwC,OAAqChJ,EAAK4Q,gBAAgB,CAAC,YAAY,cAAvE,KAAA5H,OAAwF+vC,IAtsBxE/5C,KAwsBlBi6C,aAAe,SAACC,GACd,OAAO,IAAIviC,QAAQ,SAAAI,GAAO,OAAIoC,WAAWpC,EAASmiC,MAzsBlCl6C,KA2sBlBm6C,oBA3sBkB56C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA2sBI,SAAAotC,IAAA,IAAAnuC,EAAAO,EAAA6tC,EAAAC,EAAAtrC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAmtC,GAAA,cAAAA,EAAAjtC,KAAAitC,EAAAhtC,MAAA,cAAOtB,EAAPquC,EAAAh5C,OAAA,QAAAgrB,IAAAguB,EAAA,GAAAA,EAAA,GAAqB,GAAG9tC,EAAxB8tC,EAAAh5C,OAAA,EAAAg5C,EAAA,QAAAhuB,EAAAiuB,EAAAhtC,KAAA,EACUvM,EAAK24C,kBAAkB1tC,EAAcO,GAD/C,YACd6tC,EADcE,EAAAhqC,MAAA,CAAAgqC,EAAAhtC,KAAA,eAAAgtC,EAAAhiC,OAAA,SAGXhZ,OAAO8B,KAAKg5C,GAAiBG,OAAQ,SAACC,EAAI9sC,GAI/C,OAHI0sC,EAAgB1sC,KAClB8sC,EAAI9sC,GAAS0sC,EAAgB1sC,GAAOQ,WAE/BssC,GACP,KARgB,cAAAF,EAAAhiC,OAAA,SAUb,MAVa,wBAAAgiC,EAAA1rC,SAAAurC,EAAAp6C,SA3sBJA,KAutBlB06C,2BAvtBkB,eAAA7K,EAAAtwC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAutBW,SAAA2tC,EAAO70C,EAAY6mB,GAAnB,IAAAiuB,EAAAC,EAAA,OAAArwB,EAAApqB,EAAAgN,KAAA,SAAA0tC,GAAA,cAAAA,EAAAxtC,KAAAwtC,EAAAvtC,MAAA,cAAAutC,EAAAvtC,KAAA,EACEvM,EAAKyrB,iBAAiB,iBAAiB,GAAG3mB,EAAYymB,SAASzmB,EAAY6H,MAAMgf,EAAcD,QAAQ5mB,EAAY6mB,GADrH,cACrBiuB,EADqBE,EAAAvqC,KAGrBsqC,EAAqB,GAHAC,EAAAvtC,KAAA,EAIrBvM,EAAK4L,aAAarN,OAAO8B,KAAKu5C,GAA9B,eAAAG,EAAAx7C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8C,SAAAguC,EAAOrtC,GAAP,IAAAstC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxtB,EAAAyf,EAAAgO,EAAAC,EAAAC,EAAAC,EAAA3pC,EAAA4pC,EAAAtU,EAAAuU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3xB,EAAApqB,EAAAgN,KAAA,SAAAgvC,GAAA,cAAAA,EAAA9uC,KAAA8uC,EAAA7uC,MAAA,cAC5C0tC,EAAe,CACnB3yC,KAAKxC,EAAYu2C,IAAInzC,QACrB6pC,GAAGpmB,EAAc2vB,WAAWpzC,SAHoBkzC,EAAA7uC,KAAA,EAK1BvM,EAAKu7C,kBAAkB5uC,EAAM,WAAW,CAAC6uC,UAAW12C,EAAYkU,YAAYyiC,QAAQ,SAAShvC,OAAOwtC,IAL1E,aAK5CC,EAL4CkB,EAAA7rC,OAOjC2qC,EAAU55C,OAAO,GAPgB,CAAA86C,EAAA7uC,KAAA,gBAQ1C4tC,EAAkBD,EAAU55C,OAAO,EAAI45C,EAAUA,EAAU55C,OAAO,GAAK,KACvE85C,EAAgBF,EAAUA,EAAU55C,OAAO,GAC3C+5C,EAAgBF,EAAkBA,EAAgBnhC,YAAclU,EAAYkU,YAE5E6T,EAAiB7sB,EAAK4Q,gBAAgB,CAAC,YAAYjE,IACnD2/B,EAAiBtsC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,QAbdwqC,EAAA7uC,KAAA,GAmBtCoK,QAAQqD,IAAI,CACpBha,EAAK07C,aAAarB,GAClBr6C,EAAK07C,aAAatB,EAAcphC,aAChChZ,EAAK4sC,yBAAyBN,EAAezf,GAC7C7sB,EAAK27C,0BAA0B72C,EAAYu2C,IAAI37C,KAAK,mBAAmB,GAAG,GAAG06C,EAAcphC,eAvB7C,QAAAshC,EAAAc,EAAA7rC,KAAAgrC,EAAAh8C,OAAAouC,EAAA,EAAApuC,CAAA+7C,EAAA,GAe9CE,EAf8CD,EAAA,GAgB9CE,EAhB8CF,EAAA,GAiB9CzpC,EAjB8CypC,EAAA,GAkB9CG,EAlB8CH,EAAA,GAyB5CC,GAAiBC,IACbrU,EAAWpmC,EAAKqQ,iBAAiBqqC,EAAkB51C,EAAYu2C,IAAI/xC,UAEnEqxC,EAAgBP,EAAcphC,YAAYqhC,EAC1CO,EAAiBH,EAAczqC,UAAUwqC,EAAcxqC,UACvD6qC,EAAiB76C,EAAKqQ,iBAAiB+pC,EAAcwB,aAAa91C,MAAM+mB,EAAevjB,UACvFwxC,EAAiBD,EAAe5hC,IAAI0hC,GACpCI,EAAkBF,EAAe5hC,IAAI2hC,GACrCI,EAAgBD,EAAgBzyC,MAAMtI,EAAK4Q,gBAAgB,CAAC,UAAU,oBACtEqqC,EAAyBD,EAAc1yC,MAAMwI,GAC7CoqC,EAAWD,EAAuBhiC,IAAImtB,GACtC+U,EAAWn7C,EAAK67C,QAAQX,GAE9BrB,EAAmBltC,GAAS,CAC1BmvC,IAAIZ,EACJa,IAAIZ,EACJH,gBACAF,iBACAC,kBACAE,2BA5C4C,yBAAAG,EAAAvtC,SAAAmsC,EAAAh7C,SAA9C,gBAAAg9C,GAAA,OAAAjC,EAAAhsC,MAAA/O,KAAAgP,YAAA,IAJqB,cAAA8rC,EAAAviC,OAAA,SAwDpBsiC,GAxDoB,wBAAAC,EAAAjsC,SAAA8rC,EAAA36C,SAvtBX,gBAAAovC,EAAAY,GAAA,OAAAH,EAAA9gC,MAAA/O,KAAAgP,YAAA,GAAAhP,KAixBlBm3C,mBAjxBkB,eAAA8F,EAAA19C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAixBG,SAAAkwC,EAAOp3C,EAAY6mB,EAAcngB,GAAjC,IAAAy4B,EAAAtV,EAAAwtB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAh6C,EAAA61C,EAAAtC,EAAA0G,EAAA,OAAAlzB,EAAApqB,EAAAgN,KAAA,SAAAuwC,GAAA,cAAAA,EAAArwC,KAAAqwC,EAAApwC,MAAA,UACnBf,EAAUA,GAAWxL,EAAKf,MAAMuM,QAC1By4B,EAFa,0BAAAj7B,OAE6BlE,EAAY6H,MAFzC,KAAA3D,OAEkD2iB,EAAchf,MAFhE,KAAA3D,OAEyEwC,KACtFmjB,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJvB,CAAA+uC,EAAApwC,KAAA,eAAAowC,EAAAplC,OAAA,SAKVvX,EAAK4M,MAAM+hB,IALD,cAQbwtB,EAAsB,CAACpK,GAAG,KAAKzqC,KAAK,OAAOxB,MAAM,SACjDs2C,EAAyBp8C,EAAK4Q,gBAAgB,CAAC,SAAS9L,EAAY6H,MAAM,YAAcwvC,GAExFE,EAA0B,IACRD,EAAuBrK,IAAM,CAAC/xC,EAAKf,MAAMuM,QAAQ1G,EAAYu2C,IAAInzC,SACzFm0C,EAAwBD,EAAuB90C,MAAQ,CAACtH,EAAKf,MAAMuM,QAAQ1G,EAAYu2C,IAAInzC,SAbxEy0C,EAAApwC,KAAA,GAkBToK,QAAQqD,IAAI,CACpBha,EAAKu7C,kBAAkBz2C,EAAY6H,MAAM,WAAW,CAAC6uC,UAAW7vB,EAAc3S,YAAayiC,QAAQ,SAAShvC,OAAO4vC,IACnHr8C,EAAKu7C,kBAAkB5vB,EAAcjsB,KAAK,WAAW,CAAC87C,UAAW7vB,EAAc3S,YAAayiC,QAAQ,SAAShvC,OAAO,CAACnF,KAAK,CAAC,6CAA6CtH,EAAKf,MAAMuM,SAASumC,GAAG,CAAC,6CAA6C/xC,EAAKf,MAAMuM,cApBvO,eAAA8wC,EAAAK,EAAAptC,KAAAgtC,EAAAh+C,OAAAouC,EAAA,EAAApuC,CAAA+9C,EAAA,GAgBjBE,EAhBiBD,EAAA,GAiBjBE,EAjBiBF,EAAA,GAyBb95C,EAAe,GACjB61C,EAAct4C,EAAK4M,MAAM,GACzBopC,EAAkBh2C,EAAK4M,MAAM,GAC7B8vC,EAAuB18C,EAAK4M,MAAM,GA5BnB+vC,EAAApwC,KAAA,GA8BbvM,EAAK4L,aAAa6wC,EAAlB,eAAAG,EAAAr+C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA0C,SAAA6wC,EAAOC,GAAP,IAAAC,EAAA3vC,EAAA4vC,EAAAnH,EAAAoH,EAAAC,EAAAvH,EAAA5sC,EAAA2D,EAAA,OAAA8c,EAAApqB,EAAAgN,KAAA,SAAA+wC,GAAA,cAAAA,EAAA7wC,KAAA6wC,EAAA5wC,MAAA,UACxCwwC,EAAqBP,EAAqBhuB,KAAM,SAAA4jB,GAAC,OAAIA,EAAE1gB,gBAAgBvpB,gBAAkB20C,EAA0BprB,gBAAgBvpB,gBAD3F,CAAAg1C,EAAA5wC,KAAA,eAAA4wC,EAAA5lC,OAAA,wBAQxCnK,EAAcpN,EAAKqQ,iBAAiB0sC,EAAmBnB,aAAaQ,EAAuBt2C,OAAOhB,EAAYwE,UAC9G0zC,EAAqBh9C,EAAKqQ,iBAAiBysC,EAA0BlB,aAAa91C,MAAM6lB,EAAcriB,UAGtGusC,EAAezoC,EAAY6L,IAAI+jC,GAZSG,EAAA5wC,KAAA,EAatBvM,EAAK07C,aAAaqB,EAAmB/jC,aAbf,OAaxCikC,EAbwCE,EAAA5tC,KAcxC2tC,EAdwC,GAAAl0C,OAc3B2iB,EAAchf,MAda,KAAA3D,OAcJ+zC,EAAmBrrB,iBACvDikB,EAAiB31C,EAAK4Q,gBAAgB,CAAC,QAAQ,YAAY9L,EAAYymB,WACvExiB,EAhBwC,oBAAAC,OAgBL2sC,EAAe1zC,MAAf,GAAA+G,OAA0BlE,EAAYymB,SAAtC,SAEnC7e,EAAK,CACTwwC,UACA7vC,OAAO,KACPD,cACAyoC,eACA9sC,eACAjD,MAAMsH,EACNL,OAAO,YACPJ,MAAM7H,EAAY6H,MAClB+e,QAAQC,EAAchf,MACtB4e,SAASoqB,EAAe9sC,MACxBynB,YAAYxrB,EAAY6H,MACxBywC,cAAcJ,EACdlwC,KAAKiwC,EAAmBrrB,gBACxB1Y,YAAY+jC,EAAmB/jC,YAC/B7L,UAAU8vC,EAAYA,EAAUjtC,UAAY,MAIoB,+CAA9D8sC,EAA0BlB,aAAat0C,KAAKa,eAC9CmwC,EAAcA,EAAYhrC,KAAKuoC,EAAavtC,MAAM8E,IAClD4oC,EAAkBA,EAAgB1oC,KAAKF,GACvCsvC,EAAuBA,EAAqBpvC,KAAKF,GAEjDV,EAAGW,OAAS,WAGyD,+CAA5DyvC,EAA0BlB,aAAa7J,GAAG5pC,gBACnDuE,EAAGW,OAAS,YACZ2oC,EAAkBA,EAAgBzoC,MAAMH,IACpBI,GAAG,KACrB8qC,EAAct4C,EAAK4M,MAAM,GACzBopC,EAAkBh2C,EAAK4M,MAAM,GAC7B8vC,EAAuB18C,EAAK4M,MAAM,KAKtCnK,EAAa+F,KAAKkE,GAxD4B,yBAAAywC,EAAAtvC,SAAAgvC,EAAA79C,SAA1C,gBAAAq+C,GAAA,OAAAT,EAAA7uC,MAAA/O,KAAAgP,YAAA,IA9Ba,eAyFnBsqC,EAAcA,EAAYr/B,IAAIyjC,GAzFXC,EAAAplC,OAAA,SA6FZ,CACL+gC,cACA71C,eACAuzC,oBAhGiB,yBAAA2G,EAAA9uC,SAAAquC,EAAAl9C,SAjxBH,gBAAAs+C,EAAAC,EAAAC,GAAA,OAAAvB,EAAAluC,MAAA/O,KAAAgP,YAAA,GAAAhP,KAo3BlBy+C,2BAp3BkB,eAAAC,EAAAn/C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAo3BW,SAAA2xC,EAAO74C,EAAY6mB,EAAcngB,GAAjC,IAAAsqC,EAAA,OAAAtsB,EAAApqB,EAAAgN,KAAA,SAAAwxC,GAAA,cAAAA,EAAAtxC,KAAAsxC,EAAArxC,MAAA,cAAAqxC,EAAArxC,KAAA,EACGvM,EAAKm2C,mBAAmBrxC,EAAY6mB,EAAcngB,GADrD,YACrBsqC,EADqB8H,EAAAruC,MAAA,CAAAquC,EAAArxC,KAAA,eAAAqxC,EAAArmC,OAAA,SAGlBu+B,EAAgBrzC,cAHE,cAAAm7C,EAAArmC,OAAA,SAKpB,MALoB,wBAAAqmC,EAAA/vC,SAAA8vC,EAAA3+C,SAp3BX,gBAAA6+C,EAAAC,EAAAC,GAAA,OAAAL,EAAA3vC,MAAA/O,KAAAgP,YAAA,GAAAhP,KA23BlBg/C,0BA33BkB,eAAAC,EAAA1/C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA23BU,SAAAkyC,EAAOp5C,EAAY6mB,EAAcngB,GAAjC,IAAAsqC,EAAA,OAAAtsB,EAAApqB,EAAAgN,KAAA,SAAA+xC,GAAA,cAAAA,EAAA7xC,KAAA6xC,EAAA5xC,MAAA,cAAA4xC,EAAA5xC,KAAA,EACIvM,EAAKm2C,mBAAmBrxC,EAAY6mB,EAAcngB,GADtD,YACpBsqC,EADoBqI,EAAA5uC,MAAA,CAAA4uC,EAAA5xC,KAAA,eAAA4xC,EAAA5mC,OAAA,SAGjBu+B,EAAgBE,iBAHC,cAAAmI,EAAA5mC,OAAA,SAKnB,MALmB,wBAAA4mC,EAAAtwC,SAAAqwC,EAAAl/C,SA33BV,gBAAAo/C,EAAAC,EAAAC,GAAA,OAAAL,EAAAlwC,MAAA/O,KAAAgP,YAAA,GAAAhP,KAk4BlBk4C,mBAl4BkB,eAAAqH,EAAAhgD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAk4BG,SAAAwyC,EAAO15C,EAAY0G,GAAnB,IAAAy4B,EAAAtV,EAAA8vB,EAAAC,EAAAlZ,EAAAmZ,EAAA3I,EAAA,OAAAxsB,EAAApqB,EAAAgN,KAAA,SAAAwyC,GAAA,cAAAA,EAAAtyC,KAAAsyC,EAAAryC,MAAA,UACb03B,EADa,mBAAAj7B,OACsBlE,EAAYy6B,KAAK5yB,MADvC,KAAA3D,OACgDwC,KAC7DmjB,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAHvB,CAAAgxC,EAAAryC,KAAA,eAAAqyC,EAAArnC,OAAA,SAIVvX,EAAK4M,MAAM+hB,IAJD,cAAAiwB,EAAAryC,KAAA,EAOqBoK,QAAQqD,IAAI,CAClDha,EAAK2rC,gBAAgB7mC,EAAYy6B,KAAK5yB,MAAMnB,GAC5CxL,EAAK27C,0BAA0B72C,EAAYy6B,KAAK5yB,MAAO,gBAAiB,CAACnB,MATxD,UAAAizC,EAAAG,EAAArvC,KAAAmvC,EAAAngD,OAAAouC,EAAA,EAAApuC,CAAAkgD,EAAA,GAOdjZ,EAPckZ,EAAA,GAODC,EAPCD,EAAA,IAYflZ,IAAgBmZ,EAZD,CAAAC,EAAAryC,KAAA,gBAajBoyC,EAAe3+C,EAAKqQ,iBAAiBsuC,EAAa75C,EAAYwE,UACxD0sC,EAAkBxQ,EAAal9B,MAAMq2C,GAd1BC,EAAArnC,OAAA,SAeVvX,EAAKktC,8BAA8BjJ,EAAc+R,IAfvC,eAAA4I,EAAArnC,OAAA,SAkBZ,MAlBY,yBAAAqnC,EAAA/wC,SAAA2wC,EAAAx/C,SAl4BH,gBAAA6/C,EAAAC,GAAA,OAAAP,EAAAxwC,MAAA/O,KAAAgP,YAAA,GAAAhP,KAs5BlB+/C,cAt5BkBxgD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAs5BF,SAAAgzC,IAAA,IAAA/zC,EAAAO,EAAAC,EAAAwzC,EAAAC,EAAAlxC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA+yC,GAAA,cAAAA,EAAA7yC,KAAA6yC,EAAA5yC,MAAA,UAAOtB,EAAPi0C,EAAA5+C,OAAA,QAAAgrB,IAAA4zB,EAAA,GAAAA,EAAA,GAAqB,IAEnC1zC,GAFsCA,EAAxB0zC,EAAA5+C,OAAA,EAAA4+C,EAAA,QAAA5zB,IAEOtrB,EAAKf,MAAMuM,UAEfP,GAAkBA,EAAc3K,QAAWN,EAAKf,MAAMqM,gBAJzD,CAAA6zC,EAAA5yC,KAAA,eAAA4yC,EAAA5nC,OAAA,SAKL,IALK,cAAA4nC,EAAA5yC,KAAA,EAQavM,EAAKuL,gBAAgBC,EAAQ,EAAE,SAASP,GAAc,GARnE,cAQRQ,EARQ0zC,EAAA5vC,KAUR0vC,EAAc,GAEpBh0C,EAAc1K,QAAQ,SAACgE,GACrB,IAAI4H,EAAanM,EAAK4M,MAAM,GAC5BqyC,EAAY16C,GAAiB4H,EAE7B,IAAMD,EAAc3N,OAAOiO,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUpI,IACvE2H,GAAeA,EAAY5L,QAE7B4L,EAAY3L,QAAQ,SAACmM,EAAGG,GAEtB,IAAKH,EAAGI,MAASJ,EAAGK,QAAwB,YAAdL,EAAGK,SAA0BL,EAAGU,YAC5D,OAAO,EAGT,OAAQV,EAAGW,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHlB,EAAaA,EAAWmB,KAAKZ,EAAGU,aAClC,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHjB,EAAaA,EAAWoB,MAAMb,EAAGU,aAOjCjB,EAAWqB,GAAG,KAChBrB,EAAanM,EAAK4M,MAAM,MAM9BqyC,EAAY16C,GAAiB4H,IApDjBgzC,EAAA5nC,OAAA,SAyDP0nC,GAzDO,yBAAAE,EAAAtxC,SAAAmxC,EAAAhgD,SAt5BEA,KAi9BlBogD,oBAj9BkB7gD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAi9BI,SAAAqzC,IAAA,IAAA7zC,EAAA8zC,EAAAC,EAAAt0C,EAAAu0C,EAAAtwC,EAAAuwC,EAAAC,EAAAC,EAAAjN,EAAAkN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtwC,EAAAuwC,EAAAC,EAAAxyC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAq0C,GAAA,cAAAA,EAAAn0C,KAAAm0C,EAAAl0C,MAAA,UAAOf,EAAPg1C,EAAAlgD,OAAA,QAAAgrB,IAAAk1B,EAAA,IAAAA,EAAA,GAAqBlB,EAArBkB,EAAAlgD,OAAA,QAAAgrB,IAAAk1B,EAAA,GAAAA,EAAA,GAAsC,EAAEjB,EAAxCiB,EAAAlgD,OAAA,QAAAgrB,IAAAk1B,EAAA,GAAAA,EAAA,GAAuD,SAASv1C,EAAhEu1C,EAAAlgD,OAAA,QAAAgrB,IAAAk1B,EAAA,GAAAA,EAAA,GAA8E,GAAGhB,EAAjFgB,EAAAlgD,OAAA,QAAAgrB,IAAAk1B,EAAA,IAAAA,EAAA,IACpBh1C,EAAUA,GAAoBxL,EAAKf,MAAMuM,UAExBP,GAAkBA,EAAc3K,OAH7B,CAAAmgD,EAAAl0C,KAAA,eAAAk0C,EAAAlpC,OAAA,SAIX,IAJW,UAOpB/L,EAAUA,EAAQrD,cAEZ+G,EAAmBlP,EAAKf,MAAMiQ,iBAG9BuwC,EAAuBz/C,EAAK4Q,gBAAgB,CAAC,UAAU,qBAC7D0uC,EAAmBtyC,KAAKoE,IAAIquC,EAAqBH,GAE3CI,EAAkB1/C,EAAKf,MAAMmzB,QAAQmiB,QAAQtxC,IAAMjD,EAAK4Q,gBAAgB,CAAC,UAAU,oBACnF+uC,EAAgB3/C,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,cAE9D8hC,EAAU,GACVkN,EAAmB,KACnBC,EAAwB,MAGxBF,EAAc91B,UAAW81B,EAAce,UAAUhB,GAvBjC,CAAAe,EAAAl0C,KAAA,YAwBZuzC,EAAkBH,EAAce,UAAUhB,GAGhDG,EAAqB,GAAA72C,OAAM82C,EAAN,cAAA92C,OAAkCkG,EAAlC,YAAAlG,OAA6DmmC,EAAIwR,wBAAjE,2CAAA33C,OAAkIwC,EAAlI,gBAAAxC,OAAwJy2C,EAAxJ,cAAAz2C,OAAyLu2C,EAAzL,aACrBK,EAAmB5/C,EAAK4gD,iBAAiBf,GAErCL,GACFruB,QAAQC,IAAI,oCAAoCwuB,KAI9CA,GAAoBA,EAAiBz8C,KAAK09C,QAAUtiD,OAAOiO,OAAOozC,EAAiBz8C,KAAK09C,QAAQvgD,QAnClF,CAAAmgD,EAAAl0C,KAAA,gBAqCVwzC,EAAexhD,OAAOiO,OAAOozC,EAAiBz8C,KAAK09C,QAAQ/wC,MAC3DkwC,EAAwBD,GAAgBA,EAAa/mC,YAAc9L,SAAS6yC,EAAa/mC,aAAa,EAAIsmC,EAE1GW,EAxCU,GAAAj3C,OAwCsB82C,EAxCtB,cAAA92C,OAwCkDkG,EAxClD,YAAAlG,OAwC6EmmC,EAAIwR,wBAxCjF,2CAAA33C,OAwCkJwC,EAxClJ,gBAAAxC,OAwCwKg3C,EAxCxK,cAAAh3C,OAwC0Mu2C,EAxC1M,aAAAkB,EAAAl0C,KAAA,GAyCMvM,EAAK8gD,kBAAkBb,EAA2B,IAzCxD,cAyCZC,EAzCYO,EAAAlxC,OA2CC2wC,EAAU/8C,KAAK09C,QAAUX,EAAU/8C,KAAK09C,OAAOvgD,QA3ChD,CAAAmgD,EAAAl0C,KAAA,gBAAAk0C,EAAAl0C,KAAA,GA6CIvM,EAAK+gD,mBAAmBb,EAAU/8C,KAAK09C,OAAO51C,GAAc,GAAK,GA7CrE,SA6Cdi1C,EA7CcO,EAAAlxC,OA+CGhR,OAAOiO,OAAO0zC,GAAW5/C,SAElC6/C,EAAqB5hD,OAAOiO,OAAO0zC,GAAW1uC,IAAK,SAAAjB,GAAM,OAAKrD,SAASqD,EAAOyI,eACxDhM,KAAKoE,IAALrD,MAAAf,KAAIzO,OAAA63C,EAAA,EAAA73C,CAAQ4hD,KAGfH,IAEvBzhD,OAAOiO,OAAO0zC,GAAW3/C,QAAQ,SAACmM,GAChBnO,OAAO8B,KAAKu/C,EAAiBz8C,KAAK09C,QAAQv5B,SAAS5a,EAAGwwC,WAEpE0C,EAAiBz8C,KAAK09C,OAAOn0C,EAAGwwC,SAAWxwC,KAK/C1M,EAAKghD,iBAAiBnB,EAAsBD,EAAiBz8C,KAAK09C,UA/DxD,QAAAJ,EAAAl0C,KAAA,iBAoEhBqzC,EAAmB,KApEH,WAuEdQ,EAAMR,EAENJ,GACFruB,QAAQC,IAAI,cAAcgvB,GAGvBA,EA7Ea,CAAAK,EAAAl0C,KAAA,gBAAAk0C,EAAAl0C,KAAA,GA+EJvM,EAAKihD,YAAYpB,GA/Eb,YA+EhBO,EA/EgBK,EAAAlxC,OAmFH6wC,EAAIj9C,MAAoC,IAA5B+J,SAASkzC,EAAIj9C,KAAK4J,QAnF3B,CAAA0zC,EAAAl0C,KAAA,SAoFV8zC,EAAe,EACfC,GAAgB,EArFN,eAAAG,EAAAl0C,KAAA,GAuFNvM,EAAKi5C,aAAa,KAvFZ,eAAAwH,EAAAl0C,KAAA,GAwFAvM,EAAKihD,YAAYpB,GAxFjB,QAwFZO,EAxFYK,EAAAlxC,KAyFZ8wC,IACAC,KAAgBF,IAAOA,EAAIj9C,OAAO+J,SAASkzC,EAAIj9C,KAAK4J,QA1FxC,WA4FLszC,EAAa,IAAMC,EA5Fd,CAAAG,EAAAl0C,KAAA,iBAgGZ6zC,GAAOA,EAAIj9C,MAAQ+J,SAASkzC,EAAIj9C,KAAK4J,QAAQ,IACzCiD,EAAY9C,SAASiB,KAAK+yC,MAAM,MAChCX,EAAiBvgD,EAAKitC,8BAA8B,iBAAiB,KAC5D4S,GAAyB,CACtC18C,KAAKi9C,EACLpwC,aAEFhQ,EAAKktC,8BAA8B,iBAAiBqT,IAvGtC,aA2GdH,GAAOA,EAAIj9C,MAAQi9C,EAAIj9C,KAAK09C,QA3Gd,CAAAJ,EAAAl0C,KAAA,SA4GhBmmC,EAAU0N,EAAIj9C,KAAK09C,OA5GHJ,EAAAl0C,KAAA,wBAAAk0C,EAAAlpC,OAAA,SA8GT,IA9GS,eAAAkpC,EAAAlpC,OAAA,SAkHb,CACLm7B,UACAkN,mBACAC,0BArHkB,yBAAAY,EAAA5yC,SAAAwxC,EAAArgD,SAj9BJA,KAykClB84C,YAzkCkBv5C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAykCJ,SAAAm1C,IAAA,IAAA31C,EAAA8zC,EAAAC,EAAAt0C,EAAAynC,EAAA0O,EAAApzC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAi1C,GAAA,cAAAA,EAAA/0C,KAAA+0C,EAAA90C,MAAA,cAAOf,EAAP41C,EAAA9gD,OAAA,QAAAgrB,IAAA81B,EAAA,IAAAA,EAAA,GAAqB9B,EAArB8B,EAAA9gD,OAAA,QAAAgrB,IAAA81B,EAAA,GAAAA,EAAA,GAAsC,EAAE7B,EAAxC6B,EAAA9gD,OAAA,QAAAgrB,IAAA81B,EAAA,GAAAA,EAAA,GAAuD,SAASn2C,EAAhEm2C,EAAA9gD,OAAA,QAAAgrB,IAAA81B,EAAA,GAAAA,EAAA,GAA8E,GAA9EC,EAAA90C,KAAA,EACUvM,EAAKuL,gBAAgBC,EAAQ8zC,EAAiBC,EAAet0C,GADvE,cACNynC,EADM2O,EAAA9xC,KAAA8xC,EAAA9pC,OAAA,SAGLvX,EAAKshD,eAAe5O,EAAQznC,IAHvB,wBAAAo2C,EAAAxzC,SAAAszC,EAAAniD,SAzkCIA,KA8kClBgiD,iBAAmB,SAACO,EAASnB,GAC3B,IAAMoB,EAAa,GACnBjjD,OAAO8B,KAAK+/C,GAAK7/C,QAAQ,SAAAiZ,GACvB,IAAM9M,EAAK0zC,EAAI5mC,IACX9M,EAAGsM,aAAiBtM,EAAGK,QAAsC,YAA5BL,EAAGK,OAAO5E,gBAC7Cq5C,EAAWhoC,GAAU9M,KAKzB,IAAM+0C,EAAgB,CACpBt+C,KAAK,CACH09C,OAAOW,IAGXxhD,EAAK0hD,kBAAkBH,GAAS,EAAME,IA7lCtBziD,KA+lClBuM,gBA/lCkBhN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+lCA,SAAA21C,IAAA,IAAAn2C,EAAA8zC,EAAAC,EAAAt0C,EAAAu0C,EAAAoC,EAAAlP,EAAAkN,EAAAC,EAAAp0C,EAAAo2C,EAAAC,EAAA9zC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA21C,GAAA,cAAAA,EAAAz1C,KAAAy1C,EAAAx1C,MAAA,cAAOf,EAAPs2C,EAAAxhD,OAAA,QAAAgrB,IAAAw2B,EAAA,IAAAA,EAAA,GAAqBxC,EAArBwC,EAAAxhD,OAAA,QAAAgrB,IAAAw2B,EAAA,GAAAA,EAAA,GAAsC,EAAEvC,EAAxCuC,EAAAxhD,OAAA,QAAAgrB,IAAAw2B,EAAA,GAAAA,EAAA,GAAuD,SAAS72C,EAAhE62C,EAAAxhD,OAAA,QAAAgrB,IAAAw2B,EAAA,GAAAA,EAAA,GAA8E,GAAGtC,EAAjFsC,EAAAxhD,OAAA,QAAAgrB,IAAAw2B,EAAA,IAAAA,EAAA,GAAAC,EAAAx1C,KAAA,EAKNvM,EAAKo/C,oBAAoB5zC,EAAQ8zC,EAAiBC,EAAet0C,EAAcu0C,GALzE,UAAAoC,EAAAG,EAAAxyC,KAEdmjC,EAFckP,EAEdlP,QACAkN,EAHcgC,EAGdhC,iBACAC,EAJc+B,EAId/B,sBAIEp0C,EAAe,IACfm0C,EATY,CAAAmC,EAAAx1C,KAAA,gBAAAw1C,EAAAx1C,KAAA,GAWOvM,EAAKgiD,iBAAiBtP,EAAQznC,GAXrC,QAWdQ,EAXcs2C,EAAAxyC,KAAAwyC,EAAAx1C,KAAA,wBAaRs1C,EAAqBtjD,OAAO8B,KAAKL,EAAKf,MAAMqM,iBAbpCy2C,EAAAx1C,KAAA,GAeOvM,EAAK+gD,mBAAmBrO,EAAQmP,GAfvC,SAedp2C,EAfcs2C,EAAAxyC,OAkBMhR,OAAO8B,KAAKoL,GAAcnL,QAC5CN,EAAKghD,iBAAiBnB,EAAsBp0C,GAnBhC,eAuBZ+zC,GACFruB,QAAQC,IAAI,4BAA4B3lB,GAxB1Bs2C,EAAAxqC,OAAA,SA2BThZ,OACEiO,OAAOf,GACPgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,OAAS1B,EAAcqc,SAAS5a,EAAGC,MAAMqF,iBAC1DiwC,KAAK,SAAC7iD,EAAEizC,GAAH,OAAUjzC,EAAE+N,UAAYklC,EAAEllC,WAAa,EAAI,KA9BzC,yBAAA40C,EAAAl0C,SAAA8zC,EAAA3iD,SA/lCAA,KA+nClBsiD,eA/nCkB,eAAAY,EAAA3jD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+nCD,SAAAm2C,EAAOzP,GAAP,IAAAznC,EAAAK,EAAAmsC,EAAA2K,EAAAp0C,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAi2C,GAAA,cAAAA,EAAA/1C,KAAA+1C,EAAA91C,MAAA,UAAetB,EAAfm3C,EAAA9hD,OAAA,QAAAgrB,IAAA82B,EAAA,GAAAA,EAAA,GAA6B,GAEvC1P,GAAYA,EAAQpyC,QAAqC,oBAApBoyC,EAAQnyC,QAFnC,CAAA8hD,EAAA91C,KAAA,eAAA81C,EAAA9qC,OAAA,SAGN,IAHM,cAMTjM,EAAkBtL,EAAKf,MAAMqM,gBAAkBtL,EAAKf,MAAMqM,gBAAkBtL,EAAK63C,0BAElF5sC,GAAkBA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKiL,KAGxBmsC,EAAW/E,EAAQjmC,OAAQ,SAAAC,GAAE,OAAKzB,EAAcqc,SAAS5a,EAAGC,QAAU,CAAC,UAAU,WAAW,aAAa,cAAc,kBAAkB,mBAAmB,iBAAiB,mBAAmB2a,SAAS5a,EAAGW,WAErM/M,QACXm3C,EAASwK,KAAK,SAAC7iD,EAAEizC,GAAH,OAAUjzC,EAAE+N,UAAYklC,EAAEllC,WAAa,EAAI,IAf5Ck1C,EAAA9qC,OAAA,SAkBRkgC,GAlBQ,wBAAA4K,EAAAx0C,SAAAs0C,EAAAnjD,SA/nCC,gBAAAsjD,GAAA,OAAAJ,EAAAn0C,MAAA/O,KAAAgP,YAAA,GAAAhP,KAmpClB+hD,mBAnpCkB,eAAAwB,EAAAhkD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAmpCG,SAAAw2C,EAAO9P,GAAP,IAAAznC,EAAAw3C,EAAAT,EAAAv2C,EAAAi3C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAh1C,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA62C,GAAA,cAAAA,EAAA32C,KAAA22C,EAAA12C,MAAA,UAAetB,EAAf+3C,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,GAAAA,EAAA,GAA6B,GAAGP,IAAhCO,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,KAAAA,EAAA,GAAgDhB,IAAhDgB,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,KAAAA,EAAA,GACdhjD,EAAKf,MAAMuM,SAAYknC,GAAYA,EAAQpyC,QAAqC,oBAApBoyC,EAAQnyC,QADtD,CAAA0iD,EAAA12C,KAAA,eAAA02C,EAAA1rC,OAAA,SAEV,IAFU,UAKdtM,GAAkBA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKL,EAAKf,MAAMqM,kBAGrCG,EAAe,GACfi3C,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmB5iD,EAAK4Q,gBAAgB,CAAC,QAAQ,gBACjDiyC,EAAoB7iD,EAAK4Q,gBAAgB,CAAC,QAAQ,iBAClDkyC,EAAoB9iD,EAAK4Q,gBAAgB,CAAC,QAAQ,sBAClDmyC,EAAuB/iD,EAAK4Q,gBAAgB,CAAC,QAAQ,oBAI3D3F,EAAc1K,QAAQ,SAAAoM,GACpB,IAAM7H,EAAc9E,EAAKf,MAAMqM,gBAAgBqB,GACzComC,EAA2B/yC,EAAK4Q,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChFoiC,EAAwBluC,EAAYi3B,WAAaj3B,EAAYi3B,UAAUU,kBAAoB33B,EAAYi3B,UAAUU,kBAAkBv0B,QAAU,KAC7I+qC,EAA4BnuC,EAAYi3B,WAAaj3B,EAAYi3B,UAAUU,mBAAqB33B,EAAYi3B,UAAUU,kBAAkByW,aAAepuC,EAAYi3B,UAAUU,kBAAkByW,aAAe,GAC9MgQ,EAA2BljD,EAAK4Q,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,sBAElFuiC,EAAiBnzC,EAAK4Q,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkB9L,EAAYy6B,KAAK5yB,QAC3GymC,EAA6BD,GAAkBA,EAAe1W,kBAAoB0W,EAAe1W,kBAAkBv0B,QAAU,KAG7Hi7C,EAAmBnjD,EAAK4Q,gBAAgB,CAAC,QAAQ,kBAAkB9L,EAAYy6B,KAAK5yB,QAE1F+lC,EAAQnyC,QAAS,SAAAmM,GACf,IAAIuD,EAAgBnL,EAAYwE,SAC1B85C,EAAYt+C,EAAYy6B,KAAK5yB,MAC7B02C,EAAc3Q,EAAQjmC,OAAO,SAAA62C,GAAC,OAAIA,EAAEx2C,OAASJ,EAAGI,OAChDy2C,EAAeF,EAAY/iD,OAAO,GAAK+iD,EAAY52C,OAAO,SAAA+2C,GAAG,OAAIA,EAAIlQ,gBAAgBnrC,gBAAkBrD,EAAYoD,QAAQC,gBAAe7H,OAAO,EACjJizC,EAA0C,IAAvB8P,EAAY/iD,QAAgBoM,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cAC3KqrC,EAA6C,IAAvB6P,EAAY/iD,QAAgBoM,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cAC5Ks7C,EAAqBrQ,GAA8B1mC,EAAGpF,KAAKa,gBAAkBirC,EAA2BjrC,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,cAEnPu7C,EAAsBH,GAAgBF,EAAY70B,KAAM,SAAAg1B,GAAG,OAAIA,EAAIl8C,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,gBAAkBq7C,EAAIzR,GAAG5pC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,eAAkB4qC,GAA4ByQ,EAAIzR,GAAG5pC,gBAAkB4qC,EAAyB7qC,QAAQC,eAAiBk7C,EAAY52C,OAAO,SAAAk3C,GAAI,OAAIA,EAAKrQ,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,gBAAe7H,OAAO,KAC3ZsjD,EAAqBL,GAAgBF,EAAY70B,KAAM,SAAAg1B,GAAG,OAAIA,EAAIlQ,gBAAgBnrC,gBAAkBrD,EAAYoD,QAAQC,eAAiBk7C,EAAY52C,OAAO,SAAAk3C,GAAI,OAAIA,EAAKrQ,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,gBAAe7H,QAAUkjD,EAAIzR,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,gBAEzSkrC,EAAgBoQ,GAAuBzQ,IAA0BtmC,EAAGpF,KAAKa,gBAAkB6qC,EAAsB7qC,eAAiB8qC,EAA0BzhC,IAAI,SAAC5L,GAAQ,OAAOA,EAAEuC,gBAAkBmf,SAAS5a,EAAGpF,KAAKa,iBAAoBuE,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cACvS07C,EAAiBX,IAA6Bx2C,EAAGpF,KAAKa,gBAAkB+6C,EAAyBh7C,QAAQC,eAAiB+6C,EAAyBhQ,aAAa1hC,IAAI,SAAC5L,GAAQ,OAAOA,EAAEuC,gBAAkBmf,SAAS5a,EAAGpF,KAAKa,iBAAmBuE,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cACtWsrC,EAAc8P,IAAiBlQ,GAAiB3mC,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,gBAAkBuE,EAAGqlC,GAAG5pC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,eAAkB4qC,GAA4BrmC,EAAGqlC,GAAG5pC,gBAAkB4qC,EAAyB7qC,QAAQC,eAAiBk7C,EAAY52C,OAAO,SAAA+2C,GAAG,OAAIA,EAAIlQ,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,gBAAe7H,OAAO,GACvYozC,EAAa6P,IAAiBlQ,IAAkBqQ,GAAuBh3C,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYoD,QAAQC,eAAiBk7C,EAAY52C,OAAO,SAAA+2C,GAAG,OAAIA,EAAIlQ,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,gBAAe7H,QAAUoM,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,cAC9S27C,EAAeT,EAAY/iD,OAAO,GAAK+iD,EAAY52C,OAAO,SAAA+2C,GAAG,OAAI1+C,EAAY+C,UAAU2J,IAAI,SAAA/S,GAAC,OAAIA,EAAEyJ,QAAQC,gBAAemf,SAASk8B,EAAIlQ,gBAAgBnrC,iBAAiB7H,OAAO,GAAKoM,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cAGjP4kC,EAAmBoW,GAAoBA,EAAiBj7C,QAAUi7C,EAAiBj7C,QAAUpD,EAAYy6B,KAAKr3B,QAG9G67C,EAAUV,EAAY70B,KAAM,SAAA9hB,GAAE,OAAKA,EAAG4mC,gBAAgBnrC,gBAAkB06C,EAAkB36C,QAAQC,gBAAkBuE,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,iBAC7N67C,OAAwB14B,IAAZy4B,EAEZE,EAAmBD,GAAat3C,EAAG4mC,gBAAgBnrC,gBAAkB4kC,EAAiB5kC,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkB26C,EAAkB56C,QAAQC,eAAiBuE,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBnI,EAAK4M,MAAMF,EAAG5G,OAAO2K,GAAG,GAChQyzC,EAAkBF,GAAat3C,EAAG4mC,gBAAgBnrC,gBAAkB4kC,EAAiB5kC,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAGpF,KAAKa,gBAAkB26C,EAAkB56C,QAAQC,eAAiBnI,EAAK4M,MAAMF,EAAG5G,OAAO2K,GAAG,GAE/P0zC,EAAmBH,GAAat3C,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYoD,QAAQC,eAAiBuE,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkB46C,EAAqB76C,QAAQC,eAAiBnI,EAAK4M,MAAMF,EAAG5G,OAAO2K,GAAG,GACtQ2zC,EAAoBJ,GAAat3C,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYoD,QAAQC,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAGpF,KAAKa,gBAAkB46C,EAAqB76C,QAAQC,eAAiBnI,EAAK4M,MAAMF,EAAG5G,OAAO2K,GAAG,GAEvQ4zC,EAAeL,GAAat3C,EAAG4mC,gBAAgBnrC,gBAAkB06C,EAAkB36C,QAAQC,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAGpF,KAAKa,gBAAkBy6C,EAAiB16C,QAAQC,eAAiBnI,EAAK4M,MAAMF,EAAG5G,OAAO2K,GAAG,GACpQ6zC,EAAgBN,GAAat3C,EAAG4mC,gBAAgBnrC,gBAAkB06C,EAAkB36C,QAAQC,eAAiBuE,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkBy6C,EAAiB16C,QAAQC,eAAiBnI,EAAK4M,MAAMF,EAAG5G,OAAO2K,GAAG,GAErQ8zC,EAAqB73C,EAAG4mC,gBAAgBnrC,gBAAkB06C,EAAkB36C,QAAQC,gBAAkBm8C,IAAkBJ,GAAmEx3C,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,cACxOq8C,EAAoB93C,EAAG4mC,gBAAgBnrC,gBAAkB06C,EAAkB36C,QAAQC,gBAAkBk8C,IAAiBJ,GAAoEv3C,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,cAErOs8C,GAAeT,IAAczQ,IAAqBuQ,IAAiBF,IAAuBn4C,EAAaiB,EAAGI,OAASJ,EAAGpF,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cAC/OwrC,GAAYqQ,IAAcxQ,IAAwBqQ,IAAmBH,IAAwBj4C,EAAaiB,EAAGI,OAASJ,EAAGqlC,GAAG5pC,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAAiBuE,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cAMtP,GAAIorC,GAAoBC,GAAuBH,GAAiBI,GAAeC,GAAcC,GAAY8Q,GAAeX,GAAgBD,GAAkBI,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAkB,CAEjT,IAAI/2C,EAAS,KACT6vC,EAAUxwC,EAAGI,KAEb2mC,EACFpmC,EAAS,UACAqmC,EACTrmC,EAAS,SACAgmC,GAAiBwQ,EAC1Bx2C,EAAS,UACAkmC,EACTlmC,EAAS,OACAmmC,EACTnmC,EAAS,UACAsmC,EACTtmC,EAAS,OACAo3C,EACTp3C,EAAS,UACAy2C,EACTz2C,EAAS,WACA42C,EACT52C,EAAS,UACA62C,EACT72C,EAAS,WACAg3C,EACTh3C,EAAS,aACAi3C,EACTj3C,EAAS,cACA82C,EACT92C,EAAS,iBACA+2C,EACT/2C,EAAS,kBACAm3C,EACTn3C,EAAS,kBACAk3C,IACTl3C,EAAS,oBAGX,IAAI0qC,EAAc,KAoBlB,GAnBIiM,IACF9G,GAAW,IAAIxwC,EAAG4jB,YAClBynB,EAAc/3C,EAAKqQ,iBAAiB0zC,EAAQj+C,MAAM+8C,EAAkBv5C,WAG/Dk7C,GAAqBD,KACxBrH,GAAS,IAAI7vC,IAMbX,EAAG4mC,gBAAgBnrC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cAChE8H,EAAgB,GACP+zC,IACT/zC,EAAgB/C,SAASR,EAAGg4C,eAI1Bj5C,EAAayxC,GAEf,OAAQzxC,EAAayxC,GAAS7vC,QAC5B,IAAK,UACC5B,EAAayxC,GAAS7vC,SAAWA,GAAUqmC,IAC7CjoC,EAAayxC,GAASyH,WAAa3kD,EAAKqQ,iBAAiB3D,EAAG5G,MAAMmK,IAEtE,MACA,QACE,IAAK8zC,EAAQ,CACX,IAAMa,EAAWn5C,EAAayxC,GAASp3C,MAAMwH,KAAKtN,EAAKqQ,iBAAiB3D,EAAG5G,MAAMmK,IACjFxE,EAAayxC,GAASp3C,MAAQ8+C,QAMpC,GAAIJ,GAAqBD,EAClB5B,EAA0Br7B,SAAS5a,EAAGI,KAAK3E,iBAC9C4vC,EAAc/3C,EAAKqQ,iBAAiB3D,EAAG5G,MAAM+8C,EAAkBv5C,UAC/Do5C,EAAkBl6C,KAAlBjK,OAAAsmD,EAAA,EAAAtmD,CAAA,GAA2BmO,EAA3B,CAA+BwwC,UAASvwC,QAAOy2C,YAAWrL,cAAa1qC,SAAQvH,MAAO9F,EAAKqQ,iBAAiB3D,EAAG5G,MAAMmK,YAWvH,OARAxE,EAAayxC,GAAb3+C,OAAAsmD,EAAA,EAAAtmD,CAAA,GAA6BmO,EAA7B,CAAiCwwC,UAASvwC,QAAOy2C,YAAWrL,cAAa1qC,SAAQvH,MAAO9F,EAAKqQ,iBAAiB3D,EAAG5G,MAAMmK,KAGlH0yC,EAA0Br7B,SAAS5a,EAAGI,KAAK3E,gBAC9Cw6C,EAA0Bn6C,KAAKkE,EAAGI,KAAK3E,eAIjCkF,GACN,IAAK,WACH,IAAMy3C,EAAOzB,EAAY52C,OAAO,SAAA+2C,GAAG,OAAKA,IAAQ92C,IAChD,GAAIo4C,EAAKxkD,OAAO,EAAE,CAChB,IAAMkjD,EAAMsB,EAAK,GACjBr5C,EAAayxC,GAAS6H,eAAiB/kD,EAAKqQ,iBAAiBmzC,EAAI19C,MAAM09C,EAAIkB,cAC3Ej5C,EAAayxC,GAAS5sB,YAAckzB,EAAIlzB,YAE5C,MACA,IAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACH7kB,EAAayxC,GAAS5sB,YAAc3jB,QAWlD+1C,EAAkBniD,QAAS,SAAAmM,GACpBi2C,EAA0Br7B,SAAS5a,EAAGI,KAAK3E,iBAC9CsD,EAAaiB,EAAGwwC,SAAWxwC,MAI3B+1C,EAxMe,CAAAQ,EAAA12C,KAAA,gBAAA02C,EAAA12C,KAAA,GAyMIvM,EAAKglD,6BAA6Bv5C,EAAaR,EAAc+2C,GAzMjE,QAyMjBv2C,EAzMiBw3C,EAAA1zC,KAAA,eAAA0zC,EAAA1rC,OAAA,SA8MZ9L,GA9MY,yBAAAw3C,EAAAp1C,SAAA20C,EAAAxjD,SAnpCH,gBAAAimD,GAAA,OAAA1C,EAAAx0C,MAAA/O,KAAAgP,YAAA,GAAAhP,KAm2ClBkmD,qBAAuB,SAACC,EAAMzuC,GAE5B,IAAMlL,EAAUxL,EAAKf,OAASe,EAAKf,MAAMuM,QAAUxL,EAAKf,MAAMuM,QAAU,KAClEjH,EAAgBvE,EAAKf,OAASe,EAAKf,MAAMsF,cAAgBvE,EAAKf,MAAMsF,cAAgB,KAE1F,IAAKiH,IAAYjH,IAAkBvE,EAAKf,MAAMqM,kBAAoBtL,EAAKf,MAAMqM,gBAAgB/G,GAC3F,OAAO,EAGT,IACM6gD,EADcplD,EAAKf,MAAMqM,gBAAgB/G,GAClBg7B,KAAK5yB,MAE9B04C,EAAYrlD,EAAKslD,wBAChBD,EAAU75C,KACb65C,EAAU75C,GAAW,IAGlB65C,EAAU75C,GAAS45C,KACtBC,EAAU75C,GAAS45C,GAAY,IAGjCC,EAAU75C,GAAS45C,GAAUD,GAASzuC,EACtC1W,EAAKulD,yBAAyBF,IAz3CdrmD,KA23ClBumD,yBAA2B,SAAA9iD,GACzBzC,EAAKka,gBAAgB,eAAenP,KAAKC,UAAUvI,KA53CnCzD,KAi4ClBsmD,sBAAwB,WAAmD,IAAlD95C,EAAkDwC,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAA1C,KAAKo3C,EAAqCp3C,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAA5B,KAAKzJ,EAAuByJ,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KAC1Dq3C,EAAYrlD,EAAKwlD,cAAc,gBAAe,EAAK,IACnD/iD,EAAezC,EAAKf,MAAMwD,aAAXlE,OAAAsmD,EAAA,EAAAtmD,CAAA,GAA+ByB,EAAKf,MAAMwD,cAAiB,GAC5E2oB,EAASi6B,EAsBb,OApBI75C,IACE65C,EAAU75C,IACZ4f,EAASi6B,EAAU75C,GACf45C,IACFh6B,EAASA,EAAOg6B,GAAYh6B,EAAOg6B,GAAY,GAE3C7gD,GACFhG,OAAO8B,KAAKoC,GAAclC,QAAQ,SAAA4kD,GAChC,IAAMz4C,EAAKjK,EAAa0iD,IACnB/5B,EAAO+5B,IAAUz4C,EAAGC,OAASD,EAAGC,MAAMqF,gBAAkBzN,EAAcyN,gBACzEoZ,EAAO+5B,GAAS1iD,EAAa0iD,QAMrC/5B,EAAS,IAINA,GA15CSpsB,KA45ClBgmD,6BA55CkB,eAAAS,EAAAlnD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA45Ca,SAAA05C,EAAOj6C,GAAP,IAAAR,EAAA+2C,EAAA2D,EAAAN,EAAAO,EAAAC,EAAAC,EAAAlD,EAAAmD,EAAA/3C,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA45C,GAAA,cAAAA,EAAA15C,KAAA05C,EAAAz5C,MAAA,cAAoBtB,EAApB86C,EAAAzlD,OAAA,QAAAgrB,IAAAy6B,EAAA,GAAAA,EAAA,GAAkC,GAAG/D,IAArC+D,EAAAzlD,OAAA,QAAAgrB,IAAAy6B,EAAA,KAAAA,EAAA,GAExB96C,GAAkBA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKL,EAAKf,MAAMqM,kBAGrCq6C,EAAa,GAI4B,kBAHzCN,EAAYrlD,EAAKslD,yBAGAtlD,EAAKf,MAAMuM,WAC9B65C,EAAUrlD,EAAKf,MAAMuM,SAAW,IAI5Bo6C,EAAoB,GACpBC,EAAsB,GACtBC,EAAuB9lD,EAAK4Q,gBAAgB,CAAC,QAAQ,oBAC3DrS,OAAO8B,KAAKylD,GAAsBvlD,QAAS,SAAAoM,GACzC,IAAMw2C,EAAmB2C,EAAqBn5C,GACxCs5C,EAAkBjmD,EAAK4Q,gBAAgB,CAAC,QAAQ,SAASuyC,EAAiB1sB,YAC1EyvB,EAAmBD,EAAgB/9C,QAAQC,cACjDy9C,EAAkBM,GAAoBD,EACtCL,EAAkBM,GAAkBv5C,MAAQw2C,EAAiB1sB,UAC7DovB,EAAoBr9C,KAAK09C,KAGrBtD,EAAmB5iD,EAAK4Q,gBAAgB,CAAC,QAAQ,gBA3B1Bo1C,EAAAz5C,KAAA,GAgCvBvM,EAAK4L,aAAaX,EAAlB,eAAAk7C,EAAA5nD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAgC,SAAAo6C,EAAO7hD,GAAP,IAAAO,EAAAsgD,EAAAhC,EAAAiD,EAAAn6C,EAAA,OAAAsd,EAAApqB,EAAAgN,KAAA,SAAAk6C,GAAA,cAAAA,EAAAh6C,KAAAg6C,EAAA/5C,MAAA,UAE9BzH,EAAc9E,EAAKf,MAAMqM,gBAAgB/G,GACzC6gD,EAAWtgD,EAAYy6B,KAAK5yB,MAC5By2C,EAAYt+C,EAAYy6B,KAAK5yB,MAGoB,kBAA5C04C,EAAUrlD,EAAKf,MAAMuM,SAAS45C,KACvCC,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAY,IAGtCiB,EAX8B9nD,OAAAsmD,EAAA,EAAAtmD,CAAA,GAWf8mD,EAAUrlD,EAAKf,MAAMuM,SAAS45C,MAE7Cl5C,EAAc3N,OAAOiO,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUpI,OACxD2H,EAAY5L,OAdK,CAAAgmD,EAAA/5C,KAAA,eAAA+5C,EAAA/5C,KAAA,EAgB5BvM,EAAK4L,aAAaM,EAAlB,eAAAq6C,EAAAhoD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8B,SAAAw6C,EAAO95C,EAAGG,GAAV,IAAAs4C,EAAAsB,EAAA/4C,EAAAC,EAAA+4C,EAAA1O,EAAA2O,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7D,EAAA8D,EAAAla,EAAAma,EAAA,OAAA19B,EAAApqB,EAAAgN,KAAA,SAAA+6C,GAAA,cAAAA,EAAA76C,KAAA66C,EAAA56C,MAAA,UAC5B44C,EAD4B,KAAAn8C,OACf0D,EAAGS,UADY,OAE5Bs5C,EAAWpB,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAASE,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAASz4C,EAE/GgB,EAAa,MAEb+4C,EAAS/4C,YAAe1N,EAAK4M,MAAM65C,EAAS/4C,YAAYE,QAN1B,CAAAu5C,EAAA56C,KAAA,QAOhCmB,EAAa1N,EAAK4M,MAAM65C,EAAS/4C,YAPDy5C,EAAA56C,KAAA,uBAAA46C,EAAA56C,KAAA,EASbvM,EAAK62C,kBAAkB/xC,EAAY4H,EAAGsM,YAAYtM,EAAGS,WATxC,OAShCO,EATgCy5C,EAAA53C,KAUhCk3C,EAAS/4C,WAAaA,EAVU,QAa9BC,EAAa3N,EAAK4M,MAAMF,EAAG5G,OAC3B4gD,EAAmBh5C,EAAWpF,MAAMqF,GAGnC84C,EAAS/0B,kBACZ+0B,EAAS/0B,gBAAkBhlB,EAAGI,MAlBEq6C,EAAA37B,GAsB1B9e,EAAGW,OAtBuB85C,EAAA56C,KAuB3B,SAvB2B46C,EAAA37B,GAAA,GAwB3B,YAxB2B27B,EAAA37B,GAAA,GAyB3B,SAzB2B27B,EAAA37B,GAAA,GA0B3B,YA1B2B27B,EAAA37B,GAAA,GA2B3B,YA3B2B27B,EAAA37B,GAAA,GAmC3B,YAnC2B27B,EAAA37B,GAAA,GAoC3B,WApC2B27B,EAAA37B,GAAA,GA2C3B,aA3C2B27B,EAAA37B,GAAA,GAkD3B,YAlD2B27B,EAAA37B,GAAA,GAmD3B,aAnD2B27B,EAAA37B,GAAA,GA2D3B,oBA3D2B27B,EAAA37B,GAAA,GA4D3B,qBA5D2B27B,EAAA37B,GAAA,GAqE3B,eArE2B27B,EAAA37B,GAAA,GAsE3B,gBAtE2B27B,EAAA37B,GAAA,GAkH3B,mBAlH2B27B,EAAA37B,GAAA,GAmH3B,oBAnH2B27B,EAAA37B,GAAA,2BA4BzBi7B,EAASr5C,cACZq5C,EAAS94C,WAAaA,EACtB84C,EAAS3gD,MAAQ4gD,EACjBD,EAASr5C,YAAcs5C,EACvBD,EAASn2B,YAAc/rB,GAhCK4iD,EAAA5vC,OAAA,2BAqCzBkvC,EAASr5C,cACZq5C,EAAS3gD,MAAQ6H,EACjB84C,EAASr5C,YAAcO,EACvB84C,EAAS94C,WAAaA,EAAWsL,IAAIvL,IAxCTy5C,EAAA5vC,OAAA,2BA4CzBkvC,EAASr5C,cACZq5C,EAAS94C,WAAaA,EACtB84C,EAASr5C,YAAcs5C,EACvBD,EAAS3gD,MAAQ2gD,EAAS1B,gBA/CEoC,EAAA5vC,OAAA,uBAoDzBkvC,EAASr5C,YApDgB,CAAA+5C,EAAA56C,KAAA,gBAAA46C,EAAA56C,KAAA,GAqDEvM,EAAKonD,mBAAmB16C,EAAGsM,aArD7B,QAqDtBg/B,EArDsBmP,EAAA53C,KAsD5Bk3C,EAAS94C,WAAaA,EACtB84C,EAASr5C,YAAcs5C,EACvBD,EAASzO,gBAAkBA,EAxDC,eAAAmP,EAAA5vC,OAAA,uBA6DzBkvC,EAASzO,gBA7DgB,CAAAmP,EAAA56C,KAAA,gBAAA46C,EAAA56C,KAAA,GA8DEvM,EAAKonD,mBAAmB16C,EAAGsM,aA9D7B,QA8DtBg/B,EA9DsBmP,EAAA53C,KA+D5Bk3C,EAASzO,gBAAkBA,EAC3ByO,EAASr5C,YAAcpN,EAAK4M,MAAM65C,EAAS1O,aAAazvC,MAAMm+C,EAASzO,iBAhE3C,eAmE9ByO,EAAS94C,WAAa3N,EAAK4M,MAAM,GAnEHu6C,EAAA5vC,OAAA,uBAuEzBkvC,EAASzO,gBAvEgB,CAAAmP,EAAA56C,KAAA,gBAAA46C,EAAA56C,KAAA,GAwEEvM,EAAKonD,mBAAmB16C,EAAGsM,aAxE7B,QAwEtBg/B,EAxEsBmP,EAAA53C,KAyE5Bk3C,EAASzO,gBAAkBA,EAzEC,WA4EzByO,EAASr5C,YA5EgB,CAAA+5C,EAAA56C,KAAA,YA8E5Bk6C,EAASr5C,YAAcpN,EAAK4M,MAAM,GAClC65C,EAAS94C,WAAa3N,EAAK4M,MAAM,IAEV+4C,EAAWj5C,EAAGwwC,SAjFT,CAAAiK,EAAA56C,KAAA,SAAA46C,EAAAhgB,GAiFoBwe,EAAWj5C,EAAGwwC,SAjFlCiK,EAAA56C,KAAA,wBAAA46C,EAAA56C,KAAA,GAiFoD,IAAIoK,QAAJ,eAAA0wC,EAAA9oD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAAs7C,EAAOvwC,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAAm7C,GAAA,cAAAA,EAAAj7C,KAAAi7C,EAAAh7C,MAAA,OAC3FvM,EAAKf,MAAMiY,KAAKC,IAAIqwC,sBAAsB96C,EAAGI,KAAK,SAACsK,EAAI1K,GACjD0K,GACFJ,EAAOI,GAETL,EAAQrK,KALiF,wBAAA66C,EAAA15C,SAAAy5C,EAAAtoD,SAAb,gBAAAyoD,EAAAC,GAAA,OAAAL,EAAAt5C,MAAA/O,KAAAgP,YAAA,IAjFpD,QAAAm5C,EAAAhgB,GAAAggB,EAAA53C,KAAA,SAiFtBs3C,EAjFsBM,EAAAhgB,MA6FrBwe,EAAWj5C,EAAGwwC,WACjByI,EAAWj5C,EAAGwwC,SAAW2J,GAGrBC,EAAeD,EAAenW,KAAKjkC,OAAQ,SAAA2kB,GAAG,OAAKy0B,EAAoBv+B,SAAS8J,EAAIlpB,QAAQC,gBAAkBipB,EAAIu2B,OAAOv2B,EAAIu2B,OAAOrnD,OAAO,GAAG6H,gBAAhC,4BAAAa,OAA8E45C,EAAiB16C,QAAQmpC,QAAQ,IAAI,IAAIlpC,iBAE3OnI,EAAK0Y,UAAU,eAAeouC,GAE1BA,GAAgBA,EAAaxmD,QAC/BwmD,EAAavmD,QAAS,SAAA6wB,GACpB,IAAIhkB,EAAcF,SAASkkB,EAAIjuB,KAAK,IAC9BykD,EAAmBhC,EAAkBx0B,EAAIlpB,QAAQC,eACjD8H,EAAgB23C,EAAiBt+C,SACvC8D,EAAcpN,EAAKqQ,iBAAiBjD,EAAY6C,GAChDw2C,EAASr5C,YAAcq5C,EAASr5C,YAAYE,KAAKF,GACjDpN,EAAK0Y,UAAU,oBAAoBhM,EAAGI,KAAK,IAAI86C,EAAiBj7C,MAAMS,EAAY7E,QAAQ,GAAGk+C,EAASr5C,YAAY7E,QAAQ,OA5GpG,eAAA4+C,EAAA5vC,OAAA,uBAoHzBkvC,EAASzO,gBApHgB,CAAAmP,EAAA56C,KAAA,gBAAA46C,EAAA56C,KAAA,GAqHEvM,EAAKonD,mBAAmB16C,EAAGsM,aArH7B,QAqHtBg/B,EArHsBmP,EAAA53C,KAsH5Bk3C,EAASzO,gBAAkBA,EAtHC,WAyH9ByO,EAASr5C,YAAcpN,EAAK4M,MAAM65C,EAAS3gD,OAEtC2gD,EAAS94C,WA3HgB,CAAAw5C,EAAA56C,KAAA,aA6HLo5C,EAAWj5C,EAAGwwC,SA7HT,CAAAiK,EAAA56C,KAAA,SAAA46C,EAAAU,GA6HoBlC,EAAWj5C,EAAGwwC,SA7HlCiK,EAAA56C,KAAA,wBAAA46C,EAAA56C,KAAA,GA6HoD,IAAIoK,QAAJ,eAAAmxC,EAAAvpD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAA+7C,EAAOhxC,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAA47C,GAAA,cAAAA,EAAA17C,KAAA07C,EAAAz7C,MAAA,OAC3FvM,EAAKf,MAAMiY,KAAKC,IAAIqwC,sBAAsB96C,EAAGI,KAAK,SAACsK,EAAI1K,GACjD0K,GACFJ,EAAOI,GAETL,EAAQrK,KALiF,wBAAAs7C,EAAAn6C,SAAAk6C,EAAA/oD,SAAb,gBAAAipD,EAAAC,GAAA,OAAAJ,EAAA/5C,MAAA/O,KAAAgP,YAAA,IA7HpD,QAAAm5C,EAAAU,GAAAV,EAAA53C,KAAA,SA6HtBs3C,EA7HsBM,EAAAU,MAuIpB1E,EAAmBnjD,EAAK4Q,gBAAgB,CAAC,QAAQ,kBAAkBwyC,IACnE6D,EAAoB9D,GAAoBA,EAAiB75C,SAAW65C,EAAiB75C,SAAW,GAChGyjC,EAAmBoW,GAAoBA,EAAiBj7C,QAAUi7C,EAAiBj7C,QAAUpD,EAAYy6B,KAAKr3B,QAG/Gy9C,EAAWj5C,EAAGwwC,WACjByI,EAAWj5C,EAAGwwC,SAAW2J,IAGrBC,EAAeD,EAAenW,KAAKjkC,OAAQ,SAAA2kB,GAAG,OAAKA,EAAIlpB,QAAQC,gBAAgB4kC,MACjE+Z,EAAaxmD,SAC/BqN,EAAaT,SAAS45C,EAAa,GAAG3jD,KAAK,IAC3CwK,EAAa3N,EAAKqQ,iBAAiB1C,EAAWs5C,GAC9CR,EAAS94C,WAAaA,IApJE,uBAAAw5C,EAAA5vC,OAAA,oBA8JlCkvC,EAAS95C,MAAQpI,EAGjBkH,EAAaiB,EAAGwwC,SAAWuJ,EAG3BpB,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAASsB,SAG1CJ,EAASlB,GAvKkB,yBAAAgC,EAAAt5C,SAAA24C,EAAAxnD,SAA9B,gBAAAmpD,EAAAC,GAAA,OAAA7B,EAAAx4C,MAAA/O,KAAAgP,YAAA,IAhB4B,WA4LhCg0C,EA5LgC,CAAAsE,EAAA/5C,KAAA,gBAAA+5C,EAAA/5C,KAAA,GA6LbvM,EAAKgiD,iBAAiBv2C,EAAa,CAAClH,GAAevE,EAAKf,MAAMwD,cA7LjD,QA6LlCgJ,EA7LkC66C,EAAA/2C,KAAA,yBAAA+2C,EAAAz4C,SAAAu4C,EAAApnD,SAAhC,gBAAAqpD,GAAA,OAAAlC,EAAAp4C,MAAA/O,KAAAgP,YAAA,IAhCuB,eAkOzBq3C,GACFrlD,EAAKulD,yBAAyBF,GAnOHW,EAAAzuC,OAAA,SAsOtB9L,GAtOsB,yBAAAu6C,EAAAn4C,SAAA63C,EAAA1mD,SA55Cb,gBAAAspD,GAAA,OAAA7C,EAAA13C,MAAA/O,KAAAgP,YAAA,GAAAhP,KAooDlBgjD,iBApoDkB,eAAAuG,EAAAhqD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAooDC,SAAAw8C,EAAO/8C,GAAP,IAAAR,EAAAw9C,EAAApD,EAAApR,EAAAyU,EAAA16C,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAu8C,GAAA,cAAAA,EAAAr8C,KAAAq8C,EAAAp8C,MAAA,cAAoBtB,EAApBy9C,EAAApoD,OAAA,QAAAgrB,IAAAo9B,EAAA,GAAAA,EAAA,GAAkC,GAAGD,EAArCC,EAAApoD,OAAA,QAAAgrB,IAAAo9B,EAAA,GAAAA,EAAA,GAAkD,KAE9Dz9C,GAAkBA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKL,EAAKf,MAAMqM,mBAGrC+5C,EAAYrlD,EAAKwlD,cAAc,gBAAe,EAAK,KAGxCxlD,EAAKf,MAAMuM,WACxB65C,EAAUrlD,EAAKf,MAAMuM,SAAW,IAGlCC,EAAelN,OAAOC,OAAO,GAAGiN,GAE1BwoC,EAAYj0C,EAAKf,MAAMmzB,QAAQmiB,QAAQtxC,IAAMjD,EAAK4Q,gBAAgB,CAAC,UAAU,oBAflE+3C,EAAAp8C,KAAA,EAmBXvM,EAAK4L,aAAaX,EAAlB,eAAA29C,EAAArqD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAgC,SAAA68C,EAAOtkD,GAAP,IAAAO,EAAAsgD,EAAA,OAAA57B,EAAApqB,EAAAgN,KAAA,SAAA08C,GAAA,cAAAA,EAAAx8C,KAAAw8C,EAAAv8C,MAAA,cAE9BzH,EAAc9E,EAAKf,MAAMqM,gBAAgB/G,GACzC6gD,EAAWtgD,EAAYy6B,KAAK5yB,MAG7B04C,EAAUrlD,EAAKf,MAAMuM,SAAS45C,KACjCC,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAY,IAG5CqD,EAAeA,GAAgBlqD,OAAOiO,OAAOi8C,GAAcnoD,OAASmoD,EAAezoD,EAAKslD,sBAAsBtlD,EAAKf,MAAMuM,QAAQ45C,EAAS7gD,GAVtGukD,EAAAv8C,KAAA,EA6B9BvM,EAAK4L,aAAarN,OAAO8B,KAAKooD,GAA9B,eAAAM,EAAAxqD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA4C,SAAAg9C,EAAO7D,EAAMp9C,GAAb,IAAA2E,EAAAu8C,EAAAC,EAAAC,EAAAjtB,EAAAktB,EAAAC,EAAA7vC,EAAA8vC,EAAAjW,EAAA/pC,EAAAigD,EAAA77C,EAAA87C,EAAAC,EAAAC,EAAAr8C,EAAAs8C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjX,EAAAM,EAAA4W,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA9gC,EAAApqB,EAAAgN,KAAA,SAAAm+C,GAAA,cAAAA,EAAAj+C,KAAAi+C,EAAAh+C,MAAA,WAC1CG,EAAK+7C,EAAatD,KAGZz4C,EAAGC,OAASD,EAAGC,MAAMqF,gBAAkBzN,EAAcyN,iBAAkBtF,EAAGunC,WAAa/mC,SAASR,EAAGunC,aAAe/mC,SAAS+mC,IAJvF,CAAAsW,EAAAh+C,KAAA,eAAAg+C,EAAAhzC,OAAA,UAKvC,GALuC,UAQ1C0xC,EAAa5D,GAAaA,EAAUrlD,EAAKf,MAAMuM,UAAY65C,EAAUrlD,EAAKf,MAAMuM,SAAS45C,IAAaC,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAE9I+D,EAAiB,CACrBsB,cAAc,UACdC,gBAAgB,SAChBC,kBAAkB,UAClBC,oBAAoB,UACpBC,sBAAsB,UACtBC,uBAAuB,UACvBC,uBAAuB,UACvBC,yBAAyB,UACzBC,0BAA0B,WAEtB7B,EAAgB,CAAC,UAAU,WAC3BjtB,EAA4B,YAAdxvB,EAAGK,OACjBq8C,EAAYD,EAAc7hC,SAAS5a,EAAGK,QACtCs8C,EAAyB,2BAAd38C,EAAG+rB,OACdjf,EAAS9M,EAAGglB,gBAAkBhlB,EAAGglB,gBAAkB,KACnD43B,EAAkB/qD,OAAO8B,KAAK6oD,GAAgB5hC,SAAS5a,EAAG+rB,UAG5Djf,GAAU/N,EAAa+N,IAAW/N,EAAa+N,GAAQ9L,YA7BX,CAAA68C,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UA8BvC,GA9BuC,aAiC5C6xC,GAAa5vC,IAAW/N,EAAa+N,IAAW8vC,GAAmB58C,EAAGilB,OAAOrxB,QAjCjC,CAAAiqD,EAAAh+C,KAAA,gBAmCxC8mC,EAA8C,YAA9B6V,EAAex8C,EAAG+rB,QAClCnvB,EAAW+pC,EAAgB,GAAKvuC,EAAYwE,SAClDmC,EAAY,IAAAzC,OAAK0D,EAAGu+C,UAAa,CAC/Bl+C,OAAO,UACPJ,MAAMpI,EACN8I,OAAO67C,EAAex8C,EAAG+rB,QACzBtrB,UAAUD,SAASR,EAAGu+C,QAAQ,KAC9Bn+C,KAAK0M,EAAS9M,EAAGglB,gBAAkB,KACnCpB,YAAY+iB,EAAgBvuC,EAAYy6B,KAAK5yB,MAAQpI,EACrDuB,MAAO4G,EAAG5G,MAAQ4G,EAAG5G,MAAQ9F,EAAKqQ,iBAAiB3D,EAAGilB,OAAO,GAAGroB,GAAU4P,YA5C9BqxC,EAAAhzC,OAAA,UA+CvC,GA/CuC,WAmD3C2kB,GAAgB1iB,GAAW8vC,EAnDgB,CAAAiB,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UAoDvC,GApDuC,WAuD5CgyC,EAAS78C,EAAG68C,OAAS78C,EAAG68C,OAAS,KAvDW,CAAAgB,EAAAh+C,KAAA,gBAAAg+C,EAAAh+C,KAAA,GA2D9B,IAAIoK,QAAJ,eAAAu0C,EAAA3sD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAAm/C,EAAOp0C,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAAg/C,GAAA,cAAAA,EAAA9+C,KAAA8+C,EAAA7+C,MAAA,OAC3BvM,EAAKf,MAAMiY,KAAKC,IAAIV,eAAe/J,EAAGglB,gBAAgB,SAACta,EAAIi0C,GACrDj0C,GACFJ,EAAOI,GAETL,EAAQs0C,KALiB,wBAAAD,EAAAv9C,SAAAs9C,EAAAnsD,SAAb,gBAAAssD,EAAAC,GAAA,OAAAL,EAAAn9C,MAAA/O,KAAAgP,YAAA,IA3D8B,QA2D9Cu7C,EA3D8CgB,EAAAh7C,KAAA,WAwE3Cg6C,IAAYF,GAAYE,EAAOjiD,KAAKa,gBAAkBnI,EAAKf,MAAMuM,QAAQrD,eAxE9B,CAAAoiD,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UAyEvC,GAzEuC,eAAAgzC,EAAAh+C,KAAA,GA4EvBvM,EAAK62C,kBAAkB/xC,EAAYykD,EAAOvwC,YAAYuwC,EAAOp8C,WA5EtC,QA4E1CO,EA5E0C68C,EAAAh7C,KA8EhDg6C,EAAOx8C,OAAS,YAChBw8C,EAAOl8C,OAAS67C,EAAex8C,EAAG+rB,QAClC8wB,EAAOjW,gBAAkBxuC,EAAYoD,QACrCqhD,EAAOp8C,UAAYD,SAASR,EAAGu+C,QAAQ,KAEnCzB,EAAU,KAnFkCe,EAAA/+B,GAoFxC9e,EAAG+rB,OApFqC8xB,EAAAh+C,KAqFzC,kBArFyCg+C,EAAA/+B,GAAA,GAsFzC,wBAtFyC++B,EAAA/+B,GAAA,GAgHzC,oBAhHyC++B,EAAA/+B,GAAA,GA+HzC,2BA/HyC++B,EAAA/+B,GAAA,GAkNzC,8BAlNyC++B,EAAA/+B,GAAA,GAmNzC,6BAnNyC++B,EAAA/+B,GAAA,GAoNzC,0BApNyC++B,EAAA/+B,GAAA,GAqNzC,2BArNyC++B,EAAA/+B,GAAA,GAsNzC,sBAtNyC++B,EAAA/+B,GAAA,wBAuFvC9e,EAAGilB,OAvFoC,CAAA44B,EAAAh+C,KAAA,gBAwFtC08C,IACF5D,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAASz4C,GAzFT69C,EAAAhzC,OAAA,UA2FnC,GA3FmC,WA8FxCgyC,EAAOxX,GAAG5pC,gBAAkBrD,EAAYy6B,KAAKr3B,QAAQC,cA9Fb,CAAAoiD,EAAAh+C,KAAA,gBAgGtC08C,UACK5D,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAjGPoF,EAAAhzC,OAAA,UAoGnC,GApGmC,WAuG5CiyC,EAAU98C,EAAGilB,OAAS3xB,EAAKqQ,iBAAiB3D,EAAGilB,OAAO,GAAG7sB,EAAYwE,UAAU4P,WAAa,EAvGhD,CAAAqxC,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UA0GnC,GA1GmC,eA6G5CgyC,EAAOzjD,MAAQ0jD,EACfD,EAAOn8C,YAAco8C,EA9GuBe,EAAAhzC,OAAA,wBAiHvC7K,EAAGilB,OAjHoC,CAAA44B,EAAAh+C,KAAA,gBAkHtC08C,IACF5D,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAASz4C,GAnHT69C,EAAAhzC,OAAA,UAqHnC,GArHmC,eAwHvCgyC,EAAO77C,aACJ+7C,EAAqBzpD,EAAKqQ,iBAAiB3D,EAAGilB,OAAO,GAAG,IAAIrpB,MAAMoF,GACxE67C,EAAO77C,WAAaA,EACpB67C,EAAOzjD,MAAQ2jD,EACfF,EAAOn8C,YAAcq8C,GA5HqBc,EAAAhzC,OAAA,wBAgIxCmyC,EAAgCh9C,EAAG2+C,UAAY3+C,EAAG2+C,UAAY,KAhItB,CAAAd,EAAAh+C,KAAA,gBAAAg+C,EAAAh+C,KAAA,GAmIH,IAAIoK,QAAJ,eAAA60C,EAAAjtD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAAy/C,EAAO10C,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAAs/C,GAAA,cAAAA,EAAAp/C,KAAAo/C,EAAAn/C,MAAA,OAClDvM,EAAKf,MAAMiY,KAAKC,IAAIqwC,sBAAsB96C,EAAGglB,gBAAgB,SAACta,EAAI1K,GAC5D0K,GACFJ,EAAOI,GAETL,EAAQrK,KALwC,wBAAAg/C,EAAA79C,SAAA49C,EAAAzsD,SAAb,gBAAA2sD,EAAAC,GAAA,OAAAJ,EAAAz9C,MAAA/O,KAAAgP,YAAA,IAnIG,QAmI1C07C,EAnI0Ca,EAAAh7C,KAAA,WA6IvCm6C,EA7IuC,CAAAa,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UA8InC,GA9ImC,WAkJvC7K,EAAG2+C,YACN3+C,EAAG2+C,UAAY3B,EACXT,IACF5D,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAASz4C,IAIjDW,EAAS,KACTs8C,EAAqC,KACrCC,EAA0C,GACxCC,EAAsB7pD,EAAK4Q,gBAAgB,CAAC,WAAW,UAAU,kBAGnE9L,EAAYi3B,WAAaj3B,EAAYi3B,UAAUC,cAC7C0tB,EAA8BhZ,MAChCiZ,EAAqC7kD,EAAYi3B,UAAUC,YAAY9zB,QAAQmpC,QAAQ,IAAI,IAAIlpC,cAC/FyhD,EAA0CF,EAA8BhZ,KAAKjkC,OAAO,SAACC,GAAS,OAAOA,EAAGxE,QAAQC,gBAAgBrD,EAAYoD,QAAQC,eAAiBuE,EAAGi7C,OAAOj7C,EAAGi7C,OAAOrnD,OAAO,GAAG6H,gBAA9B,4BAAAa,OAA4E2gD,MACxOD,EAA8B9/B,SACvCggC,EAA0CrrD,OAAOiO,OAAOk9C,EAA8B9/B,QAAQnd,OAAO,SAACC,GAAS,OAAOA,EAAGxE,QAAQC,gBAAgBrD,EAAYoD,QAAQC,iBAGnKyhD,EAAwCtpD,SAC1C+M,EAAS,YAKRu8C,EAAwCtpD,SACvCopD,EAA8BhZ,MAChCiZ,EAAqC7kD,EAAYy6B,KAAKr3B,QAAQmpC,QAAQ,IAAI,IAAIlpC,gBAC9EyhD,EAA0CF,EAA8BhZ,KAAKjkC,OAAO,SAACC,GAAS,OAAOA,EAAGxE,QAAQC,gBAAgBrD,EAAYoD,QAAQC,eAAiBuE,EAAGi7C,OAAOj7C,EAAGi7C,OAAOrnD,OAAO,GAAG6H,gBAA9B,4BAAAa,OAA4E2gD,MAGpMrpD,QAAUupD,IACrDF,EAAqCE,EAAoB3hD,QAAQmpC,QAAQ,IAAI,IAAIlpC,cACjFyhD,EAA0CF,EAA8BhZ,KAAKjkC,OAAO,SAACC,GAAS,OAAOA,EAAGxE,QAAQC,gBAAgBrD,EAAYoD,QAAQC,eAAiBuE,EAAGi7C,OAAOj7C,EAAGi7C,OAAOrnD,OAAO,GAAG6H,gBAA9B,4BAAAa,OAA4E2gD,OAE1OD,EAA8B9/B,SACvCggC,EAA0CrrD,OAAOiO,OAAOk9C,EAA8B9/B,QAAQnd,OAAO,SAACC,GAAS,OAAOA,EAAGxE,QAAQC,gBAAgBrD,EAAYoD,QAAQC,iBAGnKyhD,EAAwCtpD,SAC1C+M,EAAS,YAIRu8C,EAAwCtpD,OAhMD,CAAAiqD,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UAiMnC,GAjMmC,WAoMtCuyC,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiB3mD,KAAO+J,SAAS48C,EAAiB3mD,KAAK,IAAO2mD,EAAiB+B,KAAO/B,EAAiB+B,IAAI1oD,KAAQ+J,SAAS48C,EAAiB+B,IAAI1oD,KAAK,IAAM,KAtMpI,CAAAonD,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UAyMnC,GAzMmC,eA4MtCyyC,EAAmBhqD,EAAKqQ,iBAAiB05C,EAAYjlD,EAAYwE,UACvEigD,EAAOl8C,OAASA,EAChBk8C,EAAOzjD,MAAQkkD,EACfT,EAAOn8C,YAAc48C,EA/MuBO,EAAAhzC,OAAA,wBAuNvCzS,EAAYi3B,WAAcj3B,EAAYi3B,UAAUC,YAvNT,CAAAuuB,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UAwNnC,GAxNmC,WA2NxC0yC,EAAqBv9C,EAAG2+C,UAAY3+C,EAAG2+C,UAAY,KA3NX,CAAAd,EAAAh+C,KAAA,gBAAAg+C,EAAAh+C,KAAA,GA8Nd,IAAIoK,QAAJ,eAAAm1C,EAAAvtD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAA+/C,EAAOh1C,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAA4/C,GAAA,cAAAA,EAAA1/C,KAAA0/C,EAAAz/C,MAAA,OACvCvM,EAAKf,MAAMiY,KAAKC,IAAIqwC,sBAAsB96C,EAAGglB,gBAAgB,SAACta,EAAI1K,GAC5D0K,GACFJ,EAAOI,GAETL,EAAQrK,KAL6B,wBAAAs/C,EAAAn+C,SAAAk+C,EAAA/sD,SAAb,gBAAAitD,EAAAC,GAAA,OAAAJ,EAAA/9C,MAAA/O,KAAAgP,YAAA,IA9Nc,QA8N1Ci8C,EA9N0CM,EAAAh7C,KAAA,WAwOvC06C,EAxOuC,CAAAM,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UAyOnC,GAzOmC,WA6OvC7K,EAAG2+C,YACN3+C,EAAG2+C,UAAYpB,EACXhB,IACF5D,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAASz4C,IAI/CsmC,EAAwBluC,EAAYi3B,UAAUU,kBAAkBv0B,QAAQC,cAAckpC,QAAQ,IAAI,IAClGiC,EAAkBxuC,EAAYy6B,KAAKr3B,QAAQC,cAAckpC,QAAQ,IAAI,KACrE6Y,EAA+BD,EAAmBvZ,KAAKjkC,OAAO,SAACC,GAAS,OAAOA,EAAGi7C,OAAOrnD,QAAQ,GAAKoM,EAAGi7C,OAAOj7C,EAAGi7C,OAAOrnD,OAAO,GAAG6H,gBAA9B,4BAAAa,OAA4EgqC,IAA2BtmC,EAAGi7C,OAAOj7C,EAAGi7C,OAAOrnD,OAAO,GAAG6H,gBAA9B,4BAAAa,OAA4EsqC,MAE7PhzC,OAxPU,CAAAiqD,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UAyPnC,GAzPmC,WA4PtC4yC,EAA4BD,EAA6Bp6C,OAEzDs6C,EAAcpqD,EAAKf,MAAMiY,KAAKC,IAAIkmB,IAAI8uB,UAAU,CACpD,CACEC,aAAc,UACd1sD,KAAM,SACNkK,KAAM,YAERugD,EAA0BhnD,KAAKgnD,EAA0BxC,UAEtCyC,EAAYiC,OAtQW,CAAA9B,EAAAh+C,KAAA,gBAAAg+C,EAAAhzC,OAAA,UAuQnC,GAvQmC,eA0QtC8yC,EAAiBD,EAAYiC,OAC7B/B,EAAsBtqD,EAAKqQ,iBAAiBg6C,EAAevlD,EAAYwE,UAC7EigD,EAAOzjD,MAAQwkD,EAAoBpxC,WA5QSqxC,EAAAhzC,OAAA,6BAAAgzC,EAAAhzC,OAAA,sBAkRhDgyC,EAAO77C,WAAaA,EACpB67C,EAAO58C,MAAQpI,EACfglD,EAAOj5B,YAAc/rB,EACrBglD,EAAO57C,WAAaD,EAAWpF,MAAMtI,EAAK4M,MAAM28C,EAAOzjD,QAGvD2F,EAAa+N,GAAU+vC,EAIlB78C,EAAG68C,SACN78C,EAAG68C,OAASA,EACZlE,EAAUrlD,EAAKf,MAAMuM,SAAS45C,GAAUD,GAASz4C,GA9RH,0BAAA69C,EAAA18C,SAAAm7C,EAAAhqD,SAA5C,gBAAAstD,EAAAC,GAAA,OAAAxD,EAAAh7C,MAAA/O,KAAAgP,YAAA,IA7B8B,wBAAA86C,EAAAj7C,SAAAg7C,EAAA7pD,SAAhC,gBAAAwtD,GAAA,OAAA5D,EAAA76C,MAAA/O,KAAAgP,YAAA,IAnBW,cAoVbq3C,GACFrlD,EAAKulD,yBAAyBF,GArVfsD,EAAApxC,OAAA,SAwVV9L,GAxVU,yBAAAk9C,EAAA96C,SAAA26C,EAAAxpD,SApoDD,gBAAAytD,GAAA,OAAAlE,EAAAx6C,MAAA/O,KAAAgP,YAAA,GAAAhP,KA89DlB0iD,kBAAoB,SAACH,GAA8B,IAArBmL,EAAqB1+C,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,IAAAA,UAAA,GAAT7K,EAAS6K,UAAA1N,OAAA,EAAA0N,UAAA,QAAAsd,EAC3CvoB,EAAM2pD,GAAgBnL,EACxBhB,EAAiBvgD,EAAKitC,8BAA8B,iBAAiB,IACnEj9B,EAAY9C,SAASiB,KAAK+yC,MAAM,KAKtC,OAJAX,EAAex9C,GAAO,CACpBI,OACA6M,aAEKhQ,EAAKktC,8BAA8B,iBAAiBqT,IAt+D3CvhD,KAw+DlB2tD,iBAAmB,WACjB,OAAO3sD,EAAKwlD,cAAc,iBAAgB,IAz+D1BxmD,KA2+DlB4tD,iBAAmB,SAACC,GAClB,OAAO7sD,EAAKka,gBAAgB,gBAAgB2yC,IA5+D5B7tD,KA8+DlB4hD,iBAAmB,SAACW,GAAyB,IAAhBmL,EAAgB1+C,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,IAAAA,UAAA,GACrCjL,EAAM2pD,GAAgBnL,EACxBhB,EAAiBvgD,EAAKitC,8BAA8B,iBAAiB,IAEzE,OAAIsT,GAAkBA,EAAex9C,GAC5Bw9C,EAAex9C,GAAKI,KAEtB,MAr/DSnE,KAu/DlBiiD,YAv/DkB,eAAA6L,EAAAvuD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAu/DJ,SAAA+gD,EAAMxL,GAAN,IAAAyL,EAAAC,EAAA9pD,EAAA+pD,EAAAl/C,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA+gD,GAAA,cAAAA,EAAA7gD,KAAA6gD,EAAA5gD,MAAA,cAAeygD,EAAfE,EAAA5sD,OAAA,QAAAgrB,IAAA4hC,EAAA,IAAAA,EAAA,GAAoCD,EAApCC,EAAA5sD,OAAA,QAAAgrB,IAAA4hC,EAAA,GAAAA,EAAA,GAA2C,KAA3CC,EAAA5gD,KAAA,EACOoL,IACJC,IAAI2pC,EAAS0L,GACbG,MAAM,SAAAh2C,GACyB,oBAAnB41C,GACTA,EAAe51C,KALrB,cACNjU,EADMgqD,EAAA59C,KAAA49C,EAAA51C,OAAA,SAQLpU,GARK,wBAAAgqD,EAAAt/C,SAAAk/C,EAAA/tD,SAv/DI,gBAAAquD,GAAA,OAAAP,EAAA/+C,MAAA/O,KAAAgP,YAAA,GAAAhP,KAigElBsuD,wBAjgEkB,eAAAC,EAAAhvD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAigEQ,SAAAwhD,EAAOjM,GAAP,IAAAlhD,EAAA8zC,EAAAsZ,EAAAz9C,EAAAuwC,EAAAmN,EAAAvqD,EAAAwqD,EAAA3/C,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAwhD,GAAA,cAAAA,EAAAthD,KAAAshD,EAAArhD,MAAA,UAAgBlM,EAAhBstD,EAAArtD,OAAA,QAAAgrB,IAAAqiC,EAAA,GAAAA,EAAA,GAAqB,GAAGxZ,EAAxBwZ,EAAArtD,OAAA,QAAAgrB,IAAAqiC,EAAA,GAAAA,EAAA,GAA4B,IAAIF,EAAhCE,EAAArtD,OAAA,QAAAgrB,IAAAqiC,EAAA,GAAAA,EAAA,GAA4C,EAC9D39C,EAAY9C,SAASiB,KAAK+yC,MAAM,QAGlCX,EAAiBvgD,EAAKitC,8BAA8B,iBAAiB,MAEnDsT,EAAegB,IAAahB,EAAegB,GAAUvxC,WAAaA,EAAUuwC,EAAegB,GAAUvxC,UAAUmkC,GAN7G,CAAAyZ,EAAArhD,KAAA,eAAAqhD,EAAAr2C,OAAA,SAOfgpC,EAAegB,GAAUp+C,MAPV,cAUlBuqD,EAASrtD,EAAKotD,GAVIG,EAAArhD,KAAA,GAWLvM,EAAKihD,YAAYM,EAAS,WAAWmM,GAXhC,aAWlBvqD,EAXkByqD,EAAAr+C,QAeZpM,EAAKA,MAA8B,OAAtBA,EAAKA,KAAK8pB,QAfX,CAAA2gC,EAAArhD,KAAA,gBAgBtBg0C,EAAegB,GAAY,CACzBp+C,OACA6M,aAEFhQ,EAAKktC,8BAA8B,iBAAiBqT,GApB9BqN,EAAAr2C,OAAA,SAqBfpU,GArBe,aAsBbsqD,EAAYptD,EAAKC,OAAO,GAtBX,CAAAstD,EAAArhD,KAAA,gBAAAqhD,EAAArhD,KAAA,GAuBTvM,EAAKstD,wBAAwB/L,EAASlhD,EAAK8zC,EAAIsZ,EAAY,GAvBlD,eAAAG,EAAAr2C,OAAA,SAAAq2C,EAAAr+C,MAAA,eAAAq+C,EAAAr2C,OAAA,SAyBjB,MAzBiB,yBAAAq2C,EAAA//C,SAAA2/C,EAAAxuD,SAjgER,gBAAA6uD,GAAA,OAAAN,EAAAx/C,MAAA/O,KAAAgP,YAAA,GAAAhP,KA4hElB8hD,kBA5hEkB,eAAAgN,EAAAvvD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA4hEE,SAAA+hD,EAAOxM,GAAP,IAAApN,EAAA6Z,EAAAtB,EAAAO,EAAAlqD,EAAAiN,EAAAuwC,EAAAp9C,EAAA8qD,EAAAjgD,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA8hD,GAAA,cAAAA,EAAA5hD,KAAA4hD,EAAA3hD,MAAA,UAAgB4nC,EAAhB8Z,EAAA3tD,OAAA,QAAAgrB,IAAA2iC,EAAA,GAAAA,EAAA,GAAoB,GAAGD,EAAvBC,EAAA3tD,OAAA,QAAAgrB,IAAA2iC,EAAA,IAAAA,EAAA,GAAyCvB,EAAzCuB,EAAA3tD,OAAA,QAAAgrB,IAAA2iC,EAAA,IAAAA,EAAA,GAAqDhB,EAArDgB,EAAA3tD,OAAA,QAAAgrB,IAAA2iC,EAAA,GAAAA,EAAA,GAA4D,KACxElrD,EAAM2pD,GAAgBnL,EACtBvxC,EAAY9C,SAASiB,KAAK+yC,MAAM,QAGhCX,EAAiBvgD,EAAKitC,8BAA8B,iBAAiB,MAErDsT,EAAex9C,IAAQw9C,EAAex9C,GAAKiN,WAAaA,EAAUuwC,EAAex9C,GAAKiN,UAAUmkC,GAPpG,CAAA+Z,EAAA3hD,KAAA,eAAA2hD,EAAA32C,OAAA,SAQRgpC,EAAex9C,GAAKI,MAAQ6qD,EAAczN,EAAex9C,GAAKI,KAAKA,KAAOo9C,EAAex9C,GAAKI,MARtF,cAAA+qD,EAAA3hD,KAAA,GAWCvM,EAAKihD,YAAYM,GAAS,EAAM0L,GAXjC,eAWZ9pD,EAXY+qD,EAAA3+C,KAalBgxC,EAAex9C,GAAO,CACpBI,OACA6M,aAEFhQ,EAAKktC,8BAA8B,iBAAiBqT,GAjBlC2N,EAAA32C,OAAA,SAkBVpU,GAAQ6qD,EAAc7qD,EAAKA,KAAOA,GAlBxB,yBAAA+qD,EAAArgD,SAAAkgD,EAAA/uD,SA5hEF,gBAAAmvD,GAAA,OAAAL,EAAA//C,MAAA/O,KAAAgP,YAAA,GAAAhP,KAgjElBwyB,oBAAsB,SAAA3b,GACpB,IAAIuV,EAAS,QACb,GAAIle,SAAS2I,EAAMu4C,MAAM,CACvB,IAAMC,EAAYnhD,SAAS2I,EAAMu4C,MACjC,OAAQC,GACN,KAAK,KACHjjC,EAAS,SACX,MACA,QACEA,EAAM,SAAApiB,OAAYqlD,SAGbx4C,EAAMoX,UACf7B,EAASvV,EAAMoX,QAAQ0K,MAAM,MAAM,IAGrC,OAAOvM,GAhkESpsB,KAkkElByqB,iBAAmB,WACjB,OAAOhhB,KAnkESzJ,KAqkElB0xB,aAAe,SAACxI,EAAKomC,GACnB,IAAKA,EACH,OAAO,KAGT,IADApmC,EAAO3pB,OAAOC,OAAO,GAAG0pB,IACf5nB,OAAO,EAAE,CAChB,IAAMiuD,EAAOrmC,EAAKsmC,QAClB,IAAKtmC,EAAK5nB,OACR,OAAOguD,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAOvuD,EAAK0wB,aAAaxI,EAAKomC,EAAMC,IAGxC,OAAO,MAllESvvD,KAolElB4R,gBAAkB,SAACsX,GAAuB,IAAlBumC,EAAkBzgD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,IAAAA,UAAA,GAExC,GADAygD,EAAUA,GAAoBhmD,IAC1Byf,EAAK5nB,OAAO,EAAE,CAChB,IAAMiuD,EAAOrmC,EAAKsmC,QAClB,IAAKtmC,EAAK5nB,OACR,OAAOmuD,EAAQF,GAAQE,EAAQF,GAAQ,KAClC,GAAIE,EAAQF,GACjB,OAAOvuD,EAAK4Q,gBAAgBsX,EAAKumC,EAAQF,IAG7C,OAAO,MA9lESvvD,KAgmElB0vD,eAAiB,WACf,OAAOr0C,OAAOo4B,SAASuG,OAAO7wC,cAAcmf,SAAS7e,IAAckmD,QAAQxmD,gBAjmE3DnJ,KAmmElB4vD,aAAe,WACb,OAAOv0C,OAAOo4B,SAASuG,OAAO7wC,cAAcmf,SAAS7e,IAAcomD,QAAQ1mD,gBApmE3DnJ,KAsmElB8vD,4BAtmEkBvwD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAsmEY,SAAA+iD,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAnhD,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAgjD,GAAA,cAAAA,EAAA9iD,KAAA8iD,EAAA7iD,MAAA,OAC5ByiD,GADmCA,EAAPG,EAAA7uD,OAAA,QAAAgrB,IAAA6jC,EAAA,GAAAA,EAAA,GAAY,OACzB90C,OAAOo4B,SAAS3lC,KAAKkO,OAAO,GACrCi0C,EAAqBjvD,EAAK4Q,gBAAgB,CAAC,YAAY,SAAS,aAChEs+C,EAAWlvD,EAAK0uD,iBAClBO,EAAmBplC,SAAWqlC,GAAY70C,OAAOg1C,KACnDh1C,OAAOg1C,GAAG,MAAO,OAAQL,GACzB30C,OAAOg1C,GAAG,OAAQ,aANQ,wBAAAD,EAAAvhD,SAAAkhD,EAAA/vD,SAtmEZA,KA+mElB2pB,yBA/mEkB,eAAA2mC,EAAA/wD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+mES,SAAAujD,EAAOl+B,GAAP,IAAA1sB,EAAA6qD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5hD,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAyjD,GAAA,cAAAA,EAAAvjD,KAAAujD,EAAAtjD,MAAA,UAAiB5H,EAAjBirD,EAAAtvD,OAAA,QAAAgrB,IAAAskC,EAAA,GAAAA,EAAA,GAA0B,KAE7CJ,EAAmB/mD,IAAcihB,UAAUC,OAAOC,OAClD6lC,EAAeD,EAAiBC,aAChCC,EAAWr1C,OAAOo4B,SAASuG,OAAO7wC,cAAcmf,SAAS7e,IAAckmD,QAAQxmD,gBAEjFqnD,EAAiB3lC,UAAWxP,OAAOg1C,KAAQI,IAAgBC,EANtC,CAAAG,EAAAtjD,KAAA,eASnBijD,EAAiBM,uBAE2B,IAA1CrnD,IAAc2pB,QAAQstB,iBAClBiQ,EAAiBlnD,IAAc2pB,QAAQ29B,kBAAkBtnD,IAAc2pB,QAAQstB,iBACrFruB,EAAUzI,eAAV,IAAA5f,OAA+B2mD,IAEtBF,IAAiBC,IAC1Br+B,EAAUzI,eAAiB,UAhBRinC,EAAAtjD,KAAA,EAoBhB,IAAIoK,QAAJ,eAAAq5C,EAAAzxD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAAikD,EAAOl5C,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAA8jD,GAAA,cAAAA,EAAA5jD,KAAA4jD,EAAA3jD,MAAA,OAClB8kB,EAAU8+B,YAAc,WACtBp5C,GAAQ,IAEVsa,EAAU++B,gBAAkB,WAC1Bp5C,KAGFqD,OAAOg1C,GAAG,OAAQ,QAASh+B,GART,wBAAA6+B,EAAAriD,SAAAoiD,EAAAjxD,SAAb,gBAAAqxD,EAAAC,GAAA,OAAAN,EAAAjiD,MAAA/O,KAAAgP,YAAA,IApBgB,OA+BC,oBAAbrJ,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuBkrD,EAAAt4C,OAAA,UAwClB,GAxCkB,yBAAAs4C,EAAAhiD,SAAA0hD,EAAAvwD,SA/mET,gBAAAuxD,GAAA,OAAAjB,EAAAvhD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAypElBwxD,eAzpEkB,eAAAC,EAAAlyD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAypED,SAAA0kD,EAAOhxD,EAAMwI,EAASm1B,GAAtB,IAAA6T,EAAA,OAAA1nB,EAAApqB,EAAAgN,KAAA,SAAAukD,GAAA,cAAAA,EAAArkD,KAAAqkD,EAAApkD,MAAA,cAAAokD,EAAArkD,KAAA,EAEP4kC,EAAW,IAAIlxC,EAAKf,MAAMiY,KAAKC,IAAIy5C,SAASvzB,EAAKn1B,GAF1CyoD,EAAAp5C,OAAA,SAGN,CAAC7X,OAAMwxC,aAHD,OAAAyf,EAAArkD,KAAA,EAAAqkD,EAAAnlC,GAAAmlC,EAAA,SAKb3wD,EAAK6wC,eAAe,6BAA6BnxC,EAAKwI,EAAtDyoD,EAAAnlC,IALa,cAAAmlC,EAAAp5C,OAAA,SAOR,MAPQ,wBAAAo5C,EAAA9iD,SAAA6iD,EAAA1xD,KAAA,YAzpEC,gBAAA6xD,EAAAC,EAAAC,GAAA,OAAAN,EAAA1iD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAkqElBgyD,kBAAoB,WAA0B,IAAzB76B,EAAyBnoB,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KACnC,OAAOhO,EAAKwlD,cAAc,kBAAiB,EAAMrvB,IAnqEjCn3B,KAqqElBiyD,qBAAuB,SAACC,EAASC,GAU/B,OATKD,EAAShpD,SAAWlI,EAAKf,MAAMuM,UAClC0lD,EAAShpD,QAAUlI,EAAKf,MAAMuM,SAE3B0lD,EAASh9B,WACZg9B,EAASh9B,SAAWl0B,EAAKgxD,qBAEG,qBAAnBE,EAASE,OAA0BF,EAASE,cAC9CF,EAASE,QAEbF,EAAShpD,aAGdipD,EAAWA,IAAuBnxD,EAAKf,MAAMkyD,SAAWnxD,EAAKf,MAAMkyD,SAA+C,oBAA5BnxD,EAAKf,MAAMoyD,aAA8BrxD,EAAKf,MAAMoyD,eAAiB,QAElJF,EAASG,aAAaJ,KAprEflyD,KAwrElBmd,2BAA6B,SAAC3C,GAC5B,IAAMkmC,EAAkB1/C,EAAKf,MAAMmzB,QAAQmiB,QAAQtxC,IAAMjD,EAAK4Q,gBAAgB,CAAC,UAAU,oBACnF2gD,EAAUvxD,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,YAAY,UAAU8uC,IAClF,OAAOlmC,EAAM,GAAAxQ,OAAMuoD,EAAN,QAAAvoD,OAAoBwQ,GAAW,MA3rE5Bxa,KA6rElBwyD,uBAAyB,SAACtpD,GACxB,IAAMw3C,EAAkB1/C,EAAKf,MAAMmzB,QAAQmiB,QAAQtxC,IAAMjD,EAAK4Q,gBAAgB,CAAC,UAAU,oBACnF2gD,EAAUvxD,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,YAAY,UAAU8uC,IAClF,OAAOx3C,EAAO,GAAAc,OAAMuoD,EAAN,aAAAvoD,OAAyBd,GAAY,MAhsEnClJ,KAksElB6T,YAAc,SAACwd,GAA6D,IAArDohC,EAAqDzjD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAtC,EAAGw7B,EAAmCx7B,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAzB,IAAK0jD,EAAoB1jD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAR,IAClE,IACEyjD,EAAezkD,KAAK2kD,IAAIF,GACxBA,EAAe7jD,MAAM6jD,GAAgB,EAAIA,EAEzC,IAAMG,EAAevhC,EAAS,EAAI,IAAM,GAEpCtoB,EAAImF,SAASmjB,EAASrjB,KAAK2kD,IAAIE,OAAOxhC,IAAW,GAAG9nB,QAAQkpD,IAAev4C,WAC3Eqe,EAAKxvB,EAAEzH,OAAS,EAAKyH,EAAEzH,OAAS,EAAI,EAExC,OAAOsxD,GAAgBr6B,EAAIxvB,EAAEiT,OAAO,EAAGuc,GAAKm6B,EAAY,IAAM3pD,EAAEiT,OAAOuc,GAAG8Z,QAAQ,iBAAkB,KAAOqgB,IAAcD,EAAejoB,EAAUx8B,KAAK2kD,IAAIthC,EAAStoB,GAAGQ,QAAQkpD,GAAcz8C,MAAM,GAAK,IACxM,MAAOxP,GACP,OAAO,OA9sEOxG,KAitElB8yD,qBAjtEkBvzD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAitEK,SAAA+lD,IAAA,IAAAC,EAAA/tB,EAAAtV,EAAAsjC,EAAA1Q,EAAA2Q,EAAAC,EAAAC,EAAAC,EAAArkD,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAkmD,GAAA,cAAAA,EAAAhmD,KAAAgmD,EAAA/lD,MAAA,UAAOylD,EAAPK,EAAA/xD,OAAA,QAAAgrB,IAAA+mC,EAAA,IAAAA,EAAA,GAEfpuB,EAFe,qBAAAj7B,OAEsBgpD,KACrCrjC,EAAa3uB,EAAK0nC,cAAczD,IAHjB,CAAAquB,EAAA/lD,KAAA,eAAA+lD,EAAA/6C,OAAA,SAKZoX,GALY,cAQfsjC,EAAYjyD,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAcY,IAAK,SAAA+gD,GAAI,OAAIA,EAAKpqD,gBACnGo5C,EAAWvhD,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,WAAW,YAAY,cAT/D0hD,EAAA/lD,KAAA,EAUCvM,EAAK8gD,kBAAkBS,EAAS,MAAK,GAVtC,YAUjB2Q,EAViBI,EAAA/iD,OAcH2iD,EAAUr8C,MAdP,CAAAy8C,EAAA/lD,KAAA,gBAenB2lD,EAAY3zD,OAAOiO,OAAO0lD,GAEpBC,EAAWjlD,SAASiB,KAAK+yC,MAAM,KACjC8Q,IACFE,EAAaA,EAAUzlD,OAAQ,SAAAhO,GAAC,OAAKA,EAAE+zD,IAAIC,QAAQ5oB,OAAOsoB,GAAY1zD,EAAE+zD,IAAIC,QAAQ7oB,IAAIuoB,KAKpFC,EAAiB,GAxBJE,EAAA/lD,KAAA,GAyBbvM,EAAK4L,aAAasmD,EAAlB,eAAAQ,EAAAn0D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA6B,SAAA2mD,EAAOl0D,GAAP,IAAAua,EAAA45C,EAAA,OAAAppC,EAAApqB,EAAAgN,KAAA,SAAAymD,GAAA,cAAAA,EAAAvmD,KAAAumD,EAAAtmD,MAAA,YAE7B9N,EAAE+zD,IAAIC,QAAQ7oB,KAAKuoB,GAAYF,EAAU3qC,SAAS7oB,EAAEyJ,QAAQC,gBAF/B,CAAA0qD,EAAAtmD,KAAA,QAG/B6lD,EAAe5pD,KAAK/J,GAHWo0D,EAAAtmD,KAAA,sBAKzByM,EAAcva,EAAE+zD,IAAIC,QAAQK,SAE9BF,GAAoB,EAPOC,EAAAtmD,KAAA,EAQzBvM,EAAK4L,aAAcnN,EAAE+zD,IAAIC,QAAQM,SAASC,WAA1C,eAAAC,EAAA10D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAsD,SAAAknD,EAAO9iB,GAAP,IAAA5E,EAAAhG,EAAA,OAAAhc,EAAApqB,EAAAgN,KAAA,SAAA+mD,GAAA,cAAAA,EAAA7mD,KAAA6mD,EAAA5mD,MAAA,WACtDqmD,EADsD,CAAAO,EAAA5mD,KAAA,eAAA4mD,EAAA57C,OAAA,oBAI7C,qBAAT64B,EAAE1wC,KAJoD,CAAAyzD,EAAA5mD,KAAA,YAKlDi/B,EAAY4E,EAAEze,OAAOyhC,QACLpzD,EAAK08B,kBAAkB8O,GANW,CAAA2nB,EAAA5mD,KAAA,gBAAA4mD,EAAA5mD,KAAA,EAQ3BvM,EAAK2rC,gBAAgBH,EAAU/sC,EAAEyJ,SAAQ,EAAK8Q,GARnB,QAQhDwsB,EARgD2tB,EAAA5jD,OAUlCvP,EAAK4M,MAAM44B,GAAc/0B,GAAG,OAC9CmiD,GAAoB,GAXgC,QAAAO,EAAA5mD,KAAA,kCAAA4mD,EAAAtlD,SAAAqlD,EAAAl0D,SAAtD,gBAAAq0D,GAAA,OAAAJ,EAAAllD,MAAA/O,KAAAgP,YAAA,IARyB,OA8B3B4kD,GACFR,EAAe5pD,KAAK/J,GA/BS,wBAAAo0D,EAAAhlD,SAAA8kD,EAAA3zD,SAA7B,gBAAAs0D,GAAA,OAAAZ,EAAA3kD,MAAA/O,KAAAgP,YAAA,IAzBa,eAAAskD,EAAA/6C,OAAA,SA6DZvX,EAAK4uB,cAAcqV,EAAcmuB,IA7DrB,yBAAAE,EAAAzkD,SAAAkkD,EAAA/yD,SAjtELA,KAkxElBsQ,gBAlxEkB,eAAAikD,EAAAh1D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkxEA,SAAAwnD,EAAOtrD,GAAP,IAAA+G,EAAAi1B,EAAAuvB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5vB,EAAAtV,EAAAmlC,EAAAC,EAAAC,EAAAzS,EAAA5vB,EAAAkY,EAAAojB,EAAA7hC,EAAAjoB,EAAA8wD,EAAAC,EAAAlmD,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA+nD,GAAA,cAAAA,EAAA7nD,KAAA6nD,EAAA5nD,MAAA,UAAe0C,EAAfilD,EAAA5zD,OAAA,QAAAgrB,IAAA4oC,EAAA,GAAAA,EAAA,GAAsB,KAAKhwB,EAA3BgwB,EAAA5zD,OAAA,QAAAgrB,IAAA4oC,EAAA,GAAAA,EAAA,GAA0C,KAAKT,EAA/CS,EAAA5zD,OAAA,QAAAgrB,IAAA4oC,EAAA,GAAAA,EAAA,GAA4D,KAAKR,EAAjEQ,EAAA5zD,OAAA,QAAAgrB,IAAA4oC,EAAA,IAAAA,EAAA,GAA2FP,EAA3FO,EAAA5zD,OAAA,QAAAgrB,IAAA4oC,EAAA,GAAAA,EAAA,GAAqG,KAAKN,EAA1GM,EAAA5zD,OAAA,QAAAgrB,IAAA4oC,EAAA,GAAAA,EAAA,GAAgH,KAAKL,EAArHK,EAAA5zD,OAAA,QAAAgrB,IAAA4oC,EAAA,GAAAA,EAAA,GAA2H,KAC/F,IAAxCzrD,IAAc2pB,QAAQstB,iBAAwBj3C,IAAcC,MAAMmhB,QADtD,CAAAsqC,EAAA5nD,KAAA,eAAA4nD,EAAA58C,OAAA,SAEP,IAFO,UAMV0sB,EANU,gBAAAj7B,OAMsBd,EANtB,KAAAc,OAMiCiG,EANjC,KAAAjG,OAM2C2qD,EAN3C,KAAA3qD,OAMwD4qD,EANxD,KAAA5qD,OAMiE6qD,KAC7EllC,EAAa3uB,EAAK0nC,cAAczD,IAPpB,CAAAkwB,EAAA5nD,KAAA,eAWRunD,EAAqBnlC,EAAWliB,OAAQ,SAAA4a,GAAC,OAA0B,OAAnBA,EAAE6c,gBAA0BA,GAAkB7c,EAAE6c,gBAAgBA,KAAsC,OAAjB7c,EAAEosC,cAAwBA,GAAgBpsC,EAAEosC,cAAcA,OAE3KK,EAAmBxzD,OAAO,GAbtC,CAAA6zD,EAAA5nD,KAAA,cAcN0nD,EAAeH,EAAmBhkD,MAAM3M,MAdlC,CAAAgxD,EAAA5nD,KAAA,gBAAA4nD,EAAA58C,OAAA,SAgBH08C,EAAaxnD,OAAQ,SAAAnH,GAAC,QAAO4+B,GAAkB5+B,EAAE0K,WAAWk0B,MAAqBuvB,GAAgBnuD,EAAE0K,WAAWyjD,MAhB3G,eAAAU,EAAA58C,OAAA,SAkBL,MAlBK,QAAA48C,EAAA5nD,KAAA,iBAsBdoiB,EAAa,GAtBC,eAyBVqlC,EAAUvrD,IAAcC,MAAM0rD,MAChC7S,EA1BY,GAAAv4C,OA0BEgrD,EAAQzS,UA1BVv4C,OA0BqBd,IAEjCg8B,GAAkBuvB,GAA2B,OAAXxkD,GAAiC,OAAd0kD,KACjDhiC,EAAS,GAEXuS,GAAkBh3B,SAASg3B,KACzBwvB,EACF/hC,EAAOnpB,KAAP,SAAAQ,OAAqBk7B,KAEf2F,EAAQ3F,EAAgB,OAC9BvS,EAAOnpB,KAAP,SAAAQ,OAAqB6gC,MAIrB4pB,GAAgBvmD,SAASumD,IAC3B9hC,EAAOnpB,KAAP,OAAAQ,OAAmByqD,IAGN,OAAXxkD,GACF0iB,EAAOnpB,KAAP,UAAAQ,OAAsBiG,IAGN,OAAd0kD,GAAsBzmD,SAASymD,IACjChiC,EAAOnpB,KAAP,aAAAQ,OAAyB2qD,IAGb,OAAVC,GACFjiC,EAAOnpB,KAAP,SAAAQ,OAAqB4qD,IAGT,OAAVC,GAAkB3mD,SAAS2mD,IAC7BliC,EAAOnpB,KAAP,SAAAQ,OAAqB6qD,IAGnBliC,EAAOrxB,SACTihD,GAAY,IAAI5vB,EAAO/oB,KAAK,OAI1BqkD,EAASjtD,EAAK4Q,gBAAgB,CAAC,QAAQ,WAjE7BujD,EAAA5nD,KAAA,GAkEGvM,EAAKihD,YAAYM,GAAS,EAAM0L,GAlEnC,WAkEZ7hC,EAlEY+oC,EAAA5kD,KAAA,CAAA4kD,EAAA5nD,KAAA,gBAAA4nD,EAAA58C,OAAA,SAoEP,IApEO,eAuEVpU,EAAOioB,EAAOjoB,KAEhB8wD,EAAe,KACJ,OAAXhlD,IACFglD,EAAe9wD,EAAKsJ,OAAQ,SAAAnH,GAAC,OAAMA,EAAE2J,SAAWA,KAGlD0f,EAAWnmB,KAAK,CACdyG,SACAwkD,eACAvvB,iBACA/gC,KAAK8wD,IAGPj0D,EAAK4uB,cAAcqV,EAActV,GArFjBwlC,EAAA58C,OAAA,SAuFTpU,GAvFS,yBAAAgxD,EAAAtmD,SAAA2lD,EAAAx0D,SAlxEA,gBAAAq1D,GAAA,OAAAd,EAAAxlD,MAAA/O,KAAAgP,YAAA,GAAAhP,KA22ElBs1D,qBA32EkB,eAAAC,EAAAh2D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA22EK,SAAAwoD,EAAOjjC,EAAakjC,GAApB,IAAAxwB,EAAAtV,EAAA+lC,EAAA,OAAAlrC,EAAApqB,EAAAgN,KAAA,SAAAuoD,GAAA,cAAAA,EAAAroD,KAAAqoD,EAAApoD,MAAA,UACf03B,EADe,gBAAAj7B,OACiBuoB,EADjB,KAAAvoB,OACiCyrD,EAAmB/0D,QACnEivB,EAAa3uB,EAAKitC,8BAA8BhJ,KAEnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJrB,CAAA+mD,EAAApoD,KAAA,eAAAooD,EAAAp9C,OAAA,SAKZvX,EAAK4M,MAAM+hB,IALC,cAAAgmC,EAAApoD,KAAA,EAQMvM,EAAKy9B,oBAAoBlM,EAAakjC,EAAmB/0D,KAAK+0D,EAAmB9iC,QARvF,cAQf+iC,EAReC,EAAAplD,KAAAolD,EAAAp9C,OAAA,SASdvX,EAAKktC,8BAA8BjJ,EAAcywB,EAAa,OAThD,wBAAAC,EAAA9mD,SAAA2mD,EAAAx1D,SA32EL,gBAAA41D,EAAAC,GAAA,OAAAN,EAAAxmD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAs3ElBu+B,iBAt3EkB,eAAAu3B,EAAAv2D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAs3EC,SAAA+oD,EAAOxjC,GAAP,IAAA0S,EAAAtV,EAAA7pB,EAAAwE,EAAA,OAAAkgB,EAAApqB,EAAAgN,KAAA,SAAA4oD,GAAA,cAAAA,EAAA1oD,KAAA0oD,EAAAzoD,MAAA,UACjBglB,EAAeA,GAAgBvxB,EAAKf,MAAMsF,cADzB,CAAAywD,EAAAzoD,KAAA,eAAAyoD,EAAAz9C,OAAA,UAIR,GAJQ,UAOX0sB,EAPW,oBAAAj7B,OAOyBuoB,KACpC5C,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QATzB,CAAAonD,EAAAzoD,KAAA,eAAAyoD,EAAAz9C,OAAA,SAURvX,EAAK4M,MAAM+hB,IAVH,YAaX7pB,EAAc9E,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS2gB,OAC3BzsB,EAAYwE,SAd3B,CAAA0rD,EAAAzoD,KAAA,SAAAyoD,EAAAxpC,GAcsC1mB,EAAYwE,SAdlD0rD,EAAAzoD,KAAA,wBAAAyoD,EAAAzoD,KAAA,GAcmEvM,EAAKy9B,oBAAoBlM,EAAa,YAdzG,QAAAyjC,EAAAxpC,GAAAwpC,EAAAzlD,KAAA,eAcXjG,EAdW0rD,EAAAxpC,GAAAwpC,EAAAz9C,OAAA,SAgBVvX,EAAKktC,8BAA8BjJ,EAAc36B,EAAS,OAhBhD,yBAAA0rD,EAAAnnD,SAAAknD,EAAA/1D,SAt3ED,gBAAAi2D,GAAA,OAAAH,EAAA/mD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAw4ElBsvC,UAAY,SAAC4mB,EAAKC,EAAYvxD,GAC5B,GAAIsxD,GAAQC,GAAevxD,EAAgB,CACzC,IAAIwxD,EAAS72D,OAAO8B,KAAK60D,GAAM1b,OAAO,SAAC6b,EAAYptD,GACjD,IAAMqtD,EAAat1D,EAAK4M,MAAMuoD,EAAYltD,IACpC6zC,EAAM97C,EAAK4M,MAAMsoD,EAAKjtD,IAC5B,OAAOjI,EAAK4M,MAAMyoD,GAAa/nD,KAAKgoD,EAAWhtD,MAAMwzC,KACrD,GAEF,GAAIsZ,EACF,OAAOp1D,EAAK4M,MAAMwoD,GAAQn8C,IAAIrV,GAGlC,OAAO,MAp5ES5E,KAs5ElB6oC,oBAAsB,SAAC8rB,GAAyB,IAAf4B,EAAevnD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAN,EAMxC,MAL0B,CACxBwnD,KAAK,KACLC,IAAI,MACJC,KAAK,QAEkB/B,GAAW4B,GA55EpBv2D,KA85ElB22D,yBA95EkBp3D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA85ES,SAAA4pD,IAAA,IAAAhrB,EAAAirB,EAAAlW,EAAAG,EAAAgW,EAAAC,EAAA,OAAAvsC,EAAApqB,EAAAgN,KAAA,SAAA4pD,GAAA,cAAAA,EAAA1pD,KAAA0pD,EAAAzpD,MAAA,cACnBq+B,EAAkB5qC,EAAK4Q,gBAAgB,CAAC,YAAY,SACpDilD,EAAuB71D,EAAK4Q,gBAAgB,CAAC,QAAQ,QAAQ,QAAQ,kBAAkB,OAAO,mBAC9F+uC,EAAgB3/C,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,cAC5DkvC,EAAkBH,EAAce,UAAU,GAC1CoV,EALmB,GAAA9sD,OAKI82C,EALJ,2CAAA92C,OAK6D6sD,EAAqB3tD,QALlF,cAAA8tD,EAAAzpD,KAAA,EAMKvM,EAAKstD,wBAAwBwI,EAAkBnW,EAAct/C,KAAK,MANvE,aAMnB01D,EANmBC,EAAAzmD,OAQFwmD,EAAgB5yD,MAAQ4yD,EAAgB5yD,KAAK09C,QAAwD,oBAAvCkV,EAAgB5yD,KAAK09C,OAAOp0C,QARxF,CAAAupD,EAAAzpD,KAAA,gBAAAypD,EAAAz+C,OAAA,SAShBw+C,EAAgB5yD,KAAK09C,OAAOp0C,OAAQ,SAAAC,GAAE,OAAKA,EAAG4mC,gBAAgBnrC,gBAAkByiC,EAAgB1iC,QAAQC,eAAiBuE,EAAGqlC,GAAG5pC,gBAAkB0tD,EAAqB3tD,QAAQC,eAAiBnI,EAAK4M,MAAMF,EAAG5G,OAAO2K,GAAG,MATvM,eAAAulD,EAAAz+C,OAAA,SAWlB,IAXkB,yBAAAy+C,EAAAnoD,SAAA+nD,EAAA52D,SA95ETA,KA26ElBi3D,yBAA2B,SAAC1D,GAC1B,OAAOvyD,EAAKf,MAAM6F,YAAY+C,UAAU2mB,KAAK,SAAAnH,GAAC,OAAIA,EAAEnf,QAAQC,gBAAkBoqD,EAAKpqD,iBA56EnEnJ,KA86ElBmgC,aAAe,SAAAr5B,GACb,OAAO9F,EAAK4M,MAAM9G,GAAOq5B,aAAakR,IAAU6lB,aAAa3tD,WA/6E7CvJ,KAi7ElBm3D,uBAAyB,SAAAlmD,GACvB,OAAOjQ,EAAK4M,MAAL,KAAA5D,OAAgBiH,KAl7EPjR,KAo7ElBi9B,qBAAuB,SAACuJ,EAAav1B,KAA6BjC,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,KAAAA,UAAA,OAC1DooD,EAA0Bp2D,EAAKm2D,uBAAuBlmD,GAC5D,OAAOjQ,EAAK4M,MAAM44B,GAAcl9B,MAAM8tD,GAAyBj3B,aAAakR,IAAU6lB,aAAa3tD,WAt7EnFvJ,KAw7ElBqR,iBAAmB,SAACm1B,EAAav1B,GAAoC,IAAtBykD,EAAsB1mD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KAC1D,IAAKiC,EACH,OAAOjQ,EAAK4M,MAAM44B,GAEpB,IAAM4wB,EAA0Bp2D,EAAKm2D,uBAAuBlmD,GACxDxC,EAAUzN,EAAK4M,MAAM44B,GAAcvsB,IAAIm9C,GAI3C,OAHI1B,IAAiBA,EAAa9mD,UAChCH,EAAUA,EAAQnF,MAAMosD,IAEnBjnD,GAj8ESzO,KAm8ElBq3D,oBAn8EkB93D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAm8EI,SAAAsqD,IAAA,IAAA/kC,EAAAglC,EAAAC,EAAAxoD,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAqqD,GAAA,cAAAA,EAAAnqD,KAAAmqD,EAAAlqD,MAAA,cACpBglB,GAD2BA,EAAPilC,EAAAl2D,OAAA,QAAAgrB,IAAAkrC,EAAA,GAAAA,EAAA,GAAoB,OACKx2D,EAAKf,MAAM6F,YAAYy6B,KAAK5yB,MADrD8pD,EAAAlqD,KAAA,EAESvM,EAAK27C,0BAA0BpqB,EAAc,UAAU67B,MAAM,SAAAh2C,GACxFpX,EAAK6wC,eAAe,yBAA0Bz5B,KAH5B,cAEdm/C,EAFcE,EAAAlnD,KAAAknD,EAAAl/C,OAAA,SAMbg/C,GANa,wBAAAE,EAAA5oD,SAAAyoD,EAAAt3D,SAn8EJA,KA28ElBwmD,cAAgB,SAACziD,GAA4C,IAAxC2zD,IAAwC1oD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,KAAAA,UAAA,GAAxB2oD,EAAwB3oD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KAC9Cod,EAASurC,EACb,GAAIt8C,OAAOR,aAAa,CACtB,IAAM/H,EAAO+H,aAAaC,QAAQ/W,GAC9B+O,IACFsZ,EAAStZ,EACL4kD,IACFtrC,EAASrgB,KAAKgP,MAAMjI,KAI1B,OAAKsZ,GACIurC,GAv9EO33D,KA29ElB43D,gBAAkB,WAAoB,IAAnBC,EAAmB7oD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAP,GAC7B,GAAIqM,OAAOR,aAAa,CAEtB,IAAKg9C,IAAgBA,EAAYv2D,OAC/B,OAAO+Z,OAAOR,aAAai9C,QAI7B,IADA,IAAMC,EAAqB,GAClBhvD,EAAE,EAAEA,EAAEsS,OAAOR,aAAavZ,OAAOyH,IAAI,CAC5C,IAAMivD,EAAY38C,OAAOR,aAAa9W,IAAIgF,GACrC8uD,EAAYvvC,SAAS0vC,IACxBD,EAAmBvuD,KAAKwuD,GAG5BD,EAAmBx2D,QAAQ,SAACy2D,GAC1Bh3D,EAAKi3D,iBAAiBD,OA1+EVh4D,KA8+ElBi4D,iBAAmB,SAACl0D,GAClB,QAAIsX,OAAOR,eACTQ,OAAOR,aAAaq9C,WAAWn0D,IACxB,IAj/EO/D,KAq/ElBkb,gBAAkB,SAACnX,EAAI+C,GAA0B,IAApBkF,EAAoBgD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,IAAAA,UAAA,GAC/C,GAAIqM,OAAOR,aACT,IAGE,OAFA/T,EAAQkF,EAAYD,KAAKC,UAAUlF,GAASA,EAC5CuU,OAAOR,aAAas9C,QAAQp0D,EAAI+C,IACzB,EACP,MAAO+P,GAEPwE,OAAOR,aAAaq9C,WAAWn0D,GAGnC,OAAO,GAhgFS/D,KAkgFlBo4D,eAlgFkB,eAAAC,EAAA94D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkgFD,SAAAsrD,EAAOxyD,GAAP,IAAAyyD,EAAApC,EAAA7jD,EAAAkmD,EAAAC,EAAAC,EAAA,OAAAluC,EAAApqB,EAAAgN,KAAA,SAAAurD,GAAA,cAAAA,EAAArrD,KAAAqrD,EAAAprD,MAAA,WACVzH,GAAe9E,EAAKf,MAAM6F,cAC7BA,EAAc9E,EAAKf,MAAM6F,aAEtBA,EAJU,CAAA6yD,EAAAprD,KAAA,eAAAorD,EAAApgD,OAAA,UAKN,GALM,cAQTggD,EAA0B,GARjBI,EAAAprD,KAAA,EASWvM,EAAKy9B,oBAAoB34B,EAAYy6B,KAAK5yB,MAAO,kBAT5D,WASTwoD,EATSwC,EAAApoD,OAWM4lD,EAAY70D,OAXlB,CAAAq3D,EAAAprD,KAAA,eAAAorD,EAAApgD,OAAA,UAYN,GAZM,OAef,IAfejG,EAAA,SAeNkmD,GACP,IAAMI,EAAyB,IAAIjhD,QAAJ,eAAAkhD,EAAAt5D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAA8rD,EAAO/gD,EAASC,GAAhB,IAAA+gD,EAAA,OAAAvuC,EAAApqB,EAAAgN,KAAA,SAAA4rD,GAAA,cAAAA,EAAA1rD,KAAA0rD,EAAAzrD,MAAA,cAAAyrD,EAAA1rD,KAAA,EAAA0rD,EAAAzrD,KAAA,EAEVvM,EAAKy9B,oBAAoB34B,EAAYy6B,KAAK5yB,MAAO,kBAAkB,CAAC6qD,IAF1D,OAElCO,EAFkCC,EAAAzoD,KAGxCwH,EAAQghD,GAHgCC,EAAAzrD,KAAA,gBAAAyrD,EAAA1rD,KAAA,EAAA0rD,EAAAxsC,GAAAwsC,EAAA,SAKxC7mC,QAAQC,IAAR4mC,EAAAxsC,IACAzU,EAAQ,MANgC,yBAAAihD,EAAAnqD,SAAAiqD,EAAA94D,KAAA,YAAb,gBAAAi5D,EAAAC,GAAA,OAAAL,EAAA9pD,MAAA/O,KAAAgP,YAAA,IAS/BupD,EAAwB/uD,KAAKovD,IAVtBJ,EAAc,EAAEA,EAAcrC,EAAY70D,OAAOk3D,IAAgBlmD,EAAjEkmD,GAfM,OAAAG,EAAAprD,KAAA,GA4BcoK,QAAQqD,IAAIu9C,GA5B1B,WA4BTE,EA5BSE,EAAApoD,KA8BV4lD,GAAgBsC,EA9BN,CAAAE,EAAAprD,KAAA,gBAAAorD,EAAApgD,OAAA,UA+BN,GA/BM,eAkCTmgD,EAAOvC,EAAY1oD,OAAQ,SAAC0rD,EAAMtrD,GAAP,OAAiBsrD,IAAUV,EAAe5qD,KAlC5D8qD,EAAApgD,OAAA,SAoCRmgD,EAAKp3D,OAAO,GApCJ,yBAAAq3D,EAAA9pD,SAAAypD,EAAAt4D,SAlgFC,gBAAAo5D,GAAA,OAAAf,EAAAtpD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAwiFlB49B,eAxiFkB,eAAAy7B,EAAA95D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAwiFD,SAAAssD,EAAOxzD,EAAY0G,GAAnB,IAAA+uB,EAAAE,EAAAG,EAAAsH,EAAAzG,EAAAO,EAAAS,EAAA,OAAAjT,EAAApqB,EAAAgN,KAAA,SAAAmsD,GAAA,cAAAA,EAAAjsD,KAAAisD,EAAAhsD,MAAA,UAEVzH,GAAgB0G,EAFN,CAAA+sD,EAAAhsD,KAAA,eAAAgsD,EAAAhhD,OAAA,UAGN,GAHM,UAMXgjB,GAAmB,EACnBE,EAAqB,KACrBG,EAA2B,KAE3BsH,EAA8B,MAG9Bp9B,EAAYi3B,YAAaj3B,EAAYi3B,UAAUlS,QAbpC,CAAA0uC,EAAAhsD,KAAA,YAcPkvB,EAAkB32B,EAAYi3B,UAAUC,YAAYt8B,KACpDs8B,EAAch8B,EAAK08B,kBAAkBjB,GACrCgB,EAAoBz8B,EAAK08B,kBAAkB53B,EAAYi3B,UAAUU,kBAAkB/8B,OAIrFs8B,IAAeS,EApBN,CAAA87B,EAAAhsD,KAAA,gBAAAgsD,EAAAhsD,KAAA,GAsBsBvM,EAAKu9B,iBAAiB9B,GAtB5C,eAsBXb,EAtBW29B,EAAAhpD,KAAAgpD,EAAAhsD,KAAA,GAgCgBvM,EAAKw9B,mBAAmB/B,EAAgBjwB,GAhCxD,SAgCXivB,EAhCW89B,EAAAhpD,QAmCT2yB,EAA8BliC,EAAKqQ,iBAAiBoqB,EAAmBG,GAEvEL,EAAmBv6B,EAAK4M,MAAM6tB,GAAoBhqB,GAAG,IArC5C,eAAA8nD,EAAAhhD,OAAA,SA6CR,CACLgjB,mBACAE,qBACAG,2BACAsH,gCAjDa,yBAAAq2B,EAAA1qD,SAAAyqD,EAAAt5D,SAxiFC,gBAAAw5D,EAAAC,GAAA,OAAAJ,EAAAtqD,MAAA/O,KAAAgP,YAAA,GAAAhP,KA6lFlBu8C,kBA7lFkB,eAAAmd,EAAAn6D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA6lFE,SAAA2sD,EAAOpnC,EAAcqnC,GAArB,IAAAjnC,EAAAknC,EAAA7qD,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA0sD,GAAA,cAAAA,EAAAxsD,KAAAwsD,EAAAvsD,MAAA,cAAgColB,EAAhCknC,EAAAv4D,OAAA,QAAAgrB,IAAAutC,EAAA,GAAAA,EAAA,GAAyC,GAAzCC,EAAAvsD,KAAA,EACLvM,EAAK+4D,sBAAsBxnC,EAAcqnC,EAAWjnC,GAD/C,cAAAmnC,EAAAvhD,OAAA,SAAAuhD,EAAAvpD,MAAA,wBAAAupD,EAAAjrD,SAAA8qD,EAAA35D,SA7lFF,gBAAAg6D,EAAAC,GAAA,OAAAP,EAAA3qD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAimFlBk6D,uBAjmFkB,eAAAC,EAAA56D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAimFO,SAAAotD,EAAO7nC,EAAcD,GAArB,IAAA+nC,EAAA7tD,EAAA0lC,EAAAooB,EAAAC,EAAArhD,EAAAshD,EAAAC,EAAAC,EAAAC,EAAA3rD,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAwtD,GAAA,cAAAA,EAAAttD,KAAAstD,EAAArtD,MAAA,UAAiC8sD,EAAjCM,EAAAr5D,OAAA,QAAAgrB,IAAAquC,EAAA,GAAAA,EAAA,GAAgD,GACvEnuD,GAD2EA,EAApDmuD,EAAAr5D,OAAA,QAAAgrB,IAAAquC,EAAA,GAAAA,EAAA,GAA8D,OAChE35D,EAAKf,MAAMuM,QADT,CAAAouD,EAAArtD,KAAA,eAAAqtD,EAAAriD,OAAA,SAGd,MAHc,YAKjB25B,EAAWlxC,EAAK08B,kBAAkBnL,MACxB2f,EAAS1Y,QAAQlH,GANV,CAAAsoC,EAAArtD,KAAA,gBAOfgtD,GAAeD,EAAApoB,EAAS1Y,SAAQlH,GAAjBvjB,MAAAurD,EAAA/6D,OAAA63C,EAAA,EAAA73C,CAAgC86D,IAEjDnhD,EAAW,KACXshD,EAAW,KAVMI,EAAAttD,KAAA,GAAAstD,EAAArtD,KAAA,GAgBToK,QAAQqD,IAAI,CACpBha,EAAKf,MAAMiY,KAAKC,IAAI0iD,cACpBN,EAAaO,YAAY,CAACxyD,KAAMkE,MAlBf,QAAAiuD,EAAAG,EAAArqD,KAAAmqD,EAAAn7D,OAAAouC,EAAA,EAAApuC,CAAAk7D,EAAA,GAcjBvhD,EAdiBwhD,EAAA,GAejBF,EAfiBE,EAAA,GAAAE,EAAArtD,KAAA,iBAAAqtD,EAAAttD,KAAA,GAAAstD,EAAApuC,GAAAouC,EAAA,sBAwBjB1hD,IAAYshD,EAxBK,CAAAI,EAAArtD,KAAA,gBAAAqtD,EAAAriD,OAAA,SAyBZvX,EAAKqQ,iBAAiBrQ,EAAKqQ,iBAAiB6H,EAAS,GAAG5P,MAAMkxD,GAAU,IAzB5D,eAAAI,EAAAriD,OAAA,SA6BhBvX,EAAK4M,MAAM,IA7BK,yBAAAgtD,EAAA/rD,SAAAurD,EAAAp6D,KAAA,cAjmFP,gBAAA+6D,EAAAC,GAAA,OAAAb,EAAAprD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAioFlB8rD,uBAjoFkB,eAAAmP,EAAA17D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAioFO,SAAAkuD,EAAOhpB,EAAUipB,EAAaC,EAAkBz1D,EAAU01D,GAA1D,IAAAC,EAAApiD,EAAA,OAAAsR,EAAApqB,EAAAgN,KAAA,SAAAmuD,GAAA,cAAAA,EAAAjuD,KAAAiuD,EAAAhuD,MAAA,cAAAguD,EAAAjuD,KAAA,EAAAiuD,EAAAhuD,KAAA,EASEvM,EAAKf,MAAMiY,KAAKC,IAAI0iD,cATtB,OASf3hD,EATeqiD,EAAAhrD,MAWV+qD,EAAAppB,EAAS1Y,SACjBsyB,uBADQ/8C,MAAAusD,EAAA,CACeH,GADfnxD,OAAAzK,OAAA63C,EAAA,EAAA73C,CAC+B67D,KACvCt2C,KAAK,CACJxc,KAAM6yD,EACNjiD,aAIDsiD,GAAG,kBAAmB,SAAS1tD,GAChC9N,KAAK0Z,UAAL,yCAAA1P,OAAwD8D,IACxDutD,MACCI,KAAK,eAAgB,SAASC,EAAoBC,GACnD37D,KAAK0Z,UAAU,iCAAiCiiD,GAChDN,EAAiBM,KAxBEJ,EAAAhuD,KAAA,gBAAAguD,EAAAjuD,KAAA,EAAAiuD,EAAA/uC,GAAA+uC,EAAA,SA2BrBv6D,EAAK0Y,UAAL6hD,EAAA/uC,IACA7mB,EAAS,KAAD41D,EAAA/uC,IA5Ba,yBAAA+uC,EAAA1sD,SAAAqsD,EAAAl7D,KAAA,YAjoFP,gBAAA47D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,EAAAlsD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAiqFlBi8D,0BAA4B,SAAAC,GAC1B,IAAKl7D,EAAKf,MAAMiY,KAAKu4B,MAAM0rB,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgBpyD,OAAOkyD,EAAW,iCAGtC,IAAI5X,EAAI4X,EAAUlmD,MAAM,EAAG,IACvBo7B,EAAI,KAAKpnC,OAAOkyD,EAAUlmD,MAAM,GAAI,MACpCpP,EAAI,KAAKoD,OAAOkyD,EAAUlmD,MAAM,IAAK,MAGzC,OAFApP,EAAI5F,EAAKf,MAAMiY,KAAKu4B,MAAM4rB,YAAYz1D,GACjC,CAAC,GAAI,IAAI0hB,SAAS1hB,KAAIA,GAAK,IACzB,CACL09C,EAAGA,EACHlT,EAAGA,EACHxqC,EAAGA,IA/qFW5G,KAmrFlBs8D,gCAAkC,SAACthC,EAAOuhC,EAASz8B,EAAmBwU,GACpE,OAAOrE,EAAcusB,aACnB,CAAC,UAAU,UAAU,UAAU,SAC/B,CAACxhC,EAAOsZ,EAAiBioB,EAASE,mBAAS38B,MAtrF7B9/B,KA0rFlB2+B,oBA1rFkB,eAAA+9B,EAAAn9D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA0rFI,SAAA2vD,EAAOxB,GAAP,IAAAyB,EAAAC,EAAA,OAAAryC,EAAApqB,EAAAgN,KAAA,SAAA0vD,GAAA,cAAAA,EAAAxvD,KAAAwvD,EAAAvvD,MAAA,cACdqvD,EAAe57D,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,aAD7CkrD,EAAAvvD,KAAA,EAEFvM,EAAKihD,YAAL,GAAAj4C,OAAoB4yD,EAAalb,UAAUqb,OAA3C,iBAAA/yD,OAAiEmxD,EAAjE,WAAAnxD,OAAsF4yD,EAAajqC,OAAOqqC,OAAQ,KAAK,CACvIC,QAAQ,CACNC,YAAYN,EAAajqC,OAAO+7B,UAJhB,YAEdmO,EAFcC,EAAAvsD,QAQTssD,EAAI14D,KARK,CAAA24D,EAAAvvD,KAAA,eAAAuvD,EAAAvkD,OAAA,SASXskD,EAAI14D,MATO,cAAA24D,EAAAvkD,OAAA,SAYb,MAZa,wBAAAukD,EAAAjuD,SAAA8tD,EAAA38D,SA1rFJ,gBAAAm9D,GAAA,OAAAT,EAAA3tD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAysFlB4gC,iBAzsFkB,eAAAw8B,EAAA79D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAysFC,SAAAqwD,EAAO9qC,EAAaD,EAAW+nC,EAAar/B,EAAMr1B,EAAS01D,GAA3D,IAAAiC,EAAAprB,EAAApS,EAAAq7B,EAAAoB,EAAAgB,EAAArB,EAAAsB,EAAAlZ,EAAAlT,EAAAxqC,EAAA,OAAA4jB,EAAApqB,EAAAgN,KAAA,SAAAqwD,GAAA,cAAAA,EAAAnwD,KAAAmwD,EAAAlwD,MAAA,UACX2kC,EAAWlxC,EAAK08B,kBAAkBnL,GADvB,CAAAkrC,EAAAlwD,KAAA,eAIf5H,EAAS,KAAK,sBAJC83D,EAAAllD,OAAA,UAKR,GALQ,UAQZ25B,EAAS1Y,QAAQlH,GARL,CAAAmrC,EAAAlwD,KAAA,eASf5H,EAAS,KAAK,oBATC83D,EAAAllD,OAAA,UAUR,GAVQ,cAaXunB,GAAoBw9B,EAAAprB,EAAS1Y,SAAQlH,GAAjBvjB,MAAAuuD,EAAA/9D,OAAA63C,EAAA,EAAA73C,CAAgC86D,IAAc75B,YAbvDi9B,EAAAnwD,KAAA,EAgBT6tD,EAAcn6D,EAAKf,MAAMuM,QACzB+vD,EAAUv7D,EAAKf,MAAMmzB,QAAQmiB,QAAQtxC,IAAMjD,EAAK4Q,gBAAgB,CAAC,UAAU,oBAC3E2rD,EAAgBv8D,EAAKs7D,gCAAgCthC,EAAOuhC,EAASz8B,EAAmBoS,EAASwrB,UAlBxFD,EAAAlwD,KAAA,GAoBSvM,EAAKf,MAAMiY,KAAKC,IAAIwlD,SAASC,KACnD,KAAOL,EAAcrjD,SAAS,OAC9BihD,GAtBa,eAoBTe,EApBSuB,EAAAltD,KAAAitD,EAyBKx8D,EAAKi7D,0BAA0BC,GAA3C5X,EAzBOkZ,EAyBPlZ,EAAGlT,EAzBIosB,EAyBJpsB,EAAGxqC,EAzBC42D,EAyBD52D,EAEd5F,EAAK+xB,0BAA0BR,EAAcD,EAAY+nC,EAAarwD,OAAO,CAACgxB,EAAOspB,EAAGlT,EAAGxqC,IAAKjB,EAAU01D,GA3B3FoC,EAAAllD,OAAA,UA6BR,GA7BQ,eAAAklD,EAAAnwD,KAAA,GAAAmwD,EAAAjxC,GAAAixC,EAAA,SA+Bf93D,EAAS,KAAD83D,EAAAjxC,IA/BOixC,EAAAllD,OAAA,UAgCR,GAhCQ,yBAAAklD,EAAA5uD,SAAAwuD,EAAAr9D,KAAA,aAzsFD,gBAAA69D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAruD,MAAA/O,KAAAgP,YAAA,GAAAhP,KA6uFlBm+D,8BA7uFkB,eAAAC,EAAA7+D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA6uFc,SAAAqxD,EAAO9rC,EAAa+rC,EAAaC,EAAWC,EAAShE,GAArD,IAAAtoB,EAAAusB,EAAA/wD,EAAA,OAAA8c,EAAApqB,EAAAgN,KAAA,SAAAsxD,GAAA,cAAAA,EAAApxD,KAAAoxD,EAAAnxD,MAAA,UACxB2kC,EAAWlxC,EAAK08B,kBAAkBnL,GADV,CAAAmsC,EAAAnxD,KAAA,eAAAmxD,EAAAnmD,OAAA,UAIrB,GAJqB,cASxBkmD,EAAc,CAClBF,aACAp6D,KAAKq6D,EACL7wD,MAAM2wD,EACNvrB,GAAGb,EAASwrB,SACZiB,MAAMzwD,SAASssD,IAdakE,EAAAnxD,KAAA,EAoBbvM,EAAKf,MAAM2+D,qBAAqBC,QAAQJ,GApB3B,cAoBxB/wD,EApBwBgxD,EAAAnuD,KAAAmuD,EAAAnmD,OAAA,SAsBvB7K,GAtBuB,wBAAAgxD,EAAA7vD,SAAAwvD,EAAAr+D,SA7uFd,gBAAA8+D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAArvD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAswFlBwoD,sBAtwFkB,eAAA2W,EAAA5/D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAswFM,SAAAoyD,EAAOtxD,GAAP,OAAA0c,EAAApqB,EAAAgN,KAAA,SAAAiyD,GAAA,cAAAA,EAAA/xD,KAAA+xD,EAAA9xD,MAAA,cAAA8xD,EAAA9xD,KAAA,EACR,IAAIoK,QAAJ,eAAA2nD,EAAA//D,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAAuyD,EAAOxnD,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAAoyD,GAAA,cAAAA,EAAAlyD,KAAAkyD,EAAAjyD,MAAA,OACzBvM,EAAKf,MAAMiY,KAAKC,IAAIqwC,sBAAsB16C,EAAK,SAACsK,EAAI1K,GAC9C0K,GACFJ,EAAOI,GAETL,EAAQrK,KALe,wBAAA8xD,EAAA3wD,SAAA0wD,EAAAv/D,SAAb,gBAAAy/D,EAAAC,GAAA,OAAAJ,EAAAvwD,MAAA/O,KAAAgP,YAAA,IADQ,cAAAqwD,EAAA9mD,OAAA,SAAA8mD,EAAA9uD,MAAA,wBAAA8uD,EAAAxwD,SAAAuwD,EAAAp/D,SAtwFN,gBAAA2/D,GAAA,OAAAR,EAAApwD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAixFlB4/D,iCAjxFkB,eAAAC,EAAAtgE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAixFiB,SAAA8yD,EAAOC,EAAIC,EAASr6D,EAAS01D,GAA7B,IAAA3oC,EAAAutC,EAAAvyD,EAAAwyD,EAAA,OAAA11C,EAAApqB,EAAAgN,KAAA,SAAA+yD,GAAA,cAAAA,EAAA7yD,KAAA6yD,EAAA5yD,MAAA,cAE7BmlB,EAAkB,KAFWytC,EAAA7yD,KAAA,EAAA6yD,EAAA5yD,KAAA,EAKNvM,EAAKf,MAAM2+D,qBAAqBwB,sBAAsB,CAACL,MAAIC,aALrD,OAKzBC,EALyBE,EAAA5vD,KAM/BmiB,EAAkButC,EAAWzlD,OANE2lD,EAAA5yD,KAAA,uBAAA4yD,EAAA7yD,KAAA,EAAA6yD,EAAA3zC,GAAA2zC,EAAA,SAU/Bx6D,EAAS,MAAK,GAViBw6D,EAAA5nD,OAAA,UAWxB,GAXwB,WAc5Bma,EAd4B,CAAAytC,EAAA5yD,KAAA,gBAgB/B5H,EAAS,MAAK,GAhBiBw6D,EAAA5nD,OAAA,UAiBxB,GAjBwB,eAyBjC8iD,EALM3tD,EAAK,CACT+rB,OAAO,gBACP/G,oBAMIwtC,EAAyB7kD,OAAOglD,YAAY,WAChDr/D,EAAKf,MAAMiY,KAAKC,IAAIqwC,sBAAsB91B,EAAiB,SAACta,EAAKujD,IAE3DvjD,GAAOujD,IACTtgD,OAAOilD,cAAcJ,GACrBxyD,EAAG2+C,UAAYsP,EACfjuD,EAAGK,QAAUqK,GAAOujD,EAAQ5tD,OAAS,UAAY,QAEjDpI,EAAS+H,EAAG0K,GAE4B,oBAA7BiD,OAAOklD,mBAChBllD,OAAOklD,kBAAkB7yD,EAAGglB,EAAgBhlB,EAAGK,OAAO,UAI3D,KA3C8BoyD,EAAA5nD,OAAA,UA6C1B,GA7C0B,yBAAA4nD,EAAAtxD,SAAAixD,EAAA9/D,KAAA,YAjxFjB,gBAAAwgE,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA9wD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAi0FlBygC,+BAj0FkB,eAAAmgC,EAAArhE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAi0Fe,SAAA6zD,EAAOtuC,EAAauN,EAAkBn6B,EAAS01D,GAA/C,IAAAnpB,EAAAipB,EAAAngC,EAAAuhC,EAAAgB,EAAArB,EAAA4E,EAAAxc,EAAAlT,EAAAxqC,EAAA,OAAA4jB,EAAApqB,EAAAgN,KAAA,SAAA2zD,GAAA,cAAAA,EAAAzzD,KAAAyzD,EAAAxzD,MAAA,UACzB2kC,EAAWlxC,EAAK08B,kBAAkBnL,GADT,CAAAwuC,EAAAxzD,KAAA,eAI7B5H,EAAS,KAAK,sBAJeo7D,EAAAxoD,OAAA,UAKtB,GALsB,cAAAwoD,EAAAzzD,KAAA,EASvB6tD,EAAcn6D,EAAKf,MAAMuM,QATFu0D,EAAAxzD,KAAA,EAUT2kC,EAAS1Y,QAAQwnC,SAAS7F,GAAa8F,OAV9B,cAUvBjmC,EAVuB+lC,EAAAxwD,KAWvBgsD,EAAUv7D,EAAKf,MAAMmzB,QAAQmiB,QAAQtxC,IAAMjD,EAAK4Q,gBAAgB,CAAC,UAAU,oBAC3E2rD,EAAgBv8D,EAAKs7D,gCAAgCthC,EAAOuhC,EAASz8B,EAAmBoS,EAASwrB,UAZ1EqD,EAAAxzD,KAAA,GAcLvM,EAAKf,MAAMiY,KAAKC,IAAIwlD,SAASC,KACnD,KAAOL,EAAcrjD,SAAS,OAC9BihD,GAhB2B,eAcvBe,EAduB6E,EAAAxwD,KAAAuwD,EAmBT9/D,EAAKi7D,0BAA0BC,GAA3C5X,EAnBqBwc,EAmBrBxc,EAAGlT,EAnBkB0vB,EAmBlB1vB,EAAGxqC,EAnBek6D,EAmBfl6D,EAEd5F,EAAK+xB,0BAA0BR,EAAc,yBAA0B,CAAC4oC,EAAar7B,EAAmBwkB,EAAGlT,EAAGxqC,GAAIjB,EAAU01D,GArB/F0F,EAAAxoD,OAAA,UAuBtB,GAvBsB,eAAAwoD,EAAAzzD,KAAA,GAAAyzD,EAAAv0C,GAAAu0C,EAAA,SAyB7B5uC,QAAQtb,MAARkqD,EAAAv0C,IACA7mB,EAAS,KAADo7D,EAAAv0C,IA1BqBu0C,EAAAxoD,OAAA,UA2BtB,GA3BsB,yBAAAwoD,EAAAlyD,SAAAgyD,EAAA7gE,KAAA,aAj0Ff,gBAAAkhE,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAA7xD,MAAA/O,KAAAgP,YAAA,GAAAhP,KAg2FlBshE,kBAh2FkB,eAAAC,EAAAhiE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAg2FE,SAAAw0D,EAAOltB,EAAiBmtB,EAAWC,EAAOC,EAAS76D,EAAOk0B,EAAO4mC,EAAUrF,GAA3E,IAAA1a,EAAAggB,EAAAC,EAAAC,EAAA9zC,EAAA9pB,EAAA,OAAAqmB,EAAApqB,EAAAgN,KAAA,SAAA40D,GAAA,cAAAA,EAAA10D,KAAA00D,EAAAz0D,MAAA,eACF+e,IAAZiwC,EADc,CAAAyF,EAAAz0D,KAAA,eAAAy0D,EAAAz0D,KAAA,EAEKvM,EAAKf,MAAMiY,KAAKC,IAAI8pD,aAFzB,OAEVpgB,EAFUmgB,EAAAzxD,KAGhBgsD,EAAUruD,SAAS2zC,GAHH,cAMZggB,EAAS,CACb,CAAEnhE,KAAM,OAAQkK,KAAM,UACtB,CAAElK,KAAM,UAAWkK,KAAM,UACzB,CAAElK,KAAM,UAAWkK,KAAM,WACzB,CAAElK,KAAM,oBAAqBkK,KAAM,YAG/Bk3D,EAAS,CACb,CAAEphE,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,UAAWkK,KAAM,WACzB,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,WAAYkK,KAAM,YAGtBm3D,EAAa,CACjBG,QAAS,IACTxhE,KAAM+gE,EACNlF,QAASA,EACT4F,kBAAmB7tB,GAGfrmB,EAAU,CACdyzC,QACAC,UACA76D,QACAk0B,QACA4mC,YAGIz9D,EAAO4H,KAAKC,UAAU,CAC1Bo2D,MAAO,CACLC,aAAcR,EACdS,OAAQR,GAEVS,YAAa,SACbV,OAAQE,EACR9zC,QAASA,IA3CO+zC,EAAAzpD,OAAA,SA8CX,IAAIZ,QAAQ,SAACI,EAASC,GAC3BhX,EAAKf,MAAMiY,KAAKw9B,gBAAgB5wB,KAAK,CACnC09C,QAAS,MACTv+D,GAAIkL,KAAK+yC,MAAMhoC,WAAWuoD,UAAU,GACpChpC,OAAQ,uBACR9G,OAAQ,CAAC+uC,EAAOv9D,GAChBmE,KAAMo5D,GACL,SAAC7qD,EAAOgmD,GACT,GAAIhmD,EACF,OAAOmB,EAAOnB,GAGhBkB,EAAQ8kD,EAAIhb,aA1DE,yBAAAmgB,EAAAnzD,SAAA2yD,EAAAxhE,SAh2FF,gBAAA0iE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA1B,EAAAxyD,MAAA/O,KAAAgP,YAAA,GAAAhP,KA+5FlBkjE,WA/5FkB,eAAAC,EAAA5jE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+5FL,SAAAo2D,EAAOC,EAAkBC,EAAQC,GAAjC,IAAAC,EAAA18D,EAAA28D,EAAAC,EAAA7hB,EAAA0a,EAAA8F,EAAAsB,EAAAC,EAAA5oC,EAAAsnC,EAAAuB,EAAAlC,EAAAQ,EAAAthC,EAAAghC,EAAA5zC,EAAAyzC,EAAAE,EAAAz9D,EAAA2/D,EAAA90D,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA22D,GAAA,cAAAA,EAAAz2D,KAAAy2D,EAAAx2D,MAAA,UAAsDi2D,EAAtDM,EAAAxiE,OAAA,QAAAgrB,IAAAw3C,EAAA,GAAAA,EAAA,GAAiE,EAAGh9D,EAApEg9D,EAAAxiE,OAAA,QAAAgrB,IAAAw3C,EAAA,GAAAA,EAAA,GAA0E,KAC/EL,EAAeziE,EAAK08B,kBAAkB2lC,GACtCK,EAAkB1iE,EAAK08B,kBAAkB6lC,GAE1CE,GAAiBC,EAJX,CAAAK,EAAAx2D,KAAA,eAAAw2D,EAAAxrD,OAAA,UAKF,GALE,cAAAwrD,EAAAx2D,KAAA,EAQUvM,EAAKf,MAAMiY,KAAKC,IAAI6rD,IAAIC,QARlC,UAQLpiB,EARKkiB,EAAAxzD,KASPgsD,EAAUruD,SAAS2zC,GAEjBwgB,EAAe,CACnB,CAAE3hE,KAAM,OAAQkK,KAAM,UACtB,CAAElK,KAAM,UAAWkK,KAAM,UACzB,CAAElK,KAAM,UAAWkK,KAAM,WACzB,CAAElK,KAAM,oBAAqBkK,KAAM,YAG/B+4D,EAAe3iE,EAAK4Q,gBAAgB,CAAC,SAASyxD,IAI9CO,EAAS51D,KAAKk2D,OAAM,IAAI/0D,MAAOY,UAAY,IAAO,OAC5C4zD,EAAaQ,YAvBd,CAAAJ,EAAAx2D,KAAA,gBAAAw2D,EAAAx2D,KAAA,GAuBkCk2D,EAAajqC,QAAQmqC,EAAaQ,aAAab,GAAQrC,OAvBzF,QAAA8C,EAAAv3C,GAAAu3C,EAAAxzD,KAAAwzD,EAAAx2D,KAAA,iBAAAw2D,EAAAv3C,GAuBkG,KAvBlG,QAuBPwO,EAvBO+oC,EAAAv3C,GAwBPg3C,EAAW,IACbxoC,EAAQ9sB,SAAS8sB,GAAO9sB,SAASs1D,IAEnCxoC,EAAQA,EAAM9gB,WAERooD,EAASqB,EAAa/4D,KACtBi5D,EAAaF,EAAaE,WAE1BlC,EAAU+B,EAAgBhG,SAC1ByE,EAAoBsB,EAAa/F,SAEjC78B,EAAa8iC,EAAajjE,MAAQ2iE,EAElCxB,EAAS,CACbtF,UACA77D,KAAMmgC,EACNshC,oBACAD,QAASyB,EAAazB,QAAQhoD,YAAc,KAG1C+T,EAAU,GA5CH81C,EAAA57B,GA8CH07B,EA9CGE,EAAAx2D,KA+CJ,OA/CIw2D,EAAA57B,GAAA,2BAgDDu5B,EAAQ4B,EACR1B,EAAWgC,EAEjB98D,EAAQA,GAAS9F,EAAKm/B,aAAan/B,EAAK4M,MAAM,GAAGw2D,IAAI,KAAK71D,MAAM,IAChE0f,EAAU,CACRnnB,QACAk0B,QACA0mC,QACAC,UACAC,YAzDKmC,EAAAxrD,OAAA,2BA6DP0V,EAAU,CACRq1C,SACAtoC,QACA4oC,SACAjC,UACA/iC,SAAS,GAlEJmlC,EAAAxrD,OAAA,2BAuELpU,EAAO4H,KAAKC,UAAU,CAC1B61D,SACA5zC,UACAm0C,MAAO,CACLE,SACAD,gBAEFE,YAAa,WA9EJwB,EAAAxrD,OAAA,SAmFJ,IAAIZ,QAAQ,SAACI,EAASC,GAC3BhX,EAAKf,MAAMiY,KAAKw9B,gBAAgB5wB,KAAK,CACnCxc,KAAMg7D,EACNd,QAAS,MACT7vC,OAAQ,CAAC2wC,EAAQn/D,GACjBs1B,OAAQ,uBACRx1B,GAAIkL,KAAK+yC,MAAMhoC,WAAWuoD,UAAU,IACnC,SAAC5rD,EAAOwtD,GACT,GAAIxtD,GAAUwtD,GAAYA,EAASxtD,MACjC,OAAOkB,EAAQ,MACV,GAAIssD,GAAYA,EAASxiB,OAAQ,CACtC,IAAMuZ,EAAmBp6D,EAAKi7D,0BAA0BoI,EAASxiB,QAGjE,OAFAuZ,EAAiBpgC,MAAQA,EACzBogC,EAAiBwI,OAASA,EACnB7rD,EAAQqjD,SAjGV,yBAAA2I,EAAAl1D,SAAAu0D,EAAApjE,SA/5FK,gBAAAskE,EAAAC,EAAAC,GAAA,OAAArB,EAAAp0D,MAAA/O,KAAAgP,YAAA,GAAAhP,KAsgGlB4gC,iBAtgGkB,eAAA6jC,EAAAllE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAsgGC,SAAA03D,EAAOrB,EAAkBC,EAAQC,EAAqBjxC,EAAY+nC,EAAc10D,EAAU01D,GAA1F,IAAAoI,EAAAC,EAAAtI,EAAAwI,EAAA5oC,EAAAspB,EAAAlT,EAAAxqC,EAAA+9D,EAAAC,EAAAC,EAAAlyC,EAAAmyC,EAAA91D,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA23D,GAAA,cAAAA,EAAAz3D,KAAAy3D,EAAAx3D,MAAA,UAAAu3D,EAAAxjE,OAAA,QAAAgrB,IAAAw4C,EAAA,GAAAA,EAAA,GAA4H,KAEvIrB,EAAeziE,EAAK08B,kBAAkB2lC,GACtCK,EAAkB1iE,EAAK08B,kBAAkB6lC,GAE1CE,GAAiBC,EALL,CAAAqB,EAAAx3D,KAAA,eAMf5H,EAAS,KAAK,sBANCo/D,EAAAxsD,OAAA,UAOR,GAPQ,cAAAwsD,EAAAx3D,KAAA,EAUcvM,EAAKkiE,WAAWG,EAAkBC,EAAQC,GAVxD,QAUXnI,EAVW2J,EAAAx0D,OAaPqzD,EAA2BxI,EAA3BwI,OAAQ5oC,EAAmBogC,EAAnBpgC,MAAOspB,EAAY8W,EAAZ9W,EAAGlT,EAASgqB,EAAThqB,EAAGxqC,EAAMw0D,EAANx0D,EACvB+9D,EAAe,CAACf,EAAQh9D,EAAG09C,EAAGlT,GAE9BwzB,EAAYlB,EAAgBsB,eAAex1C,KAAM,SAAAmR,GAAC,OAAIA,EAAEjgC,OAAS4xB,IACjEuyC,GAAWD,GAAYA,EAAUK,OAAOz1C,KAAM,SAAAzmB,GAAC,MAAe,UAAXA,EAAErI,QACtDkO,MAAMV,SAAS8sB,KAAW6pC,GAC7BF,EAAaO,QAAQlqC,GAEjBrI,EAAS0nC,EAAarwD,OAAO26D,GACnC3jE,EAAK+xB,0BAA0BwwC,EAAqBjxC,EAAYK,EAAQhtB,EAAU01D,IAElF11D,EAAS,KAAK,oBAxBC,yBAAAo/D,EAAAl2D,SAAA61D,EAAA1kE,SAtgGD,gBAAAmlE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAhB,EAAA11D,MAAA/O,KAAAgP,YAAA,GAAAhP,KAkiGlB0lE,aAliGkB,eAAAC,EAAApmE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkiGH,SAAA44D,EAAOrzC,EAAa+hB,EAAgBxU,EAAkBn6B,EAAS01D,GAA/D,IAAAgH,EAAAwD,EAAAtJ,EAAAwF,EAAA7vB,EAAAipB,EAAAngC,EAAA/M,EAAA63C,EAAA,OAAAt7C,EAAApqB,EAAAgN,KAAA,SAAA24D,GAAA,cAAAA,EAAAz4D,KAAAy4D,EAAAx4D,MAAA,cAEP80D,EAAe,CACnB,CAAE3hE,KAAM,OAAQkK,KAAM,UACtB,CAAElK,KAAM,UAAWkK,KAAM,UACzB,CAAElK,KAAM,UAAWkK,KAAM,WACzB,CAAElK,KAAM,oBAAqBkK,KAAM,YAG/Bi7D,EAAkB,CACtB,CAAEnlE,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,OAAQkK,KAAM,WACtB,CAAElK,KAAM,oBAAqBkK,KAAM,UAZxBm7D,EAAAx4D,KAAA,EAeSvM,EAAKf,MAAMiY,KAAKC,IAAI8pD,aAf7B,UAeP1F,EAfOwJ,EAAAx1D,KAiBPwxD,EAAa,CACjBxF,UACA2F,QAAS,IACTxhE,KAAM6xB,EACN4vC,kBAAmB7tB,GAGfpC,EAAWlxC,EAAK08B,kBAAkBnL,GAxB3B,CAAAwzC,EAAAx4D,KAAA,gBA2BX5H,EAAS,KAAK,sBA3BHogE,EAAAxtD,OAAA,UA4BJ,GA5BI,eA+BT4iD,EAAcn6D,EAAKf,MAAMuM,QA/BhBu5D,EAAAx4D,KAAA,GAgCK2kC,EAAS1Y,QAAQwnC,SAAS7F,GAAa8F,OAhC5C,QAgCTjmC,EAhCS+qC,EAAAx1D,MAiCT0d,EAAU,IACN+M,MAAQA,EAChB/M,EAAQ3lB,KAAO6yD,EACfltC,EAAQ6R,kBAAoBA,EAEtBgmC,EAAa/5D,KAAKC,UAAU,CAChCo2D,MAAO,CACLC,eACAwD,mBAEFhE,OAAQE,EACRQ,YAAa,kBACbt0C,YAKFjtB,EAAKf,MAAMiY,KAAKw9B,gBAAgB5wB,KAC9B,CACE09C,QAAS,MACTv+D,GAAI,aACJqE,KAAM6yD,EACN1hC,OAAQ,uBACR9G,OAAQ,CAACwoC,EAAa2K,IAExB,SAACjvD,EAAOwtD,GACN,GAAIxtD,GAAUwtD,GAAYA,EAASxtD,MACjC,OAAOlR,EAAS,KAAKkR,GAChB,GAAIwtD,GAAYA,EAASxiB,OAAQ,CACtC,IAAMuZ,EAAmBp6D,EAAKi7D,0BAA0BoI,EAASxiB,QACzDyC,EAAY8W,EAAZ9W,EAAGlT,EAASgqB,EAAThqB,EAAGxqC,EAAMw0D,EAANx0D,EAEd5F,EAAK+xB,0BAA0BR,EAAc,yBAA0B,CAAC4oC,EAAar7B,EAAmBwkB,EAAGlT,EAAGxqC,GAAIjB,EAAU01D,MAjErH,yBAAA0K,EAAAl3D,SAAA+2D,EAAA5lE,SAliGG,gBAAAgmE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAA52D,MAAA/O,KAAAgP,YAAA,GAAAhP,KAymGlB29B,mBAzmGkB,eAAA0oC,EAAA9mE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAymGG,SAAAs5D,EAAO/zC,EAAag0C,EAAaC,GAAjC,IAAAC,EAAAC,EAAAj4D,EAAAk4D,EAAA,OAAAn8C,EAAApqB,EAAAgN,KAAA,SAAAw5D,GAAA,cAAAA,EAAAt5D,KAAAs5D,EAAAr5D,MAAA,cAAAq5D,EAAAr5D,KAAA,EAIToK,QAAQqD,IAAI,CACpBha,EAAK2rC,gBAAgBpa,EAAai0C,GAAW,GAC7CxlE,EAAK6lE,aAAat0C,EAAag0C,EAAaC,KAN3B,cAAAC,EAAAG,EAAAr2D,KAAAm2D,EAAAnnE,OAAAouC,EAAA,EAAApuC,CAAAknE,EAAA,GAEjBh4D,EAFiBi4D,EAAA,GAGjBC,EAHiBD,EAAA,GAQnB1lE,EAAK0Y,UAAU,qBAAqB6Y,EAAavxB,EAAK4M,MAAM+4D,GAAWp9D,UAAUvI,EAAK4M,MAAMa,GAASlF,UAAWo9D,GAAa3lE,EAAK4M,MAAM+4D,GAAWrmC,IAAIt/B,EAAK4M,MAAMa,KAR/Im4D,EAAAruD,OAAA,SASZouD,GAAa3lE,EAAK4M,MAAM+4D,GAAWrmC,IAAIt/B,EAAK4M,MAAMa,KATtC,wBAAAm4D,EAAA/3D,SAAAy3D,EAAAtmE,SAzmGH,gBAAA8mE,EAAAC,EAAAC,GAAA,OAAAX,EAAAt3D,MAAA/O,KAAAgP,YAAA,GAAAhP,KAonGlB6mE,aApnGkB,eAAAI,EAAA1nE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAonGH,SAAAk6D,EAAO30C,EAAag0C,EAAaC,GAAjC,OAAAh8C,EAAApqB,EAAAgN,KAAA,SAAA+5D,GAAA,cAAAA,EAAA75D,KAAA65D,EAAA55D,MAAA,UACRglB,GAAiBg0C,GAAiBC,EAD1B,CAAAW,EAAA55D,KAAA,eAAA45D,EAAA5uD,OAAA,UAEJ,GAFI,cAIbvX,EAAK0Y,UAAU,eAAe6Y,EAAag0C,EAAaC,GAJ3CW,EAAA55D,KAAA,EAKAvM,EAAKy9B,oBAChBlM,EAAc,YAAa,CAACi0C,EAAYD,IAN7B,cAAAY,EAAA5uD,OAAA,SAAA4uD,EAAA52D,MAAA,wBAAA42D,EAAAt4D,SAAAq4D,EAAAlnE,SApnGG,gBAAAonE,EAAAC,EAAAC,GAAA,OAAAL,EAAAl4D,MAAA/O,KAAAgP,YAAA,GAAAhP,KA6nGlBunE,mCAAqC,SAACh1C,EAAaD,EAAWK,EAAO7rB,EAAMnB,EAAS01D,EAAiBmM,GACnGxmE,EAAKf,MAAM8yB,0BAA0BR,EAAcD,EAAYK,EAAQ7rB,EAAO,SAAC4G,GACrD,oBAAb/H,GACTA,EAAS+H,IAEV,SAACA,GAC8B,oBAArB2tD,GACTA,EAAiB3tD,IAElB,KAAM85D,IAtoGOxnE,KAwoGlB+yB,0BAA4B,SAACR,EAAaD,EAAWK,EAAOhtB,EAAS01D,EAAiBmM,GACpFxmE,EAAKf,MAAM8yB,0BAA0BR,EAAcD,EAAYK,EAAQ,KAAM,SAACjlB,GACpD,oBAAb/H,GACTA,EAAS+H,IAEV,SAACA,GAC8B,oBAArB2tD,GACTA,EAAiB3tD,IAElB,KAAM85D,IAjpGOxnE,KAmpGlB++B,aAAe,SAACxM,EAAarpB,EAAQvD,EAAS01D,GAC5Cr6D,EAAKf,MAAM8yB,0BAA0BR,EAAc,UAAW,CAC5DrpB,EACAlI,EAAKf,MAAMiY,KAAKu4B,MAAMg3B,iBAAiB,MACvC,KAAK,SAAC/5D,GACkB,oBAAb/H,GACTA,EAAS+H,IAEV,SAACA,GAC8B,oBAArB2tD,GACTA,EAAiB3tD,MA7pGL1N,KAiqGlBm/B,YAAc,SAAC5M,EAAarpB,EAAQvD,EAAS01D,GAC3Cr6D,EAAKf,MAAM8yB,0BAA0BR,EAAc,UAAW,CAC5DrpB,EACAlI,EAAKf,MAAMiY,KAAKu4B,MAAMg3B,iBAAiB,OACvC,KAAK,SAAC/5D,GACkB,oBAAb/H,GACTA,EAAS+H,IAEV,SAACA,GAC8B,oBAArB2tD,GACTA,EAAiB3tD,MA3qGL1N,KA+qGlB0nE,wBA/qGkB,eAAAC,EAAApoE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+qGQ,SAAA46D,EAAOr1C,EAAai0C,GAApB,IAAAl8D,EAAA26B,EAAAtV,EAAAk4C,EAAAC,EAAA94D,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA26D,GAAA,cAAAA,EAAAz6D,KAAAy6D,EAAAx6D,MAAA,UAA+BjD,EAA/Bw9D,EAAAxmE,OAAA,QAAAgrB,IAAAw7C,EAAA,GAAAA,EAAA,GAAwC,KAE1D7iC,EAFkB,wBAAAj7B,OAEsBuoB,EAFtB,KAAAvoB,OAEsCw8D,EAFtC,KAAAx8D,OAEoDM,KACtEqlB,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJlB,CAAAm5D,EAAAx6D,KAAA,eAAAw6D,EAAAxvD,OAAA,SAKfvX,EAAK4M,MAAM+hB,IALI,cAAAo4C,EAAAx6D,KAAA,EAQEvM,EAAKy9B,oBAAoBlM,EAAa,cAAc,CAACi0C,IARvD,YAQpBqB,EARoBE,EAAAx3D,MAAA,CAAAw3D,EAAAx6D,KAAA,YAUlBjD,IACFu9D,EAAgB7mE,EAAKqQ,iBAAiBw2D,EAAcv9D,KAEtDu9D,EAAgB7mE,EAAK4M,MAAMi6D,IAERj5D,QAfG,CAAAm5D,EAAAx6D,KAAA,gBAAAw6D,EAAAxvD,OAAA,SAgBbvX,EAAKktC,8BAA8BjJ,EAAc4iC,EAAc,KAhBlD,eAAAE,EAAAxvD,OAAA,SAmBjBvX,EAAK4M,MAAM,IAnBM,yBAAAm6D,EAAAl5D,SAAA+4D,EAAA5nE,SA/qGR,gBAAAgoE,EAAAC,GAAA,OAAAN,EAAA54D,MAAA/O,KAAAgP,YAAA,GAAAhP,KAosGlBk3C,oBApsGkB,eAAAgxB,EAAA3oE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAosGI,SAAAm7D,EAAOC,EAAMl8C,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAY6mB,EAAcngB,GAAzE,IAAA2f,EAAAk8C,EAAAr5D,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAk7D,GAAA,cAAAA,EAAAh7D,KAAAg7D,EAAA/6D,MAAA,cAAiF4e,IAAjFk8C,EAAA/mE,OAAA,QAAAgrB,IAAA+7C,EAAA,KAAAA,EAAA,GAAAC,EAAA/6D,KAAA,EACPvM,EAAKyrB,iBAAiB27C,EAAMl8C,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAY6mB,EAAcngB,EAAQ2f,GAAa,GADtG,cAAAm8C,EAAA/vD,OAAA,SAAA+vD,EAAA/3D,MAAA,wBAAA+3D,EAAAz5D,SAAAs5D,EAAAnoE,SApsGJ,gBAAAuoE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAZ,EAAAn5D,MAAA/O,KAAAgP,YAAA,GAAAhP,KAusGlBysB,iBAvsGkB,eAAAs8C,EAAAxpE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAusGC,SAAAg8D,EAAOZ,EAAMl8C,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAY6mB,GAA3D,IAAAngB,EAAA2f,EAAA88C,EAAA78C,EAAA7hB,EAAAD,EAAAw/B,EAAA0C,EAAA08B,EAAAC,EAAA/hC,EAAAgiC,EAAAC,EAAAC,EAAAC,EAAAnwB,EAAAowB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhzB,EAAAizB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApnC,EAAAqnC,EAAAt7D,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAm9D,GAAA,cAAAA,EAAAj9D,KAAAi9D,EAAAh9D,MAAA,cAAyEf,EAAzE89D,EAAAhpE,OAAA,QAAAgrB,IAAAg+C,EAAA,GAAAA,EAAA,GAAiF,KAAKn+C,IAAtFm+C,EAAAhpE,OAAA,QAAAgrB,IAAAg+C,EAAA,KAAAA,EAAA,GAAwGrB,IAAxGqB,EAAAhpE,OAAA,QAAAgrB,IAAAg+C,EAAA,KAAAA,EAAA,GACbl+C,EAAS,KACP7hB,EAAgB2hB,GAAcA,EAAW3hB,cAAiB,EAC1DD,EAAY4hB,GAAcA,EAAW5hB,WAActJ,EAAKf,MAAM6C,SAAW,EAAI,GAC7EgnC,EAAgB5d,GAAcA,EAAW4d,eAAkB9oC,EAAKf,MAAM6C,SAAW,EAAI,GACrF0pC,EAAYxrC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAASjE,EAAM,WAAa3M,EAAK8I,WAAW6D,GAEtFu7D,EAAiBpjE,EAAY0kE,SAPlBD,EAAAh9D,KAAA,GAQiBvM,EAAK27C,0BAA0B72C,EAAYu2C,IAAI37C,KAAK,YARrE,aAQXyoE,EARWoB,EAAAh6D,MAAA,CAAAg6D,EAAAh9D,KAAA,gBAAAg9D,EAAAh9D,KAAA,GAUTvM,EAAKf,MAAMq+B,aAAa4qC,EAAexoE,KAAKyoE,EAAoBD,EAAe7qC,KAVtE,QAAAksC,EAAA/9C,GAaT47C,EAbSmC,EAAAh9D,KAcV,iBAdUg9D,EAAA/9C,GAAA,GAiBV,cAjBU+9C,EAAA/9C,GAAA,GAoBV,gBApBU+9C,EAAA/9C,GAAA,GAwBV,SAxBU+9C,EAAA/9C,GAAA,GAiCV,eAjCU+9C,EAAA/9C,GAAA,GAoCV,eApCU+9C,EAAA/9C,GAAA,GAuCV,cAvCU+9C,EAAA/9C,GAAA,GA0CV,cA1CU+9C,EAAA/9C,GAAA,GA6CV,gBA7CU+9C,EAAA/9C,GAAA,GAgEV,qBAhEU+9C,EAAA/9C,GAAA,GA8EV,iBA9EU+9C,EAAA/9C,GAAA,GAoFV,kBApFU+9C,EAAA/9C,GAAA,GAqGV,sBArGU+9C,EAAA/9C,GAAA,GAsHV,eAtHU+9C,EAAA/9C,GAAA,GAgIV,4BAhIU+9C,EAAA/9C,GAAA,GA2IV,uBA3IU+9C,EAAA/9C,GAAA,GA8IV,uBA9IU+9C,EAAA/9C,GAAA,GAiJV,cAjJU+9C,EAAA/9C,GAAA,IAkJV,gBAlJU+9C,EAAA/9C,GAAA,IAmJV,mBAnJU+9C,EAAA/9C,GAAA,6BAebJ,GAAUprB,EAAK4Q,gBAAgB,CAAC,QAAQ,YAAY2a,EAAS,WAAavrB,EAAK8I,WAAWyiB,IAAWvZ,cAfxFu3D,EAAAhyD,OAAA,4BAkBb6T,EAASogB,EAlBI+9B,EAAAhyD,OAAA,4BAqBb6T,GAAUprB,EAAK4Q,gBAAgB,CAAC,WAAW8a,EAAQ,cAAgB,IAAI1Z,cArB1Du3D,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAyBQvM,EAAK27C,0BAA0B72C,EAAYu2C,IAAI37C,KAAK,oBAzB5D,eAyBT0mC,EAzBSmjC,EAAAh6D,KA0BRvP,EAAK4M,MAAMw5B,GAAUx4B,UACxBwd,EAASprB,EAAKqQ,iBAAiB+1B,EAASthC,EAAYu2C,IAAI/xC,UACpD2+D,IACF78C,EAASprB,EAAK0T,iBAAiB0X,EAAO9hB,EAASC,EAAau/B,KA7BnDygC,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAkCEvM,EAAKyrB,iBAAiB,cAAcP,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAYA,EAAY2kE,GAAGj+D,EAAQ2f,GAlC3G,eAkCbC,EAlCam+C,EAAAh6D,KAAAg6D,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAqCEvM,EAAKyrB,iBAAiB,cAAcP,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAYA,EAAY4kE,GAAGl+D,EAAQ2f,GArC3G,eAqCbC,EArCam+C,EAAAh6D,KAAAg6D,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAwCEvM,EAAKyrB,iBAAiB,aAAaP,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAYA,EAAY2kE,GAAGj+D,EAAQ2f,GAxC1G,eAwCbC,EAxCam+C,EAAAh6D,KAAAg6D,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GA2CEvM,EAAKyrB,iBAAiB,aAAaP,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAYA,EAAY4kE,GAAGl+D,EAAQ2f,GA3C1G,eA2CbC,EA3Cam+C,EAAAh6D,KAAAg6D,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAiDHoK,QAAQqD,IAAI,CACpBha,EAAK2pE,oBAAoBh+C,EAAcjsB,KAAK,SAAS,KACrDM,EAAKyrB,iBAAiB,eAAeP,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAYA,EAAY4kE,GAAGl+D,EAAQ2f,KAnD/F,eAAAi9C,EAAAmB,EAAAh6D,KAAA84D,EAAA9pE,OAAAouC,EAAA,EAAApuC,CAAA6pE,EAAA,GA+CXE,EA/CWD,EAAA,GAgDXE,EAhDWF,EAAA,GAuDbj9C,EAASprB,EAAK4M,MAAM,GACf5M,EAAK4M,MAAM27D,GAAc36D,SAAY5N,EAAK4M,MAAM07D,GAAa16D,UAChEwd,EAASprB,EAAKqQ,iBAAiBi4D,EAAYxjE,EAAYu2C,IAAI/xC,UAAUhB,MAAMigE,IAEzEN,IACF78C,EAASprB,EAAK0T,iBAAiB0X,EAAO9hB,EAASC,EAAau/B,GAAnD,IAAA9/B,OAAqEwiC,IA5DnE+9B,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAiEWvM,EAAKg+C,0BAA0Bl5C,EAAY6mB,EAAcngB,GAjEpE,eAiEP4sC,EAjEOmxB,EAAAh6D,KAmEb6b,EAASA,GAAUprB,EAAK4M,MAAM,IAE9Bwe,EAASprB,EAAK4M,MAAMwrC,IACT3nC,GAAG,GACRw3D,IACF78C,EAASprB,EAAK0T,iBAAiB0X,EAAO9hB,EAASC,EAAau/B,GAAnD,IAAA9/B,OAAqEwiC,IAGhFpgB,EAAS68C,EAAc,IAAM,KA3ElBsB,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GA+EEvM,EAAKy9B,oBAAoB34B,EAAYu2C,IAAI37C,KAAK,eAAe,CAACisB,EAAczjB,UA/E9E,eA+EbkjB,EA/Eam+C,EAAAh6D,QAiFX6b,EAASprB,EAAKqQ,iBAAiB+a,EAAOO,EAAcriB,WAjFzCigE,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAwFHoK,QAAQqD,IAAI,CACpBha,EAAK0mE,wBAAwB/6C,EAAc2vB,WAAW57C,KAAK8L,EAAQmgB,EAAc2vB,WAAWhyC,UAC5FtJ,EAAKyrB,iBAAL,eAAqCP,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAY6mB,EAAcngB,EAAQ2f,KA1F9F,eAAAq9C,EAAAe,EAAAh6D,KAAAk5D,EAAAlqE,OAAAouC,EAAA,EAAApuC,CAAAiqE,EAAA,GAsFXE,EAtFWD,EAAA,GAuFXE,EAvFWF,EAAA,GA6Fbr9C,EAAS68C,EAAc,IAAM,KACzBS,GAAWC,IACbv9C,EAASprB,EAAK4M,MAAM87D,GAASpgE,MAAMqgE,GAC/BV,IACF78C,EAASprB,EAAK0T,iBAAiB0X,EAAO9hB,EAASC,EAAau/B,GAAnD,IAAA9/B,OAAqEwiC,KAjGrE+9B,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAyGHoK,QAAQqD,IAAI,CACpBha,EAAK2rC,gBAAgBhgB,EAAcjsB,KAAK8L,GACxCxL,EAAKyrB,iBAAL,eAAqCP,EAAWK,EAAS5e,EAAM+e,EAAQ5mB,EAAYA,EAAY2kE,GAAGj+D,EAAQ2f,KA3G/F,eAAAy9C,EAAAW,EAAAh6D,KAAAs5D,EAAAtqE,OAAAouC,EAAA,EAAApuC,CAAAqqE,EAAA,GAuGXE,EAvGWD,EAAA,GAwGXE,EAxGWF,EAAA,GA8Gbz9C,EAAS68C,EAAc,IAAM,KACzBa,GAAcC,IAChB39C,EAASprB,EAAK4M,MAAMk8D,GAAYxgE,MAAMygE,GAClCd,IACF78C,EAASprB,EAAK0T,iBAAiB0X,EAAO9hB,EAASC,EAAau/B,GAAnD,IAAA9/B,OAAqEwiC,KAlHrE+9B,EAAAhyD,OAAA,4BAAAgyD,EAAAh9D,KAAA,GAuHUvM,EAAK27C,0BAA0B72C,EAAYu2C,IAAI37C,KAAK,SAAS,CAACisB,EAAczjB,UAvHtF,eAuHT6tC,EAvHSwzB,EAAAh6D,QA0HX6b,EAASprB,EAAKqQ,iBAAiB0lC,EAAWjxC,EAAYu2C,IAAI/xC,UACtD2+D,IACF78C,EAASA,EAAO7iB,QAAQ,GAAG,MA5HlBghE,EAAAhyD,OAAA,4BAiIPyxD,EAAqBhpE,EAAK4Q,gBAAgB,CAAC,YAAY,SAjIhD24D,EAAAh9D,KAAA,GAkImBvM,EAAK05C,2BAA2B50C,EAAY6mB,GAlI/D,eAkIPs9C,EAlIOM,EAAAh6D,OAmIY05D,EAAkBW,OACzCx+C,EAASprB,EAAKquC,qBAAqB46B,EAAkBW,KAAK7uB,gBAAgBiuB,EAAmB77C,uBACzF86C,IACF78C,EAASprB,EAAK0T,iBAAiB0X,EAAO9hB,EAASC,EAAau/B,GAAnD,SAAA9/B,OAA0EggE,EAAmB77C,yBAtI7Fo8C,EAAAhyD,OAAA,4BA4Ib6T,EAASprB,EAAK0T,iBAAiB,OAAOpK,EAASC,EAAau/B,GAAnD,YA5IIygC,EAAAhyD,OAAA,4BA+Ib6T,EAASprB,EAAK0T,iBAAiB,OAAOpK,EAASC,EAAau/B,GAAnD,YA/IIygC,EAAAhyD,OAAA,6BAoJb6T,EAAS,GApJIm+C,EAAAh9D,KAAA,IAwJHoK,QAAQqD,IAAI,CACpBha,EAAKy9B,oBAAoByqC,EAAexoE,KAAK,mBAC7CM,EAAKy9B,oBAAoB34B,EAAYu2C,IAAI37C,KAAK,wBA1JnC,gBAAAwpE,EAAAK,EAAAh6D,KAAA45D,EAAA5qE,OAAAouC,EAAA,EAAApuC,CAAA2qE,EAAA,GAsJXE,EAtJWD,EAAA,GAuJXE,EAvJWF,EAAA,IA6JPlnC,EAAsB,cAAVmlC,EAAwBgC,EAA2B,gBAAVhC,EAA0BgC,EAAc38D,OAAQ,SAAAo9D,GAAe,OAAKR,EAAgB73D,IAAK,SAAA+gD,GAAI,OAAIA,EAAKpqD,gBAAgBmf,SAASuiD,EAAgB1hE,iBAAmBkhE,IAK3NpnC,EAAU1hC,QAAS,SAAAupE,GACjB,IAAMj9C,EAAiB7sB,EAAK+pE,2BAA2BD,GACnDj9C,IAAmBA,EAAehD,UAGtCuB,EAAOyB,EAAelgB,OAASkgB,KAvKtB08C,EAAAhyD,OAAA,6BAAAgyD,EAAAhyD,OAAA,6BAAAgyD,EAAAhyD,OAAA,SAiLV6T,GAjLU,0BAAAm+C,EAAA17D,SAAAm6D,EAAAhpE,SAvsGD,gBAAAgrE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAvC,EAAAh6D,MAAA/O,KAAAgP,YAAA,GAAAhP,KA03GlBumC,eA13GkB,eAAAglC,EAAAhsE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA03GD,SAAAw+D,EAAOpD,EAAMz6D,EAAM7H,EAAY0G,GAA/B,IAAA2f,EAAAs/C,EAAAr/C,EAAA6W,EAAAyoC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9jC,EAAA+jC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzoC,EAAAE,EAAAX,EAAAD,EAAAopC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA98D,EAAA+8D,EAAAv8B,EAAA9D,EAAA3e,EAAAsgB,EAAA2+B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAr1B,EAAAs1B,EAAAC,EAAAC,EAAAC,EAAA7+D,EAAAmrC,GAAAvqC,GAAAk+D,GAAAC,GAAAC,GAAAC,GAAApmC,GAAAqmC,GAAAC,GAAAvgC,GAAA9G,GAAA/1B,GAAAq9D,GAAAC,GAAAC,GAAA5pC,GAAAd,GAAAD,GAAA4qC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAvnC,GAAAwnC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA3hE,GAAA4hE,GAAAC,GAAAhgE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA6hE,GAAA,cAAAA,EAAA3hE,KAAA2hE,EAAA1hE,MAAA,OAAuC4e,IAAvC6iD,GAAA1tE,OAAA,QAAAgrB,IAAA0iD,GAAA,KAAAA,GAAA,GAAyDvD,EAAzDuD,GAAA1tE,OAAA,QAAAgrB,IAAA0iD,GAAA,IAAAA,GAAA,GAEX5iD,EAAS,KACP6W,EAAYjiC,EAAK4Q,gBAAgB,CAAC,cAGlC85D,EAAe1qE,EAAK4Q,gBAAgB,CAAC,aAAa5Q,EAAKf,MAAMiQ,mBAC/Dic,GAAgBu/C,GAAqD,qBAA9BA,EAAav/C,eACtDA,EAAeu/C,EAAav/C,cAI1Bw/C,EAA0B,KAC1B3qE,EAAKf,MAAMiQ,kBAAoBlP,EAAKf,MAAMsF,eACtCqmE,EAAiB5qE,EAAKf,MAAM2uC,oBAAoB5tC,EAAKf,MAAMiQ,kBAAkBlP,EAAKf,MAAMsF,mBAE5FomE,EAA0B,IACFC,EAAej+D,OAASi+D,GAExCrsE,OAAO8B,KAAK4hC,GAAW3a,SAAS3a,MAC1Cg+D,EAA0B,IACFh+D,GAAS7H,GArBpBmpE,EAAAziD,GAwBP47C,EAxBO6G,EAAA1hE,KAyBR,oBAzBQ0hE,EAAAziD,GAAA,GA4CR,sBA5CQyiD,EAAAziD,GAAA,GAuDR,aAvDQyiD,EAAAziD,GAAA,GA0DR,qBA1DQyiD,EAAAziD,GAAA,GA6DR,2BA7DQyiD,EAAAziD,GAAA,GAiER,kCAjEQyiD,EAAAziD,GAAA,GAyFR,iBAzFQyiD,EAAAziD,GAAA,GAmGR,qBAnGQyiD,EAAAziD,GAAA,GA0GR,SA1GQyiD,EAAAziD,GAAA,GAiHR,0BAjHQyiD,EAAAziD,GAAA,GAuIR,qBAvIQyiD,EAAAziD,GAAA,GAuKR,sBAvKQyiD,EAAAziD,GAAA,IA2LR,QA3LQyiD,EAAAziD,GAAA,IA4MR,QA5MQyiD,EAAAziD,GAAA,IAkOR,WAlOQyiD,EAAAziD,GAAA,IAkPR,eAlPQyiD,EAAAziD,GAAA,IA+PR,qBA/PQyiD,EAAAziD,GAAA,IAqQR,eArQQyiD,EAAAziD,GAAA,IA6QR,eA7QQyiD,EAAAziD,GAAA,IA6RR,QA7RQyiD,EAAAziD,GAAA,IAgSR,iBAhSQyiD,EAAAziD,GAAA,IA8SR,qBA9SQyiD,EAAAziD,GAAA,IAoTR,6BApTQyiD,EAAAziD,GAAA,IAgVR,sBAhVQyiD,EAAAziD,GAAA,IA6WR,kBA7WQyiD,EAAAziD,GAAA,IA6XR,aA7XQyiD,EAAAziD,GAAA,6BAAAyiD,EAAA1hE,KAAA,GA8BDoK,QAAQqD,IAAI,CACpBha,EAAKq3C,sBACLr3C,EAAKq4C,oBAAoB,GAAG7sC,GAC5BxL,EAAKkuE,qBAAqB1iE,GAAQ,KAjCzB,eAAAq/D,EAAAoD,EAAA1+D,KAAAu7D,EAAAvsE,OAAAouC,EAAA,EAAApuC,CAAAssE,EAAA,GA2BT7jC,EA3BS8jC,EAAA,GA4BTC,EA5BSD,EAAA,GA6BTE,EA7BSF,EAAA,GAoCPC,GAAoBC,IACtB5/C,EAASprB,EAAK4M,MAAMo+D,GAAmB1iE,MAAMyiE,GACzC/jC,IACF5b,EAASA,EAAO7d,MAAM6d,EAAO9iB,MAAM0+B,MAvC5BinC,EAAA12D,OAAA,4BAAA02D,EAAA1hE,KAAA,GA6C2CoK,QAAQqD,IAAI,CAChEha,EAAKulC,eAAe,kBAAkB54B,EAAM7H,EAAY0G,GACxDxL,EAAKulC,eAAe,yBAAyB54B,EAAM7H,EAAY0G,KA/CtD,eAAAy/D,EAAAgD,EAAA1+D,KAAA27D,EAAA3sE,OAAAouC,EAAA,EAAApuC,CAAA0sE,EAAA,GA6CNE,EA7CMD,EAAA,GA6CWE,EA7CXF,EAAA,GAkDPC,GAAoBC,GAA0BD,EAAiB16D,GAAG,IAAM26D,EAAuB36D,GAAG,KACpG2a,EAASggD,EAAuBnyD,IAAIkyD,GAAkB59D,MAAM,GAAGjF,MAAM,MAnD5D2lE,EAAA12D,OAAA,4BAAA02D,EAAA1hE,KAAA,GAwDIvM,EAAKgmC,cAxDT,eAwDX5a,EAxDW6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,4BAAA02D,EAAA1hE,KAAA,GA2DIvM,EAAKq3C,sBA3DT,eA2DXjsB,EA3DW6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,4BAAA02D,EAAA1hE,KAAA,GA8DIvM,EAAKmuE,6BAA6B3iE,GA9DtC,eA8DX4f,EA9DW6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,4BAAA02D,EAAA1hE,KAAA,GAsEDoK,QAAQqD,IAAI,CACpBha,EAAKulC,eAAe,WAAW54B,EAAM7H,EAAY0G,GACjDxL,EAAKulC,eAAe,kBAAkB54B,EAAM7H,EAAY0G,GACxDxL,EAAKulC,eAAe,yBAAyB54B,EAAM7H,EAAY0G,KAzEtD,eAAA6/D,EAAA4C,EAAA1+D,KAAA+7D,EAAA/sE,OAAAouC,EAAA,EAAApuC,CAAA8sE,EAAA,GAmETxoC,EAnESyoC,EAAA,GAoETvoC,EApESuoC,EAAA,GAqETlpC,EArESkpC,EAAA,GA4EPnpC,EAA4B,KAE5BC,GAA+BS,GAAYE,IACvCwoC,EAAiBxoC,EAAgBz6B,MAAMu6B,EAAS5pB,IAAI,MAC1DkpB,EAA4BC,EAA4B90B,KAAKi+D,IAI/DngD,EAAS,CACP+W,4BACAC,+BAtFS6rC,EAAA12D,OAAA,4BAAA02D,EAAA1hE,KAAA,GA0FkCoK,QAAQqD,IAAI,CACvDha,EAAKulC,eAAe,aAAa54B,EAAM7H,EAAY0G,GAAQ,GAC3DxL,EAAKulC,eAAe,oBAAoB54B,EAAM7H,EAAY0G,GAAQ,KA5FzD,eAAAggE,EAAAyC,EAAA1+D,KAAAk8D,EAAAltE,OAAAouC,EAAA,EAAApuC,CAAAitE,EAAA,GA0FNE,EA1FMD,EAAA,GA0FME,EA1FNF,EAAA,GA+FPC,GAAeC,GAAsBD,EAAYj7D,GAAG,KACtD2a,EAASugD,EAAmB1yD,IAAIyyD,GAAan+D,MAAM,GAAGjF,MAAM,MAhGnD2lE,EAAA12D,OAAA,4BAAA02D,EAAA1hE,KAAA,GAoGoBvM,EAAKulC,eAAe,mBAAmB54B,EAAM7H,EAAY0G,GApG7E,eAoGLogE,EApGKqC,EAAA1+D,QAsGHT,EAAgB5B,SAASiB,KAAK+yC,MAAM,KAC1C91B,GAAUtc,EAAc88D,GAAkB,OAvGjCqC,EAAA12D,OAAA,yBA2GPhZ,OAAO8B,KAAK4hC,GAAW3a,SAAS3a,GA3GzB,CAAAshE,EAAA1hE,KAAA,gBAAA0hE,EAAA1hE,KAAA,GA4GMvM,EAAKouE,gBAAgBzhE,EAAOg+D,GA5GlC,QA4GTv/C,EA5GS6iD,EAAA1+D,KAAA0+D,EAAA1hE,KAAA,wBAAA0hE,EAAA1hE,KAAA,GA8GMvM,EAAKquE,aAAavpE,EAAYqmB,GA9GpC,QA8GTC,EA9GS6iD,EAAA1+D,KAAA,eAAA0+D,EAAA12D,OAAA,qBAAA02D,EAAA9mC,GAkHHx6B,EAlHGshE,EAAA1hE,KAmHJ,SAnHI0hE,EAAA9mC,GAAA,GAsHJ,YAtHI8mC,EAAA9mC,GAAA,GAyHJ,SAzHI8mC,EAAA9mC,GAAA,2BAAA8mC,EAAA1hE,KAAA,GAoHQvM,EAAKsuE,wBAAwB9iE,EAAQm/D,GApH7C,eAoHPv/C,EApHO6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,2BAAA02D,EAAA1hE,KAAA,GAuHQvM,EAAKuuE,2BAA2B/iE,EAAQm/D,GAvHhD,eAuHPv/C,EAvHO6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,2BA0HD+3B,EAAetvC,EAAKwuE,kBA1HnBP,EAAA1hE,KAAA,GA2HQ+iC,EAAahC,oBAAoB9hC,EAAQm/D,GA3HjD,eA2HPv/C,EA3HO6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,2BAAA02D,EAAA12D,OAAA,2BAgIP6T,IAAWprB,EAAK4M,MAAMwe,GAAQxd,UAChCwd,EAASprB,EAAK4M,MAAMwe,GAAQnS,IAAI,SAE9BmS,EAASprB,EAAKquC,qBAAqBjjB,EAAOtmB,EAAYqoB,sBAAsBroB,EAAY2pE,mBAnIjFR,EAAA12D,OAAA,4BAwIL+3B,EAAetvC,EAAKwuE,kBACpBhjC,EAAYxrC,EAAK4Q,gBAAgB,CAAC,aAAa,QAAQ,cACvDic,EAAiB7sB,EAAK4Q,gBAAgB,CAAC,YAAY46B,IA1I9CyiC,EAAA1hE,KAAA,GA2II+iC,EAAaxC,SAAShoC,EAAYy6B,KAAKr3B,SA3I3C,aA2IXkjB,EA3IW6iD,EAAA1+D,MAAA,CAAA0+D,EAAA1hE,KAAA,UA+IT6e,EAASprB,EAAKqQ,iBAAiB+a,EAAOyB,EAAevjB,UAE/C6jC,EAAgBntC,EAAK4M,MAAM5M,EAAK4Q,gBAAgB,CAAC,UAAU,mBAjJxDq9D,EAAApmB,GAkJDh7B,EAAeM,sBAlJd8gD,EAAA1hE,KAmJF,QAnJE0hE,EAAApmB,GAAA,IAuJF,SAvJEomB,EAAApmB,GAAA,IA2JF,UA3JEomB,EAAApmB,GAAA,IA+JF,SA/JEomB,EAAApmB,GAAA,8BAoJCikB,EAAe3+B,EAAcl0B,IAAI,YACvCmS,EAASA,EAAO9iB,MAAMwjE,GArJjBmC,EAAA12D,OAAA,6BAwJCw0D,EAAgB5+B,EAAcl0B,IAAI,SACxCmS,EAASA,EAAO9iB,MAAMyjE,GAzJjBkC,EAAA12D,OAAA,6BA4JCy0D,EAAiB7+B,EAAcl0B,IAAI,IACzCmS,EAASA,EAAO9iB,MAAM0jE,GA7JjBiC,EAAA12D,OAAA,6BAgKL6T,EAASA,EAAO9iB,MAAM6kC,GAhKjB8gC,EAAA12D,OAAA,6BAAA02D,EAAA12D,OAAA,6BAAA02D,EAAA12D,OAAA,sBAwKL00D,EAAsBtB,EAAwB3qE,EAAKf,MAAMsF,eAxKpD0pE,EAAAS,GAyKH/hE,EAzKGshE,EAAA1hE,KA0KJ,SA1KI0hE,EAAAS,GAAA,IA6KJ,YA7KIT,EAAAS,GAAA,IAgLJ,SAhLIT,EAAAS,GAAA,8BAAAT,EAAA1hE,KAAA,IA2KQvM,EAAK2uE,oBAAoB1C,GA3KjC,gBA2KP7gD,EA3KO6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IA8KQvM,EAAK4uE,uBAAuB3C,GA9KpC,gBA8KP7gD,EA9KO6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,6BAiLD+3B,EAAetvC,EAAKwuE,kBAjLnBP,EAAA1hE,KAAA,IAkLQ+iC,EAAaxC,SAASm/B,EAAoB1sC,KAAKr3B,SAlLvD,gBAkLPkjB,EAlLO6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,6BAAA02D,EAAA12D,OAAA,6BAuLP6T,IAAWprB,EAAK4M,MAAMwe,GAAQxd,UAChCwd,EAASprB,EAAK4M,MAAMwe,GAAQnS,IAAI,OAxLvBg1D,EAAA12D,OAAA,sBAAA02D,EAAAY,GA4LHliE,EA5LGshE,EAAA1hE,KA6LJ,SA7LI0hE,EAAAY,GAAA,IAgMJ,SAhMIZ,EAAAY,GAAA,8BAAAZ,EAAA1hE,KAAA,IA8LQvM,EAAK8uE,cAAcnE,GA9L3B,gBA8LPv/C,EA9LO6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,6BAiMD+3B,EAAetvC,EAAKwuE,kBAjMnBP,EAAA1hE,KAAA,IAkMQ+iC,EAAahB,UAAUq8B,GAlM/B,gBAkMPv/C,EAlMO6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IAqMiBvM,EAAKm3C,aAAaryC,GAAY,EAAMqmB,GArMrD,gBAqMD2rB,EArMCm3B,EAAA1+D,OAsM+B,OAArBunC,EAAUse,SACzBhqC,EAAS0rB,EAAUse,QAvMd6Y,EAAA12D,OAAA,6BAAA02D,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IA6MavM,EAAKm3C,aAAaryC,GAAY,EAAMqmB,GA7MjD,YA6MLihD,EA7MK6B,EAAA1+D,KAiNX6b,EAASprB,EAAK4M,MAAM,IAEhBw/D,GAAcpsE,EAAK4M,MAAMw/D,EAAUh1B,QAAQxpC,QAnNpC,CAAAqgE,EAAA1hE,KAAA,aAoNT6e,EAASprB,EAAK4M,MAAMw/D,EAAUh1B,SAE1BqzB,EAtNK,CAAAwD,EAAA1hE,KAAA,iBAAA0hE,EAAA1hE,KAAA,IAuNgBvM,EAAKgmC,cAvNrB,UAuNDqmC,EAvNC4B,EAAA1+D,QAyNL6b,EAASA,EAAO9d,KAAK++D,IAzNhB,SAAA4B,EAAA1hE,KAAA,0BAAA0hE,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IAuODoK,QAAQqD,IAAI,CACpBha,EAAK62C,kBAAkB/xC,GACvB9E,EAAK24C,kBAAkB,CAAChsC,GAAOnB,GAC/BxL,EAAKulC,eAAe,mBAAmB54B,EAAM7H,EAAY0G,KA1OhD,YAAA8gE,EAAA2B,EAAA1+D,KAAAg9D,EAAAhuE,OAAAouC,EAAA,EAAApuC,CAAA+tE,EAAA,GAoOT5+D,EApOS6+D,EAAA,GAqOT1zB,GArOS0zB,EAAA,GAsOTj+D,GAtOSi+D,EAAA,KA6OP7+D,GAAcmrC,IAAkBA,GAAelsC,IA7OxC,CAAAshE,EAAA1hE,KAAA,iBAAA0hE,EAAA1hE,KAAA,IA8O4BvM,EAAK62C,kBAAkB/xC,EAAY+zC,GAAelsC,GAAOqM,aA9OrF,SA8OHwzD,GA9OGyB,EAAA1+D,KA+OT6b,EAASprB,EAAK4M,MAAMc,GAAYuL,IAAIuzD,IAAwBj/D,MAAM,GAAGjF,MAAM,KAAK2Q,IAAI3K,IAAMhG,MAAM,KA/OvF,gBAAA2lE,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IAsPDoK,QAAQqD,IAAI,CACpBha,EAAKulC,eAAe,mBAAmB54B,EAAM7H,EAAY0G,GACzDxL,EAAKulC,eAAe,eAAe54B,EAAM7H,EAAY0G,KAxP5C,gBAAAihE,GAAAwB,EAAA1+D,KAAAm9D,GAAAnuE,OAAAouC,EAAA,EAAApuC,CAAAkuE,GAAA,GAoPTE,GApPSD,GAAA,GAqPTnmC,GArPSmmC,GAAA,GA2PPC,IAAoBpmC,KACtBnb,EAASmb,GAAaj+B,MAAM,KAAK2Q,IAAI0zD,KA5P5BsB,EAAA12D,OAAA,0BAgQe/L,EAhQf,CAAAyiE,EAAA1hE,KAAA,iBAAA0hE,EAAA1hE,KAAA,IAgQ+BvM,EAAKm5C,oBAAoB,CAACxsC,GAAOnB,GAhQhE,SAAAyiE,EAAAc,GAAAd,EAAA1+D,KAAA0+D,EAAA1hE,KAAA,mBAAA0hE,EAAAc,IAgQ2E,EAhQ3E,gBAgQLnC,GAhQKqB,EAAAc,KAiQcnC,GAAkBjgE,KACzCye,EAASwhD,GAAkBjgE,IAlQlBshE,EAAA12D,OAAA,0BAsQF/L,EAtQE,CAAAyiE,EAAA1hE,KAAA,iBAAA0hE,EAAA1hE,KAAA,IAsQcvM,EAAKk3C,mBAAmBpyC,EAAY0G,GAtQlD,SAAAyiE,EAAAe,GAAAf,EAAA1+D,KAAA0+D,EAAA1hE,KAAA,mBAAA0hE,EAAAe,IAsQ6D,EAtQ7D,gBAsQX5jD,EAtQW6iD,EAAAe,GAAAf,EAAA12D,OAAA,0BA8QPhZ,OAAO8B,KAAK4hC,GAAW3a,SAAS3a,GA9QzB,CAAAshE,EAAA1hE,KAAA,iBA+QHsgB,GAAiBoV,EAAUt1B,GAC3B2/B,GAAiBtsC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,QAhRrDq9D,EAAA3hE,KAAA,IAAA2hE,EAAA1hE,KAAA,IAkRQvM,EAAK4sC,yBAAyBN,GAAezf,IAlRrD,SAkRPzB,EAlRO6iD,EAAA1+D,KAAA0+D,EAAA1hE,KAAA,mBAAA0hE,EAAA3hE,KAAA,IAAA2hE,EAAAgB,GAAAhB,EAAA,oBAsRJ7iD,IAAUprB,EAAK4M,MAAMwe,GAAQxd,UAChCwd,EAAS,KAvRF6iD,EAAA1hE,KAAA,0BAAA0hE,EAAA1hE,KAAA,IA0RMvM,EAAK+8B,cAAcj4B,EAAYy6B,KAAK5yB,OA1R1C,SA0RTye,EA1RS6iD,EAAA1+D,KAAA,gBAAA0+D,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IA8RIvM,EAAKkvE,iBAAiBpqE,EAAY0G,GA9RtC,gBA8RX4f,EA9RW6iD,EAAA1+D,KAAA0+D,EAAA12D,OAAA,0BAiSPhZ,OAAO8B,KAAK4hC,GAAW3a,SAAS3a,GAjSzB,CAAAshE,EAAA1hE,KAAA,iBAAA0hE,EAAA1hE,KAAA,IAkSMvM,EAAK2rC,gBAAgBh/B,EAAMnB,GAlSjC,UAkST4f,EAlSS6iD,EAAA1+D,QAmSM6b,EAAOxd,UACpBwd,EAAS,KApSF6iD,EAAA1hE,KAAA,uBAuSUf,EAvSV,CAAAyiE,EAAA1hE,KAAA,iBAAA0hE,EAAA1hE,KAAA,IAuS0BvM,EAAK2rC,gBAAgB7mC,EAAY6H,MAAMnB,GAvSjE,SAAAyiE,EAAAkB,GAAAlB,EAAA1+D,KAAA0+D,EAAA1hE,KAAA,mBAAA0hE,EAAAkB,IAuS4E,EAvS5E,UAuSL3pC,GAvSKyoC,EAAAkB,MAwSY3pC,GAAa53B,UAChC43B,GAAe,KAEjBpa,EAASoa,GA3SA,gBAAAyoC,EAAA12D,OAAA,0BA+Sc/L,EA/Sd,CAAAyiE,EAAA1hE,KAAA,iBAAA0hE,EAAA1hE,KAAA,IA+S8BvM,EAAK2rC,gBAAgB7mC,EAAYy6B,KAAK5yB,MAAMnB,GA/S1E,SAAAyiE,EAAAmB,GAAAnB,EAAA1+D,KAAA0+D,EAAA1hE,KAAA,mBAAA0hE,EAAAmB,IA+SqF,EA/SrF,gBA+SL3/D,GA/SKw+D,EAAAmB,MAiTThkD,EAAS3b,IAjTAw+D,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IAwTgDoK,QAAQqD,IAAI,CACrEha,EAAKulC,eAAe,MAAM54B,EAAM7H,EAAY0G,GAAQ,GACpDxL,EAAKulC,eAAe,aAAa54B,EAAM7H,EAAY0G,GAAQ,GAC3DxL,EAAKulC,eAAe,oBAAoB54B,EAAM7H,EAAY0G,GAAQ,KA3TzD,gBAAAshE,GAAAmB,EAAA1+D,KAAAw9D,GAAAxuE,OAAAouC,EAAA,EAAApuC,CAAAuuE,GAAA,GAwTNE,GAxTMD,GAAA,GAwTI3pC,GAxTJ2pC,GAAA,GAwTgBzqC,GAxThByqC,GAAA,GAkUP1qC,GAAuBC,GAEvBA,IAA0B0qC,IAAa5pC,KACnCmoC,GAAiBnoC,GAAY96B,MAAM0kE,GAAU/zD,IAAI,MACvDopB,GAAuBC,GAAuBh1B,KAAKi+D,KAGrDngD,EAAS,CACPiX,wBACAC,2BA3US2rC,EAAA12D,OAAA,0BAiVPhZ,OAAO8B,KAAK4hC,GAAW3a,SAAS3a,GAjVzB,CAAAshE,EAAA1hE,KAAA,iBAkVHsgB,GAAiBoV,EAAUt1B,GAlVxBshE,EAAA1hE,KAAA,IAmVMvM,EAAKqvE,uBAAuBxiD,GAAerhB,EAAQm/D,GAnVzD,SAmVTv/C,EAnVS6iD,EAAA1+D,KAAA0+D,EAAA1hE,KAAA,0BAAA0hE,EAAA1hE,KAAA,IAyVCoK,QAAQqD,IAAI,CACpBha,EAAK62C,kBAAkB/xC,GACvB9E,EAAKulC,eAAe,mBAAmB54B,EAAM7H,EAAY0G,GACzD2f,EAAenrB,EAAKsvE,6BAA6B9jE,EAAQm/D,EAAwBh+D,GAAS,OA5VnF,SAAAwgE,GAAAc,EAAA1+D,KAAA69D,GAAA7uE,OAAAouC,EAAA,EAAApuC,CAAA4uE,GAAA,GAsVPE,GAtVOD,GAAA,GAuVPE,GAvVOF,GAAA,GAwVPG,GAxVOH,GAAA,GAiWLE,IAAqBD,KACjB7nC,GAAe8nC,GAAkBhlE,MAAM+kE,IACzCpnC,GAAoBT,GACpB+nC,KAAqBvtE,EAAK4M,MAAM2gE,IAAkB3/D,UACpDq4B,GAAoBA,GAAkB34B,KAAKtN,EAAK4M,MAAM2gE,MAExDniD,EAAS6a,IAvWF,gBAAAgoC,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IA8W4CoK,QAAQqD,IAAI,CACjEha,EAAKulC,eAAe,kBAAkB54B,EAAM7H,EAAY0G,GACxDxL,EAAKulC,eAAe,yBAAyB54B,EAAM7H,EAAY0G,KAhXtD,gBAAAiiE,GAAAQ,EAAA1+D,KAAAm+D,GAAAnvE,OAAAouC,EAAA,EAAApuC,CAAAkvE,GAAA,GA8WNE,GA9WMD,GAAA,GA8WWE,GA9WXF,GAAA,GAmXNC,KACHA,GAAmB3tE,EAAK4M,MAAM,IAG3BghE,KACHA,GAA0B5tE,EAAK4M,MAAM,IAGvCwe,EAASwiD,GAAwBrgE,MAAMogE,IA3X5BM,EAAA12D,OAAA,6BAAA02D,EAAA1hE,KAAA,IA8XiCoK,QAAQqD,IAAI,CACtDha,EAAKulC,eAAe,aAAa54B,EAAM7H,EAAY0G,GAAQ,GAC3DxL,EAAKulC,eAAe,oBAAoB54B,EAAM7H,EAAY0G,GAAQ,KAhYzD,gBAAAqiE,GAAAI,EAAA1+D,KAAAu+D,GAAAvvE,OAAAouC,EAAA,EAAApuC,CAAAsvE,GAAA,GA8XN1hE,GA9XM2hE,GAAA,GA8XKC,GA9XLD,GAAA,GAmYN3hE,KACHA,GAAanM,EAAK4M,MAAM,IAErBmhE,KACHA,GAAqB/tE,EAAK4M,MAAM,KAGlCwe,EAAS2iD,GAAmBxgE,MAAMpB,KAIvBqB,GAAGxN,EAAK4M,MAAM,MACvBwe,EAASprB,EAAK4M,MAAM,IA/YXqhE,EAAA12D,OAAA,6BAAA02D,EAAA12D,OAAA,6BAAA02D,EAAA12D,OAAA,SAsZR6T,GAtZQ,0BAAA6iD,EAAApgE,SAAA28D,EAAAxrE,KAAA,gBA13GC,gBAAAuwE,EAAAC,EAAAC,EAAAC,GAAA,OAAAnF,EAAAx8D,MAAA/O,KAAAgP,YAAA,GAAAhP,KAkxHlB2wE,mBAlxHkB,eAAAC,EAAArxE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkxHG,SAAA6jE,EAAOzsB,GAAP,IAAApqC,EAAAirB,EAAAtV,EAAAmhD,EAAAC,EAAA/hE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA4jE,GAAA,cAAAA,EAAA1jE,KAAA0jE,EAAAzjE,MAAA,UAAiByM,EAAjB+2D,EAAAzvE,OAAA,QAAAgrB,IAAAykD,EAAA,GAAAA,EAAA,GAA6B,SAC1C9rC,EADa,mBAAAj7B,OACsBo6C,EADtB,KAAAp6C,OACmCgQ,KAChD2V,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAHvB,CAAAoiE,EAAAzjE,KAAA,eAAAyjE,EAAAz4D,OAAA,SAIVvX,EAAK4M,MAAM+hB,IAJD,cAAAqhD,EAAAzjE,KAAA,EAOSvM,EAAK2pE,oBAAoBvmB,EAAUpqC,GAP5C,YAOf82D,EAPeE,EAAAzgE,MAAA,CAAAygE,EAAAzjE,KAAA,gBASjBujE,EAAkB9vE,EAAK4M,MAAMkjE,GATZE,EAAAz4D,OAAA,SAUVvX,EAAKktC,8BAA8BjJ,EAAc6rC,IAVvC,eAAAE,EAAAz4D,OAAA,SAaZ,MAbY,yBAAAy4D,EAAAniE,SAAAgiE,EAAA7wE,SAlxHH,gBAAAixE,GAAA,OAAAL,EAAA7hE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAiyHlBkxE,yBAjyHkB,eAAAC,EAAA5xE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAiyHS,SAAAokE,EAAOtrE,EAAY0G,GAAnB,IAAAwN,EAAAq3D,EAAAC,EAAA3qC,EAAAj4B,EAAAixC,EAAA4xB,EAAAC,EAAAxiE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAqkE,GAAA,cAAAA,EAAAnkE,KAAAmkE,EAAAlkE,MAAA,UAA2ByM,EAA3Bw3D,EAAAlwE,OAAA,QAAAgrB,IAAAklD,EAAA,GAAAA,EAAA,GAAuC,SAChEhlE,EAAUA,GAAWxL,EAAKf,MAAMuM,QADP,CAAAilE,EAAAlkE,KAAA,eAAAkkE,EAAAl5D,OAAA,SAGhB,MAHgB,cAAAk5D,EAAAlkE,KAAA,EAUfoK,QAAQqD,IAAI,CACpBha,EAAK27C,0BAA0B72C,EAAYy6B,KAAK5yB,MAAO,MAAO,GAAI,GAAIqM,GACtEhZ,EAAK27C,0BAA0B72C,EAAYy6B,KAAK5yB,MAAO,aAAc,GAAI,GAAIqM,GAC7EhZ,EAAK27C,0BAA0B72C,EAAYy6B,KAAK5yB,MAAO,gBAAiB,CAACnB,GAAU,GAAIwN,KAbhE,UAAAq3D,EAAAI,EAAAlhE,KAAA+gE,EAAA/xE,OAAAouC,EAAA,EAAApuC,CAAA8xE,EAAA,GAOvB1qC,EAPuB2qC,EAAA,GAQvB5iE,EARuB4iE,EAAA,GASvB3xB,EATuB2xB,EAAA,GAgBzB3qC,EAAM3lC,EAAK4M,MAAM+4B,GACjBj4B,EAAa1N,EAAK4M,MAAMc,GACxBixC,EAAe3+C,EAAK4M,MAAM+xC,GAErBjxC,EAAWE,SAAY+wC,EAAa/wC,SAAY+3B,EAAI/3B,SAAY5N,EAAK4M,MAAM+xC,GAAc+xB,GAAG,KAAM1wE,EAAK4M,MAAMc,GAAY+C,GAAGzQ,EAAK4M,MAAM+xC,IApBnH,CAAA8xB,EAAAlkE,KAAA,gBAqBjBgkE,EAAYvwE,EAAKm/B,aAAan/B,EAAK4M,MAAMc,GAAYH,MAAML,SAASy4B,EAAI1sB,IAAI,KAAK3Q,MAAMoF,EAAWH,MAAMoxC,OArBvF8xB,EAAAl5D,OAAA,SAsBhBg5D,GAtBgB,eAAAE,EAAAl5D,OAAA,SAyBlB7J,GAzBkB,yBAAA+iE,EAAA5iE,SAAAuiE,EAAApxE,SAjyHT,gBAAA2xE,EAAAC,GAAA,OAAAT,EAAApiE,MAAA/O,KAAAgP,YAAA,GAAAhP,KA4zHlB63C,kBA5zHkB,eAAAg6B,EAAAtyE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA4zHE,SAAA8kE,EAAOhsE,GAAP,IAAAkU,EAAAhJ,EAAAi0B,EAAAtV,EAAArlB,EAAAoE,EAAAuB,EAAAi1B,EAAAuvB,EAAAsd,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1jE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAulE,GAAA,cAAAA,EAAArlE,KAAAqlE,EAAAplE,MAAA,UAAmByM,EAAnB04D,EAAApxE,OAAA,QAAAgrB,IAAAomD,EAAA,GAAAA,EAAA,GAA+B,SAAS1hE,EAAxC0hE,EAAApxE,OAAA,QAAAgrB,IAAAomD,EAAA,IAAAA,EAAA,GAEZztC,EAFY,kBAAAj7B,OAEsBlE,EAAYy6B,KAAK5yB,MAFvC,KAAA3D,OAEgDgQ,KAE5D2V,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QALxB,CAAA+jE,EAAAplE,KAAA,eAAAolE,EAAAp6D,OAAA,SAMTvX,EAAK4M,MAAM+hB,IANF,cAUdrlB,EAAWxE,EAAYwE,SAVTqoE,EAAAplE,KAAA,EAYKvM,EAAK27C,0BAA0B72C,EAAYy6B,KAAK5yB,MAAM,aAAa,GAAG,GAAGqM,GAZ9E,WAYdtL,EAZcikE,EAAApiE,QAeCS,EAfD,CAAA2hE,EAAAplE,KAAA,gBAgBV0C,EAAyC,SAAhCjP,EAAKf,MAAMiQ,iBACpBg1B,EAAiBh3B,SAAS8C,GAAY,KACtCyjD,EAAevmD,SAAS8C,GAAY,KAlB1B2hE,EAAAplE,KAAA,GAmBQvM,EAAKsP,gBAAgBxK,EAAYoD,QAAQ+G,EAAOi1B,EAAeuvB,GAAa,GAnBpF,QAmBVsd,EAnBUY,EAAApiE,KAqBZyhE,EAAc,CAChB7tE,KAAK,KACLmuE,SAAS,MAGPL,EAAa,CACf9tE,KAAK,KACLmuE,SAAS,MAGXP,EAAUxwE,QAAS,SAAA+E,GACjB,IAAMgsE,EAAWtkE,KAAK2kD,IAAIzkD,SAAS5H,EAAE0K,WAAW9C,SAAS8C,IACrD9C,SAAS5H,EAAE0K,WAAW9C,SAAS8C,MAAgBghE,EAAYM,UAAYA,EAASN,EAAYM,YAC9FN,EAAYM,SAAWA,EACvBN,EAAY7tE,KAAOmC,GAGjB4H,SAAS5H,EAAE0K,WAAW9C,SAAS8C,KAAeihE,EAAWK,WAC3DL,EAAWK,SAAWA,EACtBL,EAAW9tE,KAAOmC,KAKlB0rE,EAAY7tE,MAAQ8tE,EAAW9tE,OAC3B+tE,EAAmBlxE,EAAK4M,MAAMokE,EAAY7tE,KAAKiN,WAC/C+gE,EAAkBnxE,EAAK4M,MAAMqkE,EAAW9tE,KAAKiN,WAC7CghE,EAAapxE,EAAK4M,MAAMokE,EAAY7tE,KAAK6M,WACzCqhE,EAAYrxE,EAAK4M,MAAMqkE,EAAW9tE,KAAK6M,WACvCshE,EAAWD,EAAU9jE,MAAM6jE,GAC3BG,EAAYJ,EAAgB5jE,MAAM2jE,GAClCM,EAAoBD,EAAUt4D,IAAIq4D,GAClCG,EAA0BzxE,EAAK4M,MAAMoD,GAAWzC,MAAM6jE,GAC5D1jE,EAAawjE,EAAiB5jE,KAAKkkE,EAAkBlpE,MAAMmpE,KAtD7C,eA2Dd/jE,IAAe1N,EAAK4M,MAAMc,GAAYE,UACxCF,EAAa1N,EAAKqQ,iBAAiB3C,EAAWpE,MAI3CoE,GAAc1N,EAAK4M,MAAMc,GAAYE,SAAW5N,EAAK4M,MAAMc,GAAYF,GAAG,MAC7EE,EAAa1N,EAAK4M,MAAM,IAIxB5M,EAAKktC,8BAA8BjJ,EAAcv2B,GArEjCikE,EAAAp6D,OAAA,SA0EX7J,GA1EW,yBAAAikE,EAAA9jE,SAAAijE,EAAA9xE,SA5zHF,gBAAA4yE,GAAA,OAAAf,EAAA9iE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAw4HlB6yE,gBAAkB,WAOhB,OANI7xE,EAAKf,MAAM4yE,iBAAyD,oBAA/B7xE,EAAKf,MAAM4yE,iBAElD7xE,EAAKf,MAAM4yE,mBAIN,GA/4HS7yE,KAo5HlB4vB,cAAgB,SAAC7rB,EAAII,GAAiB,IAAZgxC,EAAYnmC,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAR,IAI5B,OAHIhO,EAAKf,MAAM2vB,eAAqD,oBAA7B5uB,EAAKf,MAAM2vB,eAChD5uB,EAAKf,MAAM2vB,cAAc7rB,EAAII,EAAKgxC,GAE7BhxC,GAx5HSnE,KA05HlBkuC,8BAAgC,SAACnqC,EAAII,GAAiB,IAAZgxC,EAAYnmC,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAR,IAI5C,OAHIhO,EAAKf,MAAM2vB,eAAqD,oBAA7B5uB,EAAKf,MAAM2vB,eAChD5uB,EAAKf,MAAM2vB,cAAc7rB,EAAII,EAAKgxC,GAAI,GAEjChxC,GA95HSnE,KAg6HlBiuC,8BAAgC,SAAClqC,GAA0B,IAAtB+Z,EAAsB9O,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KAChD,OAAOhO,EAAK0nC,cAAc3kC,EAAI+Z,GAAa,IAj6H3B9d,KAm6HlB0oC,cAAgB,SAAC3kC,GAAgD,IAA5C+Z,EAA4C9O,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAA/B,KAAK8jE,EAA0B9jE,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,IAAAA,UAAA,GAC3D2gB,EAAa,KAqBjB,OApBA5rB,EAAMA,EAAIoF,cAENnI,EAAKf,MAAM0vB,YAAc3uB,EAAKf,MAAM0vB,WAAW5rB,GACjD4rB,EAAa3uB,EAAKf,MAAM0vB,WAAW5rB,GAE1B+uE,IAGPnjD,GAFFA,EAAa3uB,EAAKwlD,cAAc,gBACd72B,EAAW5rB,GACd4rB,EAAW5rB,GAEX,MAIO4rB,GAAcA,EAAWxrB,OAAuC,OAA9BwrB,EAAWojD,gBAA2BpjD,EAAWojD,gBAAgB7kE,SAASiB,KAAK+yC,MAAM,MAOtIvyB,EAAWxrB,KAEb2Z,GA57HS9d,KA87HlBmvC,iBA97HkB,eAAA6jC,EAAAzzE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA87HC,SAAAimE,EAAOzM,EAAW1gE,GAAlB,IAAAotE,EAAAC,EAAAz5B,EAAA05B,EAAAC,EAAA,OAAA7oD,EAAApqB,EAAAgN,KAAA,SAAAkmE,GAAA,cAAAA,EAAAhmE,KAAAgmE,EAAA/lE,MAAA,cAAA+lE,EAAA/lE,KAAA,EAIPoK,QAAQqD,IAAI,CACpBha,EAAK2rC,gBAAgB7mC,EAAYy6B,KAAK5yB,MAAM64D,GAAW,GACvDxlE,EAAK2pE,oBAAoB7kE,EAAYy6B,KAAK5yB,SAN3B,cAAAulE,EAAAI,EAAA/iE,KAAA4iE,EAAA5zE,OAAAouC,EAAA,EAAApuC,CAAA2zE,EAAA,GAEfx5B,EAFey5B,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAYryE,EAAK4M,MAAM,GACvB5M,EAAK4M,MAAM8rC,GAAmBjoC,GAAG,IAAMzQ,EAAK4M,MAAMwlE,GAAuB3hE,GAAG,KAC9E4hE,EAAYryE,EAAK4M,MAAM8rC,GAAmBz/B,IAAIjZ,EAAK4M,MAAMwlE,KAX1CE,EAAA/6D,OAAA,SAcV86D,GAdU,wBAAAC,EAAAzkE,SAAAokE,EAAAjzE,SA97HD,gBAAAuzE,EAAAC,GAAA,OAAAR,EAAAjkE,MAAA/O,KAAAgP,YAAA,GAAAhP,KA88HlBgpB,WAAa,SAAC0P,GACZ,OAAOrd,OAAO6O,KAAKwO,EAAI,SAAS,aA/8HhB14B,KAi9HlBmoB,mBAj9HkB5oB,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAi9HG,SAAAymE,IAAA,IAAAjnE,EAAAyb,EAAAnY,EAAA4jE,EAAAC,EAAAC,EAAA5kE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAymE,GAAA,cAAAA,EAAAvmE,KAAAumE,EAAAtmE,MAAA,UAAOf,EAAPonE,EAAAtyE,OAAA,QAAAgrB,IAAAsnD,EAAA,GAAAA,EAAA,GAAe,KAC5B3rD,EAAkB,GACxBzb,EAAUA,GAAWxL,EAAKf,MAAMuM,QAFb,CAAAqnE,EAAAtmE,KAAA,eAAAsmE,EAAAt7D,OAAA,SAKV0P,GALU,UAQbnY,EAAgB5B,SAASiB,KAAK+yC,MAAM,OAEpCwxB,EAAsB1yE,EAAK4Q,gBAAgB,CAAC,QAAQ,mBAClCiZ,QAXL,CAAAgpD,EAAAtmE,KAAA,gBAAAsmE,EAAAtmE,KAAA,GAYXvM,EAAK4L,aAAa8mE,EAAoBzzE,MAAMmoB,UAA5C,eAAA0rD,EAAAv0E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAuD,SAAA+mE,EAAOC,GAAP,IAAArmE,EAAAsmE,EAAAnuE,EAAA2I,EAAA8Z,EAAAvf,EAAAkrE,EAAA1qD,EAAAzb,EAAAwb,EAAAwpD,EAAA,OAAAvoD,EAAApqB,EAAAgN,KAAA,SAAA+mE,GAAA,cAAAA,EAAA7mE,KAAA6mE,EAAA5mE,MAAA,cACrDI,EAAQ,QACRsmE,EAAiBD,EAASI,OAC1BtuE,EAAcmuE,EAAetmE,GAHwBwmE,EAAA5mE,KAAA,EAKrDvM,EAAKf,MAAMq+B,aAAax4B,EAAYpF,KAAKoF,EAAYoD,QAAQpD,EAAYu4B,KALpB,cAAA81C,EAAA5mE,KAAA,EAOrCvM,EAAK2rC,gBAAgB7mC,EAAYpF,KAAK8L,GAPD,QAOrDiC,EAPqD0lE,EAAA5jE,OAQ5C9B,EAAQgD,GAAG,KACJ,aACd8W,EAAayrD,EAASzrD,WACtBvf,EAAe0qE,EAAoB7pE,MACnCqqE,EAAgBR,EAAoB/wE,MACpC6mB,EAAYkqD,EAAoB3qD,aAChChb,EAASimE,EAASK,qBAAqBvkE,EAAgB,UAAY,SACnEyZ,EAA4B,YAAXxb,EACjBglE,EAAiBnhC,IAAoC,IAA7BoiC,EAASK,qBAA0BC,MAAMniE,OAAO,uBAAuB,OACrG8V,EAAgBze,KAAK,CACnBmE,QACAI,SACAU,UACA+a,YACAjB,aACAe,YAdkB,aAelBtgB,eACAkrE,gBACAnB,iBACAxpD,oBA3BuD,wBAAA4qD,EAAAtlE,SAAAklE,EAAA/zE,SAAvD,gBAAAu0E,GAAA,OAAAT,EAAA/kE,MAAA/O,KAAAgP,YAAA,IAZW,aA4Cb2kE,EAAoB3yE,EAAK4Q,gBAAgB,CAAC,QAAQ,iBAClCiZ,QA7CH,CAAAgpD,EAAAtmE,KAAA,gBAAAsmE,EAAAtmE,KAAA,GA8CkBvM,EAAKwzE,wBAAwBhoE,GA9C/C,QAAAqnE,EAAAtjE,KA+CIhP,QAAS,SAAAyyE,GAC5B,IACMvlE,EAAUulE,EAASS,WACnB9mE,EAAQqmE,EAASU,iBAAiB/mE,MAClC4a,EAAayrD,EAASW,iBAAiBhnE,MACvCib,EAAoBorD,EAASprD,kBAC7BgsD,EAAc,iBAAA5qE,OAAoBue,EAApB,QACdgB,GAAkByqD,EAASa,WAAab,EAASc,QACjD9rE,EAAehI,EAAK4Q,gBAAgB,CAAC,YAAY,cAAc,UAC/DsiE,EAAgBlzE,EAAK4Q,gBAAgB,CAAC,YAAY,cAAc,UAChEmjE,EAAoB/zE,EAAK4Q,gBAAgB,CAAC,YAAY,cAAc,cACpEmhE,EAAiBnhC,IAAwC,IAAjCoiC,EAASgB,aAAaC,YAAiBX,MAAMniE,OAAO,uBAAuB,OACnGpE,EAASimE,EAASc,QAAU,UAAY5mE,SAAS8lE,EAASgB,aAAaC,aAAanlE,EAAgB,UAAY,SAChH0Z,EAAS,GAAAxf,OAAMqR,OAAOo4B,SAASuG,OAAtB,MAAAhwC,OAAiChJ,EAAK4Q,gBAAgB,CAAC,YAAY,cAAnE,WAAA5H,OAA0F2pE,EAAkBvxC,MAA5G,KAAAp4B,OAAqHgqE,EAASW,iBAAiBhnE,MAA/I,UACfsa,EAAgBze,KAAK,CACnBmE,QACAI,SACAU,UACA+a,YACAjB,aACAe,YAnBkB,QAoBlBtgB,eACAkrE,gBACAnB,iBACAxpD,iBACAqrD,iBACAhsD,oBACAmsD,wBA1Ea,eAAAlB,EAAAt7D,OAAA,SA+EZ0P,GA/EY,yBAAA4rD,EAAAhlE,SAAA4kE,EAAAzzE,SAj9HHA,KAkiIlBw0E,wBAliIkB,eAAAU,EAAA31E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkiIQ,SAAAmoE,EAAO3oE,GAAP,IAAAmnE,EAAAn3B,EAAAqa,EAAAue,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjrD,EAAApqB,EAAAgN,KAAA,SAAAsoE,GAAA,cAAAA,EAAApoE,KAAAooE,EAAAnoE,MAAA,cAClBomE,EAAoB3yE,EAAK4Q,gBAAgB,CAAC,QAAQ,gBAElD4qC,EAAYm3B,EAAkBgC,YAAYC,WAC1C/e,EAAuB8c,EAAkBgC,YAAYE,aACrDT,EAAgBzB,EAAkBgC,YAAYP,cAL5BM,EAAAnoE,KAAA,EAOlBoK,QAAQqD,IAAI,CAChBha,EAAKf,MAAMq+B,aAAa82C,EAAc10E,KAAK00E,EAAclsE,QAAQksE,EAAc/2C,KAC/Er9B,EAAKf,MAAMq+B,aAAau4B,EAAqBn2D,KAAKm2D,EAAqB3tD,QAAQ2tD,EAAqBx4B,OAT9E,cAAAq3C,EAAAnoE,KAAA,EAedoK,QAAQqD,IAAI,CACnBha,EAAKu7C,kBAAkBsa,EAAqBn2D,KAAK,cAAc,CAAC87C,YAAWC,QAAQ,SAAShvC,OAAO,CAACqoE,MAAMtpE,KAC1GxL,EAAKu7C,kBAAkBsa,EAAqBn2D,KAAK,iBAAiB,CAAC87C,YAAWC,QAAQ,SAAShvC,OAAO,CAACqoE,MAAMtpE,OAjBxF,cAAA6oE,EAAAK,EAAAnlE,KAAA+kE,EAAA/1E,OAAAouC,EAAA,EAAApuC,CAAA81E,EAAA,GAatBE,EAbsBD,EAAA,GActBE,EAdsBF,EAAA,GAoBlBG,EAAuB,GApBLC,EAAAnoE,KAAA,GAsBlBvM,EAAK4L,aAAa2oE,EAAlB,eAAAQ,EAAAx2E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAoC,SAAAgpE,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAArB,EAAAsB,EAAAC,EAAAC,EAAA7B,EAAAF,EAAAC,EAAA+B,EAAA3B,EAAA4B,EAAA7sE,EAAA/C,EAAA6vE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzoE,EAAA+B,EAAA+1B,EAAA5d,EAAA,OAAA4B,EAAApqB,EAAAgN,KAAA,SAAAgqE,GAAA,cAAAA,EAAA9pE,KAAA8pE,EAAA7pE,MAAA,cAElC2oE,EAAUhoE,SAAS+nE,EAAMr5B,aAAas5B,SACtCC,EAAsBX,EAAqBhmD,KAAM,SAAA6nD,GAAK,OAAInpE,SAASmpE,EAAMz6B,aAAas5B,WAAWA,IAH/DkB,EAAA7pE,KAAA,EAO9BoK,QAAQqD,IAAI,CACpBha,EAAKy9B,oBAAoBo4B,EAAqBn2D,KAAK,WAAW,CAACw1E,IAC/Dl1E,EAAKu7C,kBAAkB64B,EAAc10E,KAAK,gBAAgB,CAAC87C,UAAUy5B,EAAMj8D,YAAayiC,QAAQ,SAAShvC,OAAO,CAAC6pE,UAAUrB,EAAM3hC,qBAT3F,UAAA8hC,EAAAgB,EAAA7mE,KAAA8lE,EAAA92E,OAAAouC,EAAA,EAAApuC,CAAA62E,EAAA,GAKtCpB,EALsCqB,EAAA,GAMtCC,EANsCD,EAAA,GAYnCrB,EAZmC,CAAAoC,EAAA7pE,KAAA,gBAAA6pE,EAAA7+D,OAAA,UAa/B,GAb+B,eAiBlCg+D,EAAmBD,EAAe7oE,OAAO,SAAAonE,GAC7C,OAAOA,EAASj4B,aAAa06B,YAActC,EAAa1gC,iBACxDtzC,EAAK4M,MAAMinE,EAAS76D,aAAavI,GAAGwkE,EAAMj8D,cAC1ChZ,EAAK4M,MAAMinE,EAASj4B,aAAa26B,cAAc/oE,GAAGwmE,EAAaC,aAC/D/mE,SAAS8mE,EAAaC,YAActB,EAAkBgC,YAAY6B,4BAA8BroE,KAAK+yC,MAAQ,MAIzGs0B,EAAkBD,EAAiB/7B,OAAO,SAACltC,EAAMmqE,GACrD,OAAKnqE,EAIDtM,EAAK4M,MAAM6pE,EAAK76B,aAAa86B,aAAajmE,GAAGnE,EAAKsvC,aAAa86B,aAC1DD,EAEFnqE,EANEmqE,GAOR,MAEG9C,EAAmBp1E,OAAOiO,OAAOmmE,EAAkB1zE,MAAMqM,iBAAiBkjB,KAAM,SAAA1pB,GAAW,OAAIA,EAAYoD,QAAQC,gBAAkB6rE,EAAa1gC,gBAAgBnrC,gBAClKsrE,EAAazzE,EAAKqQ,iBAAiB2jE,EAAaP,WAAWE,EAAiBrqE,UAC5EoqE,EAAmBn1E,OAAOiO,OAAOmnE,EAAiBgD,YAAYnoD,KAAM,SAAAooD,GAAgB,OAAIA,EAAiB1uE,QAAQC,gBAAkB6rE,EAAa6C,WAAW1uE,gBAC3JstE,EAAaz1E,EAAKkO,YAAoC,IAAxB8lE,EAAaC,YAAiB9iE,OAAO,cAEnE2iE,EAAUqB,EAAsBA,EAAoBv5B,aAAak4B,QAAU,KAzCzCsC,EAAA7pE,KAAA,GA0CZvM,EAAKy9B,oBAAoBo4B,EAAqBn2D,KAAK,mBAAmB,CAACo0E,IA1C3D,WA0ClC4B,EA1CkCU,EAAA7mE,KA2ClC1G,EA3CkC,GAAAG,OA2CvB2qE,EAAiBj0E,KA3CM,OAAAsJ,OA2CIyqE,EAAWlrE,QAAQ,GA3CvB,KAAAS,OA2C6B0qE,EAAiB/mE,MA3C9C,YAAA3D,OA2C8DysE,GAChG3vE,EAAQovE,EAEVS,EAAgB,MAChBR,EA/CoC,CAAAiB,EAAA7pE,KAAA,gBAAA6pE,EAAA7pE,KAAA,GAgDTvM,EAAKwnD,sBAAsB2tB,EAAoBzjD,iBAhDtC,QAgDhCkkD,EAhDgCQ,EAAA7mE,KAiDhCsmE,EAAmBD,EAAiBA,EAAellC,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkBurE,EAAiBxrE,QAAQC,gBAAkB,KACpJwtE,EAAgBE,EAAmB71E,EAAKqQ,iBAAiBnD,SAAS2oE,EAAiB1yE,KAAK,IAAIuwE,EAAiBpqE,UAAYtJ,EAAK4M,MAAM,GAlD9F,eAqDlCkpE,EAAkB91E,EAAKqQ,iBAAiB2jE,EAAaP,WAAWC,EAAiBpqE,UAEjFysE,EAAiBP,EAAkBx1E,EAAK4M,MAAM4oE,EAAgB55B,aAAa86B,aAAapuE,MAAM,IAAOtI,EAAK4M,MAAM,GAChHopE,EAAmBD,EAAetlE,GAAG,GAAKzQ,EAAK4M,MAAMonE,EAAaP,YAAYx6D,IAAI88D,GAAkB/1E,EAAK4M,MAAM,GAC/GqpE,EAAqBj2E,EAAKi8B,qBAAqB+5C,EAAiBtC,EAAiBpqE,UAzD/C8sE,EAAA7pE,KAAA,GA8D9BoK,QAAQqD,IAAI,CACpBha,EAAK+8B,cAAc42C,EAAiBhnE,OACpC3M,EAAK2rC,gBAAgBgoC,EAAiBhnE,MAAMnB,GAAQ,KAhEd,QAAA0qE,EAAAE,EAAA7mE,KAAA4mE,EAAA53E,OAAAouC,EAAA,EAAApuC,CAAA23E,EAAA,GA4DtCxoE,EA5DsCyoE,EAAA,GA6DtC1mE,EA7DsC0mE,EAAA,GAmExCzoE,EAAa1N,EAAKqQ,iBAAiB3C,EAAWimE,EAAiBrqE,UAC/DmG,EAAmBzP,EAAKqQ,iBAAiBZ,EAAiBkkE,EAAiBrqE,UACrEk8B,EAAe/1B,EAAiBnH,MAAMoF,GACtCka,EAAoB4d,EAAa/0B,GAAG,GAAKgjE,EAAWx6D,IAAIusB,GAAcl9B,MAAM,KAAKC,QAAQ,GAAG,IAAM,MAIxGksE,EAAqBjsE,KAAK,CACxBK,QACA/C,QACAguE,UACAL,aACAO,eACA2B,gBACAD,gBACAI,kBACAE,mBACArC,mBACAD,mBACA9rD,oBACAquD,qBACApC,SAAU2B,EAAej3E,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAOi3E,EAAP,CAAwBvyE,GAAIqyE,EAAewB,UAAU,SAAAplE,GAAC,OAAIA,EAAED,OAAS+jE,EAAgB/jE,SAAS,OAxFjF,yBAAA2kE,EAAAvoE,SAAAmnE,EAAAh2E,SAApC,gBAAA+3E,GAAA,OAAAhC,EAAAhnE,MAAA/O,KAAAgP,YAAA,IAtBkB,eAAA0mE,EAAAn9D,OAAA,SAkHjBk9D,GAlHiB,yBAAAC,EAAA7mE,SAAAsmE,EAAAn1E,SAliIR,gBAAAg4E,GAAA,OAAA9C,EAAAnmE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAspIlBi4E,4BAtpIkB,eAAAC,EAAA34E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAspIY,SAAAmrE,EAAO7jC,GAAP,IAAAoM,EAAAC,EAAAG,EAAAgW,EAAArzD,EAAA,OAAA+mB,EAAApqB,EAAAgN,KAAA,SAAAgrE,GAAA,cAAAA,EAAA9qE,KAAA8qE,EAAA7qE,MAAA,UACtBmzC,EAAkB1/C,EAAKf,MAAMmzB,QAAQmiB,QAAQtxC,IAAMjD,EAAK4Q,gBAAgB,CAAC,UAAU,sBACnF+uC,EAAgB3/C,EAAK4Q,gBAAgB,CAAC,UAAU,YAAY,eAChDiZ,UAAW81B,EAAce,UAAUhB,GAHzB,CAAA03B,EAAA7qE,KAAA,gBAIpBuzC,EAAkBH,EAAce,UAAUhB,GAC1CoW,EALoB,GAAA9sD,OAKG82C,EALH,aAAA92C,OAK8BmmC,EAAIwR,wBALlC,2CAAA33C,OAKmGsqC,EALnG,cAAA8jC,EAAA7qE,KAAA,EAMCvM,EAAK8gD,kBAAkBgV,EAAkB,MAAK,GAN/C,YAMpBrzD,EANoB20E,EAAA7nE,OAOyB,kBAAxB9M,EAAao+C,OAPd,CAAAu2B,EAAA7qE,KAAA,gBAAA6qE,EAAA7/D,OAAA,SAQjB9U,EAAao+C,OAAOp0C,OAAQ,SAAAC,GAAE,MAAgB,+CAAZA,EAAGpF,MAAyDoF,EAAGqlC,GAAG5pC,gBAAkBmrC,EAAgBnrC,iBARrH,eAAAivE,EAAA7/D,OAAA,SAWrB,MAXqB,yBAAA6/D,EAAAvpE,SAAAspE,EAAAn4E,SAtpIZ,gBAAAq4E,GAAA,OAAAH,EAAAnpE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAmqIlBs4E,mBAnqIkB/4E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAmqIG,SAAAurE,IAAA,IAAA/rE,EAAAgsE,EAAAC,EAAAxzC,EAAAtV,EAAA+oD,EAAApsE,EAAAqsE,EAAA3pE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAwrE,GAAA,cAAAA,EAAAtrE,KAAAsrE,EAAArrE,MAAA,UAAOf,EAAPmsE,EAAAr3E,OAAA,QAAAgrB,IAAAqsD,EAAA,GAAAA,EAAA,GAAe,KAAKH,EAApBG,EAAAr3E,OAAA,QAAAgrB,IAAAqsD,EAAA,GAAAA,EAAA,GAAqC,KACxDnsE,EAAUA,GAAWxL,EAAKf,MAAMuM,QADb,CAAAosE,EAAArrE,KAAA,eAAAqrE,EAAArgE,OAAA,SAGV,MAHU,WAMbkgE,EAAqBz3E,EAAK4Q,gBAAgB,CAAC,QAAQ,kBACjCiZ,QAPL,CAAA+tD,EAAArrE,KAAA,eAAAqrE,EAAArgE,OAAA,SAQV,MARU,UAWb0sB,EAXa,mBAAAj7B,OAWsBwC,EAXtB,KAAAxC,OAWiCwuE,KAC9C7oD,EAAa3uB,EAAK0nC,cAAczD,IAZnB,CAAA2zC,EAAArrE,KAAA,gBAAAqrE,EAAArgE,OAAA,SAcVoX,GAdU,eAiBb+oD,EAAkB,GAClBpsE,EAAkBmsE,EAAmBx4E,MAAMqM,gBAlB9BssE,EAAArrE,KAAA,GAmBbvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAAusE,EAAAt5E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAA8rE,EAAOnrE,GAAP,IAAA7H,EAAA23B,EAAAs7C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1rE,EAAA2rE,EAAA,OAAAlvD,EAAApqB,EAAAgN,KAAA,SAAAusE,GAAA,cAAAA,EAAArsE,KAAAqsE,EAAApsE,MAAA,cAC7CzH,EAAcwG,EAAgBqB,GAC9B8vB,EAAoB33B,EAAY23B,kBAFak8C,EAAApsE,KAAA,EAG7CvM,EAAKf,MAAMq+B,aAAab,EAAkB/8B,KAAK+8B,EAAkBv0B,QAAQu0B,EAAkBY,KAH9C,cAAAs7C,EAAApsE,KAAA,EAItBvM,EAAKy9B,oBAAoBhB,EAAkB/8B,KAAK,aAJ1B,OAI7Cq4E,EAJ6CY,EAAAppE,KAK1CyoE,EAAa,EAL6B,YAK1BA,GAAc9qE,SAAS6qE,IALG,CAAAY,EAAApsE,KAAA,gBAAAosE,EAAApsE,KAAA,GAWvCoK,QAAQqD,IAAI,CACpBha,EAAKi3E,4BAA4Bx6C,EAAkBv0B,SACnDlI,EAAKy9B,oBAAoBhB,EAAkB/8B,KAAK,cAAc,CAACs4E,IAC/Dh4E,EAAKy9B,oBAAoBhB,EAAkB/8B,KAAK,sBAAsB,CAACs4E,IACvEh4E,EAAKy9B,oBAAoBhB,EAAkB/8B,KAAK,gBAAgB,CAACM,EAAKf,MAAMuM,QAAQwsE,MAfrC,WAAAC,EAAAU,EAAAppE,KAAA2oE,EAAA35E,OAAAouC,EAAA,EAAApuC,CAAA05E,EAAA,GAO/CE,EAP+CD,EAAA,GAQ/CE,EAR+CF,EAAA,GAS/CG,EAT+CH,EAAA,GAU/CI,EAV+CJ,EAAA,GAkBjD/mD,QAAQC,IAAR,UAAApoB,OAAsBgvE,EAAtB,OAAAhvE,OAAsCovE,EAAtC,OAAApvE,OAAsDqvE,EAAtD,OAAArvE,OAAuEsvE,IAEnEC,EAAc,KACdC,EAAe,KACfC,EAAgB,KAChBL,GAA6B,OAAfA,IAChBG,EAAcv4E,EAAKqQ,iBAAiB+nE,EAAWtzE,EAAYwE,WAExC,OAAjBgvE,EA1B6C,CAAAK,EAAApsE,KAAA,YA2B/C8rE,EAAcr4E,EAAKqQ,iBAAiBgoE,EAAY,MAChDC,EAAet4E,EAAKqQ,iBAAiBioE,EAAaxzE,EAAYwE,WAC7CmH,GAAG,GA7B2B,CAAAkoE,EAAApsE,KAAA,YA8B7CksE,EAAgBH,GAGhBE,EAAeF,EAAahwE,MAAM+vE,GAAap/D,IAAIs/D,IAClC9nE,GAAG4nE,KAClBG,EAAeH,GAGXtrE,EAASirE,EAAaD,GAAkBS,EAAa/nE,GAAG,GAAK,WAAa,UAEvD,OAArB+mE,GAA6BA,EAAiBrvE,gBAAkB4E,EAxCvB,CAAA4rE,EAAApsE,KAAA,gBAAAosE,EAAAphE,OAAA,kBA4CvCmhE,EAAgBP,GAAmBA,EAAgB73E,OAAS63E,EAAgB,GAAK,KAEvFT,EAAgB/qE,GAAS,CACvBI,SACAwrE,cACAC,eACAC,gBACAC,iBAnD2C,QAKeV,IALfW,EAAApsE,KAAA,iCAAAosE,EAAA9qE,SAAAiqE,EAAA94E,SAA/C,gBAAA45E,GAAA,OAAAf,EAAA9pE,MAAA/O,KAAAgP,YAAA,IAnBa,eAAA4pE,EAAArgE,OAAA,SA6EZvX,EAAK4uB,cAAcqV,EAAcyzC,IA7ErB,yBAAAE,EAAA/pE,SAAA0pE,EAAAv4E,SAnqIHA,KAkvIlB65E,cAlvIkB,eAAAC,EAAAv6E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkvIF,SAAA+sE,EAAOvT,GAAP,IAAAwT,EAAAhgE,EAAAirB,EAAAtV,EAAA6W,EAAAyzC,EAAAjrE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA8sE,GAAA,cAAAA,EAAA5sE,KAAA4sE,EAAA3sE,MAAA,UAAkBysE,IAAlBC,EAAA34E,OAAA,QAAAgrB,IAAA2tD,EAAA,KAAAA,EAAA,GAAmCjgE,EAAnCigE,EAAA34E,OAAA,QAAAgrB,IAAA2tD,EAAA,GAAAA,EAAA,GAA+C,SACxDzT,EADS,CAAA0T,EAAA3sE,KAAA,eAAA2sE,EAAA3hE,OAAA,UAEL,GAFK,UAMR0sB,EANQ,cAAAj7B,OAMsBw8D,EANtB,KAAAx8D,OAMoCgwE,EANpC,KAAAhwE,OAMmDgQ,GAC7C,WAAhBA,EAPU,CAAAkgE,EAAA3sE,KAAA,aAQNoiB,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAT9B,CAAAsrE,EAAA3sE,KAAA,eAAA2sE,EAAA3hE,OAAA,SAUHvX,EAAK4M,MAAM+hB,IAVR,cAAAuqD,EAAA3sE,KAAA,GAcWvM,EAAKf,MAAMiY,KAAKC,IAAIs0B,WAAW+5B,GAd1C,aAcVhgC,EAdU0zC,EAAA3pE,MAAA,CAAA2pE,EAAA3sE,KAAA,YAiBRysE,IACFxzC,EAAexlC,EAAKqQ,iBAAiBm1B,EAAa,MAGpDA,EAAexlC,EAAK4M,MAAM44B,IAGR53B,QAxBN,CAAAsrE,EAAA3sE,KAAA,YAyBU,WAAhByM,EAzBM,CAAAkgE,EAAA3sE,KAAA,gBAAA2sE,EAAA3hE,OAAA,SA0BDvX,EAAKktC,8BAA8BjJ,EAAcuB,IA1BhD,eAAA0zC,EAAA3hE,OAAA,SA4BDiuB,GA5BC,eAAA0zC,EAAA3hE,OAAA,SAgCP,MAhCO,yBAAA2hE,EAAArrE,SAAAkrE,EAAA/5E,SAlvIE,gBAAAm6E,GAAA,OAAAL,EAAA/qE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAoxIlB2sC,gBApxIkB,eAAAytC,EAAA76E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAoxIA,SAAAqtE,EAAO9nD,EAAai0C,GAApB,IAAAwT,EAAAhgE,EAAAirB,EAAAtV,EAAA2qD,EAAAC,EAAAtpE,EAAAu1B,EAAAg0C,EAAAxrE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAqtE,GAAA,cAAAA,EAAAntE,KAAAmtE,EAAAltE,MAAA,UAA+BysE,IAA/BQ,EAAAl5E,OAAA,QAAAgrB,IAAAkuD,EAAA,KAAAA,EAAA,GAAgDxgE,EAAhDwgE,EAAAl5E,OAAA,QAAAgrB,IAAAkuD,EAAA,GAAAA,EAAA,GAA4D,SACvEhU,EADW,CAAAiU,EAAAltE,KAAA,eAAAktE,EAAAliE,OAAA,UAEP,GAFO,UAMV0sB,EANU,gBAAAj7B,OAMsBuoB,EANtB,KAAAvoB,OAMsCw8D,EANtC,KAAAx8D,OAMoDgwE,EANpD,KAAAhwE,OAMmEgQ,GAC/D,WAAhBA,EAPY,CAAAygE,EAAAltE,KAAA,aAQRoiB,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAT5B,CAAA6rE,EAAAltE,KAAA,eAAAktE,EAAAliE,OAAA,SAULvX,EAAK4M,MAAM+hB,IAVN,cAAA8qD,EAAAltE,KAAA,GAiBNoK,QAAQqD,IAAI,CACpBha,EAAKu9B,iBAAiBhM,GACtBvxB,EAAKw9B,mBAAmBjM,EAAai0C,EAAWxsD,KAnBlC,WAAAsgE,EAAAG,EAAAlqE,KAAAgqE,EAAAh7E,OAAAouC,EAAA,EAAApuC,CAAA+6E,EAAA,GAedrpE,EAfcspE,EAAA,KAgBd/zC,EAhBc+zC,EAAA,KAAAE,EAAAltE,KAAA,YAuBVysE,IACFxzC,EAAexlC,EAAKqQ,iBAAiBm1B,EAAav1B,KAGpDu1B,EAAexlC,EAAK4M,MAAM44B,IAGR53B,QA9BJ,CAAA6rE,EAAAltE,KAAA,YA+BQ,WAAhByM,EA/BQ,CAAAygE,EAAAltE,KAAA,gBAAAktE,EAAAliE,OAAA,SAgCHvX,EAAKktC,8BAA8BjJ,EAAcuB,EAAa,KAhC3D,eAAAi0C,EAAAliE,OAAA,SAkCHiuB,GAlCG,QAAAi0C,EAAAltE,KAAA,iBAsCdvM,EAAK6wC,eAAe,gCAAgCtf,GAtCtC,eAAAkoD,EAAAliE,OAAA,SAwCT,MAxCS,yBAAAkiE,EAAA5rE,SAAAwrE,EAAAr6E,SApxIA,gBAAA06E,EAAAC,GAAA,OAAAP,EAAArrE,MAAA/O,KAAAgP,YAAA,GAAAhP,KA8zIlB46E,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAASzqD,OAAsB,CACxCyqD,EAASzqD,SACTyqD,EAASC,kBAAkB,EAAG,OAC9B,IAAMje,EAAM/tC,SAASisD,YAAY,QAEjC,OADAF,EAASC,kBAAkB,EAAG,GACvBje,EAET,OAAO,GAt0IS78D,KAw0IlBg7E,WAAa,SAACtiD,EAAIz4B,EAAM0F,GACtB,IAAMkzB,EAAS/J,SAASzuB,cAAc,UACtCw4B,EAAOh2B,IAAM61B,EAGTz4B,GACFV,OAAO8B,KAAKpB,GAAOsB,QAAQ,SAAC05E,EAAKlyE,GAC/B8vB,EAAOoiD,GAAQh7E,EAAMg7E,KAID,oBAAbt1E,IACLkzB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BtzB,MAIJkzB,EAAOK,OAASvzB,GAIfkzB,EAAO50B,IAAO6qB,SAASC,eAAe8J,EAAO50B,KAChD6qB,SAASosD,KAAK7hD,YAAYR,IAj2IZ74B,KAo2IlBm7E,YAAc,SAAA7oC,GACZ,IACEvmC,KAAKgP,MAAMu3B,GACX,MAAO9rC,GACP,OAAO,EAET,OAAO,GA12ISxG,KA42IlBy1C,aAAe,SAACvsC,GACd,QAAOA,GAAmD,OAAzCA,EAAQmgC,MAAM,wBA72IfrpC,KA+2IlB2qE,oBA/2IkB,eAAAyQ,EAAA77E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+2II,SAAAquE,EAAO9oD,GAAP,IAAAvY,EAAAm7B,EAAAlQ,EAAAtV,EAAA25C,EAAAgS,EAAAtsE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAmuE,GAAA,cAAAA,EAAAjuE,KAAAiuE,EAAAhuE,MAAA,UAAoByM,EAApBshE,EAAAh6E,OAAA,QAAAgrB,IAAAgvD,EAAA,GAAAA,EAAA,GAAgC,SAASnmC,EAAzCmmC,EAAAh6E,OAAA,QAAAgrB,IAAAgvD,EAAA,GAAAA,EAAA,GAA6C,KAC3Dr2C,EADc,eAAAj7B,OACiBuoB,EADjB,KAAAvoB,OACiCgQ,KAC/C2V,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAHtB,CAAA2sE,EAAAhuE,KAAA,eAAAguE,EAAAhjE,OAAA,SAIXvX,EAAK4M,MAAM+hB,IAJA,cAAA4rD,EAAAhuE,KAAA,EAOMvM,EAAKy9B,oBAAoBlM,EAAc,cAAe,GAAI,GAAIvY,GAPpE,cAOdsvD,EAPciS,EAAAhrE,KAAAgrE,EAAAhjE,OAAA,SAQbvX,EAAKktC,8BAA8BjJ,EAAcqkC,EAAYn0B,IARhD,yBAAAomC,EAAA1sE,SAAAwsE,EAAAr7E,SA/2IJ,gBAAAw7E,GAAA,OAAAJ,EAAArsE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAy3IlB+9B,cAz3IkB,eAAA09C,EAAAl8E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAy3IF,SAAA0uE,EAAOnpD,GAAP,IAAAvY,EAAAirB,EAAAtV,EAAAjhB,EAAAitE,EAAA3sE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAwuE,GAAA,cAAAA,EAAAtuE,KAAAsuE,EAAAruE,MAAA,UAAoByM,EAApB2hE,EAAAr6E,OAAA,QAAAgrB,IAAAqvD,EAAA,GAAAA,EAAA,GAAgC,SACxC12C,EADQ,cAAAj7B,OACsBuoB,KAC9B5C,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAH5B,CAAAgtE,EAAAruE,KAAA,eAAAquE,EAAArjE,OAAA,SAILvX,EAAK4M,MAAM+hB,IAJN,cAAAisD,EAAAruE,KAAA,EAOWvM,EAAKy9B,oBAAoBlM,EAAa,aAAa,GAAG,GAAGvY,GAPpE,cAORtL,EAPQktE,EAAArrE,KAAAqrE,EAAArjE,OAAA,SAQPvX,EAAKktC,8BAA8BjJ,EAAcv2B,EAAW,KARrD,wBAAAktE,EAAA/sE,SAAA6sE,EAAA17E,SAz3IE,gBAAA67E,GAAA,OAAAJ,EAAA1sE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAm4IlBw+B,mBAn4IkB,eAAAs9C,EAAAv8E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAm4IG,SAAA+uE,EAAOxpD,EAAarpB,GAApB,IAAA8Q,EAAAirB,EAAAtV,EAAAlhB,EAAAutE,EAAAhtE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA6uE,GAAA,cAAAA,EAAA3uE,KAAA2uE,EAAA1uE,MAAA,UAA4ByM,EAA5BgiE,EAAA16E,OAAA,QAAAgrB,IAAA0vD,EAAA,GAAAA,EAAA,GAAwC,SAC3D9yE,EAAUA,GAAoBlI,EAAKf,MAAM6F,YAAYy6B,KAAKr3B,QACpD+7B,EAFa,aAAAj7B,OAEgBuoB,EAFhB,KAAAvoB,OAEgCd,EAFhC,KAAAc,OAE2CgQ,KACxD2V,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJvB,CAAAqtE,EAAA1uE,KAAA,eAAA0uE,EAAA1jE,OAAA,SAKVvX,EAAK4M,MAAM+hB,IALD,cAAAssD,EAAA1uE,KAAA,EAQGvM,EAAKy9B,oBAAoBlM,EAAc,YAAa,CAACrpB,GAAU,GAAI8Q,GARtE,cAQbvL,EARawtE,EAAA1rE,KAAA0rE,EAAA1jE,OAAA,SASZvX,EAAKktC,8BAA8BjJ,EAAcx2B,EAAQ,KAT7C,yBAAAwtE,EAAAptE,SAAAktE,EAAA/7E,SAn4IH,gBAAAk8E,EAAAC,GAAA,OAAAL,EAAA/sE,MAAA/O,KAAAgP,YAAA,GAAAhP,KA84IlBo8E,mBA94IkB,eAAAC,EAAA98E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA84IG,SAAAsvE,EAAO/pD,EAAarpB,GAApB,OAAAshB,EAAApqB,EAAAgN,KAAA,SAAAmvE,GAAA,cAAAA,EAAAjvE,KAAAivE,EAAAhvE,MAAA,cAAAgvE,EAAAhvE,KAAA,EACNvM,EAAKw9B,mBAAmBjM,EAAarpB,GAD/B,cAAAqzE,EAAAhkE,OAAA,SAAAgkE,EAAAhsE,MAAA,wBAAAgsE,EAAA1tE,SAAAytE,EAAAt8E,SA94IH,gBAAAw8E,EAAAC,GAAA,OAAAJ,EAAAttE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAi5IlB08E,QAj5IkB,eAAAC,EAAAp9E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAi5IR,SAAA4vE,EAAOrqD,GAAP,IAAA0S,EAAAtV,EAAAumC,EAAArU,EAAA,OAAAr3B,EAAApqB,EAAAgN,KAAA,SAAAyvE,GAAA,cAAAA,EAAAvvE,KAAAuvE,EAAAtvE,MAAA,UACF03B,EADE,WAAAj7B,OACyBuoB,KAC3B5C,EAAa3uB,EAAKitC,8BAA8BhJ,IAF9C,CAAA43C,EAAAtvE,KAAA,eAAAsvE,EAAAtkE,OAAA,SAKuB,kBAAfoX,EAA0BA,EAAa5jB,KAAKgP,MAAM4U,IAL1D,cAQR4C,EAAeA,GAA8BvxB,EAAKf,MAAM6F,YAAYy6B,KAAK5yB,MARjEkvE,EAAAtvE,KAAA,EASWvM,EAAKy9B,oBAAoBlM,EAAc,WATlD,YASF2jC,EATE2mB,EAAAtsE,MAAA,CAAAssE,EAAAtvE,KAAA,gBAWAs0C,EAAS,CACbqU,KAAKA,EAAK,GACV4mB,UAAU5mB,EAAK,IAbX2mB,EAAAtkE,OAAA,SAeCvX,EAAKktC,8BAA8BjJ,EAAc4c,IAflD,eAAAg7B,EAAAtkE,OAAA,SAiBD,MAjBC,yBAAAskE,EAAAhuE,SAAA+tE,EAAA58E,SAj5IQ,gBAAA+8E,GAAA,OAAAJ,EAAA5tE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAo6IlBg9E,gBAp6IkB,eAAAC,EAAA19E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAo6IA,SAAAkwE,EAAO5qD,GAAP,IAAAK,EAAAwqD,EAAAC,EAAApuE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAiwE,GAAA,cAAAA,EAAA/vE,KAAA+vE,EAAA9vE,MAAA,cAAmBolB,EAAnByqD,EAAA97E,OAAA,QAAAgrB,IAAA8wD,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAA97E,OAAA,QAAAgrB,IAAA8wD,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAA9vE,KAAA,EACHvM,EAAKy9B,oBAAoBz9B,EAAKf,MAAM6F,YAAYy6B,KAAK5yB,MAAO2kB,EAAYK,EAAQwqD,GAAY/uB,MAAM,SAAAh2C,GAC7GpX,EAAK6wC,eAAe,yBAA0Bz5B,KAFhC,cAAAilE,EAAA9kE,OAAA,SAAA8kE,EAAA9sE,MAAA,wBAAA8sE,EAAAxuE,SAAAquE,EAAAl9E,SAp6IA,gBAAAs9E,GAAA,OAAAL,EAAAluE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAy6IlB86D,YAz6IkB,eAAAyiB,EAAAh+E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAy6IJ,SAAAwwE,EAAOjrD,EAAcD,GAArB,IAAAmrD,EAAA9qD,EAAAwqD,EAAAjrC,EAAAwrC,EAAA1uE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAuwE,GAAA,cAAAA,EAAArwE,KAAAqwE,EAAApwE,MAAA,UAAiColB,EAAjC+qD,EAAAp8E,OAAA,QAAAgrB,IAAAoxD,EAAA,GAAAA,EAAA,GAA0C,GAAIP,EAA9CO,EAAAp8E,OAAA,QAAAgrB,IAAAoxD,EAAA,GAAAA,EAAA,GAA2D,GACnExrC,EAAWlxC,EAAK08B,kBAAkBnL,GAD1B,CAAAorD,EAAApwE,KAAA,eAIVvM,EAAK6wC,eAAe,sBAAuBtf,GAJjCorD,EAAAplE,OAAA,SAKH,MALG,cAAAolE,EAAApwE,KAAA,GAQCkwE,EAAAvrC,EAAS1Y,SAAQlH,GAAjBvjB,MAAA0uE,EAAAl+E,OAAA63C,EAAA,EAAA73C,CAAgCozB,IAAQmoC,YAAYqiB,GARrD,cAAAQ,EAAAplE,OAAA,SAAAolE,EAAAptE,MAAA,wBAAAotE,EAAA9uE,SAAA2uE,EAAAx9E,SAz6II,gBAAA49E,EAAAC,GAAA,OAAAN,EAAAxuE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAm7IlB89E,iBAn7IkB,eAAAC,EAAAx+E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAm7IC,SAAAgxE,EAAOtwE,EAAGuwE,EAAQC,EAAWz2B,GAA7B,IAAA4E,EAAA8xB,EAAA,OAAA3zD,EAAApqB,EAAAgN,KAAA,SAAAgxE,GAAA,cAAAA,EAAA9wE,KAAA8wE,EAAA7wE,MAAA,UAEb8+C,EAAY5E,GAAYA,EAAS4E,UAAY5E,EAAS4E,UAAY,KAFrD,CAAA+xB,EAAA7wE,KAAA,eAAA6wE,EAAA7wE,KAAA,EAKI,IAAIoK,QAAJ,eAAA0mE,EAAA9+E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAAsxE,EAAOvmE,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAAmxE,GAAA,cAAAA,EAAAjxE,KAAAixE,EAAAhxE,MAAA,OAC9BvM,EAAKf,MAAMiY,KAAKC,IAAIqwC,sBAAsB96C,EAAGI,KAAK,SAACsK,EAAI1K,GACjD0K,GACFJ,EAAOI,GAETL,EAAQrK,KALoB,wBAAA6wE,EAAA1vE,SAAAyvE,EAAAt+E,SAAb,gBAAAw+E,EAAAC,GAAA,OAAAJ,EAAAtvE,MAAA/O,KAAAgP,YAAA,IALJ,OAKfq9C,EALe+xB,EAAA7tE,KAAA,UAgBZ87C,EAhBY,CAAA+xB,EAAA7wE,KAAA,eAAA6wE,EAAA7lE,OAAA,SAiBR,MAjBQ,WAoBX4lE,EAAoB9xB,EAAU3a,KAAKjkC,OAAO,SAACC,GAAS,OAAOA,EAAGi7C,OAAOj7C,EAAGi7C,OAAOrnD,OAAO,GAAG6H,gBAA9B,4BAAAa,OAA4Ei0E,MAEtH38E,OAtBN,CAAA88E,EAAA7wE,KAAA,gBAAA6wE,EAAA7lE,OAAA,SAuBR,MAvBQ,eAAA6lE,EAAA9wE,KAAA,GAAA8wE,EAAA7lE,OAAA,SA2BR,CACL8zC,EACArrD,EAAKf,MAAMiY,KAAKC,IAAIkmB,IAAI8uB,UAAU+wB,EAAWC,EAAkB,GAAGh6E,KAAKg6E,EAAkB,GAAGx1B,UA7B/E,eAAAy1B,EAAA9wE,KAAA,GAAA8wE,EAAA5xD,GAAA4xD,EAAA,UAAAA,EAAA7lE,OAAA,SAgCR,MAhCQ,yBAAA6lE,EAAAvvE,SAAAmvE,EAAAh+E,KAAA,cAn7ID,gBAAA0+E,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAhvE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAs9IlB8+E,gBAAkB,SAACC,GACjB,IAAMC,EAAmBh+E,EAAK4M,MAAM5M,EAAK4Q,gBAAgB,CAAC,UAAU,mBAAmBqI,IAAI,UAAUA,IAAI,OACzG,OAAOjZ,EAAK4M,MAAMmxE,GAAQ9kE,IAAI+kE,IAx9Idh/E,KA09IlBi/E,eA19IkB1/E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA09ID,SAAAkyE,IAAA,OAAA10D,EAAApqB,EAAAgN,KAAA,SAAA+xE,GAAA,cAAAA,EAAA7xE,KAAA6xE,EAAA5xE,MAAA,cAAA4xE,EAAA5xE,KAAA,EACFvM,EAAKf,MAAMiY,KAAKC,IAAI8mE,iBADlB,cAAAE,EAAA5mE,OAAA,SAAA4mE,EAAA5uE,MAAA,wBAAA4uE,EAAAtwE,SAAAqwE,EAAAl/E,SA19ICA,KA69IlB08C,aA79IkB,eAAA0iC,EAAA7/E,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA69IH,SAAAqyE,EAAOrlE,GAAP,IAAAirB,EAAAtV,EAAAsuB,EAAA,OAAAzzB,EAAApqB,EAAAgN,KAAA,SAAAkyE,GAAA,cAAAA,EAAAhyE,KAAAgyE,EAAA/xE,MAAA,UACP03B,EADO,gBAAAj7B,OACyBgQ,KAChC2V,EAAa3uB,EAAKitC,8BAA8BhJ,IAFzC,CAAAq6C,EAAA/xE,KAAA,eAAA+xE,EAAA/mE,OAAA,SAIJoX,GAJI,cAAA2vD,EAAA/xE,KAAA,EAMWvM,EAAKf,MAAMiY,KAAKC,IAAIonE,SAASvlE,GANxC,cAMPikC,EANOqhC,EAAA/uE,KAAA+uE,EAAA/mE,OAAA,SAON0lC,EAAYj9C,EAAKktC,8BAA8BjJ,EAAcgZ,EAAU,MAAQ,MAPzE,wBAAAqhC,EAAAzwE,SAAAwwE,EAAAr/E,SA79IG,gBAAAw/E,GAAA,OAAAJ,EAAArwE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAs+IlB+5D,sBAt+IkB,eAAA0lB,EAAAlgF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAs+IM,SAAA0yE,EAAOntD,EAAaD,GAApB,IAAAK,EAAAuf,EAAAytC,EAAA3wE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAwyE,GAAA,cAAAA,EAAAtyE,KAAAsyE,EAAAryE,MAAA,UAA+BolB,EAA/BgtD,EAAAr+E,OAAA,QAAAgrB,IAAAqzD,EAAA,GAAAA,EAAA,GAAwC,GACzDptD,EADiB,CAAAqtD,EAAAryE,KAAA,eAAAqyE,EAAArnE,OAAA,SAEb,MAFa,UAKhB25B,EAAWlxC,EAAK08B,kBAAkBnL,GALlB,CAAAqtD,EAAAryE,KAAA,eAQpBvM,EAAK6wC,eAAe,sBAAuBtf,GARvBqtD,EAAArnE,OAAA,SASb,MATa,cAAAqnE,EAAAryE,KAAA,EAYT2kC,EAAS2tC,cAAcvtD,EAAYK,GAZ1B,cAAAitD,EAAArnE,OAAA,SAAAqnE,EAAArvE,MAAA,yBAAAqvE,EAAA/wE,SAAA6wE,EAAA1/E,SAt+IN,gBAAA8/E,EAAAC,GAAA,OAAAN,EAAA1wE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAo/IlB28C,0BAp/IkB,eAAAqjC,EAAAzgF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAo/IU,SAAAizE,EAAO1tD,EAAcD,GAArB,IAAAK,EAAAwqD,EAAAnjE,EAAAm7B,EAAAlQ,EAAAtV,EAAAkyB,EAAAq+B,EAAAlxE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA+yE,GAAA,cAAAA,EAAA7yE,KAAA6yE,EAAA5yE,MAAA,UAAiColB,EAAjCutD,EAAA5+E,OAAA,QAAAgrB,IAAA4zD,EAAA,GAAAA,EAAA,GAA0C,GAAI/C,EAA9C+C,EAAA5+E,OAAA,QAAAgrB,IAAA4zD,EAAA,GAAAA,EAAA,GAA2D,GAAIlmE,EAA/DkmE,EAAA5+E,OAAA,QAAAgrB,IAAA4zD,EAAA,GAAAA,EAAA,GAA6E,SAAU/qC,EAAvF+qC,EAAA5+E,OAAA,QAAAgrB,IAAA4zD,EAAA,GAAAA,EAAA,GAA2F,IAC/Gj7C,EADoB,uBAAAj7B,OACmBuoB,EADnB,KAAAvoB,OACmCsoB,EADnC,KAAAtoB,OACiD+B,KAAKC,UAAU2mB,GADhE,KAAA3oB,OAC2E+B,KAAKC,UAAUmxE,GAD1F,KAAAnzE,OACyGgQ,KAC7H2V,EAAa3uB,EAAKitC,8BAA8BhJ,IAF5B,CAAAk7C,EAAA5yE,KAAA,eAAA4yE,EAAA5nE,OAAA,SAIjBoX,GAJiB,aAQN,WAAhB3V,IACFm7B,EAAM,MATkBgrC,EAAA5yE,KAAA,GAYLvM,EAAKy9B,oBAAoBlM,EAAcD,EAAYK,EAAQwqD,EAAYnjE,GAZlE,eAYpB6nC,EAZoBs+B,EAAA5vE,KAAA4vE,EAAA5nE,OAAA,SAcnBvX,EAAKktC,8BAA8BjJ,EAAc4c,EAAO1M,IAdrC,yBAAAgrC,EAAAtxE,SAAAoxE,EAAAjgF,SAp/IV,gBAAAogF,EAAAC,GAAA,OAAAL,EAAAjxE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAogJlBy+B,oBApgJkB,eAAA6hD,EAAA/gF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAogJI,SAAAuzE,EAAOhuD,EAAcD,GAArB,IAAAK,EAAAwqD,EAAAnjE,EAAAk4B,EAAAsuC,EAAA15E,EAAA25E,EAAAzxE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAszE,GAAA,cAAAA,EAAApzE,KAAAozE,EAAAnzE,MAAA,UAAiColB,EAAjC8tD,EAAAn/E,OAAA,QAAAgrB,IAAAm0D,EAAA,GAAAA,EAAA,GAA0C,GAAItD,EAA9CsD,EAAAn/E,OAAA,QAAAgrB,IAAAm0D,EAAA,GAAAA,EAAA,GAA2D,GAAIzmE,EAA/DymE,EAAAn/E,OAAA,QAAAgrB,IAAAm0D,EAAA,GAAAA,EAAA,GAA6E,SAE5FluD,EAFe,CAAAmuD,EAAAnzE,KAAA,eAAAmzE,EAAAnoE,OAAA,SAGX,MAHW,UAMd25B,EAAWlxC,EAAK08B,kBAAkBnL,GANpB,CAAAmuD,EAAAnzE,KAAA,eASlBvM,EAAK0Y,UAAU,sBAAuB6Y,GATpBmuD,EAAAnoE,OAAA,SAUX,MAVW,UAaf25B,EAAS1Y,QAAQlH,GAbF,CAAAouD,EAAAnzE,KAAA,gBAclBvM,EAAK0Y,UAAU,oBAAqB4Y,GAdlBouD,EAAAnoE,OAAA,SAeX,MAfW,eAkBpByB,EAA8B,WAAhBA,GAA4BA,IAAgBpL,MAAMoL,GAAe9L,SAAS8L,GAAeA,EAlBnF0mE,EAAApzE,KAAA,GAAAozE,EAAAnzE,KAAA,IAsBEizE,EAAAtuC,EAAS1Y,SAAQlH,GAAjBvjB,MAAAyxE,EAAAjhF,OAAA63C,EAAA,EAAA73C,CAAgCozB,IAAQsuC,KAAKkc,EAAWnjE,GAAao0C,MAAM,SAAAv3C,GAC7F7V,EAAK0Y,UAAL,GAAA1P,OAAkBuoB,EAAlB,qBAAAvoB,OAAkDsoB,EAAlD,YAAwEzb,KAvBxD,eAsBZ/P,EAtBY45E,EAAAnwE,KAAAmwE,EAAAnoE,OAAA,SA0BXzR,GA1BW,QAAA45E,EAAApzE,KAAA,GAAAozE,EAAAl0D,GAAAk0D,EAAA,UA4BlB1/E,EAAK0Y,UAAU,4BAAfgnE,EAAAl0D,IA5BkB,yBAAAk0D,EAAA7xE,SAAA0xE,EAAAvgF,KAAA,cApgJJ,gBAAA2gF,EAAAC,GAAA,OAAAN,EAAAvxE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAmiJlB4M,aAniJkB,eAAAi0E,EAAAthF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAmiJH,SAAA8zE,EAAOxxB,EAAO3pD,GAAd,IAAAkI,EAAAkzE,EAAA/xE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA4zE,GAAA,cAAAA,EAAA1zE,KAAA0zE,EAAAzzE,MAAA,cAAAwzE,EAAAz/E,OAAA,QAAAgrB,IAAAy0D,EAAA,KAAAA,EAAA,KAAAC,EAAAzzE,KAAA,eAAAyzE,EAAAzzE,KAAA,EAELoK,QAAQqD,IAAIs0C,EAAM98C,IAAK,SAAC6V,EAAExa,GAC9B,OAAOlI,EAAS0iB,EAAGxa,EAAOyhD,MAHjB,OAAA0xB,EAAAzzE,KAAA,gBAMFM,EAAQ,EANN,YAMSA,EAAQyhD,EAAMhuD,QANvB,CAAA0/E,EAAAzzE,KAAA,gBAAAyzE,EAAAzzE,KAAA,GAOH5H,EAAS2pD,EAAMzhD,GAAQA,EAAOyhD,GAP3B,QAM+BzhD,IAN/BmzE,EAAAzzE,KAAA,iCAAAyzE,EAAAnyE,SAAAiyE,EAAA9gF,SAniJG,gBAAAihF,EAAAC,GAAA,OAAAL,EAAA9xE,MAAA/O,KAAAgP,YAAA,GAAAhP,KA8iJlB68C,QAAU,SAACC,GACT,OAAQ97C,EAAK4M,MAAM,GAAGU,KAAKtN,EAAK4M,MAAMkvC,GAAK7iC,IAAI,KAAMmqD,IAAI,IAAI71D,MAAM,IA/iJnDvO,KAijJlBmhF,iBAjjJkB,eAAAC,EAAA7hF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAijJC,SAAAq0E,EAAOv7E,GAAP,IAAAw7E,EAAA,OAAA92D,EAAApqB,EAAAgN,KAAA,SAAAm0E,GAAA,cAAAA,EAAAj0E,KAAAi0E,EAAAh0E,MAAA,cAAAg0E,EAAAh0E,KAAA,EACSvM,EAAKo7E,mBAAmBt2E,EAAY6H,MAAM7H,EAAYy6B,KAAKr3B,SADpE,cACbo4E,EADaC,EAAAhxE,QAGf+wE,EAAgBtgF,EAAKqQ,iBAAiBiwE,EAAcx7E,EAAYwE,WAHjDi3E,EAAAhpE,OAAA,SAKV+oE,GALU,wBAAAC,EAAA1yE,SAAAwyE,EAAArhF,SAjjJD,gBAAAwhF,GAAA,OAAAJ,EAAAryE,MAAA/O,KAAAgP,YAAA,GAAAhP,KAwjJlBqvE,aAxjJkB,eAAAoS,EAAAliF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAwjJH,SAAA00E,EAAO57E,GAAP,IAAAqmB,EAAA8Y,EAAAtV,EAAA0d,EAAAE,EAAAo0C,EAAA3yE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAw0E,GAAA,cAAAA,EAAAt0E,KAAAs0E,EAAAr0E,MAAA,UAAmB4e,IAAnBw1D,EAAArgF,OAAA,QAAAgrB,IAAAq1D,EAAA,KAAAA,EAAA,GAEP18C,EAFO,aAAAj7B,OAEsBlE,EAAYy6B,KAAKr3B,QAFvC,KAAAc,OAEkDmiB,KACzDwD,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJ7B,CAAAgzE,EAAAr0E,KAAA,eAAAq0E,EAAArpE,OAAA,SAKJvX,EAAK4M,MAAM+hB,IALP,cAAAiyD,EAAAr0E,KAAA,EAQiBvM,EAAK6E,mBAAmBC,GAAY,EAAMqmB,GAR3D,YAQPkhB,EAROu0C,EAAArxE,QASU88B,EAAgBQ,0BAT1B,CAAA+zC,EAAAr0E,KAAA,YAULggC,EAAYF,EAAgBQ,0BAC7B7sC,EAAK4M,MAAM2/B,GAAW3+B,QAXhB,CAAAgzE,EAAAr0E,KAAA,gBAAAq0E,EAAArpE,OAAA,SAYFvX,EAAKktC,8BAA8BjJ,EAAcsI,IAZ/C,eAAAq0C,EAAArpE,OAAA,SAgBN,MAhBM,yBAAAqpE,EAAA/yE,SAAA6yE,EAAA1hF,SAxjJG,gBAAA6hF,GAAA,OAAAJ,EAAA1yE,MAAA/O,KAAAgP,YAAA,GAAAhP,KA6kJlB6F,mBA7kJkB,eAAAi8E,EAAAviF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA6kJG,SAAA+0E,EAAOj8E,GAAP,IAAAk8E,EAAA71D,EAAA8Y,EAAAtV,EAAA/qB,EAAAyoC,EAAA40C,EAAAC,EAAAr9E,EAAAC,EAAAw8E,EAAAa,EAAAzwE,EAAA0wE,EAAAC,EAAAC,EAAAtzE,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAm1E,GAAA,cAAAA,EAAAj1E,KAAAi1E,EAAAh1E,MAAA,UAAmBy0E,EAAnBM,EAAAhhF,OAAA,QAAAgrB,IAAAg2D,EAAA,IAAAA,EAAA,GAAuCn2D,IAAvCm2D,EAAAhhF,OAAA,QAAAgrB,IAAAg2D,EAAA,KAAAA,EAAA,GAEdx8E,EAAYy6B,KAFE,CAAAgiD,EAAAh1E,KAAA,eAAAg1E,EAAAhqE,OAAA,UAGV,GAHU,UAOb0sB,EAPa,mBAAAj7B,OAOsBlE,EAAYy6B,KAAKr3B,QAPvC,KAAAc,OAOkDmiB,KAC/DwD,EAAa3uB,EAAK0nC,cAAczD,IARnB,CAAAs9C,EAAAh1E,KAAA,eAAAg1E,EAAAhqE,OAAA,SAUVoX,GAVU,cAaf/qB,EAAkB5D,EAAK4M,MAAM,GAE3By/B,EAAkB,CACtB+oB,OAAQ,KACRkrB,cAAc,KACd18E,gBAAgB,KAChBs9E,kBAAkB,GAClBr9E,qBAAqB,KACrBC,yBAAyB,KACzB09E,yBAAyB,KACzB30C,0BAA0B,KAC1B40C,mCAAmC,MAG/BR,EAAgB,GAChBC,EAAoB,GACpBr9E,EAAuB,GACvBC,EAA2B,GA9Bdy9E,EAAAh1E,KAAA,GAgCbvM,EAAK4L,aAAa9G,EAAY+C,UAA9B,eAAA65E,EAAAnjF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAwC,SAAA21E,EAAO75E,EAAaC,GAApB,IAAAwpB,EAAAtpB,EAAA25E,EAAAC,EAAA5xE,EAAA6xE,EAAAptB,EAAAqtB,EAAA,OAAAv4D,EAAApqB,EAAAgN,KAAA,SAAA41E,GAAA,cAAAA,EAAA11E,KAAA01E,EAAAz1E,MAAA,UAEvCzE,EAAa+hB,QAF0B,CAAAm4D,EAAAz1E,KAAA,eAAAy1E,EAAAzqE,OAAA,wBAMtCga,EAAezpB,EAAa6E,MAC5B1E,EAAeH,EAAaI,QAAQC,cAPE65E,EAAAz1E,KAAA,EAalCoK,QAAQqD,IAAI,CACpBha,EAAKu9B,iBAAiBhM,GACtBvxB,EAAKo7E,mBAAmB7pD,EAAazsB,EAAYy6B,KAAKr3B,SACpDJ,EAAa43B,UAAUg1B,aAAe10D,EAAKs0D,qBAAqB/iC,EAAazpB,EAAa43B,UAAUg1B,cAAgB,OAhB5E,UAAAktB,EAAAI,EAAAzyE,KAAAsyE,EAAAtjF,OAAAouC,EAAA,EAAApuC,CAAAqjF,EAAA,GAU1C3xE,EAV0C4xE,EAAA,GAW1CC,EAX0CD,EAAA,GAY1CntB,EAZ0CmtB,EAAA,GAmBvCC,EAnBuC,CAAAE,EAAAz1E,KAAA,gBAAAy1E,EAAAzqE,OAAA,kBAuBxCm9C,GAAgB5sD,EAAawB,WAC/B23E,EAAch5E,GAAgBysD,EAC9BA,EAAe10D,EAAKqQ,iBAAiBqkD,EAAa5sD,EAAawB,YAG7Dy4E,EAAqB/hF,EAAKqQ,iBAAiByxE,EAAgB7xE,EAAcykD,IAEtDlnD,GAAGxN,EAAK4M,MAAM,SACnCk1E,EAAkB9hF,EAAK4M,MAAM,GAC7Bm1E,EAAqB/hF,EAAK4M,MAAM,IAGlCs0E,EAAkBj5E,GAAgB65E,EAClCj+E,EAAqBoE,GAAgB85E,EACrCn+E,EAAkBA,EAAgB0J,KAAKy0E,GArCK,yBAAAC,EAAAn0E,SAAA8zE,EAAA3iF,SAAxC,gBAAAijF,EAAAC,GAAA,OAAAR,EAAA3zE,MAAA/O,KAAAgP,YAAA,IAhCa,eA0EnBq+B,EAAgBi0C,cAAgBtgF,EAAK4M,MAAM,GAC3Cy/B,EAAgBQ,0BAA4B7sC,EAAK4M,MAAMhJ,GA3EpC29E,EAAAh1E,KAAA,GA8EOvM,EAAKmgF,iBAAiBr7E,GA9E7B,YA8Efw7E,EA9EeiB,EAAAhyE,QAgFjB88B,EAAgBi0C,cAAgBA,EAChCj0C,EAAgBQ,0BAA4BR,EAAgBQ,0BAA0Bv/B,KAAKgzE,IAK7F/hF,OAAO8B,KAAKwD,GAAsBtD,QAAQ,SAAC0H,EAAaF,GACtD,IACMo6E,EADqBt+E,EAAqBoE,GACEgR,IAAIrV,GACtDE,EAAyBmE,GAAgBk6E,IAG3C91C,EAAgBzoC,gBAAkBA,EAClCyoC,EAAgBxoC,qBAAuBA,EACvCwoC,EAAgBvoC,yBAA2BA,GAEvCqnB,EAhGe,CAAAo2D,EAAAh1E,KAAA,gBAAAg1E,EAAAh1E,KAAA,GAiGevM,EAAKoiF,qBAAqBt9E,EAAYy6B,KAAKr3B,SAjG1D,aAiGXi5E,EAjGWI,EAAAhyE,MAoGK8yE,MApGL,CAAAd,EAAAh1E,KAAA,gBAAAg1E,EAAAh1E,KAAA,GAqGsBvM,EAAKsiF,uBAAuBx9E,GAAY,GArG9D,SAqGT4L,EArGS6wE,EAAAhyE,QAuGb4xE,EAAkBkB,MAAQlB,EAAkBkB,MAAMppE,IAAIvI,IAGxD27B,EAAgBQ,0BAA4BR,EAAgBQ,0BAA0Bv/B,KAAK6zE,EAAkBkB,OA1G9F,eAAAd,EAAAh1E,KAAA,GAmHToK,QAAQqD,IAAI,CACpBha,EAAKq/B,oBAAoBgN,EAAgBzoC,gBAAgBkB,EAAY6H,MAAM7H,GAC3E9E,EAAKq/B,oBAAoBgN,EAAgBQ,0BAA0B/nC,EAAY6H,MAAM7H,KArHpE,eAAAs8E,EAAAG,EAAAhyE,KAAA8xE,EAAA9iF,OAAAouC,EAAA,EAAApuC,CAAA6iF,EAAA,GAiHjB/0C,EAAgBm1C,yBAjHCH,EAAA,GAkHjBh1C,EAAgBo1C,mCAlHCJ,EAAA,GAwHfL,IACF30C,EAAgB+oB,OAASp1D,EAAKsuC,UAAU0yC,EAAcn9E,EAAqBD,IAzH1D29E,EAAAhqE,OAAA,SA4HZvX,EAAK4uB,cAAcqV,EAAcoI,IA5HrB,yBAAAk1C,EAAA1zE,SAAAkzE,EAAA/hF,SA7kJH,gBAAAujF,GAAA,OAAAzB,EAAA/yE,MAAA/O,KAAAgP,YAAA,GAAAhP,KA2sJlBwjF,2BA3sJkB,eAAAC,EAAAlkF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA2sJW,SAAA02E,EAAOnxD,EAAaoxD,GAApB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1a,EAAA2a,EAAAC,EAAA52C,EAAA62C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAl6D,EAAApqB,EAAAgN,KAAA,SAAAu3E,GAAA,cAAAA,EAAAr3E,KAAAq3E,EAAAp3E,MAAA,cAAAo3E,EAAAp3E,KAAA,EAMjBoK,QAAQqD,IAAI,CACpBha,EAAK27C,0BAA0BpqB,EAAa,UAC5CvxB,EAAK27C,0BAA0BpqB,EAAa,UAC5CvxB,EAAK27C,0BAA0BpqB,EAAa,eAC5CvxB,EAAK2pE,oBAAoBp4C,KAVA,UAAAqxD,EAAAe,EAAAp0E,KAAAszE,EAAAtkF,OAAAouC,EAAA,EAAApuC,CAAAqkF,EAAA,GAEzBE,EAFyBD,EAAA,GAGzBE,EAHyBF,EAAA,GAIzBG,EAJyBH,EAAA,GAKzBva,EALyBua,EAAA,KAavBC,GAAkBC,GAAkBC,GAAgB1a,GAb7B,CAAAqb,EAAAp3E,KAAA,gBAcnB02E,EAAgB,CACpB/6E,QAAQ46E,GAEJI,EAAgB,CACpBh7E,QAAQ66E,GAEJz2C,EAAiBtsC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,QApBrC+yE,EAAAp3E,KAAA,GAyBfoK,QAAQqD,IAAI,CACpBha,EAAK4jF,2BAA2Bt3C,EAAe22C,GAC/CjjF,EAAK4jF,2BAA2Bt3C,EAAe42C,KA3BxB,WAAAC,EAAAQ,EAAAp0E,KAAA6zE,EAAA7kF,OAAAouC,EAAA,EAAApuC,CAAA4kF,EAAA,GAuBvBE,EAvBuBD,EAAA,GAwBvBE,EAxBuBF,EAAA,IA8BrBC,IAAgBC,EA9BK,CAAAK,EAAAp3E,KAAA,gBAkCjBg3E,EAAcF,EAAa/6E,MAAMtI,EAAKqQ,iBAAiB2yE,EAAa,GAAG,KACvEQ,EAAcF,EAAah7E,MAAMtI,EAAKqQ,iBAAiB2yE,EAAa,GAAG,KAEvES,EAAgBF,EAAYj2E,KAAKk2E,GACjCE,EAAiBD,EAAcxqE,IAAIjZ,EAAKqQ,iBAAiBi4D,EAAY,KAtCpDqb,EAAApsE,OAAA,SA0ChBmsE,GA1CgB,eAAAC,EAAApsE,OAAA,SA8CpB,MA9CoB,yBAAAosE,EAAA91E,SAAA60E,EAAA1jF,SA3sJX,gBAAA6kF,EAAAC,GAAA,OAAArB,EAAA10E,MAAA/O,KAAAgP,YAAA,GAAAhP,KA2vJlB4kF,2BA3vJkB,eAAAG,EAAAxlF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA2vJW,SAAAg4E,EAAOC,EAAgBC,GAAvB,IAAAjgD,EAAAtV,EAAAw1D,EAAAC,EAAAl8D,EAAA2zC,EAAA5jB,EAAA,OAAAzuB,EAAApqB,EAAAgN,KAAA,SAAAi4E,GAAA,cAAAA,EAAA/3E,KAAA+3E,EAAA93E,MAAA,UAGrB03B,EAHqB,2BAAAj7B,OAGsBi7E,EAAgB/7E,QAHtC,KAAAc,OAGiDk7E,EAAgBh8E,WACtFymB,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QALf,CAAAy2E,EAAA93E,KAAA,eAAA83E,EAAA9sE,OAAA,SAMlBvX,EAAK4M,MAAM+hB,IANO,cAAA01D,EAAA/3E,KAAA,EAUnB63E,EAAWnkF,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,OAAO,YACzDwzE,EAAMpkF,EAAKm2D,uBAAuB,KAElCjuC,EAAO,IACR1f,KAAKy7E,EAAgB/7E,SAGtBi8E,EAASh8E,gBAAkB87E,EAAgB/7E,QAAQC,eAAiBg8E,EAASh8E,gBAAkB+7E,EAAgBh8E,QAAQC,eACzH+f,EAAK1f,KAAK27E,GAEZj8D,EAAK1f,KAAK07E,EAAgBh8E,SApBDm8E,EAAA93E,KAAA,GAsBPvM,EAAKy9B,oBAAoB,kBAAkB,eAAe,CAAC2mD,EAAI77E,UAAU2f,IAtBlE,aAsBnB2zC,EAtBmBwoB,EAAA90E,MAAA,CAAA80E,EAAA93E,KAAA,gBAyBjB0rC,EAAQj4C,EAAK4M,MAAMivD,EAAI,IAAI5iD,IAAImrE,GAzBdC,EAAA9sE,OAAA,SA0BhBvX,EAAKktC,8BAA8BjJ,EAAcgU,IA1BjC,eAAAosC,EAAA9sE,OAAA,SA4BlB,MA5BkB,eAAA8sE,EAAA/3E,KAAA,GAAA+3E,EAAA74D,GAAA64D,EAAA,SAAAA,EAAA9sE,OAAA,SA8BlB,MA9BkB,yBAAA8sE,EAAAx2E,SAAAm2E,EAAAhlF,KAAA,aA3vJX,gBAAAslF,EAAAC,GAAA,OAAAR,EAAAh2E,MAAA/O,KAAAgP,YAAA,GAAAhP,KA4xJlB4tC,yBA5xJkB,eAAA43C,EAAAjmF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA4xJS,SAAAy4E,EAAOR,EAAgBC,GAAvB,IAAAjgD,EAAAtV,EAAAw1D,EAAAC,EAAAl8D,EAAAw8D,EAAAzsC,EAAA,OAAAzuB,EAAApqB,EAAAgN,KAAA,SAAAu4E,GAAA,cAAAA,EAAAr4E,KAAAq4E,EAAAp4E,MAAA,UAErB23E,EAAgBU,mBAClBV,EAAkB3lF,OAAOC,OAAO,GAAG0lF,IACnBh8E,QAAUg8E,EAAgBU,iBAItC3gD,EARmB,yBAAAj7B,OAQsBi7E,EAAgB/7E,QARtC,KAAAc,OAQiDk7E,EAAgBh8E,WACpFymB,EAAa3uB,EAAKitC,8BAA8BhJ,KAEnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAXjB,CAAA+2E,EAAAp4E,KAAA,eAAAo4E,EAAAptE,OAAA,SAYhBvX,EAAK4M,MAAM+hB,IAZK,cAAAg2D,EAAAr4E,KAAA,EAgBjB63E,EAAWnkF,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,OAAO,YACzDwzE,EAAMpkF,EAAKm2D,uBAAuB,KAElCjuC,EAAO,IACR1f,KAAKy7E,EAAgB/7E,SAEtBi8E,EAASh8E,gBAAkB87E,EAAgB/7E,QAAQC,eAAiBg8E,EAASh8E,gBAAkB+7E,EAAgBh8E,QAAQC,eACzH+f,EAAK1f,KAAK27E,GAEZj8D,EAAK1f,KAAK07E,EAAgBh8E,SAzBHy8E,EAAAp4E,KAAA,GA2BFvM,EAAKy9B,oBAAoB,gBAAgB,eAAe,CAAC2mD,EAAI77E,UAAU2f,IA3BrE,aA2BjBw8D,EA3BiBC,EAAAp1E,MAAA,CAAAo1E,EAAAp4E,KAAA,gBA8Bf0rC,EAAQj4C,EAAK4M,MAAM83E,EAAO,IAAIzrE,IAAImrE,GA9BnBO,EAAAptE,OAAA,SAgCdvX,EAAKktC,8BAA8BjJ,EAAcgU,IAhCnC,eAAA0sC,EAAAptE,OAAA,SAkChB,MAlCgB,eAAAotE,EAAAr4E,KAAA,GAAAq4E,EAAAn5D,GAAAm5D,EAAA,SAAAA,EAAAptE,OAAA,SAoChB,MApCgB,yBAAAotE,EAAA92E,SAAA42E,EAAAzlF,KAAA,aA5xJT,gBAAA6lF,EAAAC,GAAA,OAAAN,EAAAz2E,MAAA/O,KAAAgP,YAAA,GAAAhP,KAy1JlB+lF,wBAz1JkB,eAAAC,EAAAzmF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAy1JQ,SAAAi5E,EAAOz5E,GAAP,IAAAP,EAAAwsC,EAAAytC,EAAAC,EAAAC,EAAAp3E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAi5E,GAAA,cAAAA,EAAA/4E,KAAA+4E,EAAA94E,MAAA,UAAetB,EAAfm6E,EAAA9kF,OAAA,QAAAgrB,IAAA85D,EAAA,GAAAA,EAAA,GAA6B,GACrD55E,EAAUA,GAAoBxL,EAAKf,MAAMuM,QAEpCP,GAAkBA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKL,EAAKf,MAAMqM,kBAGpCE,GAAYP,GAAkBA,EAAc3K,OAPzB,CAAA+kF,EAAA94E,KAAA,eAAA84E,EAAA9tE,OAAA,SAQf,IARe,cAAA8tE,EAAA94E,KAAA,EAWDvM,EAAK83C,YAAYtsC,EAAQ,EAAE,SAASP,GAXnC,OAWlBwsC,EAXkB4tC,EAAA91E,KAalB21E,EAAqB,GACvBC,EAAuBnlF,EAAK4M,MAAM,GAItC6qC,EAASl3C,QAAS,SAAAmM,GAEhB,IAAM02C,EAAY12C,EAAG02C,UACfz1C,EAAa3N,EAAK4M,MAAMF,EAAGiB,YAMjC,OAJKu3E,EAAmB9hC,KACtB8hC,EAAmB9hC,GAAapjD,EAAK4M,MAAM,IAGrCF,EAAGW,QACT,IAAK,UACL,IAAK,aACH63E,EAAmB9hC,GAAa8hC,EAAmB9hC,GAAW91C,KAAKK,GACrE,MACA,IAAK,WACL,IAAK,cACCA,EAAW8C,GAAGy0E,EAAmB9hC,MACnC+hC,EAAuBA,EAAqB73E,KAAKK,EAAWJ,MAAM23E,EAAmB9hC,MAEvF8hC,EAAmB9hC,GAAa8hC,EAAmB9hC,GAAW71C,MAAMI,GAChEu3E,EAAmB9hC,GAAW51C,GAAG,KACnC03E,EAAmB9hC,GAAapjD,EAAK4M,MAAM,IAU7Cu4E,EAAqB10E,GAAG,IAC1BlS,OAAO8B,KAAK6kF,GAAoB3kF,QAAS,SAAAoM,GACvC,IAAM64B,EAAe0/C,EAAmBv4E,GACpC64B,GAAgBA,EAAa/0B,GAAG,KAC9B+0B,EAAa/0B,GAAG00E,GAClBD,EAAmBv4E,GAASu4E,EAAmBv4E,GAAOY,MAAM43E,IAE5DA,EAAuBA,EAAqB53E,MAAM23E,EAAmBv4E,IACrEu4E,EAAmBv4E,GAAS,QAzDd,yBAAA04E,EAAAx3E,SAAAo3E,EAAAjmF,SAz1JR,gBAAAsmF,GAAA,OAAAN,EAAAj3E,MAAA/O,KAAAgP,YAAA,GAAAhP,KA25JlBumF,2BA35JkB,eAAAC,EAAAjnF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA25JW,SAAAy5E,EAAOC,EAAQC,GAAf,IAAA7iC,EAAA8iC,EAAA,OAAAp8D,EAAApqB,EAAAgN,KAAA,SAAAy5E,GAAA,cAAAA,EAAAv5E,KAAAu5E,EAAAt5E,MAAA,cAAAs5E,EAAAt5E,KAAA,EACKvM,EAAK8lF,0BADV,YACrBhjC,EADqB+iC,EAAAt2E,MAAA,CAAAs2E,EAAAt5E,KAAA,eAAAs5E,EAAAt5E,KAAA,EAGGvM,EAAKy9B,oBAAoBqlB,EAAkBpjD,KAAM,6BAA8B,CAACgmF,EAASC,IAH5F,cAGnBC,EAHmBC,EAAAt2E,KAAAs2E,EAAAtuE,OAAA,SAKlBquE,GALkB,cAAAC,EAAAtuE,OAAA,SAOpB,MAPoB,wBAAAsuE,EAAAh4E,SAAA43E,EAAAzmF,SA35JX,gBAAA+mF,EAAAC,GAAA,OAAAR,EAAAz3E,MAAA/O,KAAAgP,YAAA,GAAAhP,KAo6JlBgnC,YAp6JkBznC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAo6JJ,SAAAi6E,IAAA,IAAAhiD,EAAAtV,EAAAu3D,EAAAxzC,EAAAxqB,EAAA2a,EAAA,OAAArZ,EAAApqB,EAAAgN,KAAA,SAAA+5E,GAAA,cAAAA,EAAA75E,KAAA65E,EAAA55E,MAAA,UAGN03B,EAHM,gBAINtV,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAL9B,CAAAu4E,EAAA55E,KAAA,eAAA45E,EAAA5uE,OAAA,SAMHvX,EAAK4M,MAAM+hB,IANR,YASNu3D,EAAiBlmF,EAAK4Q,gBAAgB,CAAC,QAAQ,WATzC,CAAAu1E,EAAA55E,KAAA,gBAAA45E,EAAA55E,KAAA,EAWYvM,EAAKihD,YAAYilC,EAAe3kC,UAX5C,YAWJ7O,EAXIyzC,EAAA52E,QAYKmjC,EAAQvvC,KAZb,CAAAgjF,EAAA55E,KAAA,YAaF2b,EAAO3pB,OAAOiO,OAAO05E,EAAeh+D,QACtC2a,EAAW7iC,EAAK0wB,aAAaxI,EAAKwqB,EAAQvvC,OAdtC,CAAAgjF,EAAA55E,KAAA,YAgBNs2B,EAAW7iC,EAAK4M,MAAMi2B,GAAUv6B,MAAM,KACjCtI,EAAK4M,MAAMi2B,GAAUj1B,QAjBpB,CAAAu4E,EAAA55E,KAAA,gBAAA45E,EAAA5uE,OAAA,SAkBGvX,EAAKktC,8BAA8BjJ,EAAcpB,IAlBpD,eAAAsjD,EAAA5uE,OAAA,SAuBL,MAvBK,yBAAA4uE,EAAAt4E,SAAAo4E,EAAAjnF,SAp6JIA,KA67JlB64C,wBAA0B,WACxB,IAAK73C,EAAKf,MAAM2uC,oBACd,OAAO,EAET,IAAMmK,EAAc/3C,EAAK4Q,gBAAgB,CAAC,QAAQ,oBAC5Cw1E,EAAiBpmF,EAAKf,MAAM2uC,oBAAX,KASvB,OARwBrvC,OAAO8B,KAAK+lF,GAAgB5sC,OAAQ,SAACluC,EAAgBqB,GAC3E,IAAM7H,EAAcshF,EAAez5E,GAInC,OAHIpO,OAAO8B,KAAK03C,GAAazwB,SAASxiB,EAAYy6B,KAAK5yB,QAAUorC,EAAYjzC,EAAYy6B,KAAK5yB,OAAOkd,UACnGve,EAAgBqB,GAAS7H,GAEpBwG,GACP,KAz8JctM,KA68JlBqnF,oBA78JkB9nF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA68JI,SAAAs6E,IAAA,IAAAxjC,EAAA9pC,EAAAutE,EAAAC,EAAAC,EAAA/4E,EAAAg5E,EAAAC,EAAAC,EAAA,OAAAp9D,EAAApqB,EAAAgN,KAAA,SAAAy6E,GAAA,cAAAA,EAAAv6E,KAAAu6E,EAAAt6E,MAAA,cAAAs6E,EAAAt6E,KAAA,EACYvM,EAAK8lF,0BADjB,YACdhjC,EADc+jC,EAAAt3E,MAAA,CAAAs3E,EAAAt6E,KAAA,gBAAAs6E,EAAAt6E,KAAA,EAGQvM,EAAKi+E,iBAHb,YAGZjlE,EAHY6tE,EAAAt3E,MAAA,CAAAs3E,EAAAt6E,KAAA,gBAKVg6E,EAA0B,GALhBM,EAAAt6E,KAAA,GAMwBoK,QAAQqD,IAAI,CAClDha,EAAKy9B,oBAAoBqlB,EAAkBpjD,KAAK,qBAChDM,EAAK27C,0BAA0BmH,EAAkBpjD,KAAK,oBAAoB,GAAG,GAAGsZ,EAAYutE,KAR9E,WAAAC,EAAAK,EAAAt3E,KAAAk3E,EAAAloF,OAAAouC,EAAA,EAAApuC,CAAAioF,EAAA,GAMX94E,EANW+4E,EAAA,GAMAC,EANAD,EAAA,IAWZ/4E,IAAcg5E,EAXF,CAAAG,EAAAt6E,KAAA,gBAaRo6E,EAAmB3mF,EAAK4M,MAAM5M,EAAK4Q,gBAAgB,CAAC,UAAU,mBAAmBqI,IAAIstE,GACrFK,EAAW5mF,EAAK4M,MAAMc,GAAYuL,IAAIytE,GAAgBn5E,MAAM,GAAGjF,MAAMq+E,GAd7DE,EAAAtvE,OAAA,SAePvX,EAAK67C,QAAQ+qC,GAAUt+E,MAAM,MAftB,eAAAu+E,EAAAtvE,OAAA,SAmBb,MAnBa,yBAAAsvE,EAAAh5E,SAAAy4E,EAAAtnF,SA78JJA,KAk+JlB8nF,oBAl+JkBvoF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAk+JI,SAAA+6E,IAAA,IAAAlkC,EAAA,OAAAr5B,EAAApqB,EAAAgN,KAAA,SAAA46E,GAAA,cAAAA,EAAA16E,KAAA06E,EAAAz6E,MAAA,cAAAy6E,EAAAz6E,KAAA,EACYvM,EAAKinF,uBADjB,YACdpkC,EADcmkC,EAAAz3E,MAAA,CAAAy3E,EAAAz6E,KAAA,eAAAy6E,EAAAz6E,KAAA,EAGLvM,EAAK2pE,oBAAoB9mB,EAAkBnjD,MAHtC,cAAAsnF,EAAAzvE,OAAA,SAAAyvE,EAAAz3E,MAAA,cAAAy3E,EAAAzvE,OAAA,SAKb,MALa,wBAAAyvE,EAAAn5E,SAAAk5E,EAAA/nF,SAl+JJA,KAy+JlBkvE,qBAz+JkB3vE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAy+JK,SAAAk7E,IAAA,IAAA17E,EAAAwtE,EAAAn2B,EAAAskC,EAAAn5E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAg7E,GAAA,cAAAA,EAAA96E,KAAA86E,EAAA76E,MAAA,cAAOf,EAAP27E,EAAA7mF,OAAA,QAAAgrB,IAAA67D,EAAA,GAAAA,EAAA,GAAe,KAAKnO,IAApBmO,EAAA7mF,OAAA,QAAAgrB,IAAA67D,EAAA,KAAAA,EAAA,GAAAC,EAAA76E,KAAA,EACWvM,EAAKinF,uBADhB,YACfpkC,EADeukC,EAAA73E,MAAA,CAAA63E,EAAA76E,KAAA,gBAGnBf,EAAUA,GAAoBxL,EAAKf,MAAMuM,QAHtB47E,EAAA76E,KAAA,EAINvM,EAAK2rC,gBAAgBkX,EAAkBnjD,KAAK8L,EAAQwtE,GAJ9C,cAAAoO,EAAA7vE,OAAA,SAAA6vE,EAAA73E,MAAA,eAAA63E,EAAA7vE,OAAA,SAMd,MANc,yBAAA6vE,EAAAv5E,SAAAq5E,EAAAloF,SAz+JLA,KAi/JlBooD,mBAj/JkB7oD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAi/JG,SAAAq7E,IAAA,IAAAruE,EAAAggE,EAAAv8C,EAAAub,EAAA6K,EAAAykC,EAAAt5E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAm7E,GAAA,cAAAA,EAAAj7E,KAAAi7E,EAAAh7E,MAAA,cAAOyM,EAAPsuE,EAAAhnF,OAAA,QAAAgrB,IAAAg8D,EAAA,GAAAA,EAAA,GAAmB,SAAStO,IAA5BsO,EAAAhnF,OAAA,QAAAgrB,IAAAg8D,EAAA,KAAAA,EAAA,GAAAC,EAAAh7E,KAAA,EACavM,EAAK8lF,0BADlB,cACbrpD,EADa8qD,EAAAh4E,KAAAg4E,EAAAh7E,KAAA,EAESvM,EAAK27C,0BAA0Blf,EAAkB/8B,KAAK,oBAAoB,GAAG,GAAGsZ,GAFzF,YAEfg/B,EAFeuvC,EAAAh4E,MAAA,CAAAg4E,EAAAh7E,KAAA,gBAIjByrC,EAAkBh4C,EAAK4M,MAAMorC,GACzBghC,IACIn2B,EAAoB7iD,EAAK4Q,gBAAgB,CAAC,QAAQ,iBACxDonC,EAAkBh4C,EAAKqQ,iBAAiB2nC,EAAgB6K,EAAkBv5C,WAP3Di+E,EAAAhwE,OAAA,SASVygC,GATU,eAAAuvC,EAAAhwE,OAAA,SAWZ,MAXY,yBAAAgwE,EAAA15E,SAAAw5E,EAAAroF,SAj/JHA,KA8/JlBmvE,6BA9/JkB,eAAAqZ,EAAAjpF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA8/Ja,SAAAy7E,EAAOj8E,GAAP,IAAAk8E,EAAAC,EAAA3vC,EAAAgzB,EAAA,OAAAxhD,EAAApqB,EAAAgN,KAAA,SAAAw7E,GAAA,cAAAA,EAAAt7E,KAAAs7E,EAAAr7E,MAAA,cAAAq7E,EAAAr7E,KAAA,EACmBoK,QAAQqD,IAAI,CAC1Dha,EAAKonD,mBAAmB,UACxBpnD,EAAKkuE,qBAAqB1iE,KAHC,UAAAk8E,EAAAE,EAAAr4E,KAAAo4E,EAAAppF,OAAAouC,EAAA,EAAApuC,CAAAmpF,EAAA,GACxB1vC,EADwB2vC,EAAA,KACR3c,EADQ2c,EAAA,MAKJ3vC,EALI,CAAA4vC,EAAAr7E,KAAA,eAAAq7E,EAAArwE,OAAA,SAMpBvX,EAAK4M,MAAMo+D,GAAmB1iE,MAAM0vC,IANhB,cAAA4vC,EAAArwE,OAAA,SAQtB,MARsB,wBAAAqwE,EAAA/5E,SAAA45E,EAAAzoF,SA9/Jb,gBAAA6oF,GAAA,OAAAL,EAAAz5E,MAAA/O,KAAAgP,YAAA,GAAAhP,KAwgKlB8mF,wBAxgKkBvnF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAwgKQ,SAAA87E,IAAA,IAAAC,EAAA,OAAAv+D,EAAApqB,EAAAgN,KAAA,SAAA47E,GAAA,cAAAA,EAAA17E,KAAA07E,EAAAz7E,MAAA,YAClBw7E,EAAsB/nF,EAAK4Q,gBAAgB,CAAC,QAAQ,qBADlC,CAAAo3E,EAAAz7E,KAAA,WAGKvM,EAAK08B,kBAAkBqrD,EAAoBroF,QACzCqoF,EAAoB1qD,IAJ3B,CAAA2qD,EAAAz7E,KAAA,eAAAy7E,EAAAz7E,KAAA,EAKSvM,EAAKf,MAAMq+B,aAAayqD,EAAoBroF,KAAKqoF,EAAoB7/E,QAAQ6/E,EAAoB1qD,KAL1G,OAAA2qD,EAAAz4E,KAAA,cAAAy4E,EAAAzwE,OAAA,SAQjBwwE,GARiB,wBAAAC,EAAAn6E,SAAAi6E,EAAA9oF,SAxgKRA,KAkhKlBipF,oBAlhKkB1pF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkhKI,SAAAk8E,IAAA,IAAAC,EAAA,OAAA3+D,EAAApqB,EAAAgN,KAAA,SAAAg8E,GAAA,cAAAA,EAAA97E,KAAA87E,EAAA77E,MAAA,YACd47E,EAAkBnoF,EAAK4Q,gBAAgB,CAAC,QAAQ,iBADlC,CAAAw3E,EAAA77E,KAAA,WAGKvM,EAAK08B,kBAAkByrD,EAAgBzoF,QACrCyoF,EAAgB9qD,IAJvB,CAAA+qD,EAAA77E,KAAA,eAAA67E,EAAA77E,KAAA,EAKSvM,EAAKf,MAAMq+B,aAAa6qD,EAAgBzoF,KAAKyoF,EAAgBjgF,QAAQigF,EAAgB9qD,KAL9F,OAAA+qD,EAAA74E,KAAA,cAAA64E,EAAA7wE,OAAA,SAQb4wE,GARa,wBAAAC,EAAAv6E,SAAAq6E,EAAAlpF,SAlhKJA,KA4hKlBioF,qBA5hKkB1oF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA4hKK,SAAAq8E,IAAA,IAAAC,EAAA,OAAA9+D,EAAApqB,EAAAgN,KAAA,SAAAm8E,GAAA,cAAAA,EAAAj8E,KAAAi8E,EAAAh8E,MAAA,YACf+7E,EAAmBtoF,EAAK4Q,gBAAgB,CAAC,QAAQ,kBADlC,CAAA23E,EAAAh8E,KAAA,WAGKvM,EAAK08B,kBAAkB4rD,EAAiB5oF,QACtC4oF,EAAiBjrD,IAJxB,CAAAkrD,EAAAh8E,KAAA,eAAAg8E,EAAAh8E,KAAA,EAKSvM,EAAKf,MAAMq+B,aAAagrD,EAAiB5oF,KAAK4oF,EAAiBpgF,QAAQogF,EAAiBjrD,KALjG,OAAAkrD,EAAAh5E,KAAA,cAAAg5E,EAAAhxE,OAAA,SAQd+wE,GARc,wBAAAC,EAAA16E,SAAAw6E,EAAArpF,SA5hKLA,KAsiKlBwpF,qBAtiKkBjqF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAsiKK,SAAAy8E,IAAA,IAAAnsD,EAAA,OAAA9S,EAAApqB,EAAAgN,KAAA,SAAAs8E,GAAA,cAAAA,EAAAp8E,KAAAo8E,EAAAn8E,MAAA,YACf+vB,EAAwBt8B,EAAK4Q,gBAAgB,CAAC,QAAQ,uBADvC,CAAA83E,EAAAn8E,KAAA,WAGKvM,EAAK08B,kBAAkBJ,EAAsB58B,QAC3C48B,EAAsBe,IAJ7B,CAAAqrD,EAAAn8E,KAAA,eAAAm8E,EAAAn8E,KAAA,EAKSvM,EAAKf,MAAMq+B,aAAahB,EAAsB58B,KAAK48B,EAAsBp0B,QAAQo0B,EAAsBe,KALhH,OAAAqrD,EAAAn5E,KAAA,cAAAm5E,EAAAnxE,OAAA,SAQd+kB,GARc,wBAAAosD,EAAA76E,SAAA46E,EAAAzpF,SAtiKLA,KAgjKlB2pF,0BAhjKkBpqF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAgjKU,SAAA48E,IAAA,IAAAp9E,EAAAw/D,EAAA6d,EAAAl5E,EAAAmzC,EAAAgD,EAAAgjC,EAAAC,EAAAC,EAAAC,EAAAj7E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA88E,GAAA,cAAAA,EAAA58E,KAAA48E,EAAA38E,MAAA,UAAOf,EAAPy9E,EAAA3oF,OAAA,QAAAgrB,IAAA29D,EAAA,GAAAA,EAAA,GAAe,KAAKje,EAApBie,EAAA3oF,OAAA,QAAAgrB,IAAA29D,EAAA,GAAAA,EAAA,GAAsC,KAAKJ,EAA3CI,EAAA3oF,OAAA,QAAAgrB,IAAA29D,EAAA,GAAAA,EAAA,GAAwD,MAC7Ez9E,GAAWxL,EAAKf,MAAMuM,UACzBA,EAAUxL,EAAKf,MAAMuM,SAGlBA,EALqB,CAAA09E,EAAA38E,KAAA,eAAA28E,EAAA3xE,OAAA,SAMjB,MANiB,cASpB5H,EAAiB,GATGu5E,EAAA38E,KAAA,EAUMvM,EAAKwoF,uBAVX,cAUpB1lC,EAVoBomC,EAAA35E,KAWpBu2C,EAAuB9lD,EAAK4Q,gBAAgB,CAAC,QAAQ,oBAXjCs4E,EAAA38E,KAAA,GAaKvM,EAAK8mF,sBAbV,WAapBgC,EAboBI,EAAA35E,KAcrBy7D,EAdqB,CAAAke,EAAA38E,KAAA,gBAAA28E,EAAA38E,KAAA,GAeEvM,EAAKkuE,qBAAqB1iE,GAAQ,GAfpC,QAexBw/D,EAfwBke,EAAA35E,KAAA,YAkBtBy7D,IAAqB8d,EAlBC,CAAAI,EAAA38E,KAAA,gBAmBlBw8E,EAAkB/oF,EAAK4M,MAAMo+D,GAAmB/xD,IAAIjZ,EAAK4M,MAAMk8E,IAC/DE,EAAUzqF,OAAO8B,KAAKylD,GAAsBxlD,OAE9CuoF,IACFA,EAAe7oF,EAAK4M,MAAMi8E,GAAc5vE,IAAI+vE,IAvBtBE,EAAA38E,KAAA,GA4BlBvM,EAAK4L,aAAarN,OAAO8B,KAAKylD,GAA9B,eAAAqjC,EAAA5qF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAqD,SAAAo9E,EAAOz8E,GAAP,IAAAw2C,EAAAkmC,EAAAC,EAAA75E,EAAA,OAAA+Z,EAAApqB,EAAAgN,KAAA,SAAAm9E,GAAA,cAAAA,EAAAj9E,KAAAi9E,EAAAh9E,MAAA,cACnD42C,EAAmB2C,EAAqBn5C,GACxC08E,EAAYlmC,EAAiBvkB,gBAAgByqD,UAFME,EAAAh9E,KAAA,EAG3BvM,EAAKy9B,oBAAoBqlB,EAAkBpjD,KAAK,WAAW,CAAC2pF,IAHjC,QAGnDC,EAHmDC,EAAAh6E,QAKnDE,EAAmBzP,EAAK4M,MAAM08E,GAAiBhhF,MAAMygF,GACrDF,IAEFp5E,EAAmBA,EAAiBlC,MAAMkC,EAAiBnH,MAAMugF,KAEnEl5E,EAAe05E,GAAarpF,EAAKm/B,aAAa1vB,IAVS,wBAAA85E,EAAA17E,SAAAu7E,EAAApqF,SAArD,gBAAAwqF,GAAA,OAAAL,EAAAp7E,MAAA/O,KAAAgP,YAAA,IA5BkB,eAAAk7E,EAAA3xE,OAAA,SA2CnBhZ,OAAOiO,OAAOmD,IA3CK,yBAAAu5E,EAAAr7E,SAAA+6E,EAAA5pF,SAhjKVA,KA+lKlByqF,sBA/lKkBlrF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+lKM,SAAA09E,IAAA,IAAAl+E,EAAAw/D,EAAAgO,EAAA2Q,EAAAh6E,EAAArE,EAAAw3C,EAAAgD,EAAAgjC,EAAAC,EAAAa,EAAA57E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAy9E,GAAA,cAAAA,EAAAv9E,KAAAu9E,EAAAt9E,MAAA,UAAOf,EAAPo+E,EAAAtpF,OAAA,QAAAgrB,IAAAs+D,EAAA,GAAAA,EAAA,GAAe,KAAK5e,EAApB4e,EAAAtpF,OAAA,QAAAgrB,IAAAs+D,EAAA,GAAAA,EAAA,GAAsC,KAAK5Q,EAA3C4Q,EAAAtpF,OAAA,QAAAgrB,IAAAs+D,EAAA,IAAAA,EAAA,GAA6DD,EAA7DC,EAAAtpF,OAAA,QAAAgrB,IAAAs+D,EAAA,IAAAA,EAAA,IAEjBp+E,GAAWxL,EAAKf,MAAMuM,UACzBA,EAAUxL,EAAKf,MAAMuM,SAGlBA,EANiB,CAAAq+E,EAAAt9E,KAAA,eAAAs9E,EAAAtyE,OAAA,SAOb,MAPa,cAUhB5H,EAAiB,GACjBrE,EAAkBtL,EAAK63C,0BAXPgyC,EAAAt9E,KAAA,GAYUvM,EAAKwoF,uBAZf,eAYhB1lC,EAZgB+mC,EAAAt6E,KAahBu2C,EAAuB9lD,EAAK4Q,gBAAgB,CAAC,QAAQ,oBAbrCi5E,EAAAt9E,KAAA,GAeSvM,EAAK8mF,sBAfd,WAehBgC,EAfgBe,EAAAt6E,KAgBjBy7D,EAhBiB,CAAA6e,EAAAt9E,KAAA,gBAAAs9E,EAAAt9E,KAAA,GAiBMvM,EAAKkuE,qBAAqB1iE,GAAQ,GAjBxC,QAiBpBw/D,EAjBoB6e,EAAAt6E,KAAA,YAoBlBy7D,IAAqB8d,EApBH,CAAAe,EAAAt9E,KAAA,gBAqBdw8E,EAAkB/oF,EAAK4M,MAAMo+D,GAAmB/xD,IAAIjZ,EAAK4M,MAAMk8E,IArBjDe,EAAAt9E,KAAA,GAuBdvM,EAAK4L,aAAarN,OAAO8B,KAAKylD,GAA9B,eAAAgkC,EAAAvrF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAqD,SAAA+9E,EAAOp9E,GAAP,IAAAw2C,EAAAkmC,EAAAvkF,EAAAklF,EAAAC,EAAAC,EAAAz6E,EAAA06E,EAAA3kD,EAAA,OAAAhc,EAAApqB,EAAAgN,KAAA,SAAAg+E,GAAA,cAAAA,EAAA99E,KAAA89E,EAAA79E,MAAA,cACnD42C,EAAmB2C,EAAqBn5C,GACxC08E,EAAYlmC,EAAiBvkB,gBAAgByqD,UAC7CvkF,EAAcwG,EAAgB63C,EAAiB1sB,WAHI2zD,EAAA79E,KAAA,EAO/CoK,QAAQqD,IAAI,CACpBha,EAAK62C,kBAAkB/xC,GACvB9E,EAAKy9B,oBAAoBqlB,EAAkBpjD,KAAK,WAAW,CAAC2pF,MATL,OAAAW,EAAAI,EAAA76E,KAAA06E,EAAA1rF,OAAAouC,EAAA,EAAApuC,CAAAyrF,EAAA,GAKvDE,EALuDD,EAAA,GAMvDx6E,EANuDw6E,EAAA,GAYnDE,EAAmBnqF,EAAK4M,MAAM6C,GAAkBnH,MAAMtI,EAAK4M,MAAMs9E,IACnE1kD,EAAe2kD,EAAiB7hF,MAAMygF,GACtC/P,IACFxzC,EAAexlC,EAAKqQ,iBAAiBm1B,EAAa,KAGpD71B,EAAewzC,EAAiB1sB,WAAakzD,EAAe3pF,EAAKm/B,aAAaqG,GAAgBA,EAlBrC,yBAAA4kD,EAAAv8E,SAAAk8E,EAAA/qF,SAArD,gBAAAqrF,GAAA,OAAAP,EAAA/7E,MAAA/O,KAAAgP,YAAA,IAvBc,eAAA67E,EAAAtyE,OAAA,SA6CfoyE,EAAeprF,OAAOiO,OAAOmD,GAAkBA,GA7ChC,yBAAAk6E,EAAAh8E,SAAA67E,EAAA1qF,SA/lKNA,KAgpKlBsrF,gBAhpKkB,eAAAC,EAAAhsF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAgpKA,SAAAw+E,EAAO79E,EAAM0jB,GAAb,IAAAlN,EAAAuiE,EAAAp6E,EAAAw6C,EAAA2kC,EAAAz8E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAs+E,GAAA,cAAAA,EAAAp+E,KAAAo+E,EAAAn+E,MAAA,cAAoB4W,EAApBsnE,EAAAnqF,OAAA,QAAAgrB,IAAAm/D,EAAA,IAAAA,EAAA,GACV/E,EAAU,GACVp6E,EAAkBtL,EAAK63C,0BACvBiO,EAAuB9lD,EAAK4Q,gBAAgB,CAAC,QAAQ,oBAH3C85E,EAAAn+E,KAAA,EAKVvM,EAAK4L,aAAarN,OAAO8B,KAAKylD,GAA9B,eAAA6kC,EAAApsF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAqD,SAAA4+E,EAAOxnC,GAAP,IAAAD,EAAAvkB,EAAAyqD,EAAAvkF,EAAAolF,EAAA,OAAA1gE,EAAApqB,EAAAgN,KAAA,SAAAy+E,GAAA,cAAAA,EAAAv+E,KAAAu+E,EAAAt+E,MAAA,UACnD42C,EAAmB2C,EAAqB1C,GACxCxkB,EAAkBukB,EAAiBvkB,gBACnCyqD,EAAYzqD,EAAgByqD,YAC9BjmC,IAAcz2C,GAAStE,WAAWgoB,GAAQ,GAJW,CAAAw6D,EAAAt+E,KAAA,YAKjDzH,EAAcwG,EAAgB63C,EAAiB1sB,WACrDpG,EAASrwB,EAAKqQ,iBAAiBggB,EAAO,IACjClN,EAPkD,CAAA0nE,EAAAt+E,KAAA,gBAAAs+E,EAAAt+E,KAAA,EAQxBvM,EAAK62C,kBAAkB/xC,GARC,OAQ/ColF,EAR+CW,EAAAt7E,KASrD8gB,EAASA,EAAOpX,IAAIixE,GATiC,QAWvD75D,EAASrwB,EAAKi8B,qBAAqB5L,EAAO8yB,EAAiB75C,UAC3Do8E,EAAQ2D,GAAah5D,EAZkCw6D,EAAAt+E,KAAA,iBAcvDm5E,EAAQ2D,GAAa,EAdkC,yBAAAwB,EAAAh9E,SAAA+8E,EAAA5rF,SAArD,gBAAA8rF,GAAA,OAAAH,EAAA58E,MAAA/O,KAAAgP,YAAA,IALU,cAAA08E,EAAAnzE,OAAA,SAuBThZ,OAAOiO,OAAOk5E,IAvBL,wBAAAgF,EAAA78E,SAAA28E,EAAAxrF,SAhpKA,gBAAA+rF,EAAAC,GAAA,OAAAT,EAAAx8E,MAAA/O,KAAAgP,YAAA,GAAAhP,KAyqKlBisF,oBAzqKkB,eAAAC,EAAA3sF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAyqKI,SAAAm/E,EAAOzF,GAAP,IAAAviE,EAAAsZ,EAAA2uD,EAAAp9E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAi/E,GAAA,cAAAA,EAAA/+E,KAAA++E,EAAA9+E,MAAA,cAAe4W,IAAfioE,EAAA9qF,OAAA,QAAAgrB,IAAA8/D,EAAA,KAAAA,EAAA,GAAAC,EAAA9+E,KAAA,EACYvM,EAAKwoF,uBADjB,YACd/rD,EADc4uD,EAAA97E,MAAA,CAAA87E,EAAA9+E,KAAA,eAAA8+E,EAAA9+E,KAAA,EAGLvM,EAAKy9B,oBAAoBhB,EAAkB/8B,KAAK,oBAAoB,CAACgmF,EAAQviE,IAHxE,cAAAkoE,EAAA9zE,OAAA,SAAA8zE,EAAA97E,MAAA,cAAA87E,EAAA9zE,OAAA,SAKb,MALa,wBAAA8zE,EAAAx9E,SAAAs9E,EAAAnsF,SAzqKJ,gBAAAssF,GAAA,OAAAJ,EAAAn9E,MAAA/O,KAAAgP,YAAA,GAAAhP,KAgrKlBusF,iBAhrKkB,eAAAC,EAAAjtF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAgrKC,SAAAy/E,EAAO9+E,EAAM0jB,GAAb,IAAAlN,EAAAuoE,EAAAvzC,EAAAwzC,EAAA3C,EAAAtD,EAAAkG,EAAAC,EAAAtjB,EAAAn7D,EAAA0+E,EAAAC,EAAA/9E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA4/E,GAAA,cAAAA,EAAA1/E,KAAA0/E,EAAAz/E,MAAA,cAAoB4W,IAApB4oE,EAAAzrF,OAAA,QAAAgrB,IAAAygE,EAAA,KAAAA,EAAA,GAAiCL,EAAjCK,EAAAzrF,OAAA,QAAAgrB,IAAAygE,EAAA,GAAAA,EAAA,GAAgD,KAC7D5zC,EAAW,KADE6zC,EAAAz/E,KAAA,EAEavM,EAAK8lF,0BAFlB,YAEX6F,EAFWK,EAAAz8E,MAAA,CAAAy8E,EAAAz/E,KAAA,YAKTy8E,EAAUhpF,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,aAEvDyf,EAASrwB,EAAK4M,MAAMyjB,MACLA,EAAOziB,UAAWyiB,EAAO+K,IAAI,GAR7B,CAAA4wD,EAAAz/E,KAAA,gBAAAy/E,EAAAz0E,OAAA,SASN,MATM,YAYXmuE,EAAUgG,IACEhG,EAAQplF,SAAW0oF,EAbpB,CAAAgD,EAAAz/E,KAAA,gBAAAy/E,EAAAz/E,KAAA,GAcGvM,EAAKsqF,gBAAgB39E,EAAM0jB,GAd9B,QAcbq1D,EAdasG,EAAAz8E,KAAA,eAAAy8E,EAAAz/E,KAAA,GAoBLoK,QAAQqD,IAAI,CACpBha,EAAKy9B,oBAAoBkuD,EAAgBjsF,KAAK,qBAC9CM,EAAKy9B,oBAAoBkuD,EAAgBjsF,KAAK,oBAAoB,CAACgmF,EAAQviE,MAtB9D,WAAAyoE,EAAAI,EAAAz8E,KAAAs8E,EAAAttF,OAAAouC,EAAA,EAAApuC,CAAAqtF,EAAA,GAkBbrjB,EAlBasjB,EAAA,GAmBbz+E,EAnBay+E,EAAA,IAyBXtjB,IAAgBn7D,EAzBL,CAAA4+E,EAAAz/E,KAAA,gBA0Bb8jB,EAASrwB,EAAKqQ,iBAAiBggB,EAAO,IACtCk4C,EAAevoE,EAAKqQ,iBAAiBk4D,EAAa,IAClDn7D,EAAcpN,EAAKqQ,iBAAiBjD,EAAY,IAC1C0+E,EAAK1+E,EAAY9E,MAAMigE,GAGzBmjB,IAAmBvoE,IACrBkN,EAASA,EAAO/nB,MAAMigE,IAItBpwB,EADEh1B,EACS2oE,EAAG7yE,IAAIoX,GAAQ9iB,MAAM,GAAGjF,OAAO,GAE/B+nB,EAAOpX,IAAI6yE,GAAIv+E,MAAM,GAAGjF,OAAO,GAvC/B0jF,EAAAz0E,OAAA,SA4CN4gC,GA5CM,eAAA6zC,EAAAz0E,OAAA,SA+CV,MA/CU,yBAAAy0E,EAAAn+E,SAAA49E,EAAAzsF,SAhrKD,gBAAAitF,EAAAC,GAAA,OAAAV,EAAAz9E,MAAA/O,KAAAgP,YAAA,GAAAhP,KAiuKlB4vE,uBAjuKkB,eAAAud,EAAA5tF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAiuKO,SAAAogF,EAAOtnF,GAAP,IAAAunF,EAAAC,EAAAroD,EAAAtV,EAAA49D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzgD,EAAA0gD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAp/E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAihF,GAAA,cAAAA,EAAA/gF,KAAA+gF,EAAA9gF,MAAA,UAAmB8/E,EAAnBe,EAAA9sF,OAAA,QAAAgrB,IAAA8hE,EAAA,GAAAA,EAAA,GAAoC,KAAKd,IAAzCc,EAAA9sF,OAAA,QAAAgrB,IAAA8hE,EAAA,KAAAA,EAAA,GAEjBnpD,EAFiB,0BAAAj7B,OAEyBlE,EAAYy6B,KAAK5yB,MAF1C,KAAA3D,OAEmDqjF,EAFnD,KAAArjF,OAEuEsjF,KACxF39D,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJnB,CAAAy/E,EAAA9gF,KAAA,eAAA8gF,EAAA91E,OAAA,SAKdvX,EAAK4M,MAAM+hB,IALG,UAQnB49D,EAAmBvsF,EAAK4M,MAAM,GAC5B4/E,EAAqBxsF,EAAK4Q,gBAAgB,CAAC,YAAY,aACvD67E,EAAe3nF,EAAY+C,UAAU2mB,KAAM,SAAA/vB,GAAC,OAAIA,EAAEiB,OAAS8sF,EAAmBjhE,cAE/DihE,EAAmBt+C,eAAe5mB,SAASxiB,EAAYy6B,KAAK5yB,OAZ1D,CAAA0gF,EAAA9gF,KAAA,gBAAA8gF,EAAA91E,OAAA,SAadg1E,GAbc,eAAAc,EAAA9gF,KAAA,GAgBwBvM,EAAK27C,0BAA0B8wC,EAAa9/E,MAAM,0BAA0B,GAAG,GAAG,SAAS,MAhBnH,WAgBjB+/E,EAhBiBW,EAAA99E,KAAA,CAAA89E,EAAA9gF,KAAA,gBAAA8gF,EAAA91E,OAAA,SAqBdg1E,GArBc,eAwBjBI,EAxBiB,6BAAA3jF,OAwB6CyjF,EAAa9/E,OAxB1D0gF,EAAA9gF,KAAA,GAyBjBvM,EAAKf,MAAMq+B,aAAaqvD,EAA+BD,EAAiCF,EAAmBnvD,KAzB1F,eAAAgwD,EAAA9gF,KAAA,GA+BboK,QAAQqD,IAAI,CACpBha,EAAK2pE,oBAAoB8iB,EAAa9/E,OACtC3M,EAAK6E,mBAAmBC,GAAY,GAAM,GAC1C9E,EAAK27C,0BAA0BgxC,EAA+B,eAAe,CAACF,EAAavkF,YAlCtE,WAAA0kF,EAAAS,EAAA99E,KAAAs9E,EAAAtuF,OAAAouC,EAAA,EAAApuC,CAAAquF,EAAA,GA4BrBE,EA5BqBD,EAAA,GA6BrBxgD,EA7BqBwgD,EAAA,KA8BrBE,EA9BqBF,EAAA,MAqCNxgD,EArCM,CAAAghD,EAAA9gF,KAAA,cAuCfygF,EAAqB3gD,EAAgBvoC,yBAAyB2oF,EAAavkF,QAAQC,kBAE/D6kF,EAAmB1tD,IAAI,MAzC5B,CAAA+tD,EAAA9gF,KAAA,YA0Cd8/E,EA1Cc,CAAAgB,EAAA9gF,KAAA,gBAAA8gF,EAAA9gF,KAAA,GA2CQvM,EAAKw9B,mBAAmBivD,EAAa9/E,MAAM7H,EAAYy6B,KAAKr3B,SA3CpE,QA2CjBmkF,EA3CiBgB,EAAA99E,KAAA,WA8Cb09E,EAAYjtF,EAAK4M,MAAMmgF,EAAU,IACvCV,EAAmBrsF,EAAK4M,MAAMy/E,GAC9BS,EAAoB9sF,EAAK4M,MAAMkgF,GACzBI,EAAiBltF,EAAK4Q,gBAAgB,CAAC,UAAU,mBAEjDu8E,EAAgBd,EAAiBpzE,IAAI6zE,GAC3CP,EAAmBU,EAAU3kF,MAAM6kF,GAE/Bb,IACFC,EAAmBA,EAAiBtzE,IAAI,MAAM3Q,MAAM4kF,IAKjDltF,EAAK4M,MAAM2/E,GAAkB3+E,QA5Df,CAAAy/E,EAAA9gF,KAAA,gBAAA8gF,EAAA91E,OAAA,SA6DVvX,EAAKktC,8BAA8BjJ,EAAcsoD,IA7DvC,eAAAc,EAAA91E,OAAA,SAkEhBg1E,GAlEgB,yBAAAc,EAAAx/E,SAAAu+E,EAAAptF,SAjuKP,gBAAAsuF,GAAA,OAAAnB,EAAAp+E,MAAA/O,KAAAgP,YAAA,GAAAhP,KAqyKlBuvE,2BAryKkBhwE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAqyKW,SAAAuhF,IAAA,IAAA/hF,EAAAF,EAAAkhF,EAAAphE,EAAAoiE,EAAAx/E,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAqhF,GAAA,cAAAA,EAAAnhF,KAAAmhF,EAAAlhF,MAAA,UAAOf,EAAPgiF,EAAAltF,OAAA,QAAAgrB,IAAAkiE,EAAA,GAAAA,EAAA,GAAe,KAAKliF,EAApBkiF,EAAAltF,OAAA,QAAAgrB,IAAAkiE,EAAA,GAAAA,EAAA,GAAoC,KAC1DhiF,IACHA,EAAUxL,EAAKf,MAAMuM,UAElBF,GAAmBtL,EAAKf,MAAMiQ,mBACjC5D,EAAkBtL,EAAKf,MAAM2uC,oBAAoB5tC,EAAKf,MAAMiQ,mBAGzD1D,GAAYF,EARU,CAAAmiF,EAAAlhF,KAAA,eAAAkhF,EAAAl2E,OAAA,UASlB,GATkB,cAYrBi1E,EAAqBxsF,EAAK4Q,gBAAgB,CAAC,YAAY,YAEzDwa,EAASprB,EAAK4M,MAAM,GAdG6gF,EAAAlhF,KAAA,GAerBvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAAoiF,EAAAnvF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAA2hF,EAAOhhF,GAAP,IAAA7H,EAAA8oF,EAAAC,EAAA9/C,EAAAw+C,EAAA,OAAA/iE,EAAApqB,EAAAgN,KAAA,SAAA0hF,GAAA,cAAAA,EAAAxhF,KAAAwhF,EAAAvhF,MAAA,UAC7CzH,EAAcwG,EAAgBqB,IACjB7H,EAAY+C,UAAU2mB,KAAM,SAAA/vB,GAAC,OAAKA,EAAEiB,OAAS8sF,EAAmBjhE,WAFhC,CAAAuiE,EAAAvhF,KAAA,gBAAAuhF,EAAAvhF,KAAA,EAOvCoK,QAAQqD,IAAI,CACpBha,EAAKmuC,iBAAiB3iC,EAAQ1G,GAAY,GAC1C9E,EAAK4uE,uBAAuB9pE,EAAY,MAAK,KATE,OAAA8oF,EAAAE,EAAAv+E,KAAAs+E,EAAAtvF,OAAAouC,EAAA,EAAApuC,CAAAqvF,EAAA,GAK/C7/C,EAL+C8/C,EAAA,IAM/CtB,EAN+CsB,EAAA,KAYzB9/C,IACtB3iB,EAASA,EAAO9d,KAAKi/E,EAAiBjkF,MAAMylC,KAbG,yBAAA+/C,EAAAjgF,SAAA8/E,EAAA3uF,SAA/C,gBAAA+uF,GAAA,OAAAL,EAAA3/E,MAAA/O,KAAAgP,YAAA,IAfqB,eAAAy/E,EAAAl2E,OAAA,SAiCpB6T,GAjCoB,yBAAAqiE,EAAA5/E,SAAA0/E,EAAAvuF,SAryKXA,KAw0KlBgvF,cAx0KkB,eAAAC,EAAA1vF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAw0KF,SAAAkiF,EAAOvhF,EAAM7H,GAAb,IAAAqpF,EAAA3B,EAAAvoD,EAAAtV,EAAAy/D,EAAA7B,EAAAjgD,EAAA+hD,EAAAC,EAAAjiD,EAAAkiD,EAAAvgF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAoiF,GAAA,cAAAA,EAAAliF,KAAAkiF,EAAAjiF,MAAA,UAAyB4hF,EAAzBI,EAAAjuF,OAAA,QAAAgrB,IAAAijE,EAAA,GAAAA,EAAA,GAA4C,MACpD/B,EAAqBxsF,EAAK4Q,gBAAgB,CAAC,YAAY,aACrCiZ,QAFV,CAAA2kE,EAAAjiF,KAAA,eAAAiiF,EAAAj3E,OAAA,UAGL,GAHK,UAMR0sB,EANQ,iBAAAj7B,OAMyBlE,EAAYy6B,KAAK5yB,MAN1C,KAAA3D,OAMmDmlF,KAC3Dx/D,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAR5B,CAAA4gF,EAAAjiF,KAAA,eAAAiiF,EAAAj3E,OAAA,SASLvX,EAAK4M,MAAM+hB,IATN,cAYVy/D,EAAapuF,EAAK4M,MAAM,GAZd4hF,EAAAjiF,KAAA,GAaiBvM,EAAK4uE,uBAAuB9pE,GAb7C,aAaRynF,EAbQiC,EAAAj/E,QAeUvP,EAAK4M,MAAM2/E,GAAkB97E,GAAG,GAf1C,CAAA+9E,EAAAjiF,KAAA,YAkBP4hF,EAlBO,CAAAK,EAAAjiF,KAAA,gBAmBJ+/B,EAAiBtsC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,QAnBpD49E,EAAAliF,KAAA,GAqBF+hF,EAAkB,CACtBnmF,QAAQskF,EAAmB5H,iBAAmB4H,EAAmBtkF,SAtB3DsmF,EAAAjiF,KAAA,GAwBmBvM,EAAK4sC,yBAAyBN,EAAe+hD,GAxBhE,QAwBRF,EAxBQK,EAAAj/E,KAAAi/E,EAAAjiF,KAAA,iBAAAiiF,EAAAliF,KAAA,GAAAkiF,EAAAhjE,GAAAgjE,EAAA,kBA4BLL,IAAsBA,EAAmBvgF,UAC5CugF,EAAqBnuF,EAAK4M,MAAM,IA7BxB,eAiCN0hF,EAAetuF,EAAK4M,MAAMuhF,GAAoB7lF,MAAMikF,GAjC9CiC,EAAAjiF,KAAA,GAmCkBvM,EAAK6E,mBAAmBC,GAAY,GAAM,GAnC5D,SAmCNunC,EAnCMmiD,EAAAj/E,QAsCV6+E,EAAaE,EAAar1E,IAAIozB,EAAgBm1C,0BAA0Bl5E,MAAM,KAIzEtI,EAAK4M,MAAMwhF,GAAYxgF,SAC1B5N,EAAKktC,8BAA8BjJ,EAAcmqD,IA3CzC,eAAAI,EAAAj3E,OAAA,SAgDP62E,GAhDO,yBAAAI,EAAA3gF,SAAAqgF,EAAAlvF,KAAA,cAx0KE,gBAAAyvF,EAAAC,GAAA,OAAAT,EAAAlgF,MAAA/O,KAAAgP,YAAA,GAAAhP,KA03KlB2vF,WA13KkB,eAAAC,EAAArwF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA03KL,SAAA6iF,EAAOliF,EAAM7H,GAAb,IAAAgqF,EAAAC,EAAAC,EAAA/qD,EAAAtV,EAAAsgE,EAAAC,EAAA5iD,EAAA6iD,EAAA9iD,EAAA+iD,EAAAphF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAijF,GAAA,cAAAA,EAAA/iF,KAAA+iF,EAAA9iF,MAAA,UAAyBuiF,EAAzBM,EAAA9uF,OAAA,QAAAgrB,IAAA8jE,EAAA,GAAAA,EAAA,GAA0C,KAAKL,EAA/CK,EAAA9uF,OAAA,QAAAgrB,IAAA8jE,EAAA,GAAAA,EAAA,GAAkE,MACvEJ,EAAkBhvF,EAAK4Q,gBAAgB,CAAC,YAAY,UACrCiZ,QAFV,CAAAwlE,EAAA9iF,KAAA,eAAA8iF,EAAA93E,OAAA,UAGF,GAHE,UAML0sB,EANK,cAAAj7B,OAMyBlE,EAAYy6B,KAAK5yB,MAN1C,KAAA3D,OAMmD8lF,EANnD,KAAA9lF,OAMuE+lF,KAC5EpgE,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAR/B,CAAAyhF,EAAA9iF,KAAA,eAAA8iF,EAAA93E,OAAA,SASFvX,EAAK4M,MAAM+hB,IATT,cAYPsgE,EAAUjvF,EAAK4M,MAAM,GAZdyiF,EAAA9iF,KAAA,GAaoBvM,EAAK2uE,oBAAoB7pE,EAAYgqF,GAbzD,aAaLI,EAbKG,EAAA9/E,MAAA,CAAA8/E,EAAA9iF,KAAA,YAiBH+/B,EAAiBtsC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,QAGzDm+E,EApBI,CAAAM,EAAA9iF,KAAA,gBAAA8iF,EAAA/iF,KAAA,GAAA+iF,EAAA9iF,KAAA,GAsBsBvM,EAAK4sC,yBAAyBN,EAAe0iD,GAtBnE,QAsBLD,EAtBKM,EAAA9/E,KAAA8/E,EAAA9iF,KAAA,iBAAA8iF,EAAA/iF,KAAA,GAAA+iF,EAAA7jE,GAAA6jE,EAAA,kBA0BFN,IAAsBA,EAAmBnhF,UAC5CmhF,EAAqB/uF,EAAK4M,MAAM,IA3B3B,eA+BHuiF,EAAYnvF,EAAK4M,MAAMmiF,GAAoBzmF,MAAM4mF,GA/B9CG,EAAA9iF,KAAA,GAiCqBvM,EAAK6E,mBAAmBC,GAAY,GAAM,GAjC/D,SAiCHunC,EAjCGgjD,EAAA9/E,QAoCP0/E,EAAUE,EAAUl2E,IAAIozB,EAAgBm1C,0BAA0Bl5E,MAAM,KACnEtI,EAAK4M,MAAMqiF,GAASrhF,SACvB5N,EAAKktC,8BAA8BjJ,EAAcgrD,IAtC5C,eAAAI,EAAA93E,OAAA,SA2CJ03E,GA3CI,yBAAAI,EAAAxhF,SAAAghF,EAAA7vF,KAAA,cA13KK,gBAAAswF,EAAAC,GAAA,OAAAX,EAAA7gF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAu6KlBwwF,aAv6KkB,eAAAC,EAAAlxF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAu6KH,SAAA0jF,EAAOC,GAAP,IAAAC,EAAA,OAAApmE,EAAApqB,EAAAgN,KAAA,SAAAyjF,GAAA,cAAAA,EAAAvjF,KAAAujF,EAAAtjF,MAAA,cAAAsjF,EAAAtjF,KAAA,EACSvM,EAAK27C,0BAA0B,cAAc,aAAa,CAACg0C,IADpE,YACTC,EADSC,EAAAtgF,MAAA,CAAAsgF,EAAAtjF,KAAA,eAAAsjF,EAAAt4E,OAAA,SAGJvX,EAAK4M,MAAMgjF,IAHP,cAAAC,EAAAt4E,OAAA,SAKN,MALM,wBAAAs4E,EAAAhiF,SAAA6hF,EAAA1wF,SAv6KG,gBAAA8wF,GAAA,OAAAL,EAAA1hF,MAAA/O,KAAAgP,YAAA,GAAAhP,KA86KlB2vE,oBA96KkB,eAAAohB,EAAAxxF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA86KI,SAAAgkF,EAAOlrF,GAAP,IAAAgqF,EAAAxC,EAAAroD,EAAAtV,EAAAshE,EAAA5jD,EAAA6jD,EAAAC,EAAAC,EAAAR,EAAAS,EAAAljD,EAAAmjD,EAAApB,EAAAqB,EAAAviF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAokF,GAAA,cAAAA,EAAAlkF,KAAAkkF,EAAAjkF,MAAA,UAAmBuiF,EAAnByB,EAAAjwF,OAAA,QAAAgrB,IAAAilE,EAAA,GAAAA,EAAA,GAAoC,KAAKjE,IAAzCiE,EAAAjwF,OAAA,QAAAgrB,IAAAilE,EAAA,KAAAA,EAAA,GAEdtsD,EAFc,uBAAAj7B,OAEyBlE,EAAYy6B,KAAK5yB,MAF1C,KAAA3D,OAEmD8lF,EAFnD,KAAA9lF,OAEuEsjF,KACrF39D,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJtB,CAAA4iF,EAAAjkF,KAAA,eAAAikF,EAAAj5E,OAAA,SAKXvX,EAAK4M,MAAM+hB,IALA,YAQdshE,EAAanrF,EAAY+C,UAAU2mB,KAAM,SAAA/vB,GAAC,MAAgB,aAAXA,EAAEiB,QARnC,CAAA8wF,EAAAjkF,KAAA,gBAAAikF,EAAAjkF,KAAA,GAYYvM,EAAK6E,mBAAmBC,GAAY,GAAM,GAZtD,WAYZunC,EAZYmkD,EAAAjhF,OAaZ2gF,EAAyB7jD,EAAgBvoC,yBAAyBmsF,EAAW/nF,QAAQC,kBAG7D+nF,EAAuB5wD,IAAI,MAhBvC,CAAAkxD,EAAAjkF,KAAA,gBAAAikF,EAAAjkF,KAAA,GAsBNoK,QAAQqD,IAAI,CACpBha,EAAKwvF,aAAaS,EAAW/nF,SAC7BlI,EAAK2pE,oBAAoBsmB,EAAWtjF,SAxBtB,WAAAwjF,EAAAK,EAAAjhF,KAAA6gF,EAAA7xF,OAAAouC,EAAA,EAAApuC,CAAA4xF,EAAA,GAoBdP,EApBcQ,EAAA,GAqBdC,EArBcD,EAAA,IA2BZR,IAAaS,EA3BD,CAAAG,EAAAjkF,KAAA,YA8BTuiF,EA9BS,CAAA0B,EAAAjkF,KAAA,gBAAAikF,EAAAjkF,KAAA,GA+BavM,EAAKw9B,mBAAmByyD,EAAWtjF,MAAM7H,EAAYy6B,KAAKr3B,SA/BvE,QA+BZ4mF,EA/BY0B,EAAAjhF,KAAA,YAkCVu/E,EAlCU,CAAA0B,EAAAjkF,KAAA,YAqCN4gC,EAAgBntC,EAAK4Q,gBAAgB,CAAC,UAAU,kBAGhD0/E,EAAoBtwF,EAAK4M,MAAMkiF,GAAkB71E,IAAIjZ,EAAK4M,MAAMyjF,IAClEnB,EAAmBlvF,EAAK4M,MAAMgjF,GAAWtnF,MAAMgoF,GAE/ChE,IACF4C,EAAmBA,EAAiBj2E,IAAI,MAAM3Q,MAAMtI,EAAK4M,MAAMugC,KAG5DntC,EAAK4M,MAAMsiF,GAAkBthF,QA/CtB,CAAA4iF,EAAAjkF,KAAA,gBAAAikF,EAAAj5E,OAAA,SAgDHvX,EAAKktC,8BAA8BjJ,EAAcirD,IAhD9C,eAAAsB,EAAAj5E,OAAA,SAuDb,MAvDa,yBAAAi5E,EAAA3iF,SAAAmiF,EAAAhxF,SA96KJ,gBAAAyxF,GAAA,OAAAV,EAAAhiF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAu+KlBsvE,wBAv+KkB/vE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAu+KQ,SAAA0kF,IAAA,IAAAllF,EAAAF,EAAA8f,EAAAulE,EAAA3iF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAwkF,GAAA,cAAAA,EAAAtkF,KAAAskF,EAAArkF,MAAA,UAAOf,EAAPmlF,EAAArwF,OAAA,QAAAgrB,IAAAqlE,EAAA,GAAAA,EAAA,GAAe,KAAKrlF,EAApBqlF,EAAArwF,OAAA,QAAAgrB,IAAAqlE,EAAA,GAAAA,EAAA,GAAoC,KACvDnlF,IACHA,EAAUxL,EAAKf,MAAMuM,UAElBF,GAAmBtL,EAAKf,MAAMiQ,mBACjC5D,EAAkBtL,EAAKf,MAAM2uC,oBAAoB5tC,EAAKf,MAAMiQ,mBAGzD1D,GAAYF,EARO,CAAAslF,EAAArkF,KAAA,eAAAqkF,EAAAr5E,OAAA,UASf,GATe,cAYpB6T,EAASprB,EAAK4M,MAAM,GAZAgkF,EAAArkF,KAAA,EAalBvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAAulF,EAAAtyF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAA8kF,EAAOnkF,GAAP,IAAA7H,EAAAisF,EAAAC,EAAAjjD,EAAAmhD,EAAA,OAAA1lE,EAAApqB,EAAAgN,KAAA,SAAA6kF,GAAA,cAAAA,EAAA3kF,KAAA2kF,EAAA1kF,MAAA,UAC7CzH,EAAcwG,EAAgBqB,IACjB7H,EAAY+C,UAAU2mB,KAAM,SAAA/vB,GAAC,MAAgB,aAAXA,EAAEiB,OAFJ,CAAAuxF,EAAA1kF,KAAA,gBAAA0kF,EAAA1kF,KAAA,EAOvCoK,QAAQqD,IAAI,CACpBha,EAAKmuC,iBAAiB3iC,EAAQ1G,GAAY,GAC1C9E,EAAK2uE,oBAAoB7pE,EAAY,MAAK,KATK,OAAAisF,EAAAE,EAAA1hF,KAAAyhF,EAAAzyF,OAAAouC,EAAA,EAAApuC,CAAAwyF,EAAA,GAK/ChjD,EAL+CijD,EAAA,IAM/C9B,EAN+C8B,EAAA,KAYzBjjD,IACtB3iB,EAASA,EAAO9d,KAAK4hF,EAAiB5mF,MAAMylC,KAbG,yBAAAkjD,EAAApjF,SAAAijF,EAAA9xF,SAA/C,gBAAAkyF,GAAA,OAAAL,EAAA9iF,MAAA/O,KAAAgP,YAAA,IAbkB,cAAA4iF,EAAAr5E,OAAA,SA+BjB6T,GA/BiB,yBAAAwlE,EAAA/iF,SAAA6iF,EAAA1xF,SAv+KRA,KAwgLlB8vE,cAxgLkBvwE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAwgLF,SAAAmlF,IAAA,IAAA7lF,EAAA8f,EAAAxnB,EAAAwtF,EAAApjF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAilF,GAAA,cAAAA,EAAA/kF,KAAA+kF,EAAA9kF,MAAA,eAAOjB,EAAP8lF,EAAA9wF,OAAA,QAAAgrB,IAAA8lE,EAAA,GAAAA,EAAA,GAAuB,OACbpxF,EAAKf,MAAMiQ,mBACjC5D,EAAkBtL,EAAKf,MAAM2uC,oBAAoB5tC,EAAKf,MAAMiQ,mBAE1Dkc,EAASprB,EAAK4M,MAAM,GACpBhJ,EAAkB5D,EAAK4M,MAAM,GALnBykF,EAAA9kF,KAAA,EAMRvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAAgmF,EAAA/yF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAAulF,EAAO5kF,GAAP,IAAA7H,EAAA0sF,EAAAC,EAAAC,EAAArlD,EAAA,OAAA7iB,EAAApqB,EAAAgN,KAAA,SAAAulF,GAAA,cAAAA,EAAArlF,KAAAqlF,EAAAplF,MAAA,cAC7CzH,EAAcwG,EAAgBqB,GADeglF,EAAAplF,KAAA,EAEXoK,QAAQqD,IAAI,CAClDha,EAAK2uF,WAAWhiF,EAAM7H,GACtB9E,EAAK6E,mBAAmBC,GAAY,GAAM,KAJO,OAAA0sF,EAAAG,EAAApiF,KAAAkiF,EAAAlzF,OAAAouC,EAAA,EAAApuC,CAAAizF,EAAA,GAE5CE,EAF4CD,EAAA,GAEpCplD,EAFoColD,EAAA,GAO/CC,GAAWrlD,IACbjhB,EAASA,EAAO9d,KAAKokF,EAAQppF,MAAM+jC,EAAgBzoC,kBACnDA,EAAkBA,EAAgB0J,KAAK++B,EAAgBzoC,kBATN,wBAAA+tF,EAAA9jF,SAAA0jF,EAAAvyF,SAA/C,gBAAA4yF,GAAA,OAAAN,EAAAvjF,MAAA/O,KAAAgP,YAAA,IANQ,cAoBdod,EAASA,EAAOnS,IAAIrV,GApBNytF,EAAA95E,OAAA,SAsBP6T,GAtBO,wBAAAimE,EAAAxjF,SAAAsjF,EAAAnyF,SAxgLEA,KAgiLlB6yF,aAhiLkBtzF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAgiLH,SAAA8lF,IAAA,IAAAC,EAAAnkD,EAAA,OAAApkB,EAAApqB,EAAAgN,KAAA,SAAA4lF,GAAA,cAAAA,EAAA1lF,KAAA0lF,EAAAzlF,MAAA,cAGbikC,MAAMyhD,UAAUC,IAAM,WACpB,OAAOlzF,KAAKw6C,OAAO,SAAS24C,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG3D5hD,MAAMyhD,UAAU7gF,IAAM,WACpB,OAAOpE,KAAKoE,IAAIrD,MAAM,KAAM/O,OAG9BwxC,MAAMyhD,UAAUI,IAAM,WACpB,OAAOrzF,KAAKkzF,MAAMlzF,KAAKsB,QAGnByxF,EAAM,GACNnkD,EAAsB5tC,EAAKf,MAAM2uC,oBAhB1BokD,EAAAzlF,KAAA,EAiBPvM,EAAK4L,aAAarN,OAAO8B,KAAKutC,GAA9B,eAAA0kD,EAAA/zF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAoD,SAAAumF,EAAOppD,GAAP,IAAA79B,EAAA2D,EAAA,OAAAua,EAAApqB,EAAAgN,KAAA,SAAAomF,GAAA,cAAAA,EAAAlmF,KAAAkmF,EAAAjmF,MAAA,cAClDjB,EAAkBsiC,EAAoBzE,GACtCl6B,EAAsB,SAAbk6B,EAFyCqpD,EAAAjmF,KAAA,EAGlDvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAAmnF,EAAAl0F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAgD,SAAA0mF,EAAO/lF,GAAP,IAAA7H,EAAAsvD,EAAAu+B,EAAA9qF,EAAA0e,EAAAqsE,EAAAC,EAAAC,EAAA,OAAAtpE,EAAApqB,EAAAgN,KAAA,SAAA2mF,GAAA,cAAAA,EAAAzmF,KAAAymF,EAAAxmF,MAAA,cAC9CzH,EAAcwG,EAAgBqB,GADgBomF,EAAAxmF,KAAA,EAEhCvM,EAAKsP,gBAAgBxK,EAAYoD,QAAQ+G,EAAO,KAAK,MAAK,EAAM,KAAK,OAFrC,OAE9CmlD,EAF8C2+B,EAAAxjF,KAG9CojF,EAAS,GACX9qF,EAAY,KACV0e,EAAO,GACPqsE,EAAS,GACTC,EAAW,GAEXC,EAAU1+B,EAAMA,EAAM9zD,OAAO,GAEnC8zD,EAAM7zD,QAAS,SAAA+iD,GACRz7C,IACH8qF,EAAOnqF,KAAK,SACZmqF,EAAOnqF,KAAK,QAGZX,EAAY,GACZirF,EAAQE,cAAczyF,QAAS,SAAA0yF,GAC7B,IAAMrsD,EAAgB9hC,EAAY+C,UAAU2mB,KAAM,SAAA0kE,GAAE,OAAMA,EAAGhrF,QAAQC,gBAAkB8qF,EAAGhrF,aAAaE,gBACnGy+B,GACF/+B,EAAUW,KAAKo+B,KAKnB+rD,EAAOnqF,KAAK,YACZmqF,EAAOnqF,KAAK,cAEZoqF,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnBhrF,EAAUtH,QAAS,SAAA9B,GACjBk0F,EAAOnqF,KAAK,OAAO/J,EAAEiB,MACrBizF,EAAOnqF,KAAK,SAAS/J,EAAEiB,MAEvBkzF,EAAOn0F,EAAEiB,MAAQ,GACjBmzF,EAASp0F,EAAEiB,MAAQ,KAGrB6mB,EAAK/d,KAAKmqF,EAAO/pF,KAAK,OAGxB,IAAM6I,EAAOm/B,IAAmB,IAAZ0S,EAAEtzC,WAAgBmB,OAAO,cACvCgiF,EAAOnzF,EAAK4M,MAAM02C,EAAExb,UAAU7uB,IAAI,MAAM1Q,QAAQ,GAChD49B,EAAQ99B,WAAWi7C,EAAE8vC,WAErB5sE,EAAM,GACZA,EAAIhe,KAAJ,GAAAQ,OAAY2D,EAAZ,KAAA3D,OAAqBmgC,IACrB3iB,EAAIhe,KAAKiJ,GACT+U,EAAIhe,KAAK2qF,GACT3sE,EAAIhe,KAAK29B,GAEL10B,GAAM,eACRmhF,EAAM,KAASpqF,KAAKH,WAAW8qF,IAC/BN,EAAQ,KAASrqF,KAAKH,WAAW89B,KAGnCt+B,EAAUtH,QAAS,SAAA8yF,GACjB,IAAMC,EAAQhwC,EAAE0vC,cAAcxkE,KAAM,SAAA/vB,GAAC,OAAKA,EAAEwJ,aAAaE,gBAAkBkrF,EAAMnrF,QAAQC,gBACrForF,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAM,CAGR,GAFAE,EAAUxzF,EAAK4M,MAAM0mF,EAAMG,WAAW7lF,QAAwC,UAA9BvF,WAAWirF,EAAMG,WACjEF,EAASvzF,EAAK4M,MAAM0mF,EAAMH,MAAMvlF,QAA6C,UAAnC5N,EAAK4M,MAAM0mF,EAAMH,MAAMl6E,IAAI,MAClB,qBAAxCq6E,EAAK,GAAAtqF,OAAIqqF,EAAM3zF,KAAV,kBAA+C,CAC7D,IAAMg0F,EAAiB1zF,EAAK4M,MAAM0mF,EAAK,GAAAtqF,OAAIqqF,EAAM3zF,KAAV,mBAAgCuZ,IAAI,MACtEy6E,EAAe9lF,UAClB2lF,EAAQA,EAAMjmF,KAAKomF,IAInBjiF,GAAM,eACH7D,MAAMvF,WAAWkrF,KACpBX,EAAOS,EAAM3zF,MAAM8I,KAAKH,WAAWkrF,IAEhC3lF,MAAMvF,WAAWmrF,KACpBX,EAASQ,EAAM3zF,MAAM8I,KAAKH,WAAWmrF,KAK3ChtE,EAAIhe,KAAK+qF,GACT/sE,EAAIhe,KAAKgrF,KAGXjtE,EAAK/d,KAAKge,EAAI5d,KAAK,QAGrBrK,OAAO8B,KAAKuyF,GAAQryF,QAAS,SAAA9B,GAC3B,IAAMk1F,EAAUf,EAAOn0F,GAAGyzF,MAAMU,EAAOn0F,GAAG6B,OAC1CN,EAAK0Y,UAAL,GAAA1P,OAAkB2D,EAAlB,KAAA3D,OAA2BmgC,EAA3B,KAAAngC,OAAuCvK,EAAvC,iBAAAuK,OAAwD2qF,MAG1Dp1F,OAAO8B,KAAKwyF,GAAUtyF,QAAS,SAAA9B,GAC7B,IAAMm1F,EAAWf,EAASp0F,GAAGyzF,MAAMW,EAASp0F,GAAG6B,OAC/CN,EAAK0Y,UAAL,GAAA1P,OAAkB2D,EAAlB,KAAA3D,OAA2BmgC,EAA3B,KAAAngC,OAAuCvK,EAAvC,kBAAAuK,OAAyD4qF,MAO3D7B,EAAIvpF,KAAK+d,EAAK3d,KAAK,OAvGiC,yBAAAmqF,EAAAllF,SAAA6kF,EAAA1zF,SAAhD,gBAAA60F,GAAA,OAAApB,EAAA1kF,MAAA/O,KAAAgP,YAAA,IAHkD,wBAAAwkF,EAAA3kF,SAAA0kF,EAAAvzF,SAApD,gBAAA80F,GAAA,OAAAxB,EAAAvkF,MAAA/O,KAAAgP,YAAA,IAjBO,OA+HbhO,EAAK0Y,UAAUq5E,EAAInpF,KAAK,OA/HX,wBAAAopF,EAAAnkF,SAAAikF,EAAA9yF,SAhiLGA,KAiqLlBovE,gBAjqLkB7vE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAiqLA,SAAA+nF,IAAA,IAAA/oD,EAAA1/B,EAAA0oF,EAAA5oE,EAAA6oE,EAAAjmF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA8nF,GAAA,cAAAA,EAAA5nF,KAAA4nF,EAAA3nF,MAAA,cAAOy+B,EAAPipD,EAAA3zF,OAAA,QAAAgrB,IAAA2oE,EAAA,GAAAA,EAAA,GAAgB,KAAK3oF,EAArB2oF,EAAA3zF,OAAA,QAAAgrB,IAAA2oE,EAAA,GAAAA,EAAA,GAAqC,KAAKD,EAA1CC,EAAA3zF,OAAA,QAAAgrB,IAAA2oE,EAAA,GAAAA,EAAA,GAAuD,KACnE7oE,EAASprB,EAAK4M,MAAM,GAEnBtB,IACHA,EAAkBtL,EAAKf,MAAM2uC,oBAAoB5tC,EAAKf,MAAMiQ,mBAJ9CglF,EAAA3nF,KAAA,EAOVvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAA6oF,EAAA51F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAAooF,EAAOznF,GAAP,IAAA7H,EAAAmG,EAAAopF,EAAA,OAAA7qE,EAAApqB,EAAAgN,KAAA,SAAAkoF,GAAA,cAAAA,EAAAhoF,KAAAgoF,EAAA/nF,MAAA,cAC7CzH,EAAcwG,EAAgBqB,GAC9B1B,EAAgB+/B,EAAW,CAACA,GAAY,KAFKspD,EAAA/nF,KAAA,EAGpBvM,EAAKoiF,qBAAqBt9E,EAAYy6B,KAAKr3B,QAAQ8rF,EAAa/oF,GAH5C,QAG7CopF,EAH6CC,EAAA/kF,OAI3B8kF,EAAiBhS,QACvCj3D,EAASA,EAAO9d,KAAK+mF,EAAiBhS,QALW,wBAAAiS,EAAAzmF,SAAAumF,EAAAp1F,SAA/C,gBAAAu1F,GAAA,OAAAJ,EAAApmF,MAAA/O,KAAAgP,YAAA,IAPU,cAAAkmF,EAAA38E,OAAA,SAeT6T,GAfS,wBAAA8oE,EAAArmF,SAAAkmF,EAAA/0F,SAjqLAA,KAkrLlBwvE,gBAAkB,WAIhB,OAHKxuE,EAAKsvC,eACRtvC,EAAKsvC,aAAe,IAAIhE,EAAatrC,EAAKf,QAErCe,EAAKsvC,cAtrLItwC,KAwrLlBymC,kBAAoB,SAAC3gC,GACnB,IAAMsmB,EAAS,GACT6W,EAAYjiC,EAAK4Q,gBAAgB,CAAC,cAexC,OAdArS,OAAO8B,KAAK4hC,GAAW1hC,QAAS,SAAAyqC,GAC9B,IAAMne,EAAiBoV,EAAU+I,GAC5Bne,EAAehD,UAAWgD,EAAeqhB,eAAe5mB,SAASxiB,EAAYy6B,KAAK5yB,SAGvD,SAA5BkgB,EAAetB,SACjBH,EAAO4f,GAAYne,EAEG/nB,EAAY+C,UAAU2mB,KAAM,SAAA/vB,GAAC,OAAKA,EAAEorB,SAAWprB,EAAEiB,KAAKyI,gBAAkB0kB,EAAetB,SAASpjB,kBAEpHijB,EAAO4f,GAAYne,MAIlBzB,GAzsLSpsB,KA2sLlBqvC,qBAAuB,SAACmmD,GAAuC,IAAjC7gC,EAAiC3lD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAvB,MAAMymF,EAAiBzmF,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAZ,QAC3Cm/B,EAAgBntC,EAAK4M,MAAM5M,EAAK4Q,gBAAgB,CAAC,UAAU,mBAC3Ds8E,EAAiBltF,EAAK4M,MAAM5M,EAAK4Q,gBAAgB,CAAC,UAAU,oBAC5D8jF,EAAc,CAClBj/B,IAAM,CACJk/B,MAAQxnD,EAAcl0B,IAAI,YAC1B27E,OAAS1H,EAAej0E,IAAI,aAE9By8C,KAAO,CACLi/B,MAAQxnD,EAAcl0B,IAAI,SAC1B27E,OAAS1H,EAAej0E,IAAI,UAE9B47E,MAAQ,CACNF,MAAQxnD,EAAcl0B,IAAI,IAC1B27E,OAAS1H,EAAej0E,IAAI,KAE9B67E,KAAO,CACLH,MAAQxnD,EAAcl0B,IAAI,GAC1B27E,OAAS1H,EAAej0E,IAAI,KAIhC,OADAu7E,EAAQx0F,EAAK4M,MAAM4nF,MACLA,EAAM5mF,QACX4mF,EAAMlsF,MAAMosF,EAAY/gC,GAAW8gC,IAErC,MApuLSz1F,KAsuLlB+1F,kCAtuLkB,eAAAC,EAAAz2F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAsuLkB,SAAAipF,EAAOzpF,GAAP,IAAA1G,EAAAmG,EAAAiqF,EAAAjzD,EAAAkzD,EAAAnnF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAgpF,GAAA,cAAAA,EAAA9oF,KAAA8oF,EAAA7oF,MAAA,cAAezH,EAAfqwF,EAAA70F,OAAA,QAAAgrB,IAAA6pE,EAAA,GAAAA,EAAA,GAA2B,KAAKlqF,EAAhCkqF,EAAA70F,OAAA,QAAAgrB,IAAA6pE,EAAA,GAAAA,EAAA,GAA8C,KAC1ED,EAA4B,GAC5BjzD,EAAYjiC,EAAK4Q,gBAAgB,CAAC,cAFNwkF,EAAA7oF,KAAA,EAI5BvM,EAAK4L,aAAarN,OAAO8B,KAAK4hC,GAA9B,eAAAozD,EAAA92F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAyC,SAAAspF,EAAOtqD,GAAP,IAAAne,EAAAvhB,EAAA8f,EAAAkkB,EAAA,OAAA9lB,EAAApqB,EAAAgN,KAAA,SAAAmpF,GAAA,cAAAA,EAAAjpF,KAAAipF,EAAAhpF,MAAA,WACzCtB,GAAkBA,EAAcqc,SAAS0jB,GADA,CAAAuqD,EAAAhpF,KAAA,eAAAgpF,EAAAh+E,OAAA,qBAKvCsV,EAAiBoV,EAAU+I,IAEbnhB,QAPyB,CAAA0rE,EAAAhpF,KAAA,eAAAgpF,EAAAh+E,OAAA,kBAWvCjM,EAAkB,IACRxG,EAAY6H,OAAS7H,EAEjCsmB,EAAS,KAdgCmqE,EAAA/pE,GAerCwf,EAfqCuqD,EAAAhpF,KAgBtC,SAhBsCgpF,EAAA/pE,GAAA,GAmBtC,SAnBsC+pE,EAAA/pE,GAAA,2BAAA+pE,EAAAhpF,KAAA,GAiB1BvM,EAAKsuE,wBAAwB9iE,EAAQF,GAjBX,eAiBzC8f,EAjByCmqE,EAAAhmF,KAAAgmF,EAAAh+E,OAAA,2BAoBnC+3B,EAAetvC,EAAKwuE,kBApBe+mB,EAAAhpF,KAAA,GAqB1B+iC,EAAahC,oBAAoB9hC,EAAQF,GArBf,eAqBzC8f,EArByCmqE,EAAAhmF,KAAAgmF,EAAAh+E,OAAA,2BAAAg+E,EAAAh+E,OAAA,oBA2BzC6T,IACFA,EAASA,EAAOnS,IAAI,MAChB4T,EAAeM,wBACjB/B,EAASprB,EAAKquC,qBAAqBjjB,EAAOyB,EAAeM,sBAAsBN,EAAe4hD,mBAEhGymB,EAA0BlqD,GAAY5f,GAhCK,yBAAAmqE,EAAA1nF,SAAAynF,EAAAt2F,SAAzC,gBAAAw2F,GAAA,OAAAH,EAAAtnF,MAAA/O,KAAAgP,YAAA,IAJ4B,cAAAonF,EAAA79E,OAAA,SAwC3B29E,GAxC2B,wBAAAE,EAAAvnF,SAAAonF,EAAAj2F,SAtuLlB,gBAAAy2F,GAAA,OAAAT,EAAAjnF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAgxLlBkuB,8BAhxLkB,eAAAwoE,EAAAn3F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAgxLc,SAAA2pF,EAAO7wF,GAAP,IAAA8wF,EAAAC,EAAAC,EAAA9nF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA2pF,GAAA,cAAAA,EAAAzpF,KAAAypF,EAAAxpF,MAAA,cAAAupF,EAAAx1F,OAAA,QAAAgrB,IAAAwqE,EAAA,GAAAA,EAAA,GAAiC,KACzDF,EAAwB,GACxBC,EAAiB71F,EAAKylC,kBAAkB3gC,GAFhBixF,EAAAxpF,KAAA,EAIxBvM,EAAK4L,aAAarN,OAAO8B,KAAKw1F,GAA9B,eAAAG,EAAAz3F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAAiqF,EAAOjrD,GAAP,IAAAkrD,EAAArpE,EAAAyiB,EAAA,OAAA9lB,EAAApqB,EAAAgN,KAAA,SAAA+pF,GAAA,cAAAA,EAAA7pF,KAAA6pF,EAAA5pF,MAAA,OAC/C2pF,EAAW,KACTrpE,EAAiBgpE,EAAe7qD,GAFamrD,EAAA3qE,GAI3Cwf,EAJ2CmrD,EAAA5pF,KAK5C,SAL4C4pF,EAAA3qE,GAAA,EAQ5C,YAR4C2qE,EAAA3qE,GAAA,EAW5C,SAX4C2qE,EAAA3qE,GAAA,0BAAA2qE,EAAA5pF,KAAA,EAM9BvM,EAAK2uE,oBAAoB7pE,EAAY,MAAK,GANZ,cAM/CoxF,EAN+CC,EAAA5mF,KAAA4mF,EAAA5+E,OAAA,0BAAA4+E,EAAA5pF,KAAA,GAS9BvM,EAAK4uE,uBAAuB9pE,EAAY,MAAK,GATf,eAS/CoxF,EAT+CC,EAAA5mF,KAAA4mF,EAAA5+E,OAAA,2BAYzC+3B,EAAetvC,EAAKwuE,kBAZqB2nB,EAAA5pF,KAAA,GAa9B+iC,EAAaxC,SAAShoC,EAAYy6B,KAAKr3B,SAbT,eAa/CguF,EAb+CC,EAAA5mF,KAAA4mF,EAAA5+E,OAAA,2BAAA4+E,EAAA5+E,OAAA,oBAmB/C2+E,IACFA,EAAWA,EAASj9E,IAAI,MACpB4T,EAAeM,uBAAyBN,EAAe4hD,mBACzDynB,EAAWl2F,EAAKquC,qBAAqB6nD,EAASrpE,EAAeM,sBAAsBN,EAAe4hD,mBAEpGmnB,EAAsB5qD,GAAYkrD,GAxBe,yBAAAC,EAAAtoF,SAAAooF,EAAAj3F,SAA/C,gBAAAo3F,GAAA,OAAAJ,EAAAjoF,MAAA/O,KAAAgP,YAAA,IAJwB,cAAA+nF,EAAAx+E,OAAA,SAgCvBq+E,GAhCuB,wBAAAG,EAAAloF,SAAA8nF,EAAA32F,SAhxLd,gBAAAq3F,GAAA,OAAAX,EAAA3nF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAkzLlBkoC,iBAlzLkB,eAAAovD,EAAA/3F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkzLC,SAAAuqF,EAAO5pF,EAAM7H,GAAb,IAAAmG,EAAAg3B,EAAAyB,EAAA8yD,EAAAxoF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAqqF,GAAA,cAAAA,EAAAnqF,KAAAmqF,EAAAlqF,MAAA,cAAyBtB,EAAzBurF,EAAAl2F,OAAA,QAAAgrB,IAAAkrE,EAAA,GAAAA,EAAA,GAAuC,KAClDv0D,EAAYjiC,EAAK4Q,gBAAgB,CAAC,cAClC8yB,EAAgB,GAFL+yD,EAAAlqF,KAAA,EAIXvM,EAAK4L,aAAarN,OAAO8B,KAAK4hC,GAA9B,eAAAy0D,EAAAn4F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAyC,SAAA2qF,EAAO3rD,GAAP,IAAAne,EAAAzB,EAAAihB,EAAAuqD,EAAAC,EAAApK,EAAAO,EAAA8J,EAAAC,EAAAC,EAAA9G,EAAA5gD,EAAA,OAAA9lB,EAAApqB,EAAAgN,KAAA,SAAA6qF,GAAA,cAAAA,EAAA3qF,KAAA2qF,EAAA1qF,MAAA,WAEzCtB,GAAkBA,EAAcqc,SAAS0jB,GAFA,CAAAisD,EAAA1qF,KAAA,eAAA0qF,EAAA1/E,OAAA,qBAMvCsV,EAAiBoV,EAAU+I,IAEbnhB,UAA6C,IAAlCgD,EAAeqqE,eARD,CAAAD,EAAA1qF,KAAA,eAAA0qF,EAAA1/E,OAAA,iBAYzC6T,EAAS,KACTihB,EAAkB,KAbuB4qD,EAAAzrE,GAerCwf,EAfqCisD,EAAA1qF,KAgBtC,YAhBsC0qF,EAAAzrE,GAAA,GAsCtC,SAtCsCyrE,EAAAzrE,GAAA,GA4DtC,SA5DsCyrE,EAAAzrE,GAAA,oBAAAyrE,EAAA9vD,GAiBjCta,EAAeqqE,eAjBkBD,EAAA1qF,MAAA0qF,EAAA9vD,GAAA,yBAAA8vD,EAAA1qF,KAAA,GAoBJoK,QAAQqD,IAAI,CAC3Cha,EAAKguF,cAAcrhF,EAAM7H,GACzB9E,EAAK6E,mBAAmBC,GAAY,GAAM,KAtBP,eAAA8xF,EAAAK,EAAA1nF,KAAAsnF,EAAAt4F,OAAAouC,EAAA,EAAApuC,CAAAq4F,EAAA,GAoBpCxrE,EApBoCyrE,EAAA,IAoB7BxqD,EApB6BwqD,EAAA,MA2B7BpK,EAAe3nF,EAAY+C,UAAU2mB,KAAM,SAAA/vB,GAAC,OAAKA,EAAEiB,OAASmtB,EAAetB,aAE3E8gB,EAAgBvoC,yBAAyB2oF,EAAavkF,QAAQC,iBAC1D6kF,EAAqB3gD,EAAgBvoC,yBAAyB2oF,EAAavkF,QAAQC,eACzFijB,EAASA,EAAO9iB,MAAM0kF,IA/BSiK,EAAA1/E,OAAA,2BAAA0/E,EAAA1/E,OAAA,oBAAA0/E,EAAApvC,GAuCjCh7B,EAAeqqE,eAvCkBD,EAAA1qF,MAAA0qF,EAAApvC,GAAA,yBAAAovC,EAAA1qF,KAAA,GA0CJoK,QAAQqD,IAAI,CAC3Cha,EAAK2uF,WAAWhiF,EAAM7H,GACtB9E,EAAK6E,mBAAmBC,GAAY,GAAM,KA5CP,eAAAgyF,EAAAG,EAAA1nF,KAAAwnF,EAAAx4F,OAAAouC,EAAA,EAAApuC,CAAAu4F,EAAA,GA0CpC1rE,EA1CoC2rE,EAAA,IA0C7B1qD,EA1C6B0qD,EAAA,MAiD7BC,EAAelyF,EAAY+C,UAAU2mB,KAAM,SAAA/vB,GAAC,MAAgB,aAAXA,EAAEiB,SAEnD2sC,EAAgBvoC,yBAAyBkzF,EAAa9uF,QAAQC,iBAC1D+nF,EAAyB7jD,EAAgBvoC,yBAAyBkzF,EAAa9uF,QAAQC,eAC7FijB,EAASA,EAAO9iB,MAAM4nF,IArDS+G,EAAA1/E,OAAA,2BAAA0/E,EAAA1/E,OAAA,oBA6DnC+3B,EAAetvC,EAAKwuE,kBA7DeyoB,EAAAvoB,GA8DjC7hD,EAAeqqE,eA9DkBD,EAAA1qF,KA+DlC,QA/DkC0qF,EAAAvoB,GAAA,GAkElC,iBAlEkCuoB,EAAAvoB,GAAA,GAyElC,qBAzEkCuoB,EAAAvoB,GAAA,2BAAAuoB,EAAA1qF,KAAA,GAgEtB+iC,EAAapD,OAAOv/B,EAAM7H,GAhEJ,eAgErCsmB,EAhEqC6rE,EAAA1nF,KAAA0nF,EAAA1/E,OAAA,2BAAA0/E,EAAA1qF,KAAA,GAmEtB+iC,EAAaxC,SAAShoC,EAAYy6B,KAAKr3B,SAnEjB,eAmErCkjB,EAnEqC6rE,EAAA1nF,QAqEnC6b,EAASprB,EAAKqQ,iBAAiB+a,EAAO,IACtCA,EAASprB,EAAKquC,qBAAqBjjB,EAAOyB,EAAeM,sBAAsBN,EAAe4hD,mBAtE3DwoB,EAAA1/E,OAAA,2BAAA0/E,EAAA1qF,KAAA,GA0EtB+iC,EAAahC,oBAAoBxoC,GA1EX,eA0ErCsmB,EA1EqC6rE,EAAA1nF,KAAA0nF,EAAA1/E,OAAA,2BAAA0/E,EAAA1/E,OAAA,mCAAA0/E,EAAA1/E,OAAA,oBAoF9B,OAAX6T,GAAmBprB,EAAK4M,MAAMwe,GAAQ3a,GAAG,KAC3CizB,EAAcsH,GAAY5f,GArFiB,yBAAA6rE,EAAAppF,SAAA8oF,EAAA33F,SAAzC,gBAAAm4F,GAAA,OAAAT,EAAA3oF,MAAA/O,KAAAgP,YAAA,IAJW,cAAAyoF,EAAAl/E,OAAA,SA6FVmsB,GA7FU,wBAAA+yD,EAAA5oF,SAAA0oF,EAAAv3F,SAlzLD,gBAAAo4F,EAAAC,GAAA,OAAAf,EAAAvoF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAi5LlBojF,qBAj5LkB7jF,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAi5LK,SAAAsrF,IAAA,IAAApvF,EAAA8rF,EAAA/oF,EAAAg5B,EAAAtV,EAAAsT,EAAAk/C,EAAAoW,EAAAvpF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAorF,GAAA,cAAAA,EAAAlrF,KAAAkrF,EAAAjrF,MAAA,UAAOrE,EAAPqvF,EAAAj3F,OAAA,QAAAgrB,IAAAisE,EAAA,GAAAA,EAAA,GAAe,KAAKvD,EAApBuD,EAAAj3F,OAAA,QAAAgrB,IAAAisE,EAAA,GAAAA,EAAA,GAAiC,MAAMtsF,EAAvCssF,EAAAj3F,OAAA,QAAAgrB,IAAAisE,EAAA,GAAAA,EAAA,GAAqD,KACrErvF,IACHA,EAAUlI,EAAKf,MAAM6F,YAAYy6B,KAAKr3B,SAGlC+7B,EALe,wBAAAj7B,OAKyBd,EALzB,KAAAc,OAKoCgrF,EALpC,KAAAhrF,OAKoD+B,KAAKC,UAAUC,MAClF0jB,EAAa3uB,EAAK0nC,cAAczD,IANjB,CAAAuzD,EAAAjrF,KAAA,eAAAirF,EAAAjgF,OAAA,SAQZoX,GARY,cAWfsT,EAAYjiC,EAAK4Q,gBAAgB,CAAC,cAClCuwE,EAAoB,GAZLqW,EAAAjrF,KAAA,GAcfvM,EAAK4L,aAAarN,OAAO8B,KAAK4hC,GAA9B,eAAAw1D,EAAAl5F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAyC,SAAA0rF,EAAO/qF,GAAP,IAAAkgB,EAAAwhE,EAAAsJ,EAAAC,EAAAC,EAAAryD,EAAA,OAAAhc,EAAApqB,EAAAgN,KAAA,SAAA0rF,GAAA,cAAAA,EAAAxrF,KAAAwrF,EAAAvrF,MAAA,WAEzCtB,GAAkBA,EAAcqc,SAAS3a,GAFA,CAAAmrF,EAAAvrF,KAAA,eAAAurF,EAAAvgF,OAAA,qBAMvCsV,EAAiBoV,EAAUt1B,IAEbkd,QARyB,CAAAiuE,EAAAvrF,KAAA,eAAAurF,EAAAvgF,OAAA,wBAYvC82E,EAAkB,CACtBnmF,QAAQ2kB,EAAe+3D,iBAAmB/3D,EAAe3kB,SAbd4vF,EAAAvrF,KAAA,EAiBjBvM,EAAKo7E,mBAAmBzuE,EAAMzE,GAjBb,YAiBzCyvF,EAjByCG,EAAAvoF,MAAA,CAAAuoF,EAAAvrF,KAAA,YAqBvCqrF,EAAsB,MACtB5D,EAtBuC,CAAA8D,EAAAvrF,KAAA,gBAuBnCsrF,EAAkB73F,EAAK4Q,gBAAgB,CAAC,QAAQ,SAASojF,IAvBtB8D,EAAAxrF,KAAA,GAAAwrF,EAAAvrF,KAAA,GAyBXvM,EAAK4sC,yBAAyBirD,EAAgBxJ,GAzBnC,QAyBvCuJ,EAzBuCE,EAAAvoF,KAAAuoF,EAAAvrF,KAAA,iBAAAurF,EAAAxrF,KAAA,GAAAwrF,EAAAtsE,GAAAssE,EAAA,UA2BvCF,EAAsB53F,EAAK4M,MAAM,GA3BM,QA+BrC44B,EAAexlC,EAAKqQ,iBAAiBsnF,EAAgB11D,EAAUt1B,GAAOrD,SAASsuF,GAGrFzW,EAAkBx0E,GAAS64B,EAGtB27C,EAAkBkB,QACrBlB,EAAkBkB,MAAQriF,EAAK4M,MAAM,IAIvCu0E,EAAkBkB,MAAQlB,EAAkBkB,MAAM/0E,KAAK6zE,EAAkBx0E,IA1C9B,yBAAAmrF,EAAAjqF,SAAA6pF,EAAA14F,KAAA,cAAzC,gBAAA+4F,GAAA,OAAAN,EAAA1pF,MAAA/O,KAAAgP,YAAA,IAde,eAAAwpF,EAAAjgF,OAAA,SA4DdvX,EAAK4uB,cAAcqV,EAAck9C,IA5DnB,yBAAAqW,EAAA3pF,SAAAypF,EAAAt4F,SAj5LLA,KA+8LlB+qE,2BAA6B,SAAC7hE,GAC5B,IAAKA,EACH,OAAO,EAET,IAAM+5B,EAAYjiC,EAAK4Q,gBAAgB,CAAC,cACxC,OAAOrS,OAAOiO,OAAOy1B,GAAWzT,KAAM,SAAA1pB,GAAW,OAAKA,EAAY+kB,SAAW/kB,EAAYoD,QAAQC,gBAAkBD,EAAQC,iBAp9L3GnJ,KAs9LlBswE,6BAt9LkB/wE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAs9La,SAAAgsF,IAAA,IAAAxsF,EAAAF,EAAA0oF,EAAAiE,EAAAh0D,EAAAtV,EAAAupE,EAAAC,EAAAC,EAAApqF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAisF,GAAA,cAAAA,EAAA/rF,KAAA+rF,EAAA9rF,MAAA,UAAOf,EAAP4sF,EAAA93F,OAAA,QAAAgrB,IAAA8sE,EAAA,GAAAA,EAAA,GAAe,KAAK9sF,EAApB8sF,EAAA93F,OAAA,QAAAgrB,IAAA8sE,EAAA,GAAAA,EAAA,GAAoC,KAAKpE,EAAzCoE,EAAA93F,OAAA,QAAAgrB,IAAA8sE,EAAA,GAAAA,EAAA,GAAsD,KAAKH,IAA3DG,EAAA93F,OAAA,QAAAgrB,IAAA8sE,EAAA,KAAAA,EAAA,GAGvBn0D,EAHuB,6BAAAj7B,OAGsBwC,EAHtB,KAAAxC,OAGiC+B,KAAKC,UAAUzM,OAAO8B,KAAKiL,IAH5D,KAAAtC,OAGiFgrF,EAHjF,KAAAhrF,OAGiGivF,KACxHtpE,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QALb,CAAAyqF,EAAA9rF,KAAA,eAAA8rF,EAAA9gF,OAAA,SAMpBvX,EAAK4M,MAAM+hB,IANS,cAAA0pE,EAAA9rF,KAAA,GASOvM,EAAKs4F,yBAAyB9sF,EAAQF,EAAgB0oF,EAAa,KAAKiE,GAT/E,aASvBC,EATuBG,EAAA9oF,MAAA,CAAA8oF,EAAA9rF,KAAA,gBAWrB4rF,EAAoB55F,OAAOiO,OAAO0rF,GAAuB1+C,OAAQ,SAACC,EAAK8+C,GAE3E,OADA9+C,EAAMA,EAAInsC,KAAKtN,EAAK4M,MAAM2rF,KAEzBv4F,EAAK4M,MAAM,IAdayrF,EAAA9gF,OAAA,SAgBpBvX,EAAKktC,8BAA8BjJ,EAAck0D,IAhB7B,eAAAE,EAAA9gF,OAAA,SAkBtBvX,EAAK4M,MAAM,IAlBW,yBAAAyrF,EAAAxqF,SAAAmqF,EAAAh5F,SAt9LbA,KA0+LlBw5F,oBA1+LkB,eAAAC,EAAAl6F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA0+LI,SAAA0sF,EAAOltF,EAAQ1G,GAAf,IAAAsmB,EAAAutE,EAAA,OAAAnvE,EAAApqB,EAAAgN,KAAA,SAAAwsF,GAAA,cAAAA,EAAAtsF,KAAAssF,EAAArsF,MAAA,cACff,IACHA,EAAUxL,EAAKf,MAAMuM,SAEjB4f,EAAS,GAJKwtE,EAAArsF,KAAA,EAKWvM,EAAK64F,wBAAwB/zF,EAAYy6B,KAAK5yB,MAAMnB,GAL/D,YAKdmtF,EALcC,EAAArpF,MAAA,CAAAqpF,EAAArsF,KAAA,eAAAqsF,EAAArsF,KAAA,EAOZvM,EAAK4L,aAAa+sF,EAAlB,eAAAG,EAAAv6F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAoC,SAAA+sF,EAAOR,EAAezrE,GAAtB,IAAAg9C,EAAAj9C,EAAA,OAAArD,EAAApqB,EAAAgN,KAAA,SAAA4sF,GAAA,cAAAA,EAAA1sF,KAAA0sF,EAAAzsF,MAAA,cAAAysF,EAAAzsF,KAAA,EAEVvM,EAAKi5F,yBAAyBn0F,EAAYy6B,KAAK5yB,MAAMmgB,GAF3C,QAElCg9C,EAFkCkvB,EAAAzpF,QAKhCsd,EAAiB7sB,EAAK+pE,2BAA2BD,MAErD1+C,EAAOyB,EAAelgB,OAASmgB,GAPK,wBAAAksE,EAAAnrF,SAAAkrF,EAAA/5F,SAApC,gBAAAk6F,EAAAC,GAAA,OAAAL,EAAA/qF,MAAA/O,KAAAgP,YAAA,IAPY,cAAA4qF,EAAArhF,OAAA,SAoBb6T,GApBa,wBAAAwtE,EAAA/qF,SAAA6qF,EAAA15F,SA1+LJ,gBAAAo6F,EAAAC,GAAA,OAAAZ,EAAA1qF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAggMlBi6F,yBAhgMkB,eAAAK,EAAA/6F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAggMS,SAAAutF,EAAO5sF,EAAMmgB,GAAb,IAAAmX,EAAAtV,EAAAm7C,EAAA,OAAAtgD,EAAApqB,EAAAgN,KAAA,SAAAotF,GAAA,cAAAA,EAAAltF,KAAAktF,EAAAjtF,MAAA,UACnB03B,EADmB,0BAAAj7B,OACuB2D,EADvB,KAAA3D,OACgC8jB,KACnD6B,EAAa3uB,EAAKitC,8BAA8BhJ,IAF7B,CAAAu1D,EAAAjtF,KAAA,eAAAitF,EAAAjiF,OAAA,SAKhBoX,GALgB,cAAA6qE,EAAAjtF,KAAA,EAQKvM,EAAKy9B,oBAAoB9wB,EAAM,YAAY,CAACmgB,IARjD,cAQnBg9C,EARmB0vB,EAAAjqF,KAAAiqF,EAAAjiF,OAAA,SASlBvX,EAAKktC,8BAA8BjJ,EAAc6lC,EAAgB,OAT/C,wBAAA0vB,EAAA3rF,SAAA0rF,EAAAv6F,SAhgMT,gBAAAy6F,EAAAC,GAAA,OAAAJ,EAAAvrF,MAAA/O,KAAAgP,YAAA,GAAAhP,KA2gMlB65F,wBA3gMkB,eAAAc,EAAAp7F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA2gMQ,SAAA4tF,EAAOjtF,EAAMnB,GAAb,IAAAy4B,EAAAtV,EAAAm7C,EAAA,OAAAtgD,EAAApqB,EAAAgN,KAAA,SAAAytF,GAAA,cAAAA,EAAAvtF,KAAAutF,EAAAttF,MAAA,UAClB03B,EADkB,sBAAAj7B,OACoB2D,EADpB,KAAA3D,OAC6BwC,KAC/CmjB,EAAa3uB,EAAKitC,8BAA8BhJ,IAF9B,CAAA41D,EAAAttF,KAAA,eAAAstF,EAAAtiF,OAAA,SAIfoX,GAJe,cAAAkrE,EAAAttF,KAAA,EAOMvM,EAAKy9B,oBAAoB9wB,EAAM,sBAAsB,CAACnB,IAP5D,cAOlBs+D,EAPkB+vB,EAAAtqF,KAAAsqF,EAAAtiF,OAAA,SAQjBvX,EAAKktC,8BAA8BjJ,EAAc6lC,IARhC,wBAAA+vB,EAAAhsF,SAAA+rF,EAAA56F,SA3gMR,gBAAA86F,EAAAC,GAAA,OAAAJ,EAAA5rF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAqhMlBs5F,yBArhMkB/5F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAqhMS,SAAAguF,IAAA,IAAAxuF,EAAAF,EAAA0oF,EAAAiG,EAAAhC,EAAA7sE,EAAA8uE,EAAAlsF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA+tF,GAAA,cAAAA,EAAA7tF,KAAA6tF,EAAA5tF,MAAA,cAAOf,EAAP0uF,EAAA55F,OAAA,QAAAgrB,IAAA4uE,EAAA,GAAAA,EAAA,GAAe,KAAK5uF,EAApB4uF,EAAA55F,OAAA,QAAAgrB,IAAA4uE,EAAA,GAAAA,EAAA,GAAoC,KAAKlG,EAAzCkG,EAAA55F,OAAA,QAAAgrB,IAAA4uE,EAAA,GAAAA,EAAA,GAAsD,KAAKD,EAA3DC,EAAA55F,OAAA,QAAAgrB,IAAA4uE,EAAA,GAAAA,EAAA,GAAgF,KAAKjC,EAArFiC,EAAA55F,OAAA,QAAAgrB,IAAA4uE,EAAA,IAAAA,EAAA,GACpB1uF,IACHA,EAAUxL,EAAKf,MAAMuM,UAElBF,GAAmBtL,EAAKf,MAAM2uC,qBAAuB5tC,EAAKf,MAAMiQ,mBACnE5D,EAAkBtL,EAAKf,MAAM2uC,oBAAoB5tC,EAAKf,MAAMiQ,mBAGxDkc,EAAS,GARU+uE,EAAA5tF,KAAA,GAUnBvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAA8uF,EAAA77F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAAquF,EAAO1tF,GAAP,IAAAi+B,EAAA+tD,EAAA,OAAAnvE,EAAApqB,EAAAgN,KAAA,SAAAkuF,GAAA,cAAAA,EAAAhuF,KAAAguF,EAAA/tF,MAAA,cAC7Cq+B,EAAkBt/B,EAAgBqB,GAAO4yB,KADI+6D,EAAA/tF,KAAA,EAIpBvM,EAAK64F,wBAAwBjuD,EAAgBj+B,MAAMnB,GAJ/B,YAI7CmtF,EAJ6C2B,EAAA/qF,MAAA,CAAA+qF,EAAA/tF,KAAA,eAAA+tF,EAAA/tF,KAAA,EAS3CvM,EAAK4L,aAAa+sF,EAAlB,eAAA4B,EAAAh8F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAoC,SAAAwuF,EAAOjC,EAAezrE,GAAtB,IAAAg9C,EAAAj9C,EAAA+qE,EAAAC,EAAA,OAAAruE,EAAApqB,EAAAgN,KAAA,SAAAquF,GAAA,cAAAA,EAAAnuF,KAAAmuF,EAAAluF,MAAA,cACxCgsF,EAAiBv4F,EAAK4M,MAAM2rF,GADYkC,EAAAluF,KAAA,EAGVvM,EAAKi5F,yBAAyBruD,EAAgBj+B,MAAMmgB,GAH1C,YAGlCg9C,EAHkC2wB,EAAAlrF,MAAA,CAAAkrF,EAAAluF,KAAA,cAQhCsgB,EAAiBotE,GAA8Cj6F,EAAK+pE,2BAA2BD,KAE7EmuB,IAAoBprE,EAAegC,cAAgBhC,EAAe3kB,SAAW2kB,EAAe3kB,QAAQC,gBAAkB2hE,EAAgB3hE,cAVxH,CAAAsyF,EAAAluF,KAAA,YAahCqrF,EAAsB,MACtB5D,EAdgC,CAAAyG,EAAAluF,KAAA,cAe5BsrF,EAAkB73F,EAAK4Q,gBAAgB,CAAC,QAAQ,SAASojF,KAf7B,CAAAyG,EAAAluF,KAAA,gBAAAkuF,EAAAnuF,KAAA,GAAAmuF,EAAAluF,KAAA,GAkBFvM,EAAK4sC,yBAAyBirD,EAAgBhrE,GAlB5C,QAkB9B+qE,EAlB8B6C,EAAAlrF,KAAAkrF,EAAAluF,KAAA,iBAAAkuF,EAAAnuF,KAAA,GAAAmuF,EAAAjvE,GAAAivE,EAAA,kBAyBpClC,EAAiBv4F,EAAKqQ,iBAAiBkoF,EAAe1rE,EAAevjB,SAASsuF,GAKzExsE,EAAOyB,EAAelgB,SACzBye,EAAOyB,EAAelgB,OAAS3M,EAAK4M,MAAM,IAI5Cwe,EAAOyB,EAAelgB,OAASye,EAAOyB,EAAelgB,OAAOW,KAAKirF,GAnC7B,yBAAAkC,EAAA5sF,SAAA2sF,EAAAx7F,KAAA,cAApC,gBAAA07F,EAAAC,GAAA,OAAAJ,EAAAxsF,MAAA/O,KAAAgP,YAAA,IAT2C,wBAAAssF,EAAAzsF,SAAAwsF,EAAAr7F,SAA/C,gBAAA47F,GAAA,OAAAR,EAAArsF,MAAA/O,KAAAgP,YAAA,IAVmB,eAAAmsF,EAAA5iF,OAAA,SA6DlB6T,GA7DkB,yBAAA+uE,EAAAtsF,SAAAmsF,EAAAh7F,SArhMTA,KAolMlB8mC,aAplMkBvnC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAolMH,SAAA6uF,IAAA,IAAA/1F,EAAA6gC,EAAAm1D,EAAA9sF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA2uF,GAAA,cAAAA,EAAAzuF,KAAAyuF,EAAAxuF,MAAA,eAAOzH,EAAPg2F,EAAAx6F,OAAA,QAAAgrB,IAAAwvE,EAAA,GAAAA,EAAA,GAAmB,OACZ96F,EAAKf,MAAM6F,cAC7BA,EAAc9E,EAAKf,MAAM6F,aAFdi2F,EAAAxuF,KAAA,EAIKvM,EAAK27C,0BAA0B72C,EAAYy6B,KAAK5yB,MAAO,MAAO,GAAI,GAAI,SAAU,MAJrF,YAIPg5B,EAJOo1D,EAAAxrF,MAAA,CAAAwrF,EAAAxuF,KAAA,eAAAwuF,EAAAxjF,OAAA,SAMJvX,EAAK4M,MAAM+4B,GAAK1sB,IAAIjZ,EAAK4M,MAAM,OAN3B,cAAAmuF,EAAAxjF,OAAA,SAQN,MARM,wBAAAwjF,EAAAltF,SAAAgtF,EAAA77F,SAplMGA,KA8lMlBkwE,iBA9lMkB3wE,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA8lMC,SAAAgvF,IAAA,IAAAl2F,EAAA0G,EAAAyvF,EAAAC,EAAAz4D,EAAAt2B,EAAA85B,EAAAk1D,EAAAC,EAAAC,EAAArtF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAkvF,GAAA,cAAAA,EAAAhvF,KAAAgvF,EAAA/uF,MAAA,UAAOzH,EAAPu2F,EAAA/6F,OAAA,QAAAgrB,IAAA+vE,EAAA,GAAAA,EAAA,GAAmB,KAAK7vF,EAAxB6vF,EAAA/6F,OAAA,QAAAgrB,IAAA+vE,EAAA,GAAAA,EAAA,GAAgC,MAC5Cv2F,GAAe9E,EAAKf,MAAM6F,cAC7BA,EAAc9E,EAAKf,MAAM6F,cAEtB0G,GAAWxL,EAAKf,MAAMuM,UACzBA,EAAUxL,EAAKf,MAAMuM,SAGlBA,GAAY1G,EARA,CAAAw2F,EAAA/uF,KAAA,eAAA+uF,EAAA/jF,OAAA,SASR,MATQ,cAAA+jF,EAAA/uF,KAAA,EAgBPoK,QAAQqD,IAAI,CACpBha,EAAK8lC,aAAahhC,GAClB9E,EAAKulC,eAAe,aAAazgC,EAAY6H,MAAM7H,EAAY0G,GAC/DxL,EAAKulC,eAAe,oBAAoBzgC,EAAY6H,MAAM7H,EAAY0G,KAnBvD,UAAAyvF,EAAAK,EAAA/rF,KAAA2rF,EAAA38F,OAAAouC,EAAA,EAAApuC,CAAA08F,EAAA,GAafx4D,EAbey4D,EAAA,GAcf/uF,EAde+uF,EAAA,GAefj1D,EAfei1D,EAAA,KAsBbz4D,GAAiBt2B,GAAc85B,GAtBlB,CAAAq1D,EAAA/uF,KAAA,gBAuBT4uF,EAAOl1D,EAAkB14B,MAAMpB,GAC/BivF,EAAOD,EAAK7yF,MAAMm6B,GAxBT64D,EAAA/jF,OAAA,SA4BR6jF,GA5BQ,eAAAE,EAAA/jF,OAAA,SA+BV,MA/BU,yBAAA+jF,EAAAztF,SAAAmtF,EAAAh8F,SA9lMDA,KA+nMlBqwE,uBA/nMkB,eAAAksB,EAAAh9F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+nMO,SAAAwvF,EAAO3uE,GAAP,IAAArhB,EAAAF,EAAA0oF,EAAAkE,EAAAuD,EAAAztF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAsvF,GAAA,cAAAA,EAAApvF,KAAAovF,EAAAnvF,MAAA,cAAsBf,EAAtBiwF,EAAAn7F,OAAA,QAAAgrB,IAAAmwE,EAAA,GAAAA,EAAA,GAA8B,KAAKnwF,EAAnCmwF,EAAAn7F,OAAA,QAAAgrB,IAAAmwE,EAAA,GAAAA,EAAA,GAAmD,KAAKzH,EAAxDyH,EAAAn7F,OAAA,QAAAgrB,IAAAmwE,EAAA,GAAAA,EAAA,GAAqE,KAArEC,EAAAnvF,KAAA,EACavM,EAAKs4F,yBAAyB9sF,EAAQF,EAAgB0oF,EAAannE,GADhF,cACjBqrE,EADiBwD,EAAAnsF,KAAAmsF,EAAAnkF,OAAA,SAEhB2gF,GAAyBA,EAAsBrrE,EAAelgB,OAASurF,EAAsBrrE,EAAelgB,OAAS3M,EAAK4M,MAAM,IAFhH,wBAAA8uF,EAAA7tF,SAAA2tF,EAAAx8F,SA/nMP,gBAAA28F,GAAA,OAAAJ,EAAAxtF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAmoMlB48F,YAnoMkBr9F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAmoMJ,SAAA6vF,IAAA,IAAAC,EAAA,OAAAtyE,EAAApqB,EAAAgN,KAAA,SAAA2vF,GAAA,cAAAA,EAAAzvF,KAAAyvF,EAAAxvF,MAAA,cAAAwvF,EAAAxvF,KAAA,EACYvM,EAAKg8F,eADjB,cACNF,EADMC,EAAAxsF,KAAAwsF,EAAAxkF,OAAA,SAELhZ,OAAOiO,OAAOsvF,GAAWtiD,OAAQ,SAACyiD,EAASC,GAChD,IAAMC,EAAWn8F,EAAK4M,MAAMsvF,EAAUD,UAItC,OAHIE,IAAaA,EAASvuF,UACxBquF,EAAWA,EAAS3uF,KAAK6uF,IAEpBF,GACPj8F,EAAK4M,MAAM,KARD,wBAAAmvF,EAAAluF,SAAAguF,EAAA78F,SAnoMIA,KA6oMlBg9F,aA7oMkBz9F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA6oMH,SAAAowF,IAAA,IAAAhxE,EAAAkhB,EAAA,OAAA9iB,EAAApqB,EAAAgN,KAAA,SAAAiwF,GAAA,cAAAA,EAAA/vF,KAAA+vF,EAAA9vF,MAAA,cACP6e,EAAS,GACTkhB,EAAiBtsC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,QAFjDyrF,EAAA9vF,KAAA,EAGPvM,EAAK4L,aAAarN,OAAO8B,KAAKL,EAAKf,MAAM2uC,qBAAzC,eAAA0uD,EAAA/9F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8D,SAAAuwF,EAAOpzD,GAAP,IAAAl6B,EAAA3D,EAAA,OAAAke,EAAApqB,EAAAgN,KAAA,SAAAowF,GAAA,cAAAA,EAAAlwF,KAAAkwF,EAAAjwF,MAAA,cAC5D0C,EAAsB,SAAbk6B,EACT79B,EAAkBtL,EAAKf,MAAM2uC,oBAAoBzE,GAFWqzD,EAAAjwF,KAAA,EAG5DvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAAmxF,EAAAl+F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAA0wF,EAAO/vF,GAAP,IAAAwvF,EAAAF,EAAAU,EAAA73F,EAAA83F,EAAAC,EAAAC,EAAApvF,EAAA46D,EAAArmC,EAAAuB,EAAAu5D,EAAAC,EAAAlgE,EAAAmgE,EAAA,OAAAzzE,EAAApqB,EAAAgN,KAAA,SAAA8wF,GAAA,cAAAA,EAAA5wF,KAAA4wF,EAAA3wF,MAAA,cAE/C4vF,EAAWn8F,EAAK4M,MAAM,GACtBqvF,EAAWj8F,EAAK4M,MAAM,GACtB+vF,EAAc38F,EAAK4M,MAAM,GACvB9H,EAAcwG,EAAgBqB,GAC9BiwF,EAAgB93F,EAAYy6B,KAAK5yB,MAEvCye,EAAOwxE,GAAiB,CACtBT,WACAF,WACAU,cACA16D,UAAU,IAZuCi7D,EAAA3wF,KAAA,EAkBzCoK,QAAQqD,IAAI,CACpBha,EAAK62C,kBAAkB/xC,GACvB9E,EAAK2vE,mBAAmB7qE,KApByB,cAAA+3F,EAAAK,EAAA3tF,KAAAutF,EAAAv+F,OAAAouC,EAAA,EAAApuC,CAAAs+F,EAAA,GAgBjDnvF,EAhBiDovF,EAAA,GAiBjDx0B,EAjBiDw0B,EAAA,GAuBnDX,EAAWn8F,EAAKqQ,iBAAiBi4D,EAAY,IAAIhgE,MAAMoF,GAvBJwvF,EAAA3wF,KAAA,GAwBlCvM,EAAKq/B,oBAAoB88D,EAASxvF,EAAM7H,EAAYmK,GAxBlB,WAwBnDktF,EAxBmDe,EAAA3tF,KA0BnD6b,EAAOwxE,GAAeT,SAAWA,EACjCF,EAAWA,EAAS3uF,KAAK6uF,KAGnBl6D,EAAYjiC,EAAKylC,kBAAkB3gC,IA9BU,CAAAo4F,EAAA3wF,KAAA,gBAAA2wF,EAAA3wF,KAAA,GAgC3CvM,EAAK4L,aAAarN,OAAO8B,KAAK4hC,GAAWx1B,OAAQ,SAAAu+B,GAAQ,OAAK/I,EAAU+I,GAAUmyD,UAAlF,eAAAC,EAAA7+F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8F,SAAAqxF,EAAOryD,GAAP,IAAAne,EAAAywE,EAAAC,EAAA5F,EAAA6F,EAAAC,EAAA,OAAAj0E,EAAApqB,EAAAgN,KAAA,SAAAsxF,GAAA,cAAAA,EAAApxF,KAAAoxF,EAAAnxF,MAAA,cAC5FsgB,EAAiBoV,EAAU+I,GADiE0yD,EAAAnxF,KAAA,EAKxFoK,QAAQqD,IAAI,CACpBha,EAAKo7E,mBAAmBpwC,EAASlmC,EAAYy6B,KAAKr3B,SAClDlI,EAAK4sC,yBAAyBN,EAAezf,KAPmD,OAAAywE,EAAAI,EAAAnuF,KAAAguF,EAAAh/F,OAAAouC,EAAA,EAAApuC,CAAA++F,EAAA,GAGhG3F,EAHgG4F,EAAA,GAIhGC,EAJgGD,EAAA,GAU9F5F,GAAmB6F,IACfC,EAA2Bz9F,EAAKqQ,iBAAiBsnF,EAAgB9qE,EAAevjB,UAAUhB,MAAMtI,EAAK4M,MAAM4wF,OAChFC,EAAyB7vF,UACxDquF,EAAWA,EAAS3uF,KAAKmwF,GACzBryE,EAAOwxE,GAAe36D,UAAU+I,GAAYyyD,GAdkD,wBAAAC,EAAA7vF,SAAAwvF,EAAAr+F,SAA9F,gBAAA2+F,GAAA,OAAAP,EAAArvF,MAAA/O,KAAAgP,YAAA,IAhC2C,YAqD/ClJ,EAAYi3B,YAAaj3B,EAAYi3B,UAAUC,YArDA,CAAAkhE,EAAA3wF,KAAA,gBAsD3Ci3B,EAAiBjlC,OAAOC,OAAO,GAAGsG,IACzB+C,UAAYtJ,OAAOiO,OAAO1H,EAAY+C,WACrD27B,EAAejE,KAAOhhC,OAAOC,OAAO,GAAGsG,EAAYi3B,UAAUC,aAGzDwH,EAAezH,UAAU2K,cAC3BlD,EAAezH,UAAU2K,aAAanmC,QAAS,SAAAomC,GAC7C,IAAMC,EAAgBpD,EAAe37B,UAAU2mB,KAAM,SAAA/vB,GAAC,OAAKA,EAAEiB,OAASinC,EAAYjnC,OAClF,GAAIknC,EAAc,CAChB,IAAMC,EAAcrD,EAAe37B,UAAU2W,QAAQooB,GACrDpD,EAAe37B,UAAUg/B,GAAeF,KAhEGu2D,EAAA3wF,KAAA,GAwEvCoK,QAAQqD,IAAI,CACpBha,EAAK62C,kBAAkBrT,GACvBxjC,EAAK2vE,mBAAmBnsC,EAAejE,KAAK7/B,QA1EG,WAAAq9F,EAAAG,EAAA3tF,KAAAytF,EAAAz+F,OAAAouC,EAAA,EAAApuC,CAAAw+F,EAAA,GAsE/CjgE,EAtE+CkgE,EAAA,GAuE/CC,EAvE+CD,EAAA,IA6E7ClgE,IAAiBmgE,EA7E4B,CAAAC,EAAA3wF,KAAA,gBA8E/CowF,EAAc38F,EAAKqQ,iBAAiB4sF,EAAe,IAAI30F,MAAMw0B,GA9EdogE,EAAA3wF,KAAA,GA+E3BvM,EAAKq/B,oBAAoBs9D,EAAYhwF,EAAM62B,EAAev0B,GA/E/B,SA+E/C0tF,EA/E+CO,EAAA3tF,QAgF3BotF,EAAY/uF,UAC9Bwd,EAAOwxE,GAAeD,YAAcA,EACpCV,EAAWA,EAAS3uF,KAAKqvF,IAlFoB,QAuFnDvxE,EAAOwxE,GAAeX,SAAWA,EAvFkB,yBAAAiB,EAAArvF,SAAA6uF,EAAA19F,SAA/C,gBAAA4+F,GAAA,OAAAnB,EAAA1uF,MAAA/O,KAAAgP,YAAA,IAH4D,wBAAAwuF,EAAA3uF,SAAA0uF,EAAAv9F,SAA9D,gBAAA6+F,GAAA,OAAAvB,EAAAvuF,MAAA/O,KAAAgP,YAAA,IAHO,cAAAquF,EAAA9kF,OAAA,SAiGN6T,GAjGM,wBAAAixE,EAAAxuF,SAAAuuF,EAAAp9F,SA7oMGA,KAgvMlB8+F,sBAhvMkBv/F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAgvMM,SAAA+xF,IAAA,IAAA95D,EAAAtV,EAAAs+B,EAAA+wC,EAAAC,EAAAC,EAAA,OAAA10E,EAAApqB,EAAAgN,KAAA,SAAA+xF,GAAA,cAAAA,EAAA7xF,KAAA6xF,EAAA5xF,MAAA,UAChB03B,EADgB,uBAEhBtV,EAAa3uB,EAAKitC,8BAA8BhJ,IAFhC,CAAAk6D,EAAA5xF,KAAA,eAAA4xF,EAAA5mF,OAAA,SAIboX,GAJa,cAOhBs+B,EAASjtD,EAAK4Q,gBAAgB,CAAC,QAAQ,WACvCotF,EAAeh+F,EAAK4Q,gBAAgB,CAAC,QAAQ,aAR7ButF,EAAA5xF,KAAA,EASSvM,EAAKihD,YAAY+8C,EAAaz8C,UAAS,EAAM0L,GATtD,aAShBgxC,EATgBE,EAAA5uF,OAWE0uF,EAAiB96F,MAAQ86F,EAAiB96F,KAAKi7F,OAASH,EAAiB96F,KAAKi7F,MAAM99F,OAAO,GAX7F,CAAA69F,EAAA5xF,KAAA,gBAYd2xF,EAAaD,EAAiB96F,KAAKi7F,MAAM,GAZ3BD,EAAA5mF,OAAA,SAabvX,EAAKktC,8BAA8BjJ,EAAci6D,EAAWF,EAAa7pD,MAb5D,eAAAgqD,EAAA5mF,OAAA,SAgBf,MAhBe,yBAAA4mF,EAAAtwF,SAAAkwF,EAAA/+F,SAhvMNA,KAkwMlBq/F,mBAlwMkB9/F,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkwMG,SAAAsyF,IAAA,IAAArxC,EAAA+wC,EAAAO,EAAAnpD,EAAAopD,EAAAC,EAAAzwF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAsyF,GAAA,cAAAA,EAAApyF,KAAAoyF,EAAAnyF,MAAA,eAAAkyF,EAAAn+F,OAAA,QAAAgrB,IAAAmzE,EAAA,KAAAA,EAAA,GACbxxC,EAASjtD,EAAK4Q,gBAAgB,CAAC,QAAQ,WACvCotF,EAAeh+F,EAAK4Q,gBAAgB,CAAC,QAAQ,SAFhC8tF,EAAAnyF,KAAA,EAGAvM,EAAK8gD,kBAAkBk9C,EAAaz8C,SAASy8C,EAAa7pD,KAAI,GAAK,EAAM8Y,GAHzE,YAGbsxC,EAHaG,EAAAnvF,MAAA,CAAAmvF,EAAAnyF,KAAA,gBAMX6oC,EAASp1C,EAAK4M,MAAM2xF,EAAKnpD,QACzBopD,EAAWx+F,EAAK4M,MAAM2xF,EAAKtC,UAPhByC,EAAAnnF,OAAA,SAQV,CACL69B,SACAopD,aAVe,eAAAE,EAAAnyF,KAAA,GAaJvM,EAAK2+F,2BAbD,eAAAD,EAAAnnF,OAAA,SAAAmnF,EAAAnvF,MAAA,yBAAAmvF,EAAA7wF,SAAAywF,EAAAt/F,SAlwMHA,KAkxMlB2/F,yBAlxMkBpgG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkxMS,SAAA4yF,IAAA,IAAAzzE,EAAA8Y,EAAAtV,EAAAkwE,EAAAzpD,EAAAopD,EAAAlyD,EAAAlhB,EAAA0zE,EAAA9wF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA2yF,GAAA,cAAAA,EAAAzyF,KAAAyyF,EAAAxyF,MAAA,UAAO4e,IAAP2zE,EAAAx+F,OAAA,QAAAgrB,IAAAwzE,EAAA,KAAAA,EAAA,GAGnB76D,EAHmB,sBAAAj7B,OAGmBmiB,KACtCwD,EAAa3uB,EAAKitC,8BAA8BhJ,MACnCtV,EAAWkwE,QAAW7+F,EAAK4M,MAAM+hB,EAAWkwE,QAAQjxF,UAAa+gB,EAAWymB,QAAWp1C,EAAK4M,MAAM+hB,EAAWymB,QAAQxnC,UAAa+gB,EAAW6vE,UAAax+F,EAAK4M,MAAM+hB,EAAW6vE,UAAU5wF,QALpL,CAAAmxF,EAAAxyF,KAAA,eAAAwyF,EAAAxnF,OAAA,SAMhB,CACLsnF,OAAO7+F,EAAK4M,MAAM+hB,EAAWkwE,QAC7BzpD,OAAOp1C,EAAK4M,MAAM+hB,EAAWymB,QAC7BopD,SAASx+F,EAAK4M,MAAM+hB,EAAW6vE,YATV,cAarBK,EAAS7+F,EAAK4M,MAAM,GACpBwoC,EAASp1C,EAAK4M,MAAM,GACpB4xF,EAAWx+F,EAAK4M,MAAM,GACpB0/B,EAAiBtsC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,QAhBrCmuF,EAAAxyF,KAAA,GAiBnBvM,EAAK4L,aAAarN,OAAO8B,KAAKL,EAAKf,MAAM2uC,qBAAzC,eAAAoxD,EAAAzgG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8D,SAAAizF,EAAO91D,GAAP,IAAAl6B,EAAA3D,EAAA,OAAAke,EAAApqB,EAAAgN,KAAA,SAAA8yF,GAAA,cAAAA,EAAA5yF,KAAA4yF,EAAA3yF,MAAA,cAC5D0C,EAAsB,SAAbk6B,EACT79B,EAAkBtL,EAAKf,MAAM2uC,oBAAoBzE,GAFW+1D,EAAA3yF,KAAA,EAG5DvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAA6zF,EAAA5gG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAAozF,EAAOzyF,GAAP,IAAA7H,EAAAunC,EAAAyK,EAAAuoD,EAAAp9D,EAAAuB,EAAA87D,EAAAC,EAAA,OAAA/1E,EAAApqB,EAAAgN,KAAA,SAAAozF,GAAA,cAAAA,EAAAlzF,KAAAkzF,EAAAjzF,MAAA,cAC7CzH,EAAcwG,EAAgBqB,GADe6yF,EAAAjzF,KAAA,EAErBvM,EAAK6E,mBAAmBC,GAAY,EAAMqmB,GAFrB,cAE7CkhB,EAF6CmzD,EAAAjwF,KAAAiwF,EAAAjzF,KAAA,EAG3BvM,EAAKm3C,aAAaryC,EAAYunC,EAAgBlhB,GAHnB,UAG7C2rB,EAH6C0oD,EAAAjwF,MAI/C88B,IAAmBA,EAAgBQ,2BAA8BR,EAAgBQ,0BAA0Bj/B,QAJ5D,CAAA4xF,EAAAjzF,KAAA,gBAAAizF,EAAAjzF,KAAA,GAK1BvM,EAAKq/B,oBAAoBgN,EAAgBQ,0BAA0BlgC,EAAM7H,EAAYmK,GAL3D,QAK3CowF,EAL2CG,EAAAjwF,KAMjDivF,EAAWA,EAASlxF,KAAK+xF,GAErBvoD,GAAaA,EAAUse,SAAWte,EAAUse,OAAOxnD,UACrDixF,EAASA,EAAOvxF,KAAK+xF,EAAS/2F,MAAMwuC,EAAUse,SAC9ChgB,EAASA,EAAO9nC,KAAK+xF,EAAS/2F,MAAMwuC,EAAUM,UAVC,aAe7CnV,EAAYjiC,EAAKylC,kBAAkB3gC,IAfU,CAAA06F,EAAAjzF,KAAA,gBAAAizF,EAAAjzF,KAAA,GAiB3CvM,EAAK4L,aAAarN,OAAO8B,KAAK4hC,GAAWx1B,OAAQ,SAAAu+B,GAAQ,OAAK/I,EAAU+I,GAAUmyD,UAAlF,eAAAsC,EAAAlhG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8F,SAAA0zF,EAAO10D,GAAP,IAAAne,EAAA8yE,EAAAC,EAAAp6D,EAAAoyD,EAAAhhD,EAAA,OAAAptB,EAAApqB,EAAAgN,KAAA,SAAAyzF,GAAA,cAAAA,EAAAvzF,KAAAuzF,EAAAtzF,MAAA,cAC5FsgB,EAAiBoV,EAAU+I,GADiE60D,EAAAtzF,KAAA,EAKxFoK,QAAQqD,IAAI,CACpBha,EAAKo7E,mBAAmBpwC,EAASlmC,EAAYy6B,KAAKr3B,SAClDlI,EAAK4sC,yBAAyBN,EAAezf,KAPmD,OAAA8yE,EAAAE,EAAAtwF,KAAAqwF,EAAArhG,OAAAouC,EAAA,EAAApuC,CAAAohG,EAAA,GAGhGn6D,EAHgGo6D,EAAA,GAIhGhI,EAJgGgI,EAAA,GAU9Fp6D,GAAgBoyD,IACZhhD,EAAwB52C,EAAKqQ,iBAAiBm1B,EAAa3Y,EAAevjB,UAAUhB,MAAMtI,EAAK4M,MAAMgrF,OAC7EhhD,EAAsBhpC,UAElD4wF,EAAWA,EAASlxF,KAAKspC,IAdqE,wBAAAipD,EAAAhyF,SAAA6xF,EAAA1gG,SAA9F,gBAAA8gG,GAAA,OAAAL,EAAA1xF,MAAA/O,KAAAgP,YAAA,IAjB2C,YAsC/ClJ,EAAYi3B,YAAaj3B,EAAYi3B,UAAUC,YAtCA,CAAAwjE,EAAAjzF,KAAA,gBAuC3Ci3B,EAAiBjlC,OAAOC,OAAO,GAAGsG,IACzB+C,UAAYtJ,OAAOiO,OAAO1H,EAAY+C,WACrD27B,EAAejE,KAAOhhC,OAAOC,OAAO,GAAGsG,EAAYi3B,UAAUC,aAGzDwH,EAAezH,UAAU2K,cAC3BlD,EAAezH,UAAU2K,aAAanmC,QAAS,SAAAomC,GAC7C,IAAMC,EAAgBpD,EAAe37B,UAAU2mB,KAAM,SAAA/vB,GAAC,OAAKA,EAAEiB,OAASinC,EAAYjnC,OAClF,GAAIknC,EAAc,CAChB,IAAMC,EAAcrD,EAAe37B,UAAU2W,QAAQooB,GACrDpD,EAAe37B,UAAUg/B,GAAeF,KAjDG64D,EAAAjzF,KAAA,GAsDhBvM,EAAK6E,mBAAmB2+B,GAAe,GAAM,GAtD7B,aAsD3C87D,EAtD2CE,EAAAjwF,QAuDvB+vF,EAAmB17F,iBAAoB07F,EAAmB17F,gBAAgBgK,QAvDnD,CAAA4xF,EAAAjzF,KAAA,gBAAAizF,EAAAjzF,KAAA,GAwDTvM,EAAKq/B,oBAAoBigE,EAAmB17F,gBAAgB+I,EAAM62B,EAAev0B,GAxDxE,QAwDzCswF,EAxDyCC,EAAAjwF,KAyD/CivF,EAAWA,EAASlxF,KAAKiyF,GAzDsB,yBAAAC,EAAA3xF,SAAAuxF,EAAApgG,SAA/C,gBAAA+gG,GAAA,OAAAZ,EAAApxF,MAAA/O,KAAAgP,YAAA,IAH4D,wBAAAkxF,EAAArxF,SAAAoxF,EAAAjgG,SAA9D,gBAAAghG,GAAA,OAAAhB,EAAAjxF,MAAA/O,KAAAgP,YAAA,IAjBmB,eAoFzB6wF,EAASA,EAAO5lF,IAAIulF,GACpBppD,EAASA,EAAOn8B,IAAIulF,GAEdpzE,EAAS,CACbyzE,SACAzpD,SACAopD,YA1FuBO,EAAAxnF,OAAA,SA6FlBvX,EAAKktC,8BAA8BjJ,EAAc7Y,IA7F/B,yBAAA2zE,EAAAlxF,SAAA+wF,EAAA5/F,SAlxMTA,KAi3MlBihG,YAj3MkB,eAAAC,EAAA3hG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAi3MJ,SAAAm0F,EAAOr7F,GAAP,IAAAgyC,EAAA,OAAAttB,EAAApqB,EAAAgN,KAAA,SAAAg0F,GAAA,cAAAA,EAAA9zF,KAAA8zF,EAAA7zF,MAAA,cAAA6zF,EAAA7zF,KAAA,EACYvM,EAAKm3C,aAAaryC,GAD9B,YACNgyC,EADMspD,EAAA7wF,OAE0B,OAArBunC,EAAUM,OAFf,CAAAgpD,EAAA7zF,KAAA,eAAA6zF,EAAA7oF,OAAA,SAGHu/B,EAAUM,QAHP,cAAAgpD,EAAA7oF,OAAA,SAKL,MALK,wBAAA6oF,EAAAvyF,SAAAsyF,EAAAnhG,SAj3MI,gBAAAqhG,GAAA,OAAAH,EAAAnyF,MAAA/O,KAAAgP,YAAA,GAAAhP,KAw3MlBshG,mBAx3MkB/hG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAw3MG,SAAAu0F,IAAA,IAAArxF,EAAAsxF,EAAAC,EAAAzyF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAs0F,GAAA,cAAAA,EAAAp0F,KAAAo0F,EAAAn0F,MAAA,UAAO2C,EAAPuxF,EAAAngG,OAAA,QAAAgrB,IAAAm1E,EAAA,GAAAA,EAAA,GAAwB,KAEtCzgG,EAAKf,MAAM2uC,qBAAwB5tC,EAAKf,MAAMuM,QAFhC,CAAAk1F,EAAAn0F,KAAA,eAAAm0F,EAAAnpF,OAAA,UAGV,GAHU,cAMbipF,EAAkB,GANLE,EAAAn0F,KAAA,EAQbvM,EAAK4L,aAAarN,OAAO8B,KAAKL,EAAKf,MAAM2uC,qBAAzC,eAAA+yD,EAAApiG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8D,SAAA40F,EAAOz3D,GAAP,IAAA79B,EAAA,OAAAke,EAAApqB,EAAAgN,KAAA,SAAAy0F,GAAA,cAAAA,EAAAv0F,KAAAu0F,EAAAt0F,MAAA,WAC9D2C,GAAoBA,IAAqBi6B,EADqB,CAAA03D,EAAAt0F,KAAA,eAAAs0F,EAAAtpF,OAAA,wBAI5DjM,EAAkBtL,EAAKf,MAAM2uC,oBAAoBzE,GAJW03D,EAAAt0F,KAAA,EAK5DvM,EAAK4L,aAAarN,OAAO8B,KAAKiL,GAA9B,eAAAw1F,EAAAviG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAA+0F,EAAOp0F,GAAP,IAAA7H,EAAAk8F,EAAAzmE,EAAA2H,EAAAkjB,EAAA,OAAA57B,EAAApqB,EAAAgN,KAAA,SAAA60F,GAAA,cAAAA,EAAA30F,KAAA20F,EAAA10F,MAAA,cAC7CzH,EAAcwG,EAAgBqB,GADes0F,EAAA10F,KAAA,EAKzCvM,EAAK48B,eAAe93B,EAAY9E,EAAKf,MAAMuM,SALF,OAAAw1F,EAAAC,EAAA1xF,KAGjDgrB,EAHiDymE,EAGjDzmE,iBACA2H,EAJiD8+D,EAIjD9+D,4BAGE3H,IACI6qB,EAAWl2C,EAAmBvC,EAAQ7H,EAAYy6B,KAAK5yB,MAC7D6zF,EAAgBp7C,GAAY,CAC1Bz4C,QACAw8B,WACArkC,cACAo9B,gCAb+C,wBAAA++D,EAAApzF,SAAAkzF,EAAA/hG,SAA/C,gBAAAkiG,GAAA,OAAAJ,EAAA/yF,MAAA/O,KAAAgP,YAAA,IAL4D,wBAAA6yF,EAAAhzF,SAAA+yF,EAAA5hG,SAA9D,gBAAAmiG,GAAA,OAAAR,EAAA5yF,MAAA/O,KAAAgP,YAAA,IARa,cAAA0yF,EAAAnpF,OAAA,SAgCZipF,GAhCY,wBAAAE,EAAA7yF,SAAA0yF,EAAAvhG,SAx3MHA,KA65MlBoiG,2BA75MkB7iG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA65MW,SAAAq1F,IAAA,IAAA91E,EAAA+1E,EAAAC,EAAAC,EAAAC,EAAAzzF,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAs1F,GAAA,cAAAA,EAAAp1F,KAAAo1F,EAAAn1F,MAAA,UAAOgf,EAAPk2E,EAAAnhG,OAAA,QAAAgrB,IAAAm2E,EAAA,GAAAA,EAAA,GAAgB,KACtCzhG,EAAKf,MAAMuM,QADW,CAAAk2F,EAAAn1F,KAAA,eAAAm1F,EAAAnqF,OAAA,UAElB,GAFkB,UAIrB+pF,EAAgB,GAChBC,EAAkBvhG,EAAK4M,MAAM,GAAGqM,IAAI,OACpCuoF,EAAkBxhG,EAAK4Q,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,qBANpD,CAAA8wF,EAAAn1F,KAAA,eAAAm1F,EAAAn1F,KAAA,EAQnBvM,EAAK4L,aAAarN,OAAO8B,KAAKmhG,GAA9B,eAAAG,EAAApjG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAA41F,EAAOj1F,GAAP,IAAA7H,EAAA+8F,EAAAr8D,EAAA,OAAAhc,EAAApqB,EAAAgN,KAAA,SAAA01F,GAAA,cAAAA,EAAAx1F,KAAAw1F,EAAAv1F,MAAA,UAC7CzH,EAAc08F,EAAgB70F,GACnB,OAAb4e,GAAqBzmB,EAAYymB,SAASpjB,gBAAkBojB,EAASpjB,cAFtB,CAAA25F,EAAAv1F,KAAA,eAAAu1F,EAAAvqF,OAAA,qBAK/CsqF,EAAgB7hG,EAAK08B,kBAAkB53B,EAAY6H,UACjC7H,EAAYu4B,IANiB,CAAAykE,EAAAv1F,KAAA,eAAAu1F,EAAAv1F,KAAA,EAO3BvM,EAAKf,MAAMq+B,aAAax4B,EAAY6H,MAAM7H,EAAYoD,QAAQpD,EAAYu4B,KAP/C,OAOjDwkE,EAPiDC,EAAAvyF,KAAA,WAS/CsyF,EAT+C,CAAAC,EAAAv1F,KAAA,gBAAAu1F,EAAAv1F,KAAA,GAUtBvM,EAAK2rC,gBAAgB7mC,EAAY6H,MAAM3M,EAAKf,MAAMuM,SAV5B,SAU3Cg6B,EAV2Cs8D,EAAAvyF,OAW7Bi2B,EAAalG,IAAIiiE,KACnCD,EAAc30F,GAAS,CACrB7H,cACA2I,QAAQ+3B,IAdqC,yBAAAs8D,EAAAj0F,SAAA+zF,EAAA5iG,SAA/C,gBAAA+iG,GAAA,OAAAJ,EAAA5zF,MAAA/O,KAAAgP,YAAA,IARmB,cAAA0zF,EAAAnqF,OAAA,SA6BpB+pF,GA7BoB,yBAAAI,EAAA7zF,SAAAwzF,EAAAriG,SA75MXA,KA+7MlBqgC,oBA/7MkB,eAAA2iE,EAAAzjG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA+7MI,SAAAi2F,EAAOz8D,EAAa74B,EAAM7H,GAA1B,IAAAmK,EAAAyB,EAAAwxF,EAAAl0F,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA+1F,GAAA,cAAAA,EAAA71F,KAAA61F,EAAA51F,MAAA,UAAsC0C,EAAtCizF,EAAA5hG,OAAA,QAAAgrB,IAAA42E,EAAA,IAAAA,EAAA,KAEpB18D,EAAexlC,EAAK4M,MAAM44B,IACT/0B,GAAG,GAHA,CAAA0xF,EAAA51F,KAAA,eAAA41F,EAAA51F,KAAA,EAImBvM,EAAKsiF,uBAAuBx9E,EAAYmK,GAJ3D,QAIZyB,EAJYyxF,EAAA5yF,QAOhBi2B,EAAeA,EAAal9B,MAAMoI,IAPlB,cAAAyxF,EAAA5qF,OAAA,SAUbiuB,GAVa,wBAAA28D,EAAAt0F,SAAAo0F,EAAAjjG,SA/7MJ,gBAAAojG,EAAAC,EAAAC,GAAA,OAAAN,EAAAj0F,MAAA/O,KAAAgP,YAAA,GAAAhP,KA48MlBujG,eA58MkB,eAAAC,EAAAjkG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KA48MD,SAAAy2F,EAAOv6F,EAAQ+G,GAAf,IAAAi1B,EAAAuvB,EAAAivC,EAAA5mD,EAAA6mD,EAAA30F,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAw2F,GAAA,cAAAA,EAAAt2F,KAAAs2F,EAAAr2F,MAAA,cAAsB23B,EAAtBy+D,EAAAriG,OAAA,QAAAgrB,IAAAq3E,EAAA,GAAAA,EAAA,GAAqC,KAAKlvC,EAA1CkvC,EAAAriG,OAAA,QAAAgrB,IAAAq3E,EAAA,GAAAA,EAAA,GAAuD,KAAvDC,EAAAr2F,KAAA,EAEUvM,EAAKsP,gBAAgBpH,EAAQ+G,EAAOi1B,EAAeuvB,GAAa,EAAK,MAF/E,YAETivC,EAFSE,EAAArzF,QAIGmzF,EAAWpiG,OAJd,CAAAsiG,EAAAr2F,KAAA,eAKPuvC,EAAM4mD,EAAWlpD,OAAQ,SAAC04C,EAAI5uC,GAClC,IAAMxb,EAAW9nC,EAAKqQ,iBAAiBizC,EAAExb,SAAS,IAClD,OAAOoqD,EAAI5kF,KAAKw6B,IAChB9nC,EAAK4M,MAAM,IARAg2F,EAAArrF,OAAA,SAWNukC,EAAI7iC,IAAIypF,EAAWpiG,SAXb,cAAAsiG,EAAArrF,OAAA,SAcRvX,EAAK4M,MAAM,IAdH,wBAAAg2F,EAAA/0F,SAAA40F,EAAAzjG,SA58MC,gBAAA6jG,EAAAC,GAAA,OAAAN,EAAAz0F,MAAA/O,KAAAgP,YAAA,GAAAhP,KAg+MlBsjF,uBAh+MkB,eAAAygB,EAAAxkG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAg+MO,SAAAg3F,EAAOl+F,EAAYmK,GAAnB,IAAA0B,EAAAsyF,EAAAh/D,EAAAtV,EAAAoiD,EAAAmyB,EAAA52D,EAAAx7B,EAAAqyF,EAAAn1F,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAg3F,GAAA,cAAAA,EAAA92F,KAAA82F,EAAA72F,MAAA,UAA0BoE,EAA1BwyF,EAAA7iG,OAAA,QAAAgrB,IAAA63E,EAAA,GAAAA,EAAA,GAA8C,KAAKF,EAAnDE,EAAA7iG,OAAA,QAAAgrB,IAAA63E,EAAA,GAAAA,EAAA,GAAyD,EAE3ExyF,EAFkB,CAAAyyF,EAAA72F,KAAA,WAGrBoE,EAAsB3Q,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS9L,EAAY6H,MAAM,wBAH1D,CAAAy2F,EAAA72F,KAAA,eAAA62F,EAAA7rF,OAAA,SAKZ,MALY,UAUjB0sB,EAViB,uBAAAj7B,OAUsBlE,EAAYoD,QAVlC,KAAAc,OAU6CiG,EAV7C,KAAAjG,OAUuD2H,KACxEge,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAZnB,CAAAw1F,EAAA72F,KAAA,gBAAA62F,EAAA7rF,OAAA,SAadvX,EAAK4M,MAAM+hB,IAbG,eAAAy0E,EAAA72F,KAAA,GAgBDvM,EAAKsP,gBAAgBxK,EAAYoD,QAAQ+G,EAAO,KAAK,MAAK,EAAM,KAAK,OAAO,GAhB3E,aAgBnB8hE,EAhBmBqyB,EAAA7zF,QAkBNwhE,EAAUzwE,OAlBJ,CAAA8iG,EAAA72F,KAAA,cAmBrBwkE,EAAYA,EAAUjhE,QACJ9P,EAAK4M,MAAMmkE,EAAUpgE,IAAsB/C,QApBxC,CAAAw1F,EAAA72F,KAAA,YAqBbuE,EAAiB9Q,EAAKqQ,iBAAiB0gE,EAAUpgE,GAAqB,IACvE3Q,EAAK4M,MAAMkE,GAAgBlD,QAtBb,CAAAw1F,EAAA72F,KAAA,gBAAA62F,EAAA7rF,OAAA,SAuBVvX,EAAKktC,8BAA8BjJ,EAAcnzB,IAvBvC,eA4BjBw7B,EAAiBtsC,EAAK4Q,gBAAgB,CAAC,QAAQ,SAAS,QA5BvCwyF,EAAA72F,KAAA,GA6BMvM,EAAK4sC,yBAAyBN,EAAexnC,GA7BnD,WA6BjBgM,EA7BiBsyF,EAAA7zF,KA8BlBvP,EAAK4M,MAAMkE,GAAgBlD,QA9BT,CAAAw1F,EAAA72F,KAAA,gBAAA62F,EAAA7rF,OAAA,SA+BdvX,EAAKktC,8BAA8BjJ,EAAcnzB,IA/BnC,aAkCnBmyF,EAAM,GAlCa,CAAAG,EAAA72F,KAAA,gBAAA62F,EAAA72F,KAAA,GAmCRvM,EAAKsiF,uBAAuBx9E,EAAYmK,EAAO0B,EAAoBsyF,EAAM,GAnCjE,eAAAG,EAAA7rF,OAAA,SAAA6rF,EAAA7zF,MAAA,eAAA6zF,EAAA7rF,OAAA,SAsChB,MAtCgB,yBAAA6rF,EAAAv1F,SAAAm1F,EAAAhkG,SAh+MP,gBAAAqkG,EAAAC,GAAA,OAAAP,EAAAh1F,MAAA/O,KAAAgP,YAAA,GAAAhP,KAygNlBknC,cAzgNkB,eAAAq9D,EAAAhlG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAygNF,SAAAw3F,EAAO1+F,EAAYmK,GAAnB,IAAAg1B,EAAAtV,EAAAqlC,EAAA/G,EAAA1L,EAAAkiD,EAAAC,EAAA3yB,EAAA1kC,EAAA/I,EAAA,OAAA9Z,EAAApqB,EAAAgN,KAAA,SAAAu3F,GAAA,cAAAA,EAAAr3F,KAAAq3F,EAAAp3F,MAAA,UAER03B,EAFQ,cAAAj7B,OAEsBlE,EAAYoD,QAFlC,KAAAc,OAE6CiG,KACrD0f,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJ5B,CAAA+1F,EAAAp3F,KAAA,eAAAo3F,EAAApsF,OAAA,SAKLvX,EAAK4M,MAAM+hB,IALN,cAQRqlC,EAAUvrD,IAAcC,MAAM0rD,MAC9BnH,EAASjtD,EAAK4Q,gBAAgB,CAAC,QAAQ,WACvC2wC,EAVQ,GAAAv4C,OAUMgrD,EAAQzS,UAVdv4C,OAUyBlE,EAAYoD,QAVrC,YAAAc,OAUuDiG,EAVvD,uBAAA00F,EAAAp3F,KAAA,EAcJoK,QAAQqD,IAAI,CACpBha,EAAK8gD,kBAAkBS,EAASyS,EAAQ7f,KAAI,GAAK,EAAM8Y,GACvDjtD,EAAK6E,mBAAmBC,GAAY,GAAM,KAhB9B,UAAA2+F,EAAAE,EAAAp0F,KAAAm0F,EAAAnlG,OAAAouC,EAAA,EAAApuC,CAAAklG,EAAA,GAYZ1yB,EAZY2yB,EAAA,GAaZr3D,EAbYq3D,EAAA,GAmBVpgE,EAAatjC,EAAK4M,MAAM,GAExBmkE,GAAa1kC,GACf9tC,OAAO8B,KAAKgsC,EAAgBvoC,0BAA0BvD,QAAS,SAAA0H,GAC7D,IAAMk6E,EAAyBniF,EAAK4M,MAAMy/B,EAAgBvoC,yBAAyBmE,IACnF,GAAIk6E,EAAuB1xE,GAAG,OAAUsgE,EAAUzwE,OAAO,EAAE,CACzD,IAAMwH,EAAeipE,EAAU,GAAGiiB,cAAcxkE,KAAM,SAAA/vB,GAAC,OAAKA,EAAEwJ,aAAaE,gBAAkBF,EAAaE,gBAC1G,GAAIL,EAAa,CACf,IAAM87F,EAAgB5jG,EAAK4M,MAAM9E,EAAa2rF,WACzCmQ,EAAch2F,UACjB01B,EAAaA,EAAWh2B,KAAKs2F,EAAct7F,MAAM65E,SAQtD7+C,IAAcA,EAAW11B,UAAW01B,EAAWlI,IAAI,GArC1C,CAAAuoE,EAAAp3F,KAAA,gBAAAo3F,EAAAp3F,KAAA,GAsCOvM,EAAK6jG,iBAAiB/+F,EAAYmK,GAtCzC,QAsCZq0B,EAtCYqgE,EAAAp0F,KAAA,eAAAo0F,EAAApsF,OAAA,SAyCPvX,EAAKktC,8BAA8BjJ,EAAcX,IAzC1C,yBAAAqgE,EAAA91F,SAAA21F,EAAAxkG,SAzgNE,gBAAA8kG,EAAAC,GAAA,OAAAR,EAAAx1F,MAAA/O,KAAAgP,YAAA,GAAAhP,KAwjNlB6kG,iBAxjNkB,eAAAG,EAAAzlG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAwjNC,SAAAi4F,EAAOn/F,EAAYmK,GAAnB,IAAAg1B,EAAAtV,EAAAqlC,EAAA/G,EAAA1L,EAAA2iD,EAAAnzB,EAAAztC,EAAAtzB,EAAAk0B,EAAAn0B,EAAA,OAAAyZ,EAAApqB,EAAAgN,KAAA,SAAA+3F,GAAA,cAAAA,EAAA73F,KAAA63F,EAAA53F,MAAA,UAEX03B,EAFW,iBAAAj7B,OAEsBlE,EAAYoD,QAFlC,KAAAc,OAE6CiG,KACxD0f,EAAa3uB,EAAKitC,8BAA8BhJ,KACnCjkC,EAAK4M,MAAM+hB,GAAY/gB,QAJzB,CAAAu2F,EAAA53F,KAAA,eAAA43F,EAAA5sF,OAAA,SAKRvX,EAAK4M,MAAM+hB,IALH,cAQXqlC,EAAUvrD,IAAcC,MAAMw7F,OAC9Bj3C,EAASjtD,EAAK4Q,gBAAgB,CAAC,QAAQ,WACvC2wC,EAVW,GAAAv4C,OAUGgrD,EAAQzS,UAVXv4C,OAUsBlE,EAAYoD,QAVlC,YAAAc,OAUoDiG,GAVpDk1F,EAAA53F,KAAA,EAWEvM,EAAK8gD,kBAAkBS,EAASyS,EAAQ7f,KAAI,GAAK,EAAM8Y,GAXzD,aAWbi3C,EAXaC,EAAA50F,OAaH20F,EAAO5jG,OAAO,GAbX,CAAA6jG,EAAA53F,KAAA,cAcXwkE,EAAYmzB,EAAO11E,KAAM,SAAA4hB,GAAC,OAAIA,EAAEloC,QAAQC,gBAAkBrD,EAAYoD,QAAQC,iBAdnE,CAAAg8F,EAAA53F,KAAA,cAgBT+2B,EAAatjC,EAAK4M,MAAMmkE,EAAUqiB,cACpB9vD,EAAW7yB,GAAG,GAjBnB,CAAA0zF,EAAA53F,KAAA,gBAAA43F,EAAA5sF,OAAA,SAmBJvX,EAAK4uB,cAAcqV,EAAcX,IAnB7B,eAsBLtzB,EAAY9C,SAASiB,KAAK+yC,MAAM,KAChChd,EAAiBh3B,SAAS8C,GAAY,MAvBjCm0F,EAAA53F,KAAA,GAwBOvM,EAAKsP,gBAAgBxK,EAAYoD,QAAQ+G,EAAOi1B,EAAe,MAAK,EAAK,KAAK,QAxBrF,WAwBX6sC,EAxBWozB,EAAA50F,OA0BLQ,EAAoBghE,EAAUtkE,OAAQ,SAAAnH,GAAC,OAAKtF,EAAK4M,MAAMtH,EAAE8tF,WAAW3iF,GAAG,MACvDnQ,OA3BX,CAAA6jG,EAAA53F,KAAA,YA4BT+2B,EAAatjC,EAAK4M,MAAMmD,EAAkB,GAAGqjF,WACxCpzF,EAAK4M,MAAM02B,GAAY11B,QA7BnB,CAAAu2F,EAAA53F,KAAA,gBAAA43F,EAAA5sF,OAAA,SA8BAvX,EAAKktC,8BAA8BjJ,EAAcX,IA9BjD,eAAA6gE,EAAA5sF,OAAA,SAqCVvX,EAAK4M,MAAM,IArCD,yBAAAu3F,EAAAt2F,SAAAo2F,EAAAjlG,SAxjND,gBAAAolG,EAAAC,GAAA,OAAAL,EAAAj2F,MAAA/O,KAAAgP,YAAA,GAAAhP,KAkmNlBm4C,aAlmNkB,eAAAmtD,EAAA/lG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkmNH,SAAAu4F,EAAOz/F,GAAP,IAAAunC,EAAAlhB,EAAA2rB,EAAA7S,EAAAtV,EAAA61E,EAAA1oB,EAAA5mB,EAAAxxB,EAAAs9C,EAAAyjB,EAAAC,EAAAp1D,EAAAq1D,EAAAC,EAAA52F,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAy4F,GAAA,cAAAA,EAAAv4F,KAAAu4F,EAAAt4F,MAAA,UAAmB8/B,EAAnBu4D,EAAAtkG,OAAA,QAAAgrB,IAAAs5E,EAAA,IAAAA,EAAA,GAAyCz5E,IAAzCy5E,EAAAtkG,OAAA,QAAAgrB,IAAAs5E,EAAA,KAAAA,EAAA,GAEP9tD,EAAY,CAChBse,OAAQp1D,EAAK4M,MAAM,GACnBwqC,OAAQp3C,EAAK4M,MAAM,IAGhB9H,EAAYy6B,KAPJ,CAAAslE,EAAAt4F,KAAA,eAAAs4F,EAAAttF,OAAA,SASJu/B,GATI,UAaP7S,EAbO,aAAAj7B,OAasBlE,EAAYy6B,KAAKr3B,QAbvC,KAAAc,OAakDmiB,KACzDwD,EAAa3uB,EAAKitC,8BAA8BhJ,MACnCtV,EAAWymC,QAAWp1D,EAAK4M,MAAM+hB,EAAWymC,QAAQxnD,UAAa+gB,EAAWyoB,QAAWp3C,EAAK4M,MAAM+hB,EAAWyoB,QAAQxpC,QAf3H,CAAAi3F,EAAAt4F,KAAA,eAAAs4F,EAAAttF,OAAA,SAiBJ,CACL69C,OAAOp1D,EAAK4M,MAAM+hB,EAAWymC,QAC7Bhe,OAAOp3C,EAAK4M,MAAM+hB,EAAWyoB,UAnBpB,cAAAytD,EAAAt4F,KAAA,GAuBMvM,EAAK07E,QAAQ52E,EAAYy6B,KAAK5yB,OAvBpC,WAuBP63F,EAvBOK,EAAAt1F,KAAA,CAAAs1F,EAAAt4F,KAAA,gBAAAs4F,EAAAttF,OAAA,SA2BJu/B,GA3BI,WA8BRzK,EA9BQ,CAAAw4D,EAAAt4F,KAAA,gBAAAs4F,EAAAt4F,KAAA,GA+BavM,EAAK6E,mBAAmBC,GA/BrC,QA+BXunC,EA/BWw4D,EAAAt1F,KAAA,WAkCR88B,EAlCQ,CAAAw4D,EAAAt4F,KAAA,gBAAAs4F,EAAAttF,OAAA,SAoCJu/B,GApCI,eAuCPglC,EAAY0oB,EAAK1oB,UAAUtqE,IAAI,SAAC+gD,EAAKxqD,GAAQ,OAAOwqD,EAAKr5C,WAAW/Q,gBACpE+sD,EAAOsvC,EAAKtvC,KAEZxxB,EAAgB,GAChBs9C,EAAgB,GAChByjB,EAAgB,GA5CTI,EAAAt4F,KAAA,GA8CPvM,EAAK4L,aAAa9G,EAAY+C,UAA9B,eAAAi9F,EAAAvmG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAwC,SAAA+4F,EAAOj9F,EAAaC,GAApB,IAAAE,EAAA+8F,EAAAC,EAAAC,EAAAC,EAAAtP,EAAA,OAAArsE,EAAApqB,EAAAgN,KAAA,SAAAg5F,GAAA,cAAAA,EAAA94F,KAAA84F,EAAA74F,MAAA,UACtCtE,EAAeH,EAAaI,QAAQgR,WAAW/Q,eAEjC,KADd68F,EAAYlpB,EAAUt9D,QAAQvW,IAFQ,CAAAm9F,EAAA74F,KAAA,YAItC04F,EAAcjlG,EAAK4M,OAAO5M,EAAK2vC,MAAMulB,EAAK8vC,KAC1CE,EAAcllG,EAAK67C,QAAQopD,EAAYhsF,IAAI,MAAM3Q,MAAM,MAEvD6iB,EAPsC,CAAAi6E,EAAA74F,KAAA,gBAQpC44F,EAAc,KACZtP,EAAiB71F,EAAKylC,kBAAkB3gC,GATNsgG,EAAA74F,KAAA,GAUlCvM,EAAK4L,aAAarN,OAAO8B,KAAKw1F,GAA9B,eAAAwP,EAAA9mG,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA+C,SAAAs5F,EAAOt6D,GAAP,OAAAxhB,EAAApqB,EAAAgN,KAAA,SAAAm5F,GAAA,cAAAA,EAAAj5F,KAAAi5F,EAAAh5F,MAAA,OAAAg5F,EAAA/5E,GAC3Cwf,EAD2Cu6D,EAAAh5F,KAE5C,SAF4Cg5F,EAAA/5E,GAAA,EAK5C,YAL4C+5E,EAAA/5E,GAAA,yBAAA+5E,EAAAh5F,KAAA,EAG3BvM,EAAK2uF,WAAW7pF,EAAY6H,MAAM7H,GAHP,cAG/CqgG,EAH+CI,EAAAh2F,KAAAg2F,EAAAhuF,OAAA,0BAAAguF,EAAAh5F,KAAA,EAM3BvM,EAAKguF,cAAclpF,EAAY6H,MAAM7H,GANV,cAM/CqgG,EAN+CI,EAAAh2F,KAAAg2F,EAAAhuF,OAAA,2BAAAguF,EAAAhuF,OAAA,oBAW/C4tF,IACFzhE,EAAcsH,GAAYm6D,GAZuB,yBAAAI,EAAA13F,SAAAy3F,EAAAtmG,SAA/C,gBAAAwmG,GAAA,OAAAH,EAAAt3F,MAAA/O,KAAAgP,YAAA,IAVkC,QA4B1Cy2F,EAAcx8F,GAAgBi9F,EAC9BlkB,EAAc/4E,GAAgBg9F,EA7BY,yBAAAG,EAAAv3F,SAAAk3F,EAAA/lG,SAAxC,gBAAAymG,EAAAC,GAAA,OAAAZ,EAAA/2F,MAAA/O,KAAAgP,YAAA,IA9CO,YA+ETq+B,EA/ES,CAAAw4D,EAAAt4F,KAAA,YAgFXuqC,EAAUse,OAASp1D,EAAKsuC,UAAU0yC,EAAc30C,EAAgBxoC,qBAAqBwoC,EAAgBzoC,iBACrGkzC,EAAUM,OAASp3C,EAAKsuC,UAAUm2D,EAAcp4D,EAAgBxoC,qBAAqBwoC,EAAgBzoC,iBAErGrF,OAAOiO,OAAOk3B,GAAenjC,QAAS,SAAA4kG,GACpCruD,EAAUse,OAASte,EAAUse,OAAO9nD,KAAK63F,GACzCruD,EAAUM,OAASN,EAAUM,OAAO9pC,KAAK63F,KAMrCT,EAAsB1kG,EAAK4Q,gBAAgB,CAAC,YAAY,OAAO,aACzC5Q,EAAK4Q,gBAAgB,CAAC,YAAY,OAAO,cAC1C8zF,EA7FhB,CAAAG,EAAAt4F,KAAA,gBA8FH+iC,EAAetvC,EAAKwuE,kBA9FjBq2B,EAAAt4F,KAAA,GA+Fa+iC,EAAapD,OAAOpnC,EAAY6H,MAAM7H,GA/FnD,SA+FH6/F,EA/FGE,EAAAt1F,QAiGPunC,EAAUse,OAASte,EAAUse,OAAO9nD,KAAKq3F,GACzC7tD,EAAUM,OAASN,EAAUM,OAAO9pC,KAAKq3F,IAlGlC,eAsGP3kG,EAAK4M,MAAMkqC,EAAUM,QAAQxpC,UAC/BkpC,EAAUM,OAASp3C,EAAK4M,MAAM,IAE5B5M,EAAK4M,MAAMkqC,EAAUse,QAAQxnD,UAC/BkpC,EAAUse,OAASp1D,EAAK4M,MAAM,IA1GrBi4F,EAAAttF,OAAA,SA6GJvX,EAAKktC,8BAA8BjJ,EAAc6S,IA7G7C,eAAA+tD,EAAAttF,OAAA,SAgHNu/B,GAhHM,yBAAA+tD,EAAAh3F,SAAA02F,EAAAvlG,SAlmNG,gBAAA2mG,GAAA,OAAArB,EAAAv2F,MAAA/O,KAAAgP,YAAA,GAAAhP,KAotNlB0U,iBAAmB,SAAC5N,GAMlB,IANqE,IAA7CwD,EAA6C0E,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAApC,EAAEzE,EAAkCyE,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAArB,EAAE86B,EAAmB96B,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAN,EAEzD43F,EAAav9F,WAAWvC,GAAO,EACjC8+C,EAAW5kD,EAAK4M,MAAM9G,GAAO6rD,MAE7Bk0C,EAAY,EACTjhD,EAAStlB,IAAI,MAClBslB,EAAWA,EAAS3rC,IAAI,KACxB4sF,IAMF,GAHAt8F,EAAeyD,KAAKoE,IAAI,EAAE7H,GAGtBzD,GAAO,IAAK,CACd,IAAMggG,EAAcx8F,EAAWs7C,EAASmhD,IAAI,GAAGx9F,QAAQgB,GAAcyR,OAAO,EAAE1R,GAAY,KAC1Fs7C,EAAW13C,SAAS03C,GAAU1rC,YAAa4sF,EAAc,IAAIA,EAAc,SAE3ElhD,EAAWA,EAASr8C,QAAQe,GAI9B,GAAIs7C,GAAU,GAAMA,EAAStkD,OAAO,EAAGiJ,EACrCq7C,EAAWv8C,WAAWu8C,GAAUohD,YAAYz8F,QACvC,GAAKq7C,EAAStkD,OAAO,EAAGwoC,EAAc,CAC3C,IAAMm9D,EAAan9D,GAAc8b,EAAStkD,OAAO,GAEjDskD,GADe5kD,EAAK4M,MAAM9G,GAAO6rD,MAAMz4C,WAAWm4B,QAAQ,IAAI,IAAIr2B,OAAQ4pC,EAAStkD,OAAO,EAAG2lG,GAW/F,OANIL,IACFhhD,EAAW,IAAIA,GAGjBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAI,KA+BfihD,IAtvNrB7mG,KAAKiF,SAAShF,mEA0vNIwO,EAAQ5E,EAAMS,EAAS48F,EAAOC,GAEhD78F,EAAYsE,MAAMtE,GAAuB,EAAXA,EAC9B48F,EAAUt4F,MAAMs4F,GAAmB,GAATA,EAC1BC,EAAuBv4F,MAAMu4F,GAA6C,EAAtBA,EAGpD,IAAMC,GAFN34F,EAAUpF,WAAWrJ,KAAK4N,MAAMa,IAAUlF,QAAQe,IAE3B4P,WAAWm4B,QAAQ,IAAI,IAAI/wC,OAC9C8lG,EAAOF,IACT58F,EAAW0D,KAAKoE,IAAI,EAAE9H,GAAU88F,EAAOF,IACvCz4F,EAAUpF,WAAWrJ,KAAK4N,MAAMa,IAAUlF,QAAQe,IAGpD,IAAM+8F,EAAUr5F,KAAK+E,MAAMtE,GACvB64F,GAAW74F,EAAQ,GAAGu4F,YAAY18F,GAAU0R,OAAO,EAAE1R,GAGzD,GAFAg9F,GAAWA,EAAS,IAAIC,OAAOj9F,IAAY0R,OAAO,EAAE1R,GAEhD68F,EAAoB,CACtB,IAAMK,EAAiBF,EAAQtrF,OAAO,EAAEmrF,GACxCG,EAAUA,EAAQtrF,OAAOmrF,GACzB,IAAMM,EAAsBtgF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAWxb,SAAU,OAAQT,MAAO,OAAQQ,WAAY,WAAYomG,EAApE,IAA8EG,GAC1G,OAAQ54F,MAAM5O,KAAKuwC,QAAQ9hC,IApBR,IAoBsB0Y,EAAA/mB,EAAAC,cAAA8mB,EAAA/mB,EAAAsnG,SAAA,KAAGD,EAAmBtgF,EAAA/mB,EAAAC,cAAA,SAAO4K,MAAO,CAAC/J,SAAS,QAASomG,GAAvD,IAAwEngF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAWxb,SAAU,CAAC,EAAE,IAAK2I,IAE9I,OAAQ+E,MAAM5O,KAAKuwC,QAAQ9hC,IAtBR,IAsBsB0Y,EAAA/mB,EAAAC,cAAA8mB,EAAA/mB,EAAAsnG,SAAA,KAAGL,EAAQlgF,EAAA/mB,EAAAC,cAAA,iBAASinG,GAA4B,MAAVz9F,EAAgB,IAAM,KAAQA,EAAQsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAWxb,SAAU,CAAC,EAAE,IAAK2I,GAAqB,eAK9J3E,mDC5yNf8qB,EAAAC,QAAA,CAAkBqK,GAAA,6CCAlBtK,EAAAC,QAAA,CAAkB5F,YAAA,+DCAlB2F,EAAAC,QAAA,CAAkBjpB,QAAA,wDCAlBgpB,EAAAC,QAAA,CAAkB03E,SAAA,6h5JCGZC,6MAEJpjG,MAAQ,CACNqjG,WAAU,+EAGCA,GACX7nG,KAAK4F,SAAS,CACZiiG,+CAIK,IAAApiG,EAAAzF,KACDqC,EAAarC,KAAKC,MAAMoC,WACxBD,EAAWpC,KAAKC,MAAMmC,WAAaC,EACnCF,EAAgBnC,KAAKC,MAAMkC,gBAAkBE,EAC7CksB,EAA4C,qBAAzBvuB,KAAKC,MAAMsuB,WAA4BvuB,KAAKC,MAAMsuB,UACrEu5E,EAA4C,qBAAzB9nG,KAAKC,MAAM6nG,WAA4B9nG,KAAKC,MAAM6nG,UAErEhmG,EAAY,CAChBrC,EAAE,EACFC,OAAO,EACP4e,UAAU,EACVze,aAAa,EACb0I,YAAY,KACZ4B,SAAS,WACTklB,UAAU,UACVhsB,gBAAgB,WAGdjB,GAAaD,GAAiBnC,KAAKwE,MAAMqjG,aAC3C/lG,EAAUpC,OAAS,EACnBoC,EAAUwc,UAAY,KACtBxc,EAAUuB,gBAAkB,eAI1BrD,KAAKC,MAAM6B,WAAavC,OAAO8B,KAAKrB,KAAKC,MAAM6B,WAAWR,QAC5D/B,OAAO8B,KAAKrB,KAAKC,MAAM6B,WAAWP,QAAQ,SAAA9B,GACxCqC,EAAUrC,GAAKgG,EAAKxF,MAAM6B,UAAUrC,KAIxC,IAAMuf,EAAY,CAChBC,IAAOuU,eACPpxB,EAAW6c,IAAO8oF,OAAS,KAC1Bx5E,EAA4B,KAAhBtP,IAAOwU,OACpBq0E,EAAY7oF,IAAO0U,QAAU,KAC7BtxB,EAAa4c,IAAOlf,SAAW,KAC/BoC,EAAgB8c,IAAOyU,YAAc,MAOvC,OAJI1zB,KAAKC,MAAM+e,WAAaC,IAAOjf,KAAKC,MAAM+e,YAC5CA,EAAUxV,KAAKyV,IAAOjf,KAAKC,MAAM+e,YAIjC/c,EAAA7B,EAAAC,cAACovB,EAAA,EAADlwB,OAAAC,OAAA,GACMsC,EADN,CAEEkd,UAAWA,EACX3B,QAASrd,KAAKC,MAAMM,YACpBynG,WAAY,SAACxhG,GAAD,OAAOf,EAAKwiG,cAAa,IACrCC,YAAa,SAAC1hG,GAAD,OAAOf,EAAKwiG,cAAa,MAGpCjoG,KAAKC,MAAM2gB,OAAS5gB,KAAKC,MAAM2gB,MAAMtf,OAAO,GAC1CW,EAAA7B,EAAAC,cAACovB,EAAA,EAADlwB,OAAAC,OAAA,CACEsd,GAAI,CAAC,EAAE,GACPpS,GAAI,CAAC,EAAE,GACPlI,WAAY,SACZC,cAAe,OACXzC,KAAKC,MAAMkoG,kBAEflmG,EAAA7B,EAAAC,cAACovB,EAAA,EAAQ24E,GAAT7oG,OAAAC,OAAA,CACEyB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbC,UAAW,OACXV,MAAO,YACPW,WAAY,WACRpB,KAAKC,MAAM4oB,YAEd7oB,KAAKC,MAAM2gB,OAGZ5gB,KAAKC,MAAMooG,aAAeroG,KAAKC,MAAMooG,YAAY/mG,OAAO,GACtDW,EAAA7B,EAAAC,cAACovB,EAAA,EAAD,CACEua,UAAW,MACX/b,QAASjuB,KAAKC,MAAMooG,aAEpBpmG,EAAA7B,EAAAC,cAACovB,EAAA,EAAD,CACE/kB,GAAI,EACJhK,KAAM,OACNE,KAAM,MACNH,MAAO,gBAMpBT,KAAKC,MAAM2B,iBAnGQd,aAyGb8mG,wKCyKAU,6MA5Qb9jG,MAAQ,CACNsB,YAAY,KACZ+vE,aAAa,KACbtwE,cAAc,KACdgjG,eAAe,KACfj8F,gBAAgB,QAIlBvH,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,2JAK9CD,KAAKmF,YACLnF,KAAKoF,gMAGkBC,EAAUC,8EACjCtF,KAAKmF,cAEwBG,EAAUC,gBAAkBvF,KAAKwE,MAAMe,sCAE5DO,EAAc9F,KAAKC,MAAMuoG,UAAUl8F,gBAAgBtM,KAAKwE,MAAMe,eAC9DswE,EAAe/vE,EAAYosC,kBAG3Bv6B,QAAQqD,IAAI,CAChBhb,KAAKC,MAAMq+B,aAAau3C,EAAan1E,KAAKm1E,EAAa3sE,QAAQ2sE,EAAax3C,KAC5Er+B,KAAKC,MAAMq+B,aAAat+B,KAAKwE,MAAMe,cAAcO,EAAYoD,QAAQpD,EAAYu4B,cAGnFr+B,KAAK4F,SAAS,CACZE,cACA+vE,kRAMEvpE,EAAkB/M,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAiBkuC,OAAQ,SAACpuB,EAAOze,GACxF,IAAM7H,EAAcL,EAAKxF,MAAMuoG,UAAUl8F,gBAAgBqB,GAOzD,OANI7H,EAAY+kB,SACduB,EAAO5iB,KAAPjK,OAAAsmD,EAAA,EAAAtmD,CAAA,CACEuH,MAAM6G,GACH7H,IAGAsmB,GACP,IAEIm8E,EAAiBj8F,EAAgB,GACjC/G,EAAgBgjG,EAAezhG,MAErC9G,KAAK4F,SAAS,CACZL,gBACAgjG,iBACAj8F,0JAIQ/G,GACVvF,KAAK4F,SAAS,CACZL,mDAMF,IAsGMkjG,EAAoBzoG,KAAKwE,MAAMsB,YAAc9F,KAAKwE,MAAMsB,YAAYrE,UAAY,KAEtF,OACE0lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGb1C,KAAKwE,MAAM8H,gBAmBV6a,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZE,eAAgB,UAGb1C,KAAKwE,MAAM8H,gBAAgBhL,OAU1B6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACV6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,iBAKA6iB,EAAA/mB,EAAAC,cAACmd,EAAA,EAADje,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEES,KAAM,SACNke,cAAc,EACdhB,QAAS5d,KAAKwE,MAAM8H,gBACpB0R,kBAtKM,SAAA/d,GACxB,IAAM4J,EAAQ5J,EAAM4J,MACd/D,EAAc,CAClB7C,KAAKhD,EAAMkE,KAAKlB,MAGlB,OACEkkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,UAEZ2kB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACP/D,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHzD,MAAM,MACNC,OAAO,UAIbunB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACPoiB,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,mBAoIAmf,SAAU5f,KAAKg4B,YAAYrJ,KAAK3uB,MAChC8d,aAAc9d,KAAKwE,MAAM+jG,eACzBtqF,qBA7HS,SAAAhe,GAE3B,IACMye,GAA4D,IADlDze,EAAMye,YAAYd,QACN4B,QAAQvf,EAAMye,YAAY5X,OAAgB7G,EAAMye,YAAY5X,MAAQ,KAEhG,IAAK4X,EACH,OAAO,KAGT,IAAM7U,EAAQ6U,EAAY7U,MACpB/D,EAAc,CAClB7C,KAAKyb,EAAYzb,MAGnB,OACEkkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACEyL,MAAO,CACLE,KAAK,KAEPzI,eAAgB,iBACZzC,EAAMke,YAEVgJ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACEC,EAAG,EACHE,MAAO,GACHM,EAAMke,WAHZ,CAIE3b,WAAY,SACZC,cAAe,MACfwI,MAAO,CAACmT,OAAO,WACf1b,eAAgB,eAEhBykB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACP/D,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,UAIbunB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACPoiB,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,uBAgFFgoG,GACEthF,EAAA/mB,EAAAC,cAACooG,EAADlpG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6F,YAAa9F,KAAKwE,MAAMsB,YACxB+vE,aAAc71E,KAAKwE,MAAMqxE,aACzBtwE,cAAevF,KAAKwE,MAAMe,kBAxClC4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YACPU,UAAW,UAJb,gCAzBNgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJra,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,+BA5MA/C,2ECuKPinB,6MAtKbhjB,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,iMAGkBE,EAAUC,mEACjCtF,KAAKmF,kJAGE,IAAAM,EAAAzF,KACDwtB,EAAiBxtB,KAAKC,MAAMutB,eAC5Bk+C,EAAe1rE,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa,aAChE9L,EAAc9F,KAAKC,MAAM6F,aAAe9F,KAAKC,MAAMg2C,kBAAkBy1B,EAAan/C,UAAUm/C,EAAa/9D,OAC/G,OACEwZ,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHtC,OAAO,KACPuL,MAAM,KAKRkc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE+M,GAAI,EACJ7vB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChBgmG,aAAY,aAAA1+F,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOygB,UAEnDkD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhkB,GAAI,EACJxC,KAAM,QACNF,KAAM8sB,EAAevqB,KACrBxC,MAAO+sB,EAAe/sB,MAAMitB,MAE9BvG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO+sB,EAAe/sB,MAAMitB,KAE3BF,EAAe9sB,OAGpBymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,WACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,CACEysB,UAAW,CACTvrB,KAAI,GAAAsJ,OAAIwjB,EAAem7E,SAAnB,OACJ1gE,aAAY,EACZhoC,MAAM,CACJqK,SAAS,EACTrJ,WAAW,EACXC,SAAS,CAAC,EAAE,GACZC,UAAU,SACVob,UAAU,CACR7Z,eAAe,UAEjBjC,MAAMT,KAAKC,MAAMutB,eAAe/sB,MAAMitB,OAGtC1tB,KAAKC,MAfX,CAgBE6F,YAAaA,EACb6H,MAAO+9D,EAAa/9D,MACpB+e,QAASg/C,EAAah/C,QACtBH,SAAUm/C,EAAan/C,cA8B7BpF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJrD,WAAY,EACZR,MAAO,aAEN+sB,EAAe66E,YAAYO,MAG5Bp7E,EAAeq7E,SAASr2F,IAAK,SAACs2F,EAAQj7F,GAAT,OAC3BsZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfsB,IAAG,WAAAiG,OAAa6D,IAEhBsZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhkB,GAAI,EACJ1C,KAAM,OACND,MAAO+sB,EAAe/sB,MAAMitB,MAE9BvG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZR,MAAO+sB,EAAe/sB,MAAMitB,KAE3Bo7E,MAKT3hF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACPyqB,cAAe,SACfnnB,KAAMuqB,EAAevqB,KACrBnD,UAAW0tB,EAAe/sB,MAAMitB,IAChCrQ,QAAS,SAAA7W,GAAC,OAAIf,EAAKxF,MAAM8oG,kBAAkBv7E,EAAe4U,SAGxDpiC,KAAKC,MAAM6F,YAAX,SAAAkE,OAAkCwjB,EAAe9sB,MAAjD,cAAAsJ,OAAwEwjB,EAAe9sB,gBAhKlFI,aCuEJinB,6MApEbhjB,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,iMAGkBE,EAAUC,mEACjCtF,KAAKmF,kJAGE,IAAAM,EAAAzF,KACDgpG,EAAkBhpG,KAAK+E,cAAc6M,gBAAgB,CAAC,aAC5D,OACEuV,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,IAGJK,KAAKC,MAAM6F,aACVqhB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CACEuD,GAAI,GADN,uBAOJ6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdnD,OAAO8B,KAAK2nG,GAAiBx2F,IAAK,SAAAy2F,GAAW,OAC3C9hF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,CAAC,EAAE,GACP7B,cAAe,SACfsB,IAAG,WAAAiG,OAAai/F,GAChBtpG,MAAO,CAAC,EAAG,EAAEJ,OAAO8B,KAAK2nG,GAAiB1nG,OAAQ,MAElD6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC6oG,EAAD3pG,OAAAC,OAAA,GACMiG,EAAKxF,MADX,CAEE6F,YAAaL,EAAKxF,MAAM6F,YACxB0nB,eAAgBw7E,EAAgBC,mBA3DjCnoG,qGC6tBJqoG,6MAttBb3kG,MAAQ,CACNwS,WAAW,CACTwD,OAAO,KACP0X,SAAQ,GAEVuI,WAAW,KACXyC,aAAY,EACZksE,eAAc,EACdC,eAAc,EACdC,gBAAe,EACfhuE,gBAAe,EACf4F,kBAAiB,EACjB1F,oBAAoB,QAItBz2B,cAAgB,OAkDhBi3B,iBAAmB,SAACx1B,GAAyB,IAAvB+iG,IAAuBv6F,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,KAAAA,UAAA,GAErCyrB,EAAaj0B,EAAEuW,OAAOjW,MAAMxF,SAAWsN,MAAMpI,EAAEuW,OAAOjW,OAAS9F,EAAK+D,cAAc6I,MAAMpH,EAAEuW,OAAOjW,OAAS9F,EAAK+D,cAAc6I,MAAM,GACrI5M,EAAKwD,MAAMi2B,aAAeA,GAC5Bz5B,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bm1B,aACAe,oBALwB,OAMvB,WACG+tE,GAA2D,oBAAnCvoG,EAAKf,MAAMupG,qBACrCxoG,EAAKf,MAAMupG,oBAAoBxoG,EAAKwD,MAAMi2B,iBAMlD4B,cAAgB,WACd,GAAuC,OAAnCr7B,EAAKwD,MAAMg3B,oBACb,OAAO,EAET,IAAMc,EAAqBt7B,EAAK+D,cAAc6I,MAAM5M,EAAKwD,MAAMg3B,qBAAqBvhB,IAAI,KAClFwgB,EAAaz5B,EAAKf,MAAMumC,eAAiBxlC,EAAK+D,cAAc6I,MAAM5M,EAAKf,MAAMumC,cAAc53B,QAAU5N,EAAK+D,cAAc6I,MAAM5M,EAAKf,MAAMumC,cAAcl9B,MAAMgzB,GAAsB,KAEzLt7B,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bm1B,eACC,WAC6C,oBAAnCz5B,EAAKf,MAAMupG,qBACpBxoG,EAAKf,MAAMupG,oBAAoBxoG,EAAKwD,MAAMi2B,iBAKhDgvE,uBAAyB,WACvB,OAAuC,OAAnCzoG,EAAKwD,MAAMg3B,qBAGRx6B,EAAK+D,cAAc6I,MAAM5M,EAAKwD,MAAMg3B,qBAAqBvhB,IAAI,QAetEsiB,uBAAyB,SAACf,GACxBx6B,EAAK4E,SAAS,CACZ41B,2BAIJW,oBAAsB,WAAiB,IAAhB9K,EAAgBriB,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KACvBqiB,IACHA,EAASrwB,EAAKwD,MAAMi2B,YAGtB,IAAMa,GADNjK,EAASrwB,EAAK+D,cAAc6I,MAAMyjB,IACJziB,SAAWyiB,EAAO+K,IAAI,IAAM/K,EAAO5f,GAAGzQ,EAAKf,MAAMumC,cAC/ExlC,EAAK4E,SAAS,CACZ01B,sBAIJL,6BAAU,SAAA5jB,IAAA,IAAA4nB,EAAAC,EAAA,OAAA1U,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,cAAAgK,EAAAhK,KAAA,EAEuBvM,EAAK0oG,wBAF5B,OAAAnyF,EAAAhH,KA8DNvP,EAAK4E,SAAS,CACZs7B,kBAAiB,KAzDbjC,EAAkB,SAACvxB,EAAGmJ,GAE1B,IAAMwb,EAAY,CAChBxI,YAAa,UACbD,cAAe,eACfE,WAAYpc,EAAKA,EAAGK,OAAS,MAGzBmvB,EAAcxvB,GAAoB,YAAdA,EAAGK,OAEzB8I,IACFwb,EAAUvI,WAAa9oB,EAAK+D,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrB/M,EAAK+D,cAAc4kB,yBAAyB0I,GAG9CrxB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B47B,iBAAkBhE,EAClBlmB,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERwD,OAAO,KACP0X,SAAQ,OAI8B,oBAA/BlxB,EAAKf,MAAMg/B,iBAAkC/B,GACtDl8B,EAAKf,MAAMg/B,gBAAgBvxB,IAIzBwxB,EAAyB,SAACxxB,GAC9B,IAAM8M,EAAS9M,EAAGglB,gBAClB1xB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERwD,eAONxZ,EAAK+D,cAAco6B,YAAYn+B,EAAKf,MAAM6F,YAAY6H,MAAM3M,EAAKf,MAAM41E,aAAa3sE,QAAQ+1B,EAAgBC,GAE5Gl+B,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERwD,OAAO,KACP0X,SAAQ,IAEVgP,kBAAiB,MA3Db,wBAAA3pB,EAAA1I,SAAAwI,EAAArX,WAoEV2pG,+BAAY,SAAA7xF,IAAA,IAAA2iB,EAAAmvE,EAAAjkG,EAAA8sB,EAAAF,EAAAI,EAAAuO,EAAAk6B,EAAAyuC,EAAAv3E,EAAA+nC,EAAAvzD,EAAA,OAAA0jB,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,UAEJktB,EAAaz5B,EAAKwD,MAAMi2B,WAAaz5B,EAAK+D,cAAc6I,MAAM5M,EAAKwD,MAAMi2B,YAAc,KAFnF,CAAAxiB,EAAA1K,KAAA,eAAA0K,EAAAM,OAAA,UAID,GAJC,cAOJqxF,EAAU5oG,EAAK+D,cAAck4B,qBAAqBxC,EAAWz5B,EAAKf,MAAM6F,YAAYwE,UAIpF3E,EAAW,SAAC+H,EAAGmJ,GACnB,IAAMqmB,EAA4B,YAAdxvB,EAAGK,OAGjBskB,EAAY,CAChBvI,WAAYpc,EAAGK,OACf6b,cAAa,eACbuT,WAAY1C,EAAWlxB,UACvBsgB,YAAa7oB,EAAKf,MAAM6F,YAAY6H,OAGlCkJ,IACFwb,EAAUvI,WAAa9oB,EAAK+D,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrB/M,EAAK+D,cAAc4kB,yBAAyB0I,GAG9CrxB,EAAK4E,SAAS,CACZs3B,cACAlmB,WAAY,CACVwD,OAAO,KACP0X,SAAQ,KAIRgL,IAEFl8B,EAAKg7B,iBAAiB,CACpBjf,OAAO,CACLjW,MAAM,KAER,GACF9F,EAAK4E,SAAS,CACZyjG,eAAc,IAGmB,oBAAxBroG,EAAKf,MAAM0F,UACpB3E,EAAKf,MAAM0F,SAAS+H,EAAGk8F,EAAQj3E,KAK/BF,EAAkB,SAAC/kB,GACvB,IAAM8M,EAAS9M,EAAGglB,gBAClB1xB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERwD,eAKA+X,EAAevxB,EAAKf,MAAM41E,aAAan1E,KAEzCiyB,EAAS,KApEH1a,EAAA1K,KAAA,GAuEqBvM,EAAK0oG,uBAAsB,GAvEhD,WAuEJxoE,EAvEIjpB,EAAA1H,OAyEYvP,EAAKf,MAAMmpG,eAAiBpoG,EAAKwD,MAAM4kG,gBAAkBloE,GAzErE,CAAAjpB,EAAA1K,KAAA,gBAAA0K,EAAA1K,KAAA,GA2EuBvM,EAAK+D,cAAcm+D,WAAWliE,EAAKf,MAAM6F,YAAY6H,MAAO3M,EAAKf,MAAMuM,QAAS+lB,GA3EvG,SA2EF6oC,EA3EEnjD,EAAA1H,QA8ENoiB,EAAS3xB,EAAKf,MAAM6pG,2BAA2BF,EAAQxuC,IA9EjDnjD,EAAA1K,KAAA,iBAiFRolB,EAAS3xB,EAAKf,MAAM2yB,qBAAqBg3E,EAAQ5oG,EAAKwD,MAAMg3B,qBAjFpD,QAoFN7I,GAEAL,GAFOu3E,EAILl3E,GAFFL,WACA+nC,EAHOwvC,EAGPxvC,aAGIvzD,EAAQ6rB,EAAO7rB,OAAS,KAI9B9F,EAAKf,MAAM8yB,0BAA0BR,EAAcD,EAAY+nC,EAAcvzD,EAAOnB,EAAU8sB,GAE9FzxB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERkb,SAAQ,QAIZlxB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERkb,SAAQ,OA1GJ,yBAAAja,EAAApJ,SAAAiJ,EAAA9X,WAgHZod,uCAAoB,SAAAnQ,IAAA,OAAAud,EAAApqB,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBvM,EAAK4E,SAAS,CACZoR,WAAY,CACVwD,OAAO,KACP0X,SAAQ,KAJM,wBAAA7kB,EAAAwB,SAAA5B,EAAAjN,WA0CpB+pG,gBAAkB,WAChB/oG,EAAKoE,uFAjVDpF,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,kRAICnF,KAAKoF,gMAGYC,EAAUC,wFACjCtF,KAAKmF,YAEC67B,EAAgB37B,EAAUgJ,SAAWrO,KAAKC,MAAMoO,OAChDye,EAAiBznB,EAAUmH,UAAYxM,KAAKC,MAAMuM,QAClDw9F,EAAsB3kG,EAAUmhC,eAAiBxmC,KAAKC,MAAMumC,aAC5DyjE,EAAuB3kG,EAAU8jG,gBAAkBppG,KAAKwE,MAAM4kG,cAC9Dc,EAAwB7kG,EAAUikG,iBAAmBtpG,KAAKC,MAAMqpG,eAChEa,EAAkBp+F,KAAKC,UAAU3G,EAAUwwE,gBAAkB9pE,KAAKC,UAAUhM,KAAKC,MAAM41E,cACvFu0B,EAAqBr+F,KAAKC,UAAU3G,EAAUS,eAAiBiG,KAAKC,UAAUhM,KAAKC,MAAM6F,eAC3Fk7B,GAAiBlU,GAAkBk9E,GAAuBG,GAAmBD,GAAyBE,GAAsBH,qCACxHjqG,KAAKoF,mBAGmBE,EAAU47B,mBAAqBlhC,KAAKwE,MAAM08B,kBAE7B,oBAAhClhC,KAAKC,MAAMihC,kBACpBlhC,KAAKC,MAAMihC,iBAAiBlhC,KAAKwE,MAAM08B,mBAIRlhC,KAAKwE,MAAMg3B,sBAAwBl2B,EAAUk2B,qBAC9CwF,IAChChhC,KAAKq8B,gBAGmB/2B,EAAUm1B,aAAez6B,KAAKwE,MAAMi2B,YAE5Dz6B,KAAKm8B,oKA2CPn8B,KAAK4F,SAAS,CACZyjG,eAAc,gDAIED,GAClBppG,KAAK4F,SAAS,CACZwjG,uOAoNiBppG,KAAKC,MAAMmpG,eAAiBppG,KAAKwE,MAAM4kG,yDACjD,kBAGyB98E,IAA9BtsB,KAAKC,MAAMqpG,gBAAiCtpG,KAAKC,MAAMqpG,yDAClD,0BAEkBtpG,KAAKC,MAAMq+B,aAAat+B,KAAKC,MAAM41E,aAAan1E,KAAKV,KAAKC,MAAM41E,aAAa3sE,QAAQlJ,KAAKC,MAAM41E,aAAax3C,yDAGvGr+B,KAAK+E,cAAc44B,mBAAmB39B,KAAKC,MAAM6F,YAAY6H,MAAM3N,KAAKC,MAAM41E,aAAa3sE,QAAQlJ,KAAKC,MAAMuM,wBAAvI00B,2BACCA,qCAGF,oQAIDzG,EAAa,KACbe,EAAsB,cACGx7B,KAAK0pG,+BAA9BxoE,SACAooE,GAA+C,IAA9BtpG,KAAKC,MAAMqpG,eAElCtpG,KAAK4F,SAAS,CACZ60B,aACA6uE,iBACApoE,mBACA1F,2JAQK,IAAA/1B,EAAAzF,KAEDqqG,EAAwC,WAA7BrqG,KAAKC,MAAMqqG,cACtBj8F,EAASrO,KAAKC,MAAMoO,OAASrO,KAAKC,MAAMoO,OAAS,UAEvD,OACE8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGd2nG,EACEljF,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD,CACExsB,UAAW,CACTgb,GAAG,GAEL7Z,KAAM,aACNY,KAAM,kGAEL7D,KAAKC,MAAMuM,QAIZxM,KAAKC,MAAM6F,cAAgB9F,KAAK+E,cAAc6I,MAAM5N,KAAKC,MAAMumC,cAAc53B,SAAW5O,KAAK+E,cAAc6I,MAAM5N,KAAKC,MAAMumC,cAAc/0B,GAAG,GAC/I0V,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAGLK,KAAKC,MAAMsqG,SACTpjF,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD/uB,OAAAC,OAAA,CACEsC,UAAW,CACTwC,GAAG,IAEDtE,KAAKC,MAAMsqG,UAKnBvqG,KAAKC,MAAMuqG,OAASxqG,KAAKC,MAAMuqG,MAAMlpG,OAAO,GAC1C6lB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFuC,GAAG,CAAC,EAAE,KAGRmlB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAGbzC,KAAKC,MAAMuqG,MAAMh4F,IAAK,SAACi4F,EAAKC,GAAN,OACpBvjF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfsB,IAAG,QAAAiG,OAAU0gG,IAEbvjF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAO+pG,EAAKhlF,UAAY,WAAaglF,EAAKxnG,KAC1CxC,MAAQgqG,EAAKhlF,UAAYhgB,EAAKxF,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAGjFglF,EAAKvmF,KACHiD,EAAA/mB,EAAAC,cAACsqG,EAAA,EAAD,CACEjgG,GAAI,EACJxJ,SAAU,EACVT,MAAO,OACPQ,WAAY,EACZic,KAAMutF,EAAKvmF,KACX/iB,UAAW,OACX6b,WAAY,QAEXytF,EAAKpC,aAGRlhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVD,WAAY,EACZR,MAAO,WACPU,UAAW,QAEVspG,EAAKpC,kBAW1BlhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAGLK,KAAKwE,MAAM6kG,eAAiBrpG,KAAKC,MAAMmpG,cACrCjiF,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACH8a,GAAG,EACHzV,QAAQ,OACR7E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,UACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,4IASFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ6kB,UAAU,EACVC,QAAS5hC,KAAKwE,MAAM4kG,cACpBv/F,MAAK,8CACL+V,SAAW,SAAApZ,GAAC,OAAIf,EAAKmlG,oBAAoBpkG,EAAEuW,OAAO6kB,cAGnD5hC,KAAKwE,MAAM6kG,eAAiBrpG,KAAKC,MAAMmpG,eAC1CjiF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,EACHqd,GAAI,EACJnd,MAAO,EACPE,aAAc,EACd2C,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBW,gBAAiB,gBACjB3D,OAAM,aAAAsK,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOme,UAE7CwF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjmB,UAAW,SACX6b,WAAY,UACZK,QAASrd,KAAKqpG,cAAc16E,KAAK3uB,OAHnC,6CAOAmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJ9J,KAAM,MACNF,KAAM,UACND,MAAO,cAOfT,KAAKwE,MAAM8kG,iBAAmBtpG,KAAKwE,MAAM08B,iBACvClhC,KAAKwE,MAAMwS,WAAWkb,QACpB/K,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJra,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACsW,EAAA,EAADpX,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEwc,SAAQ,uBACR3O,KAAM9N,KAAKwE,MAAMwS,WAAWwD,OAC5BgC,WAAU,gCACVY,kBAAmBpd,KAAKod,kBAAkBuR,KAAK3uB,UAInDmnB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,IAGJ0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,WACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,SACXmK,wBAAyB,CACvBC,OAAOvL,KAAKC,MAAM4qG,sBAGtB1jF,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,KAEXY,YAAaP,KAAKi7B,QAAQtM,KAAK3uB,OALjC,aAYNA,KAAKwE,MAAMwS,WAAWkb,QACtB/K,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJra,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACsW,EAAA,EAADpX,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6N,KAAM9N,KAAKwE,MAAMwS,WAAWwD,OAC5BgC,WAAU,cAAAxS,OAAgBqE,EAAhB,eACV+O,kBAAmBpd,KAAKod,kBAAkBuR,KAAK3uB,MAC/Cyc,SAAQ,GAAAzS,OAAKhK,KAAK+E,cAAc+E,WAAWuE,GAAnC,qBAIZ8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ9B,WAAY,SACZC,cAAe,MACfC,eAAgB1C,KAAKC,MAAMqiC,oBAAsB,gBAAkB,YAGjEtiC,KAAKC,MAAMqiC,qBACTnb,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPoxB,SAAU,MACVvuB,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZE,UAAW,OACX8J,MAAO,CACL8lB,SAAS,OACTC,SAAS,SACT5lB,WAAW,SACX6lB,aAAa,YAEfxwB,MAAOT,KAAKC,MAAMqiC,oBAAoB7hC,MAAQT,KAAKC,MAAMqiC,oBAAoB7hC,MAAQ,aAEpFT,KAAKC,MAAMqiC,oBAAoBz+B,QAMrC7D,KAAK+E,cAAc6I,MAAM5N,KAAKC,MAAMumC,cAAc53B,SACjDuY,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPoxB,SAAU,MACVvuB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZR,MAAO,YACPU,UAAW,QACX6b,WAAY,YACZK,QAAU,SAAC7W,GAAD,OAAOf,EAAK82B,uBAAuB,MAC7CtxB,MAAO,CACL8lB,SAAS,OACTC,SAAS,SACT5lB,WAAW,SACX6lB,aAAa,aAXjB,YAcYjxB,KAAK+E,cAAc6I,MAAM5N,KAAKC,MAAMumC,cAAcj9B,QAAQvJ,KAAKC,MAAM6C,SAAW,EAAI,GAdhG,IAcqG9C,KAAKC,MAAM6F,YAAY6H,SAMpIwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnZ,IAAK,EACLrD,KAAM,SACN+2B,UAAU,EACV/hC,OAAQ,QACRC,aAAc,EACdoB,WAAY,IACZsH,YAAa,aACblF,gBAAiB,SACjBib,UAAW,kBACXic,YAAW,gBACX3a,SAAU5f,KAAKg8B,iBAAiBrN,KAAK3uB,MACrCN,OAAM,aAAAsK,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOygB,SAC7Cnd,MAAiC,OAA1B9G,KAAKwE,MAAMi2B,WAAsBz6B,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMi2B,YAAYlxB,UAAY,KAEtG4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJta,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK8P,IAAK,SAAAuE,GAAU,OAC5BoQ,EAAA/mB,EAAAC,cAACi0B,EAAA,EAAD,CACEvd,WAAYA,EACZhT,IAAG,YAAAiG,OAAc+M,GACjBwd,YAAa,kBAAI9uB,EAAK82B,uBAAuBxlB,IAC7C3U,SAAUqD,EAAKjB,MAAMg3B,sBAAwBttB,SAAS6I,QAK9DoQ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJpa,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACEvqG,YAAaP,KAAK2pG,UAAUh7E,KAAK3uB,MACjCV,YAAaC,OAAOC,OAAO,CACzBsd,GAAG,EACHnd,MAAM,CAAC,EAAE,IACTsL,MAAM,CACJI,cAAc,cAEhBtL,SAASC,KAAKwE,MAAM82B,gBAAgBt7B,KAAKC,MAAMq7B,gBAC/Ct7B,KAAKC,MAAMX,cAEZU,KAAKC,MAAMoO,YAQxBrO,KAAKC,MAAM2B,SAlVbulB,EAAA/mB,EAAAC,cAACu6B,EAAA,EACK56B,KAAKC,eAhYSa,aCqxBjBiqG,6MAjxBbvmG,MAAQ,CACNwmG,SAAS,KACTC,WAAW,KACXC,YAAY,KACZC,YAAY,KACZC,YAAY,KACZtlG,YAAY,KACZ+vE,aAAa,KACbh/B,aAAa,KACbrQ,aAAa,KACbqhC,cAAc,KACdwjC,eAAe,KACf/B,eAAe,KACfhuE,gBAAe,EACfuvE,mBAAmB,KACnBS,eAAe,UACfC,uBAAsB,KAIxBxmG,cAAgB,OAyMhB2xB,WAAa,WACX11B,EAAK4E,SAAS,CACZulG,YAAa,mFAxMXnrG,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAKoF,gMAGkBC,EAAUC,mEACjCtF,KAAKmF,YAEkBnF,KAAKC,MAAMuM,UAAYnH,EAAUmH,SAEtDxM,KAAKoF,WAGsBE,EAAUgmG,iBAAmBtrG,KAAKwE,MAAM8mG,gBAEnEtrG,KAAKwrG,+RAMFxrG,KAAKC,MAAMuM,iDACP,6BAeCmL,QAAQqD,IAAI,CAEpBhb,KAAK+E,cAAc4nC,gBAAgB3sC,KAAKC,MAAMsF,cAAcvF,KAAKC,MAAMuM,SACvExM,KAAK+E,cAAc4nC,gBAAgB3sC,KAAKC,MAAM0sB,cAAcjsB,KAAKV,KAAKC,MAAMuM,SAM5ExM,KAAK+E,cAAc2iE,wBAAwB1nE,KAAKC,MAAM0sB,cAAc2vB,WAAW57C,KAAKV,KAAKC,MAAMuM,QAAQxM,KAAKC,MAAM0sB,cAAc2vB,WAAWhyC,UAC3ItK,KAAK+E,cAAcmyC,oBAAoB,aAAa,GAAGl3C,KAAKC,MAAMwrG,iBAAiBzrG,KAAKC,MAAMsF,cAAcvF,KAAKC,MAAMyrG,gBAAgB1rG,KAAKC,MAAM6F,YAAY9F,KAAKC,MAAM0sB,cAAc3sB,KAAKC,MAAMuM,SAClMxM,KAAK+E,cAAcmyC,oBAAoB,mBAAmB,GAAGl3C,KAAKC,MAAMwrG,iBAAiBzrG,KAAKC,MAAMsF,cAAcvF,KAAKC,MAAMyrG,gBAAgB1rG,KAAKC,MAAM6F,YAAY9F,KAAKC,MAAM0sB,cAAc3sB,KAAKC,MAAMuM,8CArBxMg6B,OACA6kE,OAMAxjC,OACA8jC,OACA90D,OAeI00D,EAAwBF,GAAkBA,EAAe55F,GAAG,IAG/C,GACC,EAIpBzR,KAAK4F,SAAS,CACZ+lG,aACAV,YAPiB,EAQjBC,aAPkB,EAQlB1kE,eACAqQ,eACAgxB,gBACAwjC,iBACAE,yBACC,WACD9lG,EAAK+lG,+JAKP,IACIJ,EAAc,KACdtlG,EAAc,KACd+vE,EAAe,KACfyzB,EAAiB,KACjBhuE,GAAiB,EAEf9N,EAAiBxtB,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW5R,KAAKC,MAAMyrG,kBAC7EV,EAAWx9E,EAAe66E,YAAYroG,KAAKwE,MAAM8mG,gBAErD,OAAQtrG,KAAKwE,MAAM8mG,gBACjB,IAAK,UACHhC,GAAiB,EACjBzzB,EAAe71E,KAAKC,MAAM2rG,UAC1B9lG,EAAc9F,KAAKC,MAAM6F,YACzBslG,EAAcprG,KAAKwE,MAAMgiC,aAC3B,MACA,IAAK,QACH8iE,GAAiB,EACjBxjG,EAAc9F,KAAKC,MAAM0sB,cACzBy+E,EAAcprG,KAAKwE,MAAM6mG,eACzBx1B,EAAe71E,KAAKC,MAAM0sB,cAAc2vB,WAC1C,MACA,IAAK,UACHgtD,GAAiB,EACjBxjG,EAAc9F,KAAKC,MAAM0sB,cACzBkpD,EAAe71E,KAAKC,MAAM0sB,cAAc2vB,WACxC8uD,EAAcprG,KAAKwE,MAAMqjE,cACpB7nE,KAAKwE,MAAMymG,aACd3vE,GAAiB,EACjB0vE,EAAWx9E,EAAe66E,YAAYwD,aAE1C,MACA,IAAK,WACHvC,GAAiB,EACjBzzB,EAAe71E,KAAKC,MAAM2rG,UAE1B9lG,EAAc9F,KAAKC,MAAM0sB,cACzBy+E,EAAcprG,KAAKwE,MAAM6mG,eAGpBrrG,KAAKwE,MAAM0mG,cACd5vE,GAAiB,EACjB0vE,EAAWx9E,EAAe66E,YAAYyD,cAc5C,IAAMjB,EAAkB,MAAA7gG,OAAShK,KAAKwE,MAAM8mG,eAApB,kBAAAthG,OAAmDlE,EAAY6H,MAA/D,2DAIxB3N,KAAK4F,SAAS,CACZ2kG,QA9DY,KA+DZS,WACAllG,cACAslG,cACAv1B,eACAv6C,iBACAguE,iBACAuB,uKAYiBx5E,GACnB,IAAIiB,EAAa,KACb+nC,EAAe,KAcnB,OAZIr6D,KAAKC,MAAM0sB,cAAc+T,UAAU1gC,KAAKwE,MAAM8mG,kBAChDh5E,EAAatyB,KAAKC,MAAM0sB,cAAc+T,UAAU1gC,KAAKwE,MAAM8mG,gBAM3DjxC,EAAe,CAAChpC,IAGlBc,QAAQC,IAAI,uBAAuBE,EAAW+nC,GAEvC,CACL/nC,aACA+nC,+DAMF,OADAr6D,KAAKoF,WACGpF,KAAKwE,MAAM8mG,gBACjB,IAAK,QACL,IAAK,UACHtrG,KAAK4F,SAAS,CACZulG,YAAY,qDAcFG,GAChBtrG,KAAK4F,SAAS,CACZ0lG,oDAIK,IAAA7kG,EAAAzG,KACDwtB,EAAiBxtB,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW5R,KAAKC,MAAMyrG,kBACjF,OACEvkF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHtC,OAAO,OAMTynB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE+M,GAAI,EACJ7vB,GAAI,EACJ9B,WAAY,SACZC,cAAe,MACfimG,aAAY,aAAA1+F,OAAewjB,EAAe/sB,MAAMitB,MAEhDvG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhkB,GAAI,EACJ1C,KAAM8sB,EAAevqB,KACrBxC,MAAO+sB,EAAe/sB,MAAMitB,IAC5B9sB,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,aAEN+sB,EAAe9sB,OAGpBymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLC,UAAU,IACVC,KAAK,UACL8uB,SAAS,OACTyuE,aAAY,aAAA1+F,OAAchK,KAAKC,MAAMsD,MAAMC,OAAOygB,UAEpDzhB,WAAY,aACZE,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,CAAC,GAAI,KACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJrD,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAJT,YAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,eACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,SAGpB+N,MAAO3N,KAAKC,MAAMsF,cAClBO,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,iBAE5BxF,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,eACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZT,MAAM,cAGVkN,MAAO3N,KAAKC,MAAMsF,cAClBO,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,mBAIhCxF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,CAAC,GAAI,KACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJrD,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAJT,SAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,SAGpB+N,MAAO3N,KAAKC,MAAMsF,cAClBO,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,iBAE5BxF,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZT,MAAM,cAGVkN,MAAO3N,KAAKC,MAAMsF,cAClBO,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,mBAIhCxF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,CAAC,GAAI,KACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,aAOA0mB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,cACLT,MAAM,CACJqK,SAAS,EACTpJ,SAAS,CAAC,EAAE,GACZT,MAAM,cAGVkN,MAAO3N,KAAKC,MAAMsF,cAClBmnB,QAAS1sB,KAAKC,MAAMyrG,gBACpB5lG,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,kBAG9BxF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,CAAC,GAAI,KACZ8C,cAAe,SACfD,WAAY,cAEZ2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJrD,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAJT,gBAQA0mB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,cACL0oB,YAAY,CACV1mB,eAAe,eAGnBiL,MAAO3N,KAAKC,MAAMsF,cAClBO,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,kBAG9BxF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,CAAC,GAAI,KACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJrD,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAJT,mBAQA0mB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,iBACLT,MAAM,CACJqK,SAAS,EACTpJ,SAAS,CAAC,EAAE,GACZT,MAAM,cAGVkN,MAAO3N,KAAKC,MAAMsF,cAClBmnB,QAAS1sB,KAAKC,MAAMyrG,gBACpB5lG,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,kBAG9BxF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,CAAC,GAAI,KACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,OAOA0mB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,aACLT,MAAM,CACJqK,SAAS,EACTpJ,SAAS,CAAC,EAAE,GACZT,MAAM,cAGVkN,MAAO3N,KAAKC,MAAMsF,cAClBmnB,QAAS1sB,KAAKC,MAAMyrG,gBACpB5lG,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,oBAK7B3sB,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMqjE,eAAep2D,GAAG,IAAMzR,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAM6mG,gBAAgB55F,GAAG,KAClH0V,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACErlB,GAAI,EACJkJ,MAAO,CACLC,UAAU,IACVC,KAAK,UACL8uB,SAAS,OACTyuE,aAAY,aAAA1+F,OAAchK,KAAKC,MAAMsD,MAAMC,OAAOygB,UAEpDzhB,WAAY,aACZE,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,aAOA0mB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,mBACLT,MAAM,CACJqK,SAAS,EACTrJ,WAAW,EACXC,SAAS,CAAC,EAAE,GACZT,MAAM,cAGVkN,MAAO3N,KAAKC,MAAMsF,cAClBmnB,QAAS1sB,KAAKC,MAAMyrG,gBACpB5lG,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,kBAG9BxF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,UAOA0mB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,gBACLT,MAAM,CACJqK,SAAS,EACTrJ,WAAW,EACXC,SAAS,CAAC,EAAE,GACZT,MAAM,cAGVkN,MAAO3N,KAAKC,MAAMsF,cAClBmnB,QAAS1sB,KAAKC,MAAMyrG,gBACpB5lG,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,kBAG9BxF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,cAOA0mB,EAAA/mB,EAAAC,cAACwrB,EAAA,EAADtsB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgsB,UAAW,CACTvrB,KAAK,oBACLT,MAAM,CACJqK,SAAS,EACTrJ,WAAW,EACXC,SAAS,CAAC,EAAE,GACZT,MAAM,cAGVkN,MAAO3N,KAAKC,MAAMsF,cAClBmnB,QAAS1sB,KAAKC,MAAMyrG,gBACpB5lG,YAAa9F,KAAKC,MAAM6F,YACxBymB,SAAUvsB,KAAKC,MAAMwrG,iBACrB9+E,cAAe3sB,KAAKC,MAAM0sB,mBAOlC3sB,KAAKwE,MAAM4mG,aAAeprG,KAAKwE,MAAMsB,YACnCqhB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJta,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE2D,UAAW,CACT1C,SAAS,CAAC,EAAE,IAEdY,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,UACNX,UAAW,UACXD,KAAM,gBACNK,YAAa,UACblB,SAAyC,YAA9BpC,KAAKwE,MAAM8mG,eACtB/qG,YAAc,SAAAiG,GAAC,OAAIC,EAAKslG,kBAAkB,eAG1C/rG,KAAKwE,MAAMqjE,eAAiB7nE,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMqjE,eAAep2D,GAAG,GAChF0V,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE2D,UAAW,CACT1C,SAAS,CAAC,EAAE,IAEdY,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,UACNZ,KAAM,cACNC,UAAW,SACXI,YAAa,UACblB,SAAyC,YAA9BpC,KAAKwE,MAAM8mG,eACtB/qG,YAAc,SAAAiG,GAAC,OAAIC,EAAKslG,kBAAkB,eAG5C5kF,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE2D,UAAW,CACT1C,SAAS,CAAC,EAAE,IAEdY,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,QACNZ,KAAM,SACNC,UAAW,UACXI,YAAa,UACbjB,YAAcrC,KAAKwE,MAAM+mG,sBACzBnpG,SAAyC,UAA9BpC,KAAKwE,MAAM8mG,eACtB/qG,YAAc,SAAAiG,GAAC,OAAIC,EAAKjC,MAAM+mG,sBAAwB9kG,EAAKslG,kBAAkB,SAAW,SAI9F5kF,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE2D,UAAW,CACT1C,SAAS,CAAC,EAAE,IAEdY,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,WACNZ,KAAM,cACNC,UAAW,SACXI,YAAa,UACbjB,YAAcrC,KAAKwE,MAAM+mG,sBACzBnpG,SAAyC,aAA9BpC,KAAKwE,MAAM8mG,eACtB/qG,YAAc,SAAAiG,GAAC,OAAIC,EAAKjC,MAAM+mG,sBAAwB9kG,EAAKslG,kBAAkB,YAAc,UAI7F/rG,KAAKwE,MAAMwmG,UACT7jF,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD,CACExsB,UAAW,CACTrC,EAAE,EACFqd,GAAG,EACHnd,MAAM,GAERyC,UAAU,EACVD,eAAe,EACfc,KAAM,mBACNE,UAAW,CACTvC,KAAK,QACLH,MAAM,cAERmD,UAAW,CACT3C,WAAW,IACXC,SAAS,OACTC,UAAU,SACVV,MAAM,cAERoD,KAAM7D,KAAKwE,MAAMwmG,WAIvB7jF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,GAEJqK,EAAA/mB,EAAAC,cAAC2rG,EAADzsG,OAAAC,OAAA,CACEqX,MAAO,MACH7W,KAAKC,MAFX,CAGEX,YAAa,CACXK,MAAM,CAAC,EAAE,MAEXypG,eAAe,EACftjG,YAAa9F,KAAKwE,MAAMsB,YACxB0gC,aAAcxmC,KAAKwE,MAAM4mG,YACzBv1B,aAAc71E,KAAKwE,MAAMqxE,aACzByzB,eAAgBtpG,KAAKwE,MAAM8kG,eAC3BhuE,eAAgBt7B,KAAKwE,MAAM82B,eAC3B31B,SAAU3F,KAAKisG,qBAAqBt9E,KAAK3uB,MACzC6qG,mBAAoB7qG,KAAKwE,MAAMqmG,mBAC/BrB,oBAAqBxpG,KAAKwpG,oBAAoB76E,KAAK3uB,MACnDkhC,iBAAkBlhC,KAAKksG,yBAAyBv9E,KAAK3uB,MACrD4yB,qBAAsB5yB,KAAK4yB,qBAAqBjE,KAAK3uB,MACrDqO,OAAQrO,KAAK+E,cAAc+E,WAAW9J,KAAKwE,MAAM8mG,kBAEjDnkF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACq0B,EAAA,EAADn1B,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE22B,YAAY,EACZhC,iBAAkB,GAClBI,SAAUh1B,KAAKC,MAAMsF,qBAM5BvF,KAAKC,MAAMuM,QAKd2a,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACTO,GAAG,EACHra,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,4BAfRsjB,EAAA/mB,EAAAC,cAACu6B,EAAA,EACK56B,KAAKC,QAmBjBknB,EAAA/mB,EAAAC,cAACiqB,EAAA,EAAD,CACEa,iBAAiB,EACjBloB,KAAI,mBACJ2d,MAAK,mBACLpU,QAASxM,KAAKC,MAAMuM,QACpB+d,WAAYvqB,KAAK02B,WACjB8V,UAAWxsC,KAAKC,MAAMsF,cACtBylB,OAAmC,UAA3BhrB,KAAKwE,MAAM2mG,YACnBtnG,KAAI,+DAAAmG,OAAiEhK,KAAKwE,MAAMmnG,WAAa3rG,KAAKwE,MAAMmnG,WAAWpiG,QAAQ,GAAK,OAA5H,mCAAAS,OAAoKhK,KAAKC,MAAMsF,cAA/K,cACJ4kB,MAAK,eAAAngB,OAAiBhK,KAAKwE,MAAMmnG,WAAa3rG,KAAKwE,MAAMmnG,WAAWpiG,QAAQ,GAAK,OAA5E,gBAAAS,OAAiGhK,KAAKC,MAAMsF,cAA5G,uCAAAyE,OAA+JhK,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAnM5H,OAAiNhK,KAAKC,MAAMksG,gBAAgB/pE,MAA5O,2DA5wBcthC,sBCgOdsrG,6MAnOb5nG,MAAQ,CACNf,aAAa,MAIfsB,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,kQAILnF,KAAKqsG,wMAGkBhnG,EAAUC,mEACjCtF,KAAKmF,aAEqBnF,KAAKC,MAAMi2C,YAAc7wC,EAAU6wC,WAAcnqC,KAAKC,UAAUhM,KAAKC,MAAMi2C,aAAenqC,KAAKC,UAAU3G,EAAU6wC,aAE3Il2C,KAAKqsG,mKAIS,IAAA5mG,EAAAzF,KACVyD,EAAezD,KAAKC,MAAMi2C,UAAYl2C,KAAKC,MAAMi2C,UAAUzyC,aAAagK,OAAQ,SAAA2lC,GAAC,OAAIA,EAAE7mB,SAASpjB,gBAAkB1D,EAAKxF,MAAMwrG,iBAAiBtiG,eAAiBiqC,EAAEzlC,MAAMxE,gBAAkB1D,EAAKxF,MAAMsF,cAAc4D,gBAAkB,GAC1OnJ,KAAK4F,SAAS,CACZnC,kDAIK,IAAAgD,EAAAzG,KACDgpG,EAAkBhpG,KAAK+E,cAAc6M,gBAAgB,CAAC,aACtD06F,EAAwB/sG,OAAO8B,KAAK2nG,GAAiBv7F,OAAQ,SAAAw7F,GAAW,OAAKxiG,EAAKxG,MAAMgpG,aAAexiG,EAAKxG,MAAMgpG,cAAgBA,IACxI,OACE9hF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CACEuD,GAAI,GAEHtE,KAAK+E,cAAc+E,WAAW9J,KAAKC,MAAMwrG,kBAH5C,MAGkEzrG,KAAKC,MAAMsF,cAH7E,MAG+FvF,KAAKC,MAAMutB,eAAiBxtB,KAAKC,MAAMutB,eAAe9sB,KAAO,YAGzJV,KAAKC,MAAMgpG,YAOV9hF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,CAAC,SAAS,OACzBC,eAAgB1C,KAAKC,MAAMgpG,YAAc,SAAW,iBAGlDqD,EAAsB95F,IAAK,SAAAy2F,GAAW,OACpC9hF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,CAAC,EAAE,GACP7B,cAAe,SACfsB,IAAG,WAAAiG,OAAai/F,GAChBtpG,MAAO,CAAC,EAAEqO,KAAKC,IAAI,GAAK,EAAEq+F,EAAsBhrG,OAAQ,OAExD6lB,EAAA/mB,EAAAC,cAACksG,EAADhtG,OAAAC,OAAA,GACMiH,EAAKxG,MADX,CAEEyrG,gBAAiBzC,EACjB2C,UAAWnlG,EAAKxG,MAAM6F,YAAYu2C,IAClC1vB,cAAelmB,EAAKxG,MAAM6F,YAAYmjG,UAvBhD9hF,EAAA/mB,EAAAC,cAACmsG,EAADjtG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6F,YAAa9F,KAAKC,MAAM6F,YACxBijG,kBAAmB/oG,KAAKC,MAAM8oG,qBA6BlC/oG,KAAKC,MAAMuM,SAAWxM,KAAKwE,MAAMf,cAAgBzD,KAAKwE,MAAMf,aAAanC,OAAO,GAC9E6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,CAAC,EAAE,GACP3E,MAAO,EACPsE,GAAI,eACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CAAOwB,GAAI,CAAC,EAAE,IAAd,gBACA4kB,EAAA/mB,EAAAC,cAACosG,EAAA,EAADltG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgM,cAAe,CAACjM,KAAKC,MAAMsF,eAC3BmnG,iBAAkB1sG,KAAKwE,MAAMf,aAC7BkpG,iBAAkB3sG,KAAKwE,MAAMf,aAAa+2C,OAAQ,SAACmyD,EAAiBv5D,GAElE,OADAu5D,EAAiBv5D,EAAE/kC,OAAOlF,eAAiBiqC,EAAE/kC,OACtCs+F,GACP,IACFrlF,KAAM,CACJ,CACE1G,MAAO5gB,KAAKC,MAAM6C,SAAW,GAAK,OAClC7C,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,KAGV,CACE1C,KAAK,OACLyoB,QAAO,KAIb,CACEvI,MAAM,SACNuI,QAAO,EACPlpB,MAAM,CACJN,MAAM,KAERspB,OAAO,CACL,CACEvoB,KAAK,YAIX,CACEkgB,MAAM,OACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,UAIX,CACEyoB,QAAO,EACPvI,MAAM,SACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,aACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,KAGV,CACE+lB,QAAO,EACPzoB,KAAK,YAIX,CACEkgB,MAAM,SACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,YAIX,CACEkgB,MAAM,WACN3gB,MAAM,CACJN,MAAM,CAAC,IAAM,MAEfspB,OAAO,CACL,CACEre,KAAK,QACLlK,KAAK,SACLwoB,KAAK,CAAC,gBACNjpB,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,SAGpB,CACEgL,KAAK,OACLue,QAAO,EACPzoB,KAAK,SACLwoB,KAAK,CAAC,eAIZ,CACEtI,MAAM,QACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,YACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,GACNxD,OAAO,CAAC,QAAQ,WAGpB,CACEupB,QAAO,EACPzoB,KAAK,4BAxNHI,+BCiEX8rG,6MAhEbpoG,MAAQ,KAGRO,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,2JAK9CD,KAAKmF,iMAGkBE,EAAWC,mEAClCtF,KAAKmF,kJAGE,IAAAM,EAAAzF,KAEH6sG,EAAmB7sG,KAAKC,MAAM4sG,iBAKlC,OAJKA,GAAqBA,EAAiBvrG,SACzCurG,EAAmBttG,OAAO8B,KAAKrB,KAAKC,MAAMg2C,oBAI1C9uB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnjB,GAAG,0BAA0BtE,MAAO,EAAG8C,cAAe,UAC1D0kB,EAAA/mB,EAAAC,cAACgnB,EAAA,EAAD9nB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEqnB,KAAMtnB,KAAKC,MAAMqnB,KACjBxkB,SAAU9C,KAAKC,MAAM6C,YAEvBqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnjB,GAAG,gBAAgBxB,cAAe,UAEpCoqG,EAAiBr6F,IAAI,SAAA+Z,GACnB,IAAMoqB,EAAiBlxC,EAAKxF,MAAMg2C,kBAAkB1pB,GACpD,IAAKoqB,EACH,OAAO,KAET,IAAMjqB,EAAUjnB,EAAKxF,MAAMgpG,aAAe,KAC1C,OAAO1pG,OAAO8B,KAAKs1C,GAAgBnkC,IAAK,SAAA7E,GAAK,OAC3CwZ,EAAA/mB,EAAAC,cAACqnB,EAAA,EAADnoB,OAAAC,OAAA,GACMiG,EAAKxF,MADX,CAEE0N,MAAOA,EACP+e,QAASA,EACTH,SAAUA,EACVxoB,IAAG,WAAAiG,OAAauiB,GAChB1E,MAAK,eAAA7d,OAAiBuiB,GACtBzmB,YAAa6wC,EAAehpC,GAC5Bma,OAAM,gBAAA9d,OAAkBuiB,GACxB5E,eAAgBliB,EAAKxF,MAAM0nB,gBAAkBkE,oBAvDpC/qB,wCC6OZgsG,6MA5ObtoG,MAAQ,CACNE,WAAW,KACXC,cAAc,QAIhBI,cAAgB,OAChBC,oBAAqB,6EAGfhF,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,6JAILnF,KAAKgF,oBAAqB,sJAI1BhF,KAAKoF,gMAGkBC,EAAUC,8EACjCtF,KAAKmF,YAEiBE,EAAUvC,WAAa9C,KAAKC,MAAM6C,UAEtD9C,KAAKwF,aAAa,CAChBd,WAAW,KACXC,cAAc,MACd,WACAc,EAAKL,+LAKQM,wFAASC,iCAAS,KAC9B3F,KAAKgF,4DACDhF,KAAK4F,SAASF,EAASC,oCAEzB,iQAKDjB,EAAa,CACjBqB,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChB7C,OAAO,SAAA8C,GAAC,OAAIA,EAAE7F,OACd8F,aAAa,SAACpC,EAAMqC,GAClBC,EAAKjB,aAAa,CAChBb,cAAcR,KAGlBuC,aAAa,SAACvC,EAAMqC,GAClBC,EAAKjB,aAAa,CAChBb,cAAc,QAGlBgC,cAAe3G,KAAKC,MAAM0G,eAAkB,SAAAC,GAAC,OAAIA,GACjDC,WAAY7G,KAAKC,MAAM4G,YAAe,SAAAP,GAAC,OAAIA,EAAEQ,OAC7CC,YAAa,SAAAT,GACX,OAAO,MAET/C,MAAM,CACJyD,QAAS,CACPC,UAAWjH,KAAKC,MAAMiH,OAAS,CAC7BC,WAAYnH,KAAKC,MAAMsD,MAAMC,OAAO4D,QAClC,CACFC,QAAS,SAGbC,OAAO,CACLzD,KAAK,CACH5C,WAAW,IACXC,SAASlB,KAAKC,MAAM6C,SAAW,GAAK,GACpCyE,WAAYvH,KAAKC,MAAMsD,MAAMiE,MAAMC,YAGvCC,QAAQ,CACN7D,KAAK,CACH3C,SAAS,GACTD,WAAW,IACXsG,WAAYvH,KAAKC,MAAMsD,MAAMiE,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqBpI,KAAKC,MAAMiH,OAChCmB,sBAAsB,CAAEC,KAAM,SAC9BG,OAAQzI,KAAKC,MAAMwI,QAAU,CAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAE1E,KAAK,GAC1DqE,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,OAGpDxI,KAAKC,MAAM8sG,aACbroG,EAAWgD,QAAU,CACnB,CACEslG,UAAW,GACXC,WAAY,GACZC,WAAYltG,KAAKC,MAAM6C,SAAW,GAAK,GACvCqqG,WAAY,GACZC,OAAQ,SACR3hE,UAAW,MACX4hE,cAAertG,KAAKC,MAAMsD,MAAMC,OAAOuQ,OACvCu5F,YAAa,SACbC,QAAS,CACP,CACE/xC,GAAI,QACJvwD,MAAO,CACLoiG,cAAe,aAQ3BrtG,KAAKwF,aAAa,CAChBd,kJAMF,OACEyiB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPwK,SAAU,WACV3H,WAAY,SACZE,eAAgB,UAGd1C,KAAKwE,MAAME,aAAe1E,KAAKC,MAAMiH,QACnCigB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhd,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZxE,KAAM,CAAC,MAAM,OACb/C,UAAW,SACXqB,WAAY,SACZ2H,SAAU,WACVxK,MAAO,CAAC,MAAM,OACdC,OAAQ,CAAC,MAAM,OACf6C,cAAe,SACfC,eAAgB,UAGd1C,KAAKwE,MAAMG,cACTwiB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,CAAC,QAAQ,OAChBC,OAAQ,CAAC,QAAQ,OACjBiD,IAAK7C,KAAKwE,MAAMG,cAAchC,QAEhCwkB,EAAA/mB,EAAAC,cAACsxB,EAAA,EAAD,CACEzwB,SAAU,CAAC,EAAE,GACboJ,SAAU,EACVrJ,WAAY,EACZsJ,aAAc,EACdC,OAAQxK,KAAKwE,MAAMG,cAAcmC,QAEnCqgB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,CAAC,EAAE,GACbD,WAAY,EACZR,MAAO,aAENT,KAAKwE,MAAMG,cAAckF,QAI9Bsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ1E,OAAQ,QACRiD,IAAK7C,KAAKC,MAAMutG,eAElBrmF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAEdjB,KAAKC,MAAM6d,cAEdqJ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,aAENT,KAAKC,MAAMwtG,gBAO1BtmF,EAAA/mB,EAAAC,cAACmuB,EAAA,EAADjvB,OAAAC,OAAA,CACEoL,KAAMC,IACNC,YAAY,GACR9K,KAAKC,MACLD,KAAKwE,MAAME,WAJjB,CAKEP,KAAMnE,KAAKC,MAAMwE,qBAtOG3D,+BC6Gf4sG,6MA7GblpG,MAAQ,CACNmpG,WAAW,KACXC,aAAa,QAIf7oG,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAK6tG,yMAGkBxoG,EAAUC,sFACjCtF,KAAKmF,YACCgoB,EAAuB9nB,EAAU8nB,uBAAyBntB,KAAKC,MAAMktB,uBACvC9nB,EAAUupC,qBAAuB7iC,KAAKC,UAAU3G,EAAUupC,uBAAyB7iC,KAAKC,UAAUhM,KAAKC,MAAM2uC,sBAC/GzhB,IAChCntB,KAAK6tG,oBAGD1hG,EAAgB9G,EAAUvC,WAAa9C,KAAKC,MAAM6C,SAClDsJ,EAAmB/G,EAAUgH,YAAcrM,KAAKC,MAAMoM,WACvCN,KAAKC,UAAU3G,EAAUyoG,gBAAkB/hG,KAAKC,UAAUhM,KAAKC,MAAM6tG,eACtE1hG,GAAoBD,KAChCkhB,EAAW9tB,OAAOC,OAAO,GAAGQ,KAAKwE,OACvCxE,KAAK4F,SAAS,CACZ+nG,WAAW,KACXC,aAAa,MACb,WACAnoG,EAAKG,SAASynB,8QAObrtB,KAAKC,MAAM2uC,qBAAwB5uC,KAAKC,MAAMktB,+DAC1C,aAGH7gB,EAAkBtM,KAAKC,MAAMqM,iBAAmB,QACpCtM,KAAKC,MAAMi2C,+CAAmBl2C,KAAK+E,cAAcwyC,oBAAoBjrC,EAAgBtM,KAAKC,MAAMuM,mCAA5G0pC,OAEA03D,EAAe13D,EAAUI,gBAAgBhoC,KAAK4nC,EAAUG,eACxDs3D,EAAaC,EAAat/F,KAAKs/F,EAAatkG,MAAM4sC,EAAUE,OAAOn8B,IAAI,OAE7Eja,KAAK4F,SAAS,CACZ+nG,aACAC,qJAIK,IAAAnnG,EAAAzG,KAED8tG,EAAe,CACnB1sG,WAAW,EACXX,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOsb,UAC9BvX,WAAWvH,KAAKC,MAAMsD,MAAMiE,MAAMuZ,QAClC9f,WAAYjB,KAAKC,MAAM6C,SAAW,IAAM,IACxC5B,SAASlB,KAAKC,MAAM6C,SAAW,OAAS,SAItC9C,KAAKC,MAAM6tG,cAAgBvuG,OAAO8B,KAAKrB,KAAKC,MAAM6tG,cAAcxsG,QAClE/B,OAAO8B,KAAKrB,KAAKC,MAAM6tG,cAAcvsG,QAAQ,SAAA9B,GAC3CquG,EAAaruG,GAAKgH,EAAKxG,MAAM6tG,aAAaruG,KAI9C,IAAM6K,EAAWtK,KAAKC,MAAMqK,UAAY,EAExC,OAAOtK,KAAKwE,MAAMopG,cAAgB5tG,KAAKwE,MAAMmpG,WAC3CxmF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC0tG,EAAA3tG,EAAD,CACEmqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXpgC,SAAUA,EACVqgC,SAAU,QACVC,IAAKvhC,WAAWrJ,KAAKwE,MAAMmpG,YAC3B9iE,MAAOxhC,WAAWrJ,KAAKwE,MAAMopG,cAC7B9iE,aAAe,SAAAC,GAAC,MAAI,KAAKtkC,EAAK1B,cAAc8O,YAAYk3B,EAAEzgC,KAEzD,SAAAuC,GAAA,IAAGo+B,EAAHp+B,EAAGo+B,WAAHp+B,EAAeg+B,MAAf,OACC1jB,EAAA/mB,EAAAC,cAAA,QACE6qC,IAAKD,EACLhgC,MAAO6iG,OAMf3mF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAM,gBA1GcE,aC+GnBktG,6MA7GbxpG,MAAQ,CACN6/B,YAAY,KACZF,cAAc,QAIhBp/B,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAK6tG,yMAGkBxoG,EAAUC,sFACjCtF,KAAKmF,YACCgoB,EAAuB9nB,EAAU8nB,uBAAyBntB,KAAKC,MAAMktB,uBACvC9nB,EAAUupC,qBAAuB7iC,KAAKC,UAAU3G,EAAUupC,uBAAyB7iC,KAAKC,UAAUhM,KAAKC,MAAM2uC,sBAC/GzhB,IAChCntB,KAAK6tG,oBAGD1hG,EAAgB9G,EAAUvC,WAAa9C,KAAKC,MAAM6C,SAClDsJ,EAAmB/G,EAAUgH,YAAcrM,KAAKC,MAAMoM,WACvCN,KAAKC,UAAU3G,EAAUyoG,gBAAkB/hG,KAAKC,UAAUhM,KAAKC,MAAM6tG,eACtE1hG,GAAoBD,KAChCkhB,EAAW9tB,OAAOC,OAAO,GAAGQ,KAAKwE,OACvCxE,KAAK4F,SAAS,CACZy+B,YAAY,KACZF,cAAc,MACd,WACA1+B,EAAKG,SAASynB,8QAObrtB,KAAKC,MAAM2uC,qBAAwB5uC,KAAKC,MAAMktB,+DAC1C,aAGH7gB,EAAkBtM,KAAKC,MAAMqM,iBAAmB,QACpCtM,KAAKC,MAAMi2C,+CAAmBl2C,KAAK+E,cAAcwyC,oBAAoBjrC,EAAgBtM,KAAKC,MAAMuM,mCAA5G0pC,OAEA/R,EAAgB+R,EAAUG,cAC1BhS,EAAcF,EAAc71B,KAAK4nC,EAAUI,gBAAgBhtC,MAAM4sC,EAAUE,OAAOn8B,IAAI,OAE5Fja,KAAK4F,SAAS,CACZy+B,cACAF,sJAIK,IAAA19B,EAAAzG,KAED8tG,EAAe,CACnB1sG,WAAW,EACXX,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOsb,UAC9BvX,WAAWvH,KAAKC,MAAMsD,MAAMiE,MAAMuZ,QAClC9f,WAAYjB,KAAKC,MAAM6C,SAAW,IAAM,IACxC5B,SAASlB,KAAKC,MAAM6C,SAAW,OAAS,SAItC9C,KAAKC,MAAM6tG,cAAgBvuG,OAAO8B,KAAKrB,KAAKC,MAAM6tG,cAAcxsG,QAClE/B,OAAO8B,KAAKrB,KAAKC,MAAM6tG,cAAcvsG,QAAQ,SAAA9B,GAC3CquG,EAAaruG,GAAKgH,EAAKxG,MAAM6tG,aAAaruG,KAI9C,IAAMwuG,EAAOjuG,KAAKC,MAAMguG,MAAQ,KAC1B3jG,EAAWtK,KAAKC,MAAMqK,UAAY,EAExC,OAAOtK,KAAKwE,MAAM2/B,eAAiBnkC,KAAKwE,MAAM6/B,YAC5Cld,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KAEED,EAAA/mB,EAAAC,cAAC0tG,EAAA3tG,EAAD,CACEmqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXpgC,SAAUA,EACVqgC,SAAU,QACVC,IAAKvhC,WAAWrJ,KAAKwE,MAAM6/B,aAC3BwG,MAAOxhC,WAAWrJ,KAAKwE,MAAM2/B,eAC7B2G,aAAe,SAAAC,GAAC,OAAIkjE,EAAKxnG,EAAK1B,cAAc8O,YAAYk3B,EAAEzgC,KAEzD,SAAAuC,GAAA,IAAGo+B,EAAHp+B,EAAGo+B,WAAHp+B,EAAeg+B,MAAf,OACC1jB,EAAA/mB,EAAAC,cAAA,QACE6qC,IAAKD,EACLhgC,MAAO6iG,OAMf3mF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAM,gBA1GeE,2CCyepBotG,8MAreb1pG,MAAQ,CACNiH,UAAU,KACVhH,UAAU,KACVC,WAAW,KACXgH,WAAW,KACXC,YAAY,QAId5G,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,2JAK9CD,KAAKmF,YACLnF,KAAK4L,qMAGkBvG,EAAWC,oFAClCtF,KAAKmF,YAEC0G,EAA4BxG,EAAUyG,qBAAuB9L,KAAKC,MAAM6L,oBACzDC,KAAKC,UAAU3G,EAAU4G,iBAAmBF,KAAKC,UAAUhM,KAAKC,MAAMgM,gBACvEJ,IAClB7L,KAAK4F,SAAS,CACZnB,UAAU,MACV,WACAgB,EAAKyG,sBAIHC,EAAgB9G,EAAUvC,WAAa9C,KAAKC,MAAM6C,SAClDsJ,EAAmB/G,EAAUgH,YAAcrM,KAAKC,MAAMoM,WACxDF,GAAiBC,IACnBpM,KAAK4L,qVAMHK,EAAgBjM,KAAKC,MAAMgM,gBACRA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKrB,KAAKC,MAAMg2C,mBAAmBuE,OAAQ,SAACvuC,EAAcsgB,GAO/E,OANehtB,OAAO8B,KAAKoF,EAAKxG,MAAMg2C,kBAAkB1pB,IACjDhrB,QAAS,SAAAoM,GACT1B,EAAcqc,SAAS3a,IAC1B1B,EAAczC,KAAKmE,KAGhB1B,GACP,KAGExI,EAAezD,KAAKC,MAAMysG,iBAE1BjoG,EAAY,GACdiI,EAAgB,GAChBC,EAAmB,cAEjB3M,KAAK+E,cAAc6H,aAAaX,EAAhC,eAAAY,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8C,SAAAC,EAAO1H,GAAP,IAAA2H,EAAAC,EAAA,OAAAqd,EAAApqB,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElDb,EAAcnH,GAAiB,IAEzB2H,EAAc3N,OAAOiO,OAAO/J,GAAcgK,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUpI,MACxD2H,EAAY5L,SAEzB6L,EAAa1G,EAAK1B,cAAc6I,MAAM,GAE1CV,EAAY3L,QAAQ,SAACmM,EAAGG,GAGtB,IAAKH,EAAGI,MAASJ,EAAGK,QAAwB,YAAdL,EAAGK,OAC/B,OAAO,EAGTpB,EAAmBA,EAAmBqB,KAAKC,IAAItB,EAAiBuB,SAASR,EAAGS,YAAcD,SAASR,EAAGS,WAEtG,IAAMC,EAAc3H,EAAK1B,cAAc6I,MAAMF,EAAGU,aAEhD,OAAQV,EAAGW,QACT,IAAK,UACHlB,EAAaA,EAAWmB,KAAKF,GAC/B,MACA,IAAK,WACHjB,EAAaA,EAAWoB,MAAMH,GAO9BjB,EAAWqB,GAAG,KAChBrB,EAAa1G,EAAK1B,cAAc6I,MAAM,IAGxC,IAAMS,EAASX,EAAGW,OACZI,EAAUtB,EACVgB,EAAYD,SAASR,EAAGS,WACxB0oC,EAAepwC,EAAK1B,cAAc6I,MAAMF,EAAGmpC,cAC3CuH,EAAgB33C,EAAK1B,cAAc6I,MAAMF,EAAG0wC,eAE7CvH,EAAajoC,SAAYioC,EAAajoC,SACzClC,EAAcnH,GAAeiE,KAAK,CAChC6E,SACAI,UACAN,YACAC,cACAyoC,eACAuH,qBAjD0C,wBAAA/wC,EAAAwB,SAAA5B,EAAAjN,SAA9C,gBAAA8O,GAAA,OAAAjC,EAAAkC,MAAA/O,KAAAgP,YAAA,WA2DFvD,EAAY,KACVwD,EAAcjP,KAAK+E,cAAcmK,YAAY,IAAIC,WAE/CnP,KAAKC,MAAM6L,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYwD,EAAYG,QAAQC,SAAS,EAAE,4CAG3C5D,EAAYwD,EAAYG,QAAQC,SAAS,EAAE,6CAG3C5D,EAAYwD,EAAYG,QAAQC,SAAS,EAAE,6CAG3C5D,EAAYwD,EAAYG,QAAQC,SAAS,EAAE,6CAG3C5D,EAAY,yCAIV6D,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB5B,SAASiB,KAAK+yC,MAAM,KAAM,MAE1ClyC,EAAa,aAEbhQ,KAAK+E,cAAc6H,aAAarN,OAAO8B,KAAKqL,GAA5C,eAAAyD,EAAA5Q,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA2D,SAAAoD,EAAOzC,GAAP,OAAA6c,EAAApqB,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,OAE/DyC,EAAWrC,GAAS,GAF2C,wBAAA0C,EAAAxB,SAAAuB,EAAApQ,SAA3D,gBAAAwQ,GAAA,OAAAL,EAAApB,MAAA/O,KAAAgP,YAAA,YAON,IAFM4nC,EAAsB,iBAI1B,IAAMlmC,EAAgB,GAChBC,EAAiB,GACvBxC,EAAYH,KAAKC,IAAI6B,EAAc3B,GACnCwB,EAAoBlJ,EAAK1B,cAAc6I,MAAM,GAI7CrO,OAAO8B,KAAKqL,GAAenL,QAAQ,SAAAoM,GAEjC,IAAIiD,EAAgB,KACdC,EAA0BtR,OAAOiO,OAAOwC,EAAWrC,IAAQmD,MAC3DC,EAAoBf,EAAWrC,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAGsD,WAAWxB,GAAiB9B,EAAGsD,WAAW7C,IACnG4C,GAAqBA,EAAkBzP,SACzCsP,EAAgBG,EAAkBD,OAG/B8lC,EAAoBjpC,KACvBipC,EAAoBjpC,GAASlH,EAAK1B,cAAc6I,MAAM,IAGxD,IAAMqD,EAAgBxK,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,EAAM,aAC7EuD,EAAmBxE,EAAciB,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAGS,WAAWA,KAAeqB,GAAiB9B,EAAGS,UAAUqB,KAErH,GAAK0B,EAAiB5P,OAwBpB4P,EAAiB3P,QAAQ,SAAAmM,GACvB,OAAQA,EAAGW,QACT,IAAK,UACHuoC,EAAoBjpC,GAASipC,EAAoBjpC,GAAOW,KAAKZ,EAAG0wC,eAClE,MACA,QACExH,EAAoBjpC,GAASipC,EAAoBjpC,GAAOY,MAAMb,EAAG0wC,eAC7DxH,EAAoBjpC,GAAOa,GAAG,KAChCooC,EAAoBjpC,GAASlH,EAAK1B,cAAc6I,MAAM,YA/B9D,GAAI2B,GAAgBA,EAAa5B,GAAO,CACtCuD,EAAmB3B,EAAa5B,GAChC,IAAMwD,EAAiB5R,OAAOC,OAAO,GAAG0R,GAAkBJ,MAI1D,GAHuBzH,WAAW8H,EAAe1C,SAG9B,GAAKN,EAAUxB,GAAoBiE,EAAc,CAClE,IAAMwtC,EAAgBxH,EAAoBjpC,GACpCkpC,EAAepwC,EAAK1B,cAAcsM,iBAAiBT,EAAcimC,aAAa5lC,GAChFK,EAAa8sC,EAAc90C,MAAMutC,GAGrC1lC,EAAe1C,QAAU6C,EACzBH,EAAe0lC,aAAeA,EAC9B3lC,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClBzC,QAAQhI,EAAK1B,cAAc6I,MAAM,GACjCipC,aAAapwC,EAAK1B,cAAc6I,MAAM,KAmB5C,IAAM2D,EAAShS,OAAOC,OAAO,GAAG0R,GAAkBJ,MAE9CU,EAAgBolC,EAAoBjpC,GAAOrE,MAAMiI,EAAOslC,cAE5D,GAAIrlC,EAAcC,GAAG,GAAG,CAEtB,IAAIC,EAAyB,KACvBC,EAAsBlL,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,EAAM,wBACvF,IAAKlH,EAAKxG,MAAM4R,YAAcF,EAAoB,CAChD,IAAMG,EAAiBlB,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KACxOG,IACFJ,EAAyBjL,EAAK1B,cAAcsM,iBAAiBS,EAAe,KACjDL,GAAG,KAC5BD,EAAgBA,EAAclI,MAAMoI,IAK1Cf,EAAehD,GAAS6D,EACxB7B,EAAoBA,EAAkBrB,KAAKkD,GAG7Cd,EAAc/C,GAASuD,IAKzB,IAAIa,EAAatL,EAAK1B,cAAcmK,YAAsB,IAAVf,GAEhD,GAAkB,OAAd1C,GAAuBsG,EAAWC,cAAcvG,IAAcsG,EAAWE,eAAe,IAAI9C,KAAO,OAAQ,CAO7G,IAAM+C,EAAgBH,EAAWI,OAAO,oBAGxC7C,EAAKyC,EAAWI,OAAO,eAAiB,EAExCxC,EAAoBtG,WAAWA,WAAWsG,EAAkBpG,QAAQ,KAEpEsG,EAAsBqC,GAAiBvB,EACvCf,EAAuBsC,GAAiBvC,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoB3B,KAAKC,IAAIwB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoB3B,KAAKoE,IAAI1C,EAAcC,GAGtFH,EAAgBrB,EAChBoB,EAAemB,OArHRvC,EAAUxB,EAAiBwB,GAAW2B,EAAc3B,GAAWnO,KAAKC,MAAMoS,iBAAiBC,EAA3FnE,GA+KT,IAvDMoE,EAAqBhT,OAAO8B,KAAKuO,GAAwB4C,IAAI,SAAAC,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAE/C,EAAuB6C,GACzBG,SAAS/C,EAAsB4C,MAG7BI,EAAY,EAChBN,EAAmBhR,QAAS,SAACuR,EAAKjF,GAChC,IAAMzJ,EAAU4J,KAAK+E,MAAMF,EAAUN,EAAmBjR,OAAO,KAC/DiR,EAAmB1E,GAAOzJ,QAAUA,EACpCyO,MAwBIhB,EAAa7R,KAAKC,MAAM4R,WAAa7R,KAAKC,MAAM4R,WAAWmB,cAAgB,MAGjFvO,EAAU+E,KAAK,CACbvF,GAAG4N,EACHpR,MAAO,OAAQT,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,SAASC,EAAW,QAAQ,QAAQjI,KAAK,KAAK,IACzGzF,KAAKoO,IAGHU,EAAkB,EAClBvD,EAAcD,EAAc,IAC9BwD,EAAkB,GAGhBvD,IAAkBD,IACpBA,EAAgBzB,KAAKoE,IAAI,EAAE1C,EAAc,IAGtB,EACfwD,GAAaxD,EAAcD,GADZ,EAEf0D,EAAc,GACXpK,EAAE,EAAEA,GAHQ,EAGQA,IACrBqK,EAAa/J,WAAWA,WAAWoG,EAAe1G,EAAEmK,GAAY3J,QAAQ,IAC9E4J,EAAY3J,KAAK4J,GAGS,GACtBC,EAAY9T,OAAOiO,OAAO8B,GAAMhO,OAChCgS,EAAgBtF,KAAKoE,IAAI,EAAEpE,KAAKuF,KAAKF,EAFf,KAItB3O,EAAa,CACjB8O,OAAO,CACL5I,KAAM,OACNuH,OAAQ,kBAEVsB,OAAO,CACL7I,KAAM,SACN8I,SAAS,EACTzF,IAAKwB,EACL2C,IAAK1C,GAEPiE,QAAQ,gBACRC,QAAQ,SAAA9M,GAAK,OAAIL,EAAK1B,cAAc8O,YAAY/M,EAAMmM,IACtDa,WAAY9T,KAAKC,MAAM6C,SAAW,KAAO,CACvCiR,OAAQ,GACRC,SAAS,EACT7B,OAAQ,QACR8B,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAW,SAASf,EAAc,SAEpCH,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAUxU,KAAKC,MAAM6C,SAAW,KAAO,CACrCiR,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfE,WAAWlB,EACXiB,eAAgB,SAChBjC,OAAQ,SAAAvL,GAAC,OAAIH,EAAK1B,cAAc2P,iBAAiB9N,EAAE,KAErDZ,SAAQ,EACR2O,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBzR,OAAO,SAAA8C,GAAC,OAAIA,EAAE7F,OACdyU,mBAAmB,GACnBC,kBAAkB1F,EAClB2F,WAAW,CAAE9M,KAAM,QAASE,UAAW,IACvC6M,YAAqC,UAAzBrV,KAAKC,MAAMoM,UAAwB,GAAM,GACrD9I,MAAM,CACJ+R,KAAM,CACJC,MAAO,CACL1R,KAAM,CACJ3C,SAAS,GACTD,WAAW,IACXuU,KAAKxV,KAAKC,MAAMsD,MAAMC,OAAOuQ,OAC7BxM,WAAWvH,KAAKC,MAAMsD,MAAMiE,MAAMC,aAIxCgO,KAAM,CACJC,KAAM,CACJC,OAAQ3V,KAAKC,MAAMsD,MAAMC,OAAOoS,gBAAiBC,gBAAiB,SAaxEpN,OAAQzI,KAAKC,MAAM6C,SAAW,CAAE4F,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAI1E,KAAM,IAAO,CAAEwE,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAI1E,KAAM,IACrH4R,aAAa,SAACC,GAAc,IAEpB/R,EADY+R,EAAVC,MACYC,OAAO,GAC3B,OACEkR,EAAA/mB,EAAAC,cAAC8tG,GAAA,EAAD,CACEnqG,MAAOA,GAEPmjB,EAAA/mB,EAAAC,cAAC+tG,GAAA,EAAD,CACE3tG,MAAOuD,EAAMvD,MACboJ,MAAO7F,EAAMoS,QACbtP,MAAK,KAAAkD,OAAOhG,EAAMG,KAAKkS,cAGO,kBAAxBrS,EAAMG,KAAKyO,UAAyBrT,OAAO8B,KAAK2C,EAAMG,KAAKyO,UAAUtR,OAAO,GAClF/B,OAAO8B,KAAK2C,EAAMG,KAAKyO,UAAUJ,IAAI,SAAA7E,GACnC,GAAIA,IAAU3J,EAAMoS,QAClB,OAAO,KAET,IAAM3V,EAAQgG,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,EAAM,QAAQ,QAC3Ec,EAAUzK,EAAMG,KAAKyO,SAASjF,GAChC2I,EAAmB7P,EAAK1B,cAAc8O,YAAYpF,EAAQ,GAC9D,OAAIpF,WAAWoF,IAAU,IAErB0Y,EAAA/mB,EAAAC,cAAC+tG,GAAA,EAAD,CACEvkG,MAAO8D,EACPlN,MAAOA,EACPsD,IAAG,OAAAiG,OAAS2D,GACZ7G,MAAK,KAAAkD,OAAOsM,KAIX,UAQnBtW,KAAK4F,SAAS,CACZnB,YACAC,mJAKF,OACEyiB,EAAA/mB,EAAAC,cAACmuB,EAAA,EAADjvB,OAAAC,OAAA,CACEoL,KAAM4L,KACN1L,YAAY,GACR9K,KAAKwE,MAAME,WAHjB,CAIEP,KAAMnE,KAAKwE,MAAMC,UACjBgS,SAAUzW,KAAKC,MAAMwW,SACrB7W,OAAQI,KAAKC,MAAM0L,YACnB+K,eAAgB1W,KAAKC,MAAMyW,yBAheG5V,aCk/BvButG,8MAv+Bb7pG,MAAQ,CACN0xC,UAAU,KACVzyC,aAAa,GACbqC,YAAY,KACZmjG,YAAY,KACZqF,aAAa,KACb/oG,cAAc,KACdgpG,cAAa,EACb92D,gBAAgB,GAChBjqB,eAAe,KACfghF,gBAAe,EACfC,iBAAgB,EAChBhD,iBAAiB,KACjBiD,oBAAoB,KACpBC,8BAA8B,UAIhC5pG,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,6QAILnF,KAAK4uG,gBAAgBC,KAAM,WACzB,IAAMP,EAAe7oG,EAAKxF,MAAM6uG,UAAUC,OACpC/F,EAAkBvjG,EAAKV,cAAc6M,gBAAgB,CAAC,aACtD4b,EAAiBjuB,OAAOiO,OAAOw7F,GAAiBx5E,KAAM,SAAA4jB,GAAC,OAAIA,EAAEhR,QAAUksE,IAE7E,QAAuBhiF,IAAnBkB,EAA6B,CAC/B,IAAMy7E,EAAcz7E,EAAe5iB,KAC7B4jG,GAAkB/oG,EAAKjB,MAAM+pG,aAC7BhpG,EAAgBE,EAAKxF,MAAM6uG,UAAUE,OACrCvD,EAAmBhmG,EAAKxF,MAAM6uG,UAAUG,OACxCnpG,EAAc2lG,GAAoBhmG,EAAKxF,MAAMg2C,kBAAkBw1D,IAAqBhmG,EAAKxF,MAAMg2C,kBAAkBw1D,GAAkBlmG,GAAiBE,EAAKxF,MAAMg2C,kBAAkBw1D,GAAkBlmG,GAAyB,KAElO,GAAIE,EAAKjB,MAAM+pG,eAAiBzoG,EAC9B,OAAOL,EAAKxF,MAAMivG,YAAYzpG,EAAKxF,MAAMksG,gBAAgB/pE,OAG3D38B,EAAKG,SAAS,CACZqjG,cACAnjG,cACAwoG,eACA/oG,gBACAioB,iBACAghF,iBACA/C,yBAEG,CACL,IAAMlmG,EAAgBE,EAAKxF,MAAM6uG,UAAUG,OACrCxD,EAAmBhmG,EAAKxF,MAAM6uG,UAAUC,OACxCjpG,EAAcL,EAAKxF,MAAMg2C,kBAAkBw1D,IAAqBhmG,EAAKxF,MAAMg2C,kBAAkBw1D,GAAkBlmG,GAAiBE,EAAKxF,MAAMg2C,kBAAkBw1D,GAAkBlmG,GAAiB,KAClMO,GACFL,EAAKG,SAAS,CACZE,cACAP,gBACAkmG,6MAOepmG,EAAWC,kFAClCtF,KAAKmF,YAEC2nB,EAAiBznB,EAAUmH,UAAYxM,KAAKC,MAAMuM,QAClD2iG,EAA2BpjG,KAAKC,UAAU3G,EAAU4wC,qBAAuBlqC,KAAKC,UAAUhM,KAAKC,MAAMg2C,oBACvGnpB,GAAkBqiF,IACpBnvG,KAAK4F,SAAS,CACZ6oG,iBAAgB,GAChB,WACAhoG,EAAKmoG,uSAMJ5uG,KAAKC,MAAMuM,+BACO,GACG,EACxBxM,KAAK4F,SAAS,CACZ2oG,cAHmB,EAInBE,iBAHsB,uBAKjB,0BAGezuG,KAAK+E,cAAcixC,4BAA4Bh2C,KAAKC,MAAMg2C,kBAAkBj2C,KAAKC,MAAMuM,iBAAzG0pC,aAIoB,EAClBk5D,EAAiBpvG,KAAK+E,cAAc6M,gBAAgB,CAAC,aAErDy9F,EAAiB,GACjBC,EAAmB,GACzBp5D,EAAUO,gBAAgBl1C,QAAS,SAAA81C,GAC5Bi4D,EAAiBj4D,EAAY3qB,WAChC4iF,EAAiBj4D,EAAY3qB,SAAW,CACtC6iF,OAAO31E,EAAK70B,cAAc6I,MAAM,GAChCa,QAAQmrB,EAAK70B,cAAc6I,MAAM,KAGrC0hG,EAAiBj4D,EAAY3qB,SAAS6iF,OAASD,EAAiBj4D,EAAY3qB,SAAS6iF,OAAOjhG,KAAK+oC,EAAYC,eAC7Gg4D,EAAiBj4D,EAAY3qB,SAASje,QAAU6gG,EAAiBj4D,EAAY3qB,SAASje,QAAQH,KAAK+oC,EAAY7Q,cAE1G6oE,EAAeh4D,EAAY1pC,SAC9B0hG,EAAeh4D,EAAY1pC,OAASisB,EAAK70B,cAAc6I,MAAM,IAE/DyhG,EAAeh4D,EAAY1pC,OAAS0hG,EAAeh4D,EAAY1pC,OAAOW,KAAK+oC,EAAY7Q,gBAGnFiR,EAAkBl4C,OAAO8B,KAAKguG,GAE9BG,EAAqBjwG,OAAO8B,KAAKguG,GAAgB78F,IAAK,SAAA7E,GAC1D,IAAM8hG,EAAepmG,WAAWgmG,EAAe1hG,GAAOpE,QAAQ,IACxDzD,EAAc8zB,EAAK70B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,IACzE,MAAO,CACL1J,GAAG0J,EACHjN,KAAKiN,EACL9D,MAAM8D,EACN7G,MAAM2oG,EACNpH,YAAW,KAAAr+F,OAAOylG,EAAP,QAAAzlG,OAA0B2D,GACrClN,MAAM,OAAOqF,EAAYrF,MAAMkJ,IAAIC,KAAK,KAAK,IAC7CjH,MAAMmD,EAAY7C,MAAZ,iBAAA+G,OAAqC2D,EAArC,WAIJ+gG,EAAsBnvG,OAAO8B,KAAKiuG,GAAkB98F,IAAI,SAACk9F,EAAY3mG,GACzE,IAAM4jB,EAAgByiF,EAAeM,GAC/BC,EAAcL,EAAiBI,GAErC,MAAO,CACLzrG,GAAGyrG,EACHhvG,KAAKgvG,EACL5oG,MAJkBuC,WAAWsmG,EAAYJ,OAAOjmG,MAAM,KAAKC,QAAQ,IAKnEM,MAAO8iB,EAAcjsB,KACrBD,MAAM,OAAOksB,EAAclsB,MAAMkJ,IAAIC,KAAK,KAAK,IAC/Cy+F,YAAW,KAAAr+F,OAAO2lG,EAAYlhG,QAAQlF,QAAQ,GAAnC,QAAAS,OAA4C2iB,EAAcjsB,SAMnE+C,EAAeyyC,EAAUzyC,aACzB8qG,EAAer4D,GAAal2C,KAAK+E,cAAc6I,MAAMsoC,EAAUQ,cAAcjlC,GAAG,GAEtFzR,KAAK4F,SAAS,CACZswC,YACAq4D,eACA9qG,eACAgrG,iBA5DsB,EA6DtBh3D,kBACA+3D,qBACAd,qKAKYJ,GAChB,IAAIlsE,EAAK,GAAAp4B,OAAMhK,KAAKC,MAAMksG,gBAAgB/pE,MAAjC,KAAAp4B,OAA0CskG,IAC/BtuG,KAAKC,MAAMg2C,kBAAkBj2C,KAAKwE,MAAMinG,mBAAqBzrG,KAAKC,MAAMg2C,kBAAkBj2C,KAAKwE,MAAMinG,kBAAkBzrG,KAAKwE,MAAMe,eAAiBvF,KAAKC,MAAMg2C,kBAAkBj2C,KAAKwE,MAAMinG,kBAAkBzrG,KAAKwE,MAAMe,eAAiB,QAE3P68B,GAAK,IAAAp4B,OAAQhK,KAAKwE,MAAMinG,iBAAnB,KAAAzhG,OAAuChK,KAAKwE,MAAMe,gBAEzDvF,KAAKC,MAAMivG,YAAY9sE,yCAGX7V,EAAS5e,GAErB,GADoB3N,KAAKC,MAAMg2C,kBAAkB1pB,IAAavsB,KAAKC,MAAMg2C,kBAAkB1pB,GAAU5e,GAAS3N,KAAKC,MAAMg2C,kBAAkB1pB,GAAU5e,GAAS,KAC9I,CACd,IAAIy0B,EAAK,GAAAp4B,OAAMhK,KAAKC,MAAMksG,gBAAgB/pE,OACtCpiC,KAAKwE,MAAM8pG,eACblsE,GAAK,IAAAp4B,OAAQhK,KAAKwE,MAAM8pG,eAE1BlsE,GAAK,IAAAp4B,OAAQuiB,EAAR,KAAAviB,OAAoB2D,GAEzB3N,KAAKC,MAAMivG,YAAY9sE,6DAIMusE,GAC/B3uG,KAAK4F,SAAS,CACZ+oG,mEAKE3uG,KAAKwE,MAAMsB,cAAgB9F,KAAKwE,MAAM+pG,aACxCvuG,KAAKC,MAAMivG,YAAYlvG,KAAKC,MAAMksG,gBAAgB/pE,MAAM,IAAIpiC,KAAKwE,MAAMgpB,eAAe4U,OAItFpiC,KAAKC,MAAMivG,YAAYlvG,KAAKC,MAAMksG,gBAAgB/pE,wCAI7C,IAAAwtE,EAAA5vG,KAED6vG,EAAiB,GAWvB,OAVI7vG,KAAKwE,MAAMykG,aACb4G,EAAermG,KAAKxJ,KAAK+E,cAAc+E,WAAW9J,KAAKwE,MAAMgpB,eAAem7E,WAE1E3oG,KAAKwE,MAAMinG,kBACboE,EAAermG,KAAKxJ,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,YAAY5R,KAAKwE,MAAMinG,iBAAiB,WAEtGzrG,KAAKwE,MAAMe,eACbsqG,EAAermG,KAAKxJ,KAAKwE,MAAMe,eAI/B4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAGLkwG,EAAevuG,OAAO,GACpB6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP2E,GAAI,CAAC,EAAE,GACP9B,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IAEPwnB,EAAA/mB,EAAAC,cAACyvG,EAAA,EAADvwG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE4D,KAAM,WACNqlB,KAAM2mF,EACN/sG,SAAU9C,KAAKC,MAAM6C,SACrBvC,YAAaP,KAAKw2B,OAAO7H,KAAK3uB,UAGlCmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GACP+C,eAAgB,cAQrB1C,KAAKwE,MAAMiqG,gBAiBRzuG,KAAKwE,MAAMsB,YACbqhB,EAAA/mB,EAAAC,cAAC0vG,EAADxwG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEi2C,UAAWl2C,KAAKwE,MAAM0xC,UACtB+yD,YAAajpG,KAAKwE,MAAMykG,YACxBnjG,YAAa9F,KAAKwE,MAAMsB,YACxBP,cAAevF,KAAKwE,MAAMe,cAC1BioB,eAAgBxtB,KAAKwE,MAAMgpB,eAC3Bi+E,iBAAkBzrG,KAAKwE,MAAMinG,iBAC7Bx1D,kBAAmBj2C,KAAKC,MAAMg2C,kBAC9B8yD,kBAAmB/oG,KAAK+oG,kBAAkBp6E,KAAK3uB,SAE9CA,KAAKwE,MAAMykG,aAAgBjpG,KAAKwE,MAAM+pG,aAMzCpnF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CACEuD,GAAI,GAEHtE,KAAKwE,MAAMgqG,eAAiBxuG,KAAK+E,cAAc+E,WAAW9J,KAAKwE,MAAMgpB,eAAem7E,UAAY,KAHnG,aAME3oG,KAAKwE,MAAMiqG,iBAAmBzuG,KAAKwE,MAAM+pG,cACvCpnF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACPmd,GAAI,CAAC,EAAE,GACPta,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpc,GAAI,CAAC,EAAE,GACPrL,MAAO,CAAC,EAAE,EAAE,GACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,CAAC,EAAE,GACNuC,GAAG,CAAC,EAAE,GACN+C,QAAQ,OACR7E,WAAW,SACX5C,OAAO,CAAC,OAAO,SACf8C,eAAe,WAGjBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAKwE,MAAM0xC,UAAUE,OACnBjvB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhmB,WAAY,EACZH,WAAY,CAAC,EAAE,GACfR,MAAO,YACP8G,WAAY,UACZrG,SAAU,CAAC,EAAE,SACboK,wBAAyB,CAAEC,OAAQvL,KAAKwE,MAAM0xC,UAAUE,OAAO7sC,QAAQ,GAAG,sBAI5E4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,SAGjBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,WAOA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE4iB,UAAW,SACX/b,QAASjuB,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,aAExDuV,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJhK,KAAM,OACNE,KAAM,MACNH,MAAO,mBAOnB0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpc,GAAI,CAAC,EAAE,GACPrL,MAAO,CAAC,EAAE,EAAE,GACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,CAAC,EAAE,GACNuC,GAAG,CAAC,EAAE,GACN+C,QAAQ,OACR7E,WAAW,SACX5C,OAAO,CAAC,OAAO,SACf8C,eAAe,WAGjBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAKwE,MAAM0xC,UACT/uB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC2vG,EAADzwG,OAAAC,OAAA,CACE8K,SAAU,GACNtK,KAAKC,MAFX,CAGEi2C,UAAWl2C,KAAKwE,MAAM0xC,aAExB/uB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IACP6C,WAAY,SACZE,eAAgB,YAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZsG,WAAYvH,KAAKC,MAAMsD,MAAMiE,MAAMuZ,QACnCtgB,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAJrD,IAMIzlB,KAAKwE,MAAM0xC,UAAUK,kBAAkBhtC,QAAQ,GANnD,MASF4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEsE,GAAI,EACJxqB,SAAU,EACVD,WAAY,EACZsG,WAAYvH,KAAKC,MAAMsD,MAAMiE,MAAMuZ,QACnCtgB,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WALrD,KAOA0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IACP6C,WAAY,SACZE,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAAC4vG,EAAD1wG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEguG,KAAM,KACN3jG,SAAU,EACVwjG,aAAc,CACZ5sG,SAAS,GACTD,WAAW,IACXR,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpDywB,UAAWl2C,KAAKwE,MAAM0xC,gBAM9B/uB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,SAGjBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,qBA4BR0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,EAAE,GACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,CAAC,EAAE,GACNuC,GAAG,CAAC,EAAE,GACN+C,QAAQ,OACR7E,WAAW,SACX5C,OAAO,CAAC,OAAO,SACf8C,eAAe,WAGjBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAKwE,MAAMkqG,oBACTvnF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZyB,GAAI,kBACJrE,OAAQ,CAAC,OAAO,QAChB6C,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC6vG,EAAD3wG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEiH,QAAQ,EACR4D,YAAY,EACZnE,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzBnH,MAAQK,KAAKC,MAAM6C,SAAW,GAAK,GACnClD,OAASI,KAAKC,MAAM6C,SAAW,GAAK,GACpC2B,UAAWzE,KAAKwE,MAAMkqG,wBAI1BvnF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,SAGjBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,+BA2BV0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACPsE,GAAI,mBACJvB,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,CAAC,EAAE,GACP3E,MAAO,CAAC,EAAE,MACV8C,cAAe,SACfwB,GAAI,yBAEJkjB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACEhnF,MAAO,cACPiI,WAAc7oB,KAAKC,MAAM6C,SAIrB,KAJgC,CAClCmI,MAAM,CACJokB,UAAU,UAIdlI,EAAA/mB,EAAAC,cAAC6vG,EAAD3wG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE8sG,YAAY,EACZjiG,YAAY,EACZjE,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,OACnB2mG,aAAc,cACdh3F,SAAU,wBACVhS,UAAWzE,KAAKwE,MAAMgrG,mBACtBhC,aAAcxtG,KAAKC,MAAMksG,gBAAgBxpG,MACzCmb,aAAY,KAAA9T,OAAOhK,KAAK+E,cAAc8O,YAAYxK,WAAWrJ,KAAKwE,MAAM0xC,UAAUQ,cAAc,IAChGjuC,OAAQzI,KAAKC,MAAM6C,SAAW,CAAE4F,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAI1E,KAAM,IAAO,CAAEwE,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAI1E,KAAM,SAI3HijB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,MACV8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,KACEzgF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3O,GAAI,CAAC,EAAE,GACPzW,GAAI,CAAC,EAAE,GACPmuG,UAAW,SACX1tG,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,IACV8C,cAAe,SACfC,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CACEE,WAAY,EACZC,SAAU,CAAC,EAAE,GACbC,UAAW,QAHb,gBAQFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,CAAC,EAAE,GACPnd,MAAO,CAAC,EAAE,IACV8C,cAAe,SACfC,eAAgB,YAEhBykB,EAAA/mB,EAAAC,cAACmd,EAAA,EAAD,CACEW,WAAY,CACV1e,EAAE,EACFuC,GAAG,GAEL8b,aACE,CAAChX,MAAM,OAAO+C,MAAM,MAEtBnJ,KAAM,mBACNkd,QAAS,CACP,CAAC9W,MAAM,OAAO+C,MAAM,MACpB,CAAC/C,MAAM,QAAQ+C,MAAM,MACrB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,MAAM+C,MAAM,QAErB+V,SAAW,SAAAhZ,GAAC,OAAIgpG,EAAKQ,iCAAiCxpG,QAI5DugB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,CAAC,EAAE,GACPylG,UAAW,SACXztG,eAAgB,SAChBuB,GAAI,yBAEJkjB,EAAA/mB,EAAAC,cAACgwG,GAAD9wG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgM,cAAe,GACfwK,SAAU,wBACVC,eAAgB,wBAChBg2F,iBAAkB1sG,KAAKwE,MAAMf,aAC7BqI,mBAAoB9L,KAAKwE,MAAMmqG,8BAC/Bt8F,iBAAkBrS,KAAK+E,cAAc8jC,oBAAoB,MAAM,WAS/E1hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP2E,GAAI,CAAC,EAAE,GACPL,GAAI,iBACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE+M,GAAI,EACJx0B,MAAO,EACP2E,GAAI,CAAC,EAAE,GACPiE,YAAa,UACbmgG,aAAc,yBAEdvhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQghF,GAAT,CACElnG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,uBAOFkmB,EAAA/mB,EAAAC,cAACiwG,EAAD/wG,OAAAC,OAAA,CACEqtG,iBAAkB,GAClB5D,YAAajpG,KAAKwE,MAAMykG,YACxBhzD,kBAAmBj2C,KAAKC,MAAMg2C,kBAC9B11C,YAAa,SAACN,GAAD,OAAW2vG,EAAKW,cAActwG,EAAMssB,SAAStsB,EAAM0N,QAChE2Z,KAAM,CACJ,CACE1G,MAAM,WACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,eACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,SAGpB,CACEc,KAAK,kBAIX,CACEkgB,MAAM,QACN3gB,MAAM,CACJN,MAAM,CAAC,IAAM,MAEfspB,OAAO,CACL,CACEvoB,KAAK,YACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,SAGpB,CACEc,KAAK,eAIX,CACEkgB,MAAM,OACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,kBACLT,MAAM,CACJsc,UAAU,CACRnZ,GAAG,GAELxC,KAAK,UAGT,CACEF,KAAK,gBAGTszB,UAAUh0B,KAAKwE,MAAMgqG,gBAEvB,CACE5tF,MAAM,OACN3gB,MAAM,CACJN,MAAM,CAAC,IAAM,MAEfspB,OAAO,CACL,CACEvoB,KAAKV,KAAKwE,MAAMgqG,eAAX,GAAAxkG,OAA+BhK,KAAKwE,MAAMgpB,eAAem7E,SAAzD,QAA0E,OAC/E1oG,MAAM,CACJqK,SAAS,MAKjB,CACEsW,MAAM5gB,KAAKwE,MAAMgqG,eAAiB,MAAQ,aAC1CvuG,MAAM,CACJN,MAAM,CAAC,IAAKK,KAAKwE,MAAMgqG,eAAiB,IAAO,MAEjDplF,YAAY,CACV3mB,cAAc,SACdD,WAAW,cAEbymB,OAAO,CACL,CACEvoB,KAAK,YACLunC,aAAY,IAGhBjU,SAASh0B,KAAKwE,MAAMgqG,gBAAgD,OAA9BxuG,KAAKwE,MAAMgqG,gBAEnD,CACE5tF,MAAM5gB,KAAKwE,MAAMgqG,eAAiB,MAAQ,aAC1CvuG,MAAM,CACJN,MAAM,CAAC,IAAKK,KAAKwE,MAAMgqG,eAAiB,IAAO,MAEjDplF,YAAY,CACV3mB,cAAc,SACdD,WAAW,cAEbymB,OAAO,CACL,CACEvoB,KAAK,YACLunC,aAAY,IAGhBjU,SAASh0B,KAAKwE,MAAMgqG,gBAAgD,OAA9BxuG,KAAKwE,MAAMgqG,gBAEnD,CACErlF,QAAO,EACPvI,MAAM,oBACN3gB,MAAM,CACJN,MAAM,CAAC,IAAKK,KAAKwE,MAAMgqG,eAAiB,IAAO,MAEjDvlF,OAAO,CACL,CACEvoB,KAAK,eAIX,CACEkgB,MAAM,GACNuI,OAA8B,OAAvBnpB,KAAKC,MAAMuM,QAClBvM,MAAM,CACJN,MAAM,CAAyB,OAAvBK,KAAKC,MAAMuM,QAAmB,IAAO,EAAG,MAElD4c,YAAY,CACVzpB,MAAM,GAERspB,OAAO,CACL,CACEvoB,KAAK,SACLmJ,MAAO,UACP5J,MAAM,CACJN,MAAM,EACNuB,SAAS,EACTD,WAAW,EACXrB,OAAO,OACPC,aAAa,EACbye,UAAU,KACVxe,UAAU,UACVc,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,SACtCvC,YAAY,SAACN,GAAD,OAAW2vG,EAAKW,cAActwG,EAAMssB,SAAStsB,EAAM0N,cAMrE3N,KAAKC,SAIXD,KAAKC,MAAMuM,SAAWxM,KAAKwE,MAAM+pG,cAC/BpnF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,CAAC,EAAE,GACP3E,MAAO,EACPsE,GAAI,eACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CAAOuD,GAAI,CAAC,EAAE,IAAd,gBACA6iB,EAAA/mB,EAAAC,cAACosG,EAAA,EAADltG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgM,cAAejM,KAAKwE,MAAMizC,gBAC1Bi1D,iBAAkB1sG,KAAKwE,MAAMf,aAC7BkpG,iBAAkB3sG,KAAKwE,MAAMf,aAAa+2C,OAAQ,SAACmyD,EAAiBv5D,GAElE,OADAu5D,EAAiBv5D,EAAE/kC,OAAOlF,eAAiBiqC,EAAE/kC,OACtCs+F,GACP,IACFrlF,KAAM,CACJ,CACE1G,MAAO5gB,KAAKC,MAAM6C,SAAW,GAAK,OAClC7C,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,KAGV,CACE1C,KAAK,OACLyoB,QAAO,KAIb,CACEvI,MAAM,SACNuI,QAAO,EACPlpB,MAAM,CACJN,MAAM,KAERspB,OAAO,CACL,CACEvoB,KAAK,YAIX,CACEkgB,MAAM,OACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,UAIX,CACEyoB,QAAO,EACPvI,MAAM,SACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,aACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,KAGV,CACE+lB,QAAO,EACPzoB,KAAK,YAIX,CACEkgB,MAAM,SACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,YAIX,CACEkgB,MAAM,WACN3gB,MAAM,CACJN,MAAM,CAAC,IAAM,MAEfspB,OAAO,CACL,CACEre,KAAK,QACLlK,KAAK,SACLwoB,KAAK,CAAC,gBACNjpB,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,SAGpB,CACEgL,KAAK,OACLue,QAAO,EACPzoB,KAAK,SACLwoB,KAAK,CAAC,eAIZ,CACEtI,MAAM,QACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,YACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,GACNxD,OAAO,CAAC,QAAQ,WAGpB,CACEupB,QAAO,EACPzoB,KAAK,qBA1rBvBymB,EAAA/mB,EAAAC,cAACmsG,EAADjtG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE8oG,kBAAmB/oG,KAAK+oG,kBAAkBp6E,KAAK3uB,SA/BjDmnB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACEn/B,UAAW,CACT4sG,SAAS,EACTvvG,WAAW,GAEbob,YAAa,CACX/X,GAAG,EACH1D,KAAK,QAEP2b,UAAW,CACTha,GAAG,EACH8sB,UAAU,OACV5sB,cAAc,UAEhBoB,KAAM,iCAhRG/C,2CCmQR2vG,8MA7QbjsG,MAAQ,CACNsB,YAAY,KACZ4qG,kBAAkB,KAClBC,kBAAkB,KAClBC,2BAA2B,QAI7B7rG,cAAgB,OA4HhB8rG,sDAAkB,SAAAx5F,EAAOq5F,GAAP,IAAAC,EAAAC,EAAAn5E,EAAA,OAAAjN,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,OACZojG,EAAoB,KAClBC,EAA6B,GACX5vG,EAAK+D,cAAc6M,gBAAgB,CAAC,WAAW,YAAY,YAAY,oBAE/ErQ,QAAS,SAAAoM,GACnBA,IAAU+iG,IACPC,IACHA,EAAoBhjG,GAEtBijG,EAA2BjjG,GAAS,CAClCA,aAKA8pB,EAAYz2B,EAAK+D,cAAc6M,gBAAgB,CAAC,iBACpC8+F,IAChBE,EAA2Bn5E,GAAa,CACtC9pB,MAAM8pB,IAIVz2B,EAAK4E,SAAS,CACZ8qG,oBACAE,8BACA,WACA5vG,EAAK8vG,gBAAgBH,KA3BP,wBAAAp5F,EAAA1I,SAAAwI,EAAArX,iEA+BlB8wG,sDAAkB,SAAAh5F,EAAO64F,GAAP,OAAAnmF,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,OAChBvM,EAAK4E,SAAS,CACZ+qG,sBAFc,wBAAA14F,EAAApJ,SAAAiJ,EAAA9X,iEAMlB+kB,KAAO,WACL,IAAMtb,EAAgBzI,EAAK+D,cAAc0lB,mBACnC6K,EAAkBt0B,EAAKwD,MAAMsyB,aAC7Bi6E,EAAY,CAChBt5E,UAAUz2B,EAAKwD,MAAMksG,kBACrBnrG,cAAcvE,EAAKwD,MAAMmsG,kBACzBK,SAAQ,iBAAAhnG,OAAkBhJ,EAAKwD,MAAMksG,kBAA7B,KAAA1mG,OAAkDhJ,EAAKwD,MAAMmsG,oBAEjEp7E,EAAaD,GAAmBA,EAAgBgB,cAAgBhB,EAAgBgB,cAAcy6E,EAAUtnG,GAAiB,KAGzF,oBAA3B6rB,EAAgBiB,QACzBjB,EAAgBiB,OAAOhB,EAAW,KAAKw7E,GAIzC/vG,EAAK+D,cAAc4kB,yBAAyB,CAC1CC,cAAe,QACfC,YAAa,YACbC,WAAU,GAAA9f,OAAKhJ,EAAKwD,MAAMksG,kBAAhB,KAAA1mG,OAAqChJ,EAAKwD,MAAMmsG,iGAjLxD3wG,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,6KAMzCD,KAAKwE,MAAMksG,mBAAsB1wG,KAAKwE,MAAMmsG,4DACxC,UAGQ,aACX75E,EAAe92B,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,YADnD,eAEAiZ,SAAWiM,EAAa2B,kBAEjChvB,EAAgBzJ,KAAK+E,cAAc0lB,mBACnCgO,EAAkB3B,EAAa2B,gBAErCl5B,OAAO8B,KAAKo3B,GAAiBl3B,QAAQ,SAACm3B,EAAIH,GAIxC,OAFqBG,EAAIC,MAAM,KAAK7nB,MAAM3H,eAGxC,IAAK,KACH,IAAMyvB,EAAQ,UAAA5uB,OAbL,YAaK,KAAAA,OAAyBuuB,EAAzB,KAAAvuB,OAA8BvE,EAAKjB,MAAMksG,kBAAzC,KAAA1mG,OAA8DvE,EAAKjB,MAAMmsG,mBAEvF,IAAK7hF,SAASC,eAAe6J,GAAU,CACrC,IAAMC,EAAS/J,SAASzuB,cAAc,UAChCy4B,EAAuBL,EAAgBC,GACvC/yB,EAAWmzB,GAAwBA,EAAqBnzB,SAAWmzB,EAAqBnzB,SAAW,KACnGozB,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAEtG,GAAIA,GAA8B,oBAAZA,EAMpBA,EALqB,CACnBtB,UAAUhyB,EAAKjB,MAAMksG,kBACrBnrG,cAAcE,EAAKjB,MAAMmsG,kBACzBK,SAAQ,iBAAAhnG,OAAkBvE,EAAKjB,MAAMksG,kBAA7B,KAAA1mG,OAAkDvE,EAAKjB,MAAMmsG,oBAElDlnG,EAAcqtB,GAGjCnxB,GAAgC,oBAAbA,IACjBkzB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BtzB,MAIJkzB,EAAOK,OAASvzB,GAIpBkzB,EAAO50B,GAAK20B,EACZC,EAAO7Z,UAAP,UAAAhV,OA5CO,aA6CP6uB,EAAOh2B,IAAM61B,EACbG,EAAOM,OAAQ,EAEXL,GAAwBA,EAAqBM,cAC/CN,EAAqBM,cAAcC,YAAYR,GAE/C/J,SAASwK,KAAKD,YAAYR,GAGhC,MACA,IAAK,MACH,IAAMU,EAAY,cAAAvvB,OAxDT,YAwDS,KAAAA,OAA6BuuB,GAE/C,IAAKzJ,SAASC,eAAewK,GAAc,CACzC,IAAMtuB,EAAQ6jB,SAASzuB,cAAc,QAErC4K,EAAMhH,GAAKs1B,EACXtuB,EAAMgS,IAAM,aACZhS,EAAMiS,KAAOwb,EAEb5J,SAASwK,KAAKD,YAAYpuB,QASpCjL,KAAK4F,SAAS,CACZkxB,+QAKF92B,KAAKmF,qBACCnF,KAAKixG,gRAILP,EAAoBnxG,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAiB,YAEtEtM,KAAK+E,cAAc6H,aAAarN,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAjE,eAAAsL,EAAArY,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAkF,SAAA8L,EAAOnL,GAAP,IAAA7H,EAAA,OAAA0kB,EAAApqB,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,UAChFzH,EAAcW,EAAKxG,MAAMuoG,UAAUl8F,gBAAgBqB,GACnClH,EAAK1B,cAAc24B,kBAAkB53B,EAAY6H,SACjD7H,EAAYu4B,IAHoD,CAAArlB,EAAAzL,KAAA,eAAAyL,EAAAzL,KAAA,EAI9E9G,EAAKxG,MAAMq+B,aAAax4B,EAAY6H,MAAM7H,EAAYoD,QAAQpD,EAAYu4B,KAJI,wBAAArlB,EAAAnK,SAAAiK,EAAA9Y,SAAlF,gBAAA8O,GAAA,OAAA8I,EAAA7I,MAAA/O,KAAAgP,YAAA,WAQNhP,KAAK6wG,gBAAgBH,wLAGErrG,EAAUC,2EACjCtF,KAAKmF,YAEC+rG,EAAmB5rG,EAAUorG,oBAAsB1wG,KAAKwE,MAAMksG,kBAC9DS,EAAmB7rG,EAAUqrG,oBAAsB3wG,KAAKwE,MAAMmsG,mBAC/DO,GAAqBC,IAAqBnxG,KAAKwE,MAAMksG,mBAAqB1wG,KAAKwE,MAAMmsG,mBACxF3wG,KAAKoxG,wJAgEA,IAAAx3E,EAAA55B,KAEP,OAAKA,KAAKwE,MAAMksG,kBAKdvpF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPmd,GAAI,CAAC,EAAE,GACPta,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACV6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,yBAGA6iB,EAAA/mB,EAAAC,cAACkvB,GAAA,EAADhwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE4vB,aAAa,EACbjR,cAAc,EACdgB,SAAU5f,KAAK6wG,gBACftrG,cAAevF,KAAKwE,MAAMksG,kBAC1BpkG,gBAAiBtM,KAAKC,MAAMuoG,UAAUl8F,oBAIxCtM,KAAKwE,MAAMosG,4BAA8B5wG,KAAKwE,MAAMmsG,mBAClDxpF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,6BAGA6iB,EAAA/mB,EAAAC,cAACkvB,GAAA,EAADhwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE4vB,aAAa,EACbjR,cAAc,EACdgB,SAAU5f,KAAK8wG,gBACfvrG,cAAevF,KAAKwE,MAAMmsG,kBAC1BrkG,gBAAiBtM,KAAKwE,MAAMosG,+BAIpCzpF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP+C,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJmpB,GAAI,CAAC,EAAG,GACR9qB,KAAM,SACNf,aAAc,EACdC,UAAW,OACXud,QAAU,SAAA7W,GAAC,OAAIozB,EAAK7U,KAAKve,IACzBzG,UAAYC,KAAKwE,MAAMksG,oBAAsB1wG,KAAKwE,MAAMmsG,mBAP1D,kBAxDC,YArMW7vG,gCC8vBTuwG,8MAxvBb7sG,MAAQ,CACNkF,MAAM,GACN8gG,MAAM,KACND,QAAQ,KACR+G,YAAY,GACZ72E,WAAW,KACX4tE,YAAY,KACZviG,YAAY,KACZslG,YAAY,KACZmG,aAAY,EACZ/qE,aAAa,KACbqvC,aAAa,KACbhO,cAAc,KACdtiE,cAAc,KACdisG,iBAAiB,EACjBC,eAAe,KACfnG,eAAe,KACf/C,eAAe,KACfmJ,eAAe,KACftI,eAAc,EACd1kB,eAAe,KACfp4E,gBAAgB,KAChBg9F,gBAAe,EACfqI,iBAAiB,KACjBzwE,kBAAiB,EACjB0wE,kBAAkB,KAClB7lE,kBAAkB,KAClB8+D,mBAAmB,KACnBvoE,oBAAoB,KACpB2pE,sBAAqB,EACrB4F,yBAAwB,KAI1B9sG,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,uKAK9CD,KAAKmF,YACLnF,KAAK4F,SAAS,CACZ0lG,eAAe,SACf,WACA7lG,EAAKqsG,mbAOgBzsG,EAAUC,sFACjCtF,KAAKmF,YAEC4sG,EAAwBzsG,EAAUgmG,iBAAmBtrG,KAAKwE,MAAM8mG,eAChE0G,EAA0B1sG,EAAU47B,mBAAqBlhC,KAAKwE,MAAM08B,iBACpEkpE,EAAqBr+F,KAAKC,UAAU3G,EAAUS,eAAiBiG,KAAKC,UAAUhM,KAAKC,MAAM6F,aACzFmsG,EAAsBlmG,KAAKC,UAAU3G,EAAUwwE,gBAAkB9pE,KAAKC,UAAUhM,KAAKC,MAAM41E,eAC7Fk8B,GAAyBC,GAA2B5H,IACtDpqG,KAAK4F,SAAS,CACZgsG,kBAAkB,KAClBC,yBAAwB,GACxB,WACAprG,EAAKqrG,WAAWC,KAIhBE,GACFjyG,KAAKwpG,0TAIiB/uE,iCAAW,KAE/B8vE,EAAU,MAEV9vE,IAAcz6B,KAAK+E,cAAc6I,MAAM6sB,GAAYhpB,GAAG,oBACxDgpB,EAAaz6B,KAAK+E,cAAc6I,MAAM6sB,QAC9Bz6B,KAAKwE,MAAM8mG,sBACZ,iBAmBA,4CAlBG4G,EAAoBlyG,KAAK+E,cAAcsM,iBAAiBrR,KAAKwE,MAAMqjE,cAAc7nE,KAAKC,MAAM6F,YAAYwE,UAAUgE,KAAKmsB,GACvH03E,EAAqBnyG,KAAK+E,cAAcsM,iBAAiBrR,KAAKwE,MAAM4tG,mBAAmBpyG,KAAKC,MAAM41E,aAAavrE,UAAUgE,KAAKmsB,GAC9H43E,EAAwBH,EAAkBj4F,IAAIk4F,GAC9CG,EAAgBtyG,KAAKwE,MAAMunC,kBAAkBziC,MAAM,OAAOA,MAAM+oG,GAEhEE,EAAmBL,EAAkB5oG,MAAMtJ,KAAKwE,MAAMkgF,gBACtD8tB,EAAoBF,EAAchpG,MAAM,KAAKA,MAAMtJ,KAAKwE,MAAMmtG,kBAC9D50D,EAAMw1D,EAAiB9gG,GAAG,GAAK+gG,EAAkBv4F,IAAIs4F,GAAkBjpG,MAAM,KAAOtJ,KAAK+E,cAAc6I,MAAM,GAGnH28F,EAAU,CACRtnG,KAAK,eACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,sBAAAmG,OAAuBywB,EAAWlxB,QAAQ,GAA1C,KAAAS,OAAgDhK,KAAKC,MAAM6F,YAAY6H,MAAvE,mCAAA3D,OAA8GsoG,EAAc/oG,QAAQ,GAApI,KAAAS,OAA0IhK,KAAKC,MAAM41E,aAAa48B,YAAlK,mDAAAzoG,OAA+N+yC,EAAIxzC,QAAQ,GAA3O,sJAIAmpG,EAAuB1yG,KAAK+E,cAAck4B,qBAAqBxC,EAAWz6B,KAAKC,MAAM6F,YAAYwE,oBAC5EtK,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,eAAe,CAACgyG,GAAsB,CAACpqG,KAAKtI,KAAKC,MAAMuM,yBAAlJmmG,SACJA,EAAiB3yG,KAAK+E,cAAc8O,YAAY7T,KAAK+E,cAAcsM,iBAAiBshG,EAAe3yG,KAAKC,MAAM6F,YAAYwE,WAC1HigG,EAAU,CACRtnG,KAAK,aACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,wBAAAmG,OAAyBywB,EAAWlxB,QAAQ,GAA5C,KAAAS,OAAkDhK,KAAKC,MAAM6F,YAAY6H,MAAzE,mCAAA3D,OAAgH2oG,EAAhH,KAAA3oG,OAAkIhK,KAAKC,MAAM41E,aAAa48B,YAA1J,+EAQZzyG,KAAK4F,SAAS,CACZ2kG,4JAIiBl5E,GACnB,IAAIiB,EAAa,KACb+nC,EAAe,GAEnB,OADAhpC,EAASrxB,KAAK+E,cAAcyrC,KAAKnf,GACzBrxB,KAAKwE,MAAM8mG,gBACjB,IAAK,QACHh5E,EAAa,eACb+nC,EAAe,CAAChpC,GAClB,MACA,IAAK,WACHiB,EAAa,mBACb+nC,EAAe,CAAChpC,GAKpB,MAAO,CACLiB,aACA+nC,mEAIuBhpC,EAAO+pC,GAChC,IAAI9oC,EAAa,KACb+nC,EAAe,GACXuJ,EAAoBxI,EAApBwI,OAAQtf,EAAY8W,EAAZ9W,EAAGlT,EAASgqB,EAAThqB,EAAGxqC,EAAMw0D,EAANx0D,EAEtB,OADAyqB,EAASrxB,KAAK+E,cAAcyrC,KAAKnf,GACzBrxB,KAAKwE,MAAM8mG,gBACjB,IAAK,QACHh5E,EAAa,8BACb+nC,EAAe,CAAChpC,EAAQuyC,EAAQh9D,EAAG09C,EAAGlT,GACxC,MACA,IAAK,WACH9e,EAAa,mBACb+nC,EAAe,CAAChpC,GAKpB,MAAO,CACLiB,aACA+nC,0OAKI3wD,EAAQ,YASJiO,QAAQqD,IAAI,CACpBhb,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,eACpEV,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,iBACpEV,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,sBACpEV,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,uBACpEV,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,mBAAmB,GAAG,CAAC4H,KAAKtI,KAAKC,MAAMuM,UAC3GxM,KAAKwE,MAAMqjE,cAAcp2D,GAAG,GAAKzR,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,eAAe,CAACV,KAAK+E,cAAco7B,aAAangC,KAAKwE,MAAMqjE,gBAAgB,CAACv/D,KAAKtI,KAAKC,MAAMuM,UAAYxM,KAAK+E,cAAc6I,MAAM,YAIxO,gCAhBEglG,OACAC,OACAT,OACAU,OACArB,OACAsB,OAUIC,EAA0B,GACvBjqG,EAAI,EAAGA,EAAI+pG,EAAsB/pG,IACxCiqG,EAAwBxpG,KAAKxJ,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,kBAAkB,CAACqI,sBAGxF4O,QAAQqD,IAAIg4F,WAApCC,SAEAC,EAAelzG,KAAK+E,cAAcsM,iBAAiBrR,KAAK+E,cAAc6I,MAAMglG,GAAatkG,KAAKtO,KAAK+E,cAAc6I,MAAMilG,IAAgB7yG,KAAKC,MAAM6F,YAAYwE,UACpKZ,EAAMF,KAAK,CACToX,MAAM,gBACN9Z,MAAM9G,KAAK+E,cAAc8O,YAAYxK,WAAW6pG,IAAe,IAAIlzG,KAAKC,MAAM41E,aAAa48B,cAGvFU,EAAgBnzG,KAAK+E,cAAcsM,iBAAiB+gG,EAAmBpyG,KAAKC,MAAM41E,aAAavrE,UACrGZ,EAAMF,KAAK,CACToX,MAAM,iBACN9Z,MAAM9G,KAAK+E,cAAc8O,YAAYxK,WAAW8pG,IAAgB,IAAInzG,KAAKC,MAAM6F,YAAY6H,QAGvFylG,EAAgBpzG,KAAK+E,cAAcsM,iBAAiBuhG,EAAY5yG,KAAKC,MAAM6F,YAAYwE,UAC7FZ,EAAMF,KAAK,CACToX,MAAM,iBACN9Z,MAAM9G,KAAK+E,cAAc8O,YAAYxK,WAAW+pG,IAAgB,IAAIpzG,KAAKC,MAAM41E,aAAa48B,cAGxFY,EAAkBrzG,KAAK+E,cAAcsM,iBAAiBwhG,EAAc7yG,KAAKC,MAAM6F,YAAYwE,UACjGZ,EAAMF,KAAK,CACToX,MAAM,mBACN9Z,MAAM9G,KAAK+E,cAAc8O,YAAYxK,WAAWgqG,IAAkB,IAAIrzG,KAAKC,MAAM41E,aAAa48B,cAG1Fa,EAAiBL,EAAgB3xG,OAAO,EAAI2xG,EAAgBz4D,OAAQ,SAAC+4D,EAAQniE,GAEjF,OADAmiE,EAAUvlG,KAAKoE,IAAIg/B,EAAEoiE,SAASD,IAE9BrlG,SAASiB,KAAK+yC,MAAM,MAAS,KAEzBuxD,EAAkBH,EAAc,GAAAtpG,OAAMhK,KAAK+E,cAAcmK,YAA2B,IAAfokG,GAAqBh/B,MAAMniE,OAAO,wBAAvE,QAAuG,OAC7IzI,EAAMF,KAAK,CACToX,MAAM,mBACN9Z,MAAM2sG,IAGF1nE,EAAoBknE,EAAgBz4D,OAAQ,SAACzO,EAAkBqF,GACnE,GAAIxX,EAAK70B,cAAc6I,MAAMwjC,EAAEsiE,qBAAqBjiG,GAAG,IAAMmoB,EAAK70B,cAAc6I,MAAMwjC,EAAEuiE,aAAaliG,GAAG,GAAG,CACzG,IAAMsqC,EAAkBniB,EAAK70B,cAAcsM,iBAAiB+/B,EAAEsiE,oBAAoB95E,EAAK35B,MAAM41E,aAAavrE,UAAU2P,IAAIm3B,EAAEuiE,aACrH53D,EAAgBntC,UACnBm9B,EAAoBA,EAAkBz9B,KAAKytC,IAG/C,OAAOhQ,GACP/rC,KAAK+E,cAAc6I,MAAM,IAE3BlE,EAAMF,KAAK,CACToX,MAAM,qBACN9Z,MAAM9G,KAAK+E,cAAc8O,YAAYk4B,EAAkBziC,MAAM,QAAQ,IAAItJ,KAAKC,MAAM41E,aAAa48B,YAAY,WAGzGnB,EAAc,GAEdzpC,EAAgB7nE,KAAK+E,cAAcsM,iBAAiBrR,KAAKwE,MAAMqjE,cAAc7nE,KAAKC,MAAM6F,YAAYwE,UACpGspG,EAAe/rC,EAAc5tD,IAAIk5F,GAEjC3B,EAAmBC,GAAkBzxG,KAAK+E,cAAc6I,MAAM6jG,EAAe,IAAIhgG,GAAG,GAAKzR,KAAK+E,cAAc6I,MAAMI,KAAKoE,IAAI,EAAE/I,WAAWrJ,KAAK+E,cAAc6I,MAAMmlG,GAAkB94F,IAAIja,KAAK+E,cAAc6I,MAAM6jG,EAAe,KAAKnoG,MAAMtJ,KAAKC,MAAM41E,aAAag+B,kBAAoB7zG,KAAK+E,cAAc6I,MAAM,GAE/SkmG,EAA8B9zG,KAAK+E,cAAc6I,MAAM,GAAGqM,IAAIja,KAAKC,MAAM41E,aAAag+B,eAAevqG,MAAMkoG,GAC3G1lE,EAAwBC,EAAkBziC,MAAMsqG,GAActqG,MAAMwqG,GACpExB,EAAgBxmE,EAAsBxiC,MAAM,OAU5CipG,EAAmB1qC,EAAcv+D,MAAMtJ,KAAKwE,MAAMkgF,gBAClD8tB,EAAoBF,EAAchpG,MAAM,KAAKA,MAAMtJ,KAAKwE,MAAMmtG,kBAC9D50D,EAAMw1D,EAAiB9gG,GAAG,GAAK+gG,EAAkBv4F,IAAIs4F,GAAkBjpG,MAAM,KAAOtJ,KAAK+E,cAAc6I,MAAM,GAInH0jG,EAAY9nG,KAAK,CACfoX,MAAM,MACN9Z,MAAK,GAAAkD,OAAI+yC,EAAIxzC,QAAQ,GAAhB,KACL8+F,YAAY,wDAGdiJ,EAAY9nG,KAAK,CACfoX,MAAM,QACN9Z,MAAK,GAAAkD,OAAI4pG,EAAatqG,MAAM,KAAKC,QAAQ,GAApC,KACL8+F,YAAY,qCAGdiJ,EAAY9nG,KAAK,CACfoX,MAAM,aACN9Z,MAAK,GAAAkD,OAAIwnG,EAAiBjoG,QAAQ,GAA7B,KACL8+F,YAAW,gCAAAr+F,OAAiChK,KAAKC,MAAM41E,aAAak+B,aAAzD,uBAAA/pG,OAA2FhK,KAAKC,MAAM41E,aAAag+B,cAAnH,yBAGPG,EAAiBh0G,KAAK+E,cAAc8O,YAAY7T,KAAK+E,cAAcsM,iBAAiB0hG,EAAiB/yG,KAAKC,MAAM6F,YAAYwE,WAClIgnG,EAAY9nG,KAAK,CACfoX,MAAM,UACN9Z,MAAMktG,EAAe,IAAIh0G,KAAKC,MAAM41E,aAAa48B,YACjDpK,YAAY,yGAKM,EAEpBroG,KAAK4F,SAAS,CACZ8D,QACA6nG,aAJkB,EAKlBD,cACAsC,eACAV,eACAzB,iBACAD,mBACAzlE,oBACAqmE,qBACAtmE,wBACAgoE,oNAImB5yE,mEACrBlhC,KAAK4F,SAAS,CACZs7B,0JAIMoqE,GACRtrG,KAAK4F,SAAS,CACZ0lG,wGAIuB59F,EAAG2jB,EAAOsB,8FAE/B43E,EAAU,UACNvqG,KAAKwE,MAAM8mG,sBACZ,iBAWA,2CAVG2I,EAAkBvmG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkBymG,EAAK3vG,MAAM6F,YAAYoD,QAAQC,eAAiBipB,EAAIu2B,OAAOn5B,KAAM,SAAA4jB,GAAC,OAAIA,EAAEjqC,cAAcmf,SAASsnF,EAAK3vG,MAAM41E,aAAa3sE,QAAQmpC,QAAQ,KAAK,IAAIlpC,kBAAoBipB,EAAIu2B,OAAOn5B,KAAM,SAAA4jB,GAAC,OAAIA,EAAEjqC,cAAcmf,SAASsnF,EAAK3vG,MAAMuM,QAAQ6lC,QAAQ,KAAK,IAAIlpC,kBAAoBipB,EAAIjuB,KAAKgF,gBAAgB,qEAAqEA,gBAAkB,KAC9e+qG,EAAeD,EAAkBj0G,KAAK+E,cAAcsM,iBAAiBnD,SAAS+lG,EAAgB9vG,KAAK,IAAInE,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GACzK28F,EAAU,CACRtnG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,wCAAAmG,OAAyCkqG,EAAa3qG,QAAQ,GAA9D,KAAAS,OAAoEhK,KAAKC,MAAMsF,cAA/E,iDAIA4uG,EAAoBzmG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkBymG,EAAK3vG,MAAM6F,YAAYoD,QAAQC,gBAAkB,KACtKirG,EAAiBD,EAAoBn0G,KAAK+E,cAAcsM,iBAAiBnD,SAASimG,EAAkBhwG,KAAK,IAAInE,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GACzKymG,EAAoBr0G,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY5R,KAAKC,MAAM41E,aAAa48B,cAC5F6B,EAAqB5mG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAKA,EAAIlpB,QAAQC,gBAAkBkrG,EAAkBnrG,QAAQC,eAAiBipB,EAAIu2B,OAAOn5B,KAAM,SAAA4jB,GAAC,OAAIA,EAAEjqC,cAAcmf,SAASsnF,EAAK3vG,MAAMuM,QAAQ6lC,QAAQ,KAAK,IAAIlpC,mBAAsB,KAC3QorG,EAAkBD,EAAqBt0G,KAAK+E,cAAcsM,iBAAiBnD,SAASomG,EAAmBnwG,KAAK,IAAInE,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GAClL28F,EAAU,CACRtnG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,2CAAAmG,OAA4CoqG,EAAe7qG,QAAQ,GAAnE,KAAAS,OAAyEhK,KAAKC,MAAMsF,cAApF,mCAAAyE,OAAmIuqG,EAAgBhrG,QAAQ,GAA3J,KAAAS,OAAiKhK,KAAKC,MAAM41E,aAAa48B,YAAzL,gFAOmB,EAE7BzyG,KAAK4F,SAAS,CACZ2kG,UACA0B,sBAJ2B,GAK3B,WACA2D,EAAKkC,sTAIQC,kCACTrsG,EAAW,GAEX4nC,EAAiBttC,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,SAAS,QACtEyiG,EAAoBr0G,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,SAAS5R,KAAKC,MAAM41E,aAAa48B,uBAO7F96F,QAAQqD,IAAI,CACpBhb,KAAK+E,cAAcy+E,2BAA2BxjF,KAAKC,MAAMsF,eACzDvF,KAAK+E,cAAc6/E,2BAA2Bt3C,EAAe+mE,GAC7Dr0G,KAAK+E,cAAc4nC,gBAAgB3sC,KAAKC,MAAMsF,cAAcvF,KAAKC,MAAMuM,SACvExM,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,iBAAiB,CAACV,KAAKC,MAAMuM,+CARjGk4E,OACAitB,OACAnrE,OACAqhC,OAQFniE,EAAS0lG,YAAcprG,KAAK+E,cAAc6I,MAAM,GAChDlI,EAAS8gC,aAAgBxmC,KAAK+E,cAAc6I,MAAM44B,GAAc53B,QAAmD5O,KAAK+E,cAAc6I,MAAM,GAAlE5N,KAAK+E,cAAc6I,MAAM44B,GACnG9gC,EAASmiE,cAAiB7nE,KAAK+E,cAAc6I,MAAMi6D,GAAej5D,QAAoD5O,KAAK+E,cAAc6I,MAAM,GAAnE5N,KAAK+E,cAAc6I,MAAMi6D,GACrGniE,EAASg/E,eAAkB1kF,KAAK+E,cAAc6I,MAAM82E,GAAgB91E,QAAqD5O,KAAK+E,cAAc6I,MAAM,GAApE5N,KAAK+E,cAAc6I,MAAM82E,GACvGh/E,EAASisG,iBAAoB3xG,KAAK+E,cAAc6I,MAAM+jG,GAAkB/iG,QAAuD5O,KAAK+E,cAAc6I,MAAM,GAAtE5N,KAAK+E,cAAc6I,MAAM+jG,QAEnG3xG,KAAKwE,MAAM8mG,sBACZ,kBAkBA,6CAjBH5lG,EAAS0jG,eAAgB,EACzB1jG,EAAS4jG,gBAAiB,EAC1B5jG,EAAS0lG,YAAc1lG,EAAS8gC,aAChC9gC,EAASmlG,mBAAqB,uDAC9BnlG,EAASksG,kBAAoB,CAC3B4C,cAAc,CACZ9zG,KAAK,MACLiN,MAAM,MACNrD,SAAS,GACTmqG,WAAW,WAEbC,aAAan1G,OAAAsmD,EAAA,EAAAtmD,CAAA,CACXo1G,aAAa,YACV30G,KAAKC,MAAM6F,kDAKlBJ,EAAS0jG,eAAgB,EACzB1jG,EAAS4jG,gBAAiB,EAC1B5jG,EAASmlG,mBAAqB,GAC9BnlG,EAAS0lG,YAAcprG,KAAK+E,cAAcsM,iBAAiB3L,EAASmiE,cAAc7nE,KAAKC,MAAM6F,YAAYwE,UACzG5E,EAASksG,kBAAoB,CAC3B4C,cAAc,CACZ9zG,KAAK,MACLiN,MAAM,MACNrD,SAAS,GACTmqG,WAAW,WAEbC,aAAan1G,OAAAsmD,EAAA,EAAAtmD,CAAA,CACXo1G,aAAa,YACV30G,KAAKC,MAAM6F,+EAQlBJ,EAAS0lG,YAAYhvE,IAAI,KAC3B12B,EAASmsG,yBAA0B,GAGjCE,IACFrsG,EAAS6kG,QAAU,KACnB7kG,EAASumG,sBAAuB,GAKlCjsG,KAAK4F,SAASF,EAAS,WACrBkvG,EAAKC,kJAIA,IAAAC,EAAA90G,KAED+0G,EAAY,SAAA90G,GAChB,IAAM6B,EAASvC,OAAAsmD,EAAA,EAAAtmD,CAAA,CACbE,EAAE,EACF6E,GAAG,EACH3E,MAAM,OACHM,EAAM6B,WAEX,OACEqlB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACEhnF,MAAO3gB,EAAM2gB,MACb9e,UAAWA,EACX+mB,WAAY,CACV3nB,SAAS,EACTD,WAAW,GAEbknG,iBAAkB,CAChBrrF,GAAG,EACHpS,GAAG,GAEL29F,YAAapoG,EAAMooG,aAEnBlhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACEsd,GAAI,EACJ5b,SAAU,CAAC,EAAE,GACbT,MAAO,aACHR,EAAM2D,WAET3D,EAAM6G,SAMTkuG,EAAwC,UAA9Bh1G,KAAKwE,MAAM8mG,eACrB2J,EAA0C,aAA9Bj1G,KAAKwE,MAAM8mG,eACvB4J,EAAwC,UAA9Bl1G,KAAKwE,MAAM8mG,eACrB6J,EAAWn1G,KAAKwE,MAAM8mG,eAE5B,OACEnkF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAGPK,KAAKC,MAAM6F,aAAe9F,KAAKC,MAAM6F,YAAYsvG,UAC/CjuF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,cAKA6iB,EAAA/mB,EAAAC,cAACsqG,EAAA,EAAD,CACE7tF,GAAI,EACJrc,MAAO,OACPuc,WAAY,OACZE,KAAMld,KAAKC,MAAM6F,YAAYsvG,UAE7BjuF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3mB,MAAO,OACPwK,MAAO,CACL8lB,SAAS,OACTC,SAAS,SACT5lB,WAAW,SACX6lB,aAAa,aAGdjxB,KAAKC,MAAM6F,YAAYsvG,YAOhCp1G,KAAKwE,MAAMqjE,eAAiB7nE,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMqjE,eAAep2D,GAAG,IAAMzR,KAAKwE,MAAM8sG,YAAYhwG,OAAO,GACpH6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,eAKA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP8C,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGd1C,KAAKwE,MAAM8sG,YAAY9+F,IAAK,SAAC6iG,EAASxnG,GAAV,OAC1BsZ,EAAA/mB,EAAAC,cAAC00G,EAADx1G,OAAAC,OAAA,CACEuE,IAAG,eAAAiG,OAAiB6D,GACpB/L,UAAW,CACTwC,GAAG,CAAC,EAAE,GACNlB,GAAG,CAAC,EAAEyK,EAAMinG,EAAKtwG,MAAM8sG,YAAYhwG,OAAO,EAAI,EAAI,GAClD3B,MAAM,CAAC,EAAE,SAEXiE,UAAW,CACT1C,SAAS,CAAC,EAAE,KAEVm0G,QAShBr1G,KAAKC,MAAMsF,eACT4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,kBAGA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAOs1G,EAAU,EAAI,GAEvBr1G,MAAO,CAAC,EAAE,OACVk6B,QAAS,QACTM,SAAU,kBACVr3B,SAAU9C,KAAKC,MAAM6C,SAErBC,WAAY,CACVuB,GAAG,CAAC,EAAE,GACN1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAU4yG,EACVz0G,YAAc,SAAAiG,GAAC,OAAIsuG,EAAKh5E,UAAU,YAEpC3U,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAOu1G,EAAY,EAAI,GAEzBt1G,MAAO,CAAC,EAAE,OACVk6B,QAAS,WACTM,SAAU,oBACVr3B,SAAU9C,KAAKC,MAAM6C,SAErBC,WAAY,CACVuB,GAAG,CAAC,EAAE,GACN1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAU6yG,EACV10G,YAAc,SAAAiG,GAAC,OAAIsuG,EAAKh5E,UAAU,eAEpC3U,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAOw1G,EAAU,EAAI,GAEvBv1G,MAAO,CAAC,EAAE,OACVk6B,QAAS,QACTM,SAAU,mBAEVr3B,SAAU9C,KAAKC,MAAM6C,SACrBC,WAAY,CACVuB,GAAG,CAAC,EAAE,GACN1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAU8yG,EACV30G,YAAc,SAAAiG,GAAC,OAAIsuG,EAAKh5E,UAAU,aAInCk5E,GAAWC,EACTj1G,KAAKC,MAAM6F,aAAe9F,KAAKwE,MAAM4mG,aAAeprG,KAAKwE,MAAM+sG,aAAevxG,KAAKC,MAAM41E,aACxF1uD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP2E,GAAI,CAAC,EAAE,IAEP6iB,EAAA/mB,EAAAC,cAAC2rG,EAADzsG,OAAAC,OAAA,CACEqX,MAAO,MACH7W,KAAKC,MAFX,CAGEoO,OAAQ8mG,EACR3K,MAAOxqG,KAAKwE,MAAMgmG,MAClBD,QAASvqG,KAAKwE,MAAM+lG,QACpBzkG,YAAa9F,KAAKC,MAAM6F,YACxB0gC,aAAcxmC,KAAKwE,MAAM4mG,YACzBv1B,aAAc71E,KAAKC,MAAM41E,aACzBuzB,cAAeppG,KAAKwE,MAAM4kG,cAC1BE,eAAgBtpG,KAAKwE,MAAM8kG,eAC3B3jG,SAAU3F,KAAKisG,qBAAqBt9E,KAAK3uB,MACzC6qG,mBAAoB7qG,KAAKwE,MAAMqmG,mBAC/B3pE,iBAAkBlhC,KAAKkhC,iBAAiBvS,KAAK3uB,MAC7CsiC,oBAAqBtiC,KAAKwE,MAAM89B,oBAChCknE,oBAAqBxpG,KAAKwpG,oBAAoB76E,KAAK3uB,MACnD4yB,qBAAsB5yB,KAAK4yB,qBAAqBjE,KAAK3uB,MACrD8pG,2BAA4B9pG,KAAK8pG,2BAA2Bn7E,KAAK3uB,QAEjEmnB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,IAGJ0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,WACND,MAAO,WACPG,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAGT6zG,EAAO,sBAAAhrG,OACiBhK,KAAKC,MAAMsF,cAD5B,oBAEH0vG,GAAS,6BAAAjrG,OACkBhK,KAAKC,MAAMsF,cAD7B,sBAUzB4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,qBAIVqxG,GACF/tF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,EACPsL,MAAO,CACLgvB,SAAS,QAEXv3B,eAAgB,iBAGZ1C,KAAKwE,MAAMkF,OAAU1J,KAAKwE,MAAMkF,MAAMpI,OAmBpCtB,KAAKwE,MAAMkF,MAAM8I,IAAK,SAAC6iG,EAASxnG,GAAV,OACxBsZ,EAAA/mB,EAAAC,cAAC00G,EAADx1G,OAAAC,OAAA,CACEuE,IAAG,SAAAiG,OAAW6D,GACd/L,UAAW,CACTnC,MAAM,CAAC,EAAE,SAEP01G,MAxBNluF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,gCAluBR/C,uHC2mDTy0G,8MArmDb/wG,MAAQ,CACNkF,MAAM,GACN8gG,MAAM,KACNgL,OAAO,KACPjL,QAAQ,KACR+G,YAAY,GACZmE,YAAY,CACV,CACE3uG,MAAM,GACN8D,KAAK,MACLf,MAAM,WAER,CACE/C,MAAM,EACN8D,KAAK,QACLf,MAAM,WAER,CACE/C,MAAM,EACN8D,KAAK,OACLf,MAAM,UAER,CACE/C,MAAM,EACN8D,KAAK,OACLf,MAAM,YAGV6rG,UAAU,KACVj7E,WAAW,KACX4tE,YAAY,KACZviG,YAAY,KACZslG,YAAY,KACZuK,aAAY,EACZpE,aAAY,EACZ/qE,aAAa,KACbqvC,aAAa,KACbhO,cAAc,KACdtiE,cAAc,KACdisG,iBAAiB,EACjBoE,eAAe,KACfnE,eAAe,KACfoE,eAAe,KACfvK,eAAe,KACf/C,eAAe,KACfmJ,eAAe,KACftI,eAAc,EACd1kB,eAAe,KACfoxB,gBAAgB,KAChBx6E,gBAAe,EACfy6E,gBAAgB,KAChBzpG,gBAAgB,KAChBg9F,gBAAe,EACfqI,iBAAiB,KACjBzwE,kBAAiB,EACjB0wE,kBAAkB,KAClB7lE,kBAAkB,KAClBiqE,mBAAmB,KACnBC,mBAAmB,KACnBpL,mBAAmB,KACnBvoE,oBAAoB,KACpB4zE,oBAAoB,KACpBjK,sBAAqB,EACrB4F,yBAAwB,EACxBsE,yBAAwB,KAI1BpxG,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,uKAK9CD,KAAKmF,YACLnF,KAAK4F,SAAS,CACZ0lG,eAAe,QACf,WACA7lG,EAAKqsG,kRAKDj7C,EAAuB72D,KAAKC,MAAM6F,YAAYswG,wBAC9Cp2G,KAAKC,MAAMq+B,aAAau4B,EAAqBn2D,KAAKm2D,EAAqB3tD,QAAQ2tD,EAAqBx4B,0LAGnFh5B,EAAUC,8FACjCtF,KAAKmF,YAEC2nB,EAAiBznB,EAAUmH,UAAYxM,KAAKC,MAAMuM,QAClDulG,EAAwBzsG,EAAUgmG,iBAAmBtrG,KAAKwE,MAAM8mG,eAChE0G,EAA0B1sG,EAAU47B,mBAAqBlhC,KAAKwE,MAAM08B,iBACpEkpE,EAAqBr+F,KAAKC,UAAU3G,EAAUS,eAAiBiG,KAAKC,UAAUhM,KAAKC,MAAM6F,aACzFmsG,EAAsBlmG,KAAKC,UAAU3G,EAAUwwE,gBAAkB9pE,KAAKC,UAAUhM,KAAKC,MAAM41E,eAC7Fk8B,GAAyBjlF,GAAkBklF,GAA2B5H,KAClEyL,EAAiB9D,EAAwB,KAAO/xG,KAAKwE,MAAMqxG,eACjE71G,KAAK4F,SAAS,CACZiwG,iBACAjE,kBAAkB,KAClBC,yBAAwB,GACxB,WACAprG,EAAKqrG,WAAWC,MAIhBE,GACFjyG,KAAKwpG,sBAGD6M,EAAoB/wG,EAAU4wG,sBAAwBl2G,KAAKwE,MAAM0xG,oBACjEI,EAAwBhxG,EAAUuwG,iBAAmB71G,KAAKwE,MAAMqxG,gBAClEQ,GAAqBC,GAAyBvE,KAC5CuE,EACFt2G,KAAK4F,SAAS,CACZmwG,gBAAgB,OAETM,GACTr2G,KAAKu2G,yBAEPv2G,KAAKm8B,2KAKP,IAAIb,GAAiB,EACfk7E,EAAgBx2G,KAAKwE,MAAMixG,YAAY,GACvCgB,EAAgBl3G,OAAOC,OAAO,GAAGQ,KAAKwE,MAAMixG,aAAa3kG,MACzD4lG,EAAU12G,KAAKwE,MAAMkxG,UAAY11G,KAAK+E,cAAcmK,YAAiC,IAArBlP,KAAKwE,MAAMkxG,WAAgB/sE,IAAI6tE,EAAc1vG,MAAM0vG,EAAc5rG,MAAQ5K,KAAK+E,cAAcmK,cAAcy5B,IAAI6tE,EAAc1vG,MAAM0vG,EAAc5rG,MAChNu6B,EAAQnlC,KAAK+E,cAAcmK,YAA2C,IAA/BlP,KAAKwE,MAAM0xG,qBAClDS,EAAU32G,KAAK+E,cAAcmK,cAAcy5B,IAAI8tE,EAAc3vG,MAAM2vG,EAAc7rG,MACvF,OAAQ5K,KAAKwE,MAAM8mG,gBACjB,QACA,IAAK,OACHhwE,EAAiB6J,EAAMyxE,QAAQD,IAAYxxE,EAAMlzB,eAAeykG,GAClE,MACA,IAAK,gBAC+B,SAA9B12G,KAAKwE,MAAMqxG,iBACbv6E,EAAiB6J,EAAMyxE,QAAQD,IAAYxxE,EAAMlzB,eAAeykG,IAOtE12G,KAAK4F,SAAS,CACZ01B,kMAIsBb,iCAAW,KACnCA,EAAaz6B,KAAK+E,cAAc6I,MAAM6sB,GACtCz6B,KAAK4F,SAAS,CACZ60B,cACA,WACAb,EAAK28E,8KAKP,IAAIR,EAAkB,KACtB,GAAI/1G,KAAKwE,MAAMi2B,YAAcz6B,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMi2B,YAAYhpB,GAAG,IAAyC,OAAnCzR,KAAKwE,MAAM0xG,oBAC/F,OAAQl2G,KAAKwE,MAAM8mG,gBACjB,IAAK,OACH,IAAMn4C,EAAWjlD,SAASiB,KAAK+yC,MAAM,KAC/By0D,EAAU32G,KAAK+E,cAAcmK,cAAcy5B,IAAI,EAAE,QACnDkuE,EAAU72G,KAAK+E,cAAcmK,YAA2C,IAA/BlP,KAAKwE,MAAM0xG,qBACpDW,EAAQD,QAAQD,KAClBE,EAAUF,GAEZ,IAAMG,EAAc5oG,SAAS2oG,EAAQpuE,GAAG14B,UAAU,KAAMojD,EAClD4jD,EAAc7oG,SAASyoG,EAAQluE,GAAG14B,UAAU,KAAMojD,EAClD6jD,EAAgBh3G,KAAKwE,MAAMi2B,WAAWnxB,MAAMwtG,GAAa78F,IAAI88F,GAE7DhgG,EAAaigG,EAAc/8F,IAAIja,KAAKwE,MAAMi2B,YAAYnxB,MAAM,KAI9DzF,EAAI,sBAAAmG,OAAyBhK,KAAKwE,MAAMi2B,WAAWlxB,QAAQ,GAAvD,KAAAS,OAA6DhK,KAAKC,MAAMsF,cAAxE,4BAAAyE,OAAgH6sG,EAAQviC,MAAMniE,OAAO,oBAArI,4CAAAnI,OAAmMgtG,EAAcztG,QAAQ,GAAzN,KAAAS,OAA+NhK,KAAKC,MAAM6F,YAAYosC,SAASxxC,KAA/P,eAAAsJ,OAAiRgE,KAAKuF,KAAKwD,GAA3R,wBACJ/I,KAAKuF,KAAKwD,GAAY,MACxBlT,GAAI,4FAGNkyG,EAAkB,CAChBlyG,KAFFA,GAAI,4BAAAmG,OAAgChK,KAAKC,MAAMsD,MAAMC,OAAO6f,MAAxD,qDAAArZ,OAAiHhK,KAAKC,MAAMsF,cAA5H,sFAGFtC,KAAK,cACLE,UAAU,CACR1C,MAAM,aAQhBT,KAAK4F,SAAS,CACZmwG,oEAOF,MAAO,CAFc7nG,SAASlO,KAAKwE,MAAM0xG,mEAKtB7kF,GACnB,IAAIiB,EAAa,KACb+nC,EAAe,GACb48C,EAASj3G,KAAK+E,cAAcyrC,KAAKnf,GACjC6lF,EAAehpG,SAASlO,KAAKwE,MAAM0xG,qBACzC,OAAQl2G,KAAKwE,MAAM8mG,gBACjB,IAAK,OACHh5E,EAAa,cACb+nC,EAAe,CAAC48C,EAAOC,GAEzB,MACA,IAAK,gBACH5kF,EAAa,kBACb+nC,EAAe,CAAC48C,GAKpB,MAAO,CACL3kF,aACA+nC,0PAMI3wD,EAAQ,GACR4nG,EAAc,GACdC,GAAc,WAaV55F,QAAQqD,IAAI,CACpBhb,KAAK+E,cAAc4xD,2BACnB32D,KAAK+E,cAAc43C,0BAA0B38C,KAAKC,MAAM41E,aAAan1E,KAAK,UAC1EV,KAAK+E,cAAc43C,0BAA0B38C,KAAKC,MAAM41E,aAAan1E,KAAM,eAC3EV,KAAK+E,cAAc4nC,gBAAgB3sC,KAAKC,MAAM41E,aAAa48B,YAAYzyG,KAAKC,MAAM6F,YAAYswG,eAAeltG,SAC7GlJ,KAAKC,MAAMuM,QAAUxM,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,SAAS,CAACV,KAAKC,MAAMuM,UAAY,KAC1HxM,KAAKC,MAAMuM,QAAUxM,KAAK+E,cAAcy5B,mBAAmBx+B,KAAKC,MAAM41E,aAAan1E,KAAKV,KAAKC,MAAMuM,SAAWxM,KAAK+E,cAAc6I,MAAM,GACvI5N,KAAKC,MAAMuM,QAAUxM,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM6F,YAAYswG,eAAe11G,KAAK,QAAQ,CAACV,KAAKC,MAAMuM,UAAYxM,KAAK+E,cAAc6I,MAAM,GAChK5N,KAAK+E,cAAcw3C,kBAAkBv8C,KAAKC,MAAM6F,YAAYswG,eAAe11G,KAAK,UAAU,CAAC87C,UAAWx8C,KAAKC,MAAM6F,YAAYswG,eAAe55D,UAAWC,QAAQ,WAE/Jz8C,KAAKC,MAAMuM,QAAUxM,KAAK+E,cAAcw3C,kBAAkBv8C,KAAKC,MAAM41E,aAAan1E,KAAK,UAAU,CAAC87C,UAAWx8C,KAAKC,MAAM41E,aAAar5B,UAAWC,QAAQ,SAAShvC,OAAO,CAACynB,SAASl1B,KAAKC,MAAMuM,WAAa,+CApB1M2qG,OACA7tC,OACA8tC,OACAC,OACAC,OACAC,OACAC,OACAC,OAEAC,OAgBIrD,EAAoBr0G,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY5R,KAAKC,MAAM41E,aAAa48B,cAE9FuD,EAAqB,GACrB9C,EAAelzG,KAAK+E,cAAc6I,MAAM,GACxC+pG,EAAmB33G,KAAK+E,cAAc6I,MAAM,GAE5CupG,GAAuBA,EAAoB71G,SAC7Cq2G,EAAmB3pG,KAAK2kD,IAAIwkD,EAAoB,GAAGhpG,UAAUgpG,EAAoBA,EAAoB71G,OAAO,GAAG6M,WAAW,MAC1H6nG,EAAqBmB,EAAoB3kG,IAAK,SAAA9E,GAC5C,IAAM2jB,EAASu+E,EAAK7qG,cAAcsM,iBAAiB3D,EAAG5G,MAAMutG,EAAkB/pG,UAE9E,OADA4oG,EAAeA,EAAa5kG,KAAK+iB,GAC1B,CACLA,SACAvjB,KAAKJ,EAAGI,KACRK,UAAUT,EAAGS,UACbq+B,UAAU9+B,EAAG4jB,YACb7e,KAAKm9F,EAAK7qG,cAAcmK,YAAmC,IAAvBhB,SAASR,EAAGS,YAAiBmmE,MAAMniE,OAAO,oBAAoB,WAKlGyjG,EAAiB,GACnBgC,EAAmB53G,KAAK+E,cAAc6I,MAAM,aAC1C5N,KAAK+E,cAAc6H,aAAa6qG,EAAhC,eAAA7/F,EAAArY,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA6C,SAAA8L,EAAOtS,GAAP,IAAAy3C,EAAA04B,EAAA,OAAAnsD,EAAApqB,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,YAC7CqiG,EAAK3vG,MAAMuM,SAAWhG,EAAEo2C,cAAgBp2C,EAAEo2C,aAAai7D,WAAarxG,EAAEo2C,aAAai7D,UAAU1uG,gBAAkBymG,EAAK3vG,MAAMuM,QAAQrD,eADrF,CAAA6P,EAAAzL,KAAA,eAAAyL,EAAAzL,KAAA,EAEvBqiG,EAAK7qG,cAAc23C,aAAal2C,EAAEwT,aAFX,QAEzCikC,EAFyCjlC,EAAAzI,QAIvComE,EAAgBi5B,EAAK7qG,cAAcsM,iBAAiB7K,EAAEo2C,aAAavrB,OAAOgjF,EAAkB/pG,UAClGstG,EAAmBA,EAAiBtpG,KAAKqoE,GACzCi/B,EAAepsG,KAAK,CAClB6nB,OAAOslD,EACP7oE,KAAKtH,EAAEksB,gBACP8Z,UAAUojE,EAAK3vG,MAAM41E,aAAa48B,YAClChgG,KAAKm9F,EAAK7qG,cAAcmK,YAA0C,IAA9BhB,SAAS+vC,EAAUjtC,YAAiBsjE,MAAMniE,OAAO,oBAAoB,UAV9D,wBAAA6G,EAAAnK,SAAAiK,EAAA9Y,SAA7C,gBAAA8O,GAAA,OAAA8I,EAAA7I,MAAA/O,KAAAgP,YAAA,YAgBNuoG,EAAmBv3G,KAAK+E,cAAcsM,iBAAiBkmG,EAAiBv3G,KAAKC,MAAM41E,aAAavrE,UAE1FquC,EAAiB2wB,EAActpE,KAAK+E,cAAcsM,iBAAiBi4D,EAAYtpE,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GAC3IkqG,EAAmBxuC,EAActpE,KAAK+E,cAAc8O,YAAY8kC,EAAe,GAAG,IAAI34C,KAAKC,MAAMsF,cAAiBvF,KAAKwE,MAAMkF,MAAMpI,OAAStB,KAAKwE,MAAMkF,MAAM,GAAK1J,KAAK+E,cAAc8O,YAAY8kC,EAAe,GAAG,IAAI34C,KAAKC,MAAMsF,cACxOmE,EAAMF,KAAK,CACToX,MAAM,qBACN9Z,MAAMgxG,IAGRV,EAAmBA,EAAmBp3G,KAAK+E,cAAcsM,iBAAiB+lG,EAAiBp3G,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GACjJmqG,EAAsBX,EAAmBp3G,KAAK+E,cAAc8O,YAAYujG,EAAiB,GAAG,IAAIp3G,KAAKC,MAAM41E,aAAan1E,KAAQV,KAAKwE,MAAMkF,MAAMpI,OAAStB,KAAKwE,MAAMkF,MAAM,GAAK1J,KAAK+E,cAAc8O,YAAYujG,EAAiB,GAAG,IAAIp3G,KAAKC,MAAM41E,aAAan1E,KACrQgJ,EAAMF,KAAK,CACToX,MAAK,GAAA5W,OAAIhK,KAAKC,MAAM41E,aAAan1E,KAA5B,iBACLoG,MAAMixG,IAGFC,EAA4BX,EAAmBr3G,KAAK+E,cAAc8O,YAAYwjG,EAAiB,GAAG,IAAIr3G,KAAKC,MAAM41E,aAAa48B,YAAezyG,KAAKwE,MAAMkF,MAAMpI,OAAStB,KAAKwE,MAAMkF,MAAM,GAAK1J,KAAK+E,cAAc8O,YAAYwjG,EAAiB,GAAG,IAAIr3G,KAAKC,MAAM41E,aAAa48B,YAClR/oG,EAAMF,KAAK,CACToX,MAAM,oBACN9Z,MAAMkxG,IASFC,EAAwBj4G,KAAK+E,cAAc8O,YAAYq/F,EAAa,GAAG,IAAIlzG,KAAKC,MAAM41E,aAAa48B,YACzG/oG,EAAMF,KAAK,CACToX,MAAM,gBACN9Z,MAAMmxG,IAGFzC,EAAStC,EAAaj5F,IAAIm9F,GAAkB9tG,MAAM,UAAU2Q,IAAI09F,GACtEjuG,EAAMF,KAAK,CACToX,MAAM,uBACN9Z,MAAM0uG,EAAOv7F,IAAI,GAAG3Q,MAAM,KAAKC,QAAQ,GAAG,MAE5CG,EAAMF,KAAK,CACToX,MAAM,wBACN9Z,MAAM0uG,EAAOlsG,MAAM,KAAKC,QAAQ,GAAG,MAG/Bs+D,EAAgByvC,GAAcA,EAAWjmF,OAASrxB,KAAK+E,cAAcsM,iBAAiBimG,EAAWjmF,OAAOrxB,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GACpKsqG,EAAgBl4G,KAAK+E,cAAc8O,YAAYg0D,EAAc,GACnEypC,EAAY9nG,KAAK,CACfoX,MAAM,kBACNynF,YAAY,8BACZvhG,MAAMoxG,EAAc,IAAIl4G,KAAKC,MAAM41E,aAAa48B,cAG5CmB,EAAe2D,EAAiBt9F,IAAIm9F,GAC1C9F,EAAY9nG,KAAK,CACfoX,MAAM,QACN9Z,MAAK,GAAAkD,OAAI4pG,EAAatqG,MAAM,KAAKC,QAAQ,GAApC,KACL8+F,YAAY,qCAGdiJ,EAAY9nG,KAAK,CACfoX,MAAK,GAAA5W,OAAIhK,KAAKC,MAAM41E,aAAan1E,KAA5B,YACLoG,MAAK,GAAAkD,OAAIhK,KAAK+E,cAAc8O,YAAY0jG,EAAiB,GAApD,KAAAvtG,OAA0DhK,KAAKC,MAAM41E,aAAan1E,QAGzF82G,EAAYA,EAAYx3G,KAAK+E,cAAcsM,iBAAiBmmG,EAAUx3G,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GAC5HomG,EAAiBh0G,KAAK+E,cAAc8O,YAAY2jG,EAAU,GAChElG,EAAY9nG,KAAK,CACfoX,MAAM,oBACN9Z,MAAK,GAAAkD,OAAIgqG,EAAJ,KAAAhqG,OAAsBhK,KAAKC,MAAM41E,aAAa48B,eAI/C0F,EAAwBX,EAAUlpG,KAAKspG,GAEzCQ,EAAiBV,EAAcl9D,OAAQ,SAAC69D,EAAWC,GACrD,IAAM1rC,EAAmBgjC,EAAK7qG,cAAc6I,MAAM0qG,EAAM17D,aAAa27D,IAC/DC,EAAe5I,EAAK7qG,cAAcsM,iBAAiBinG,EAAM17D,aAAa91C,MAAM8oG,EAAK3vG,MAAM6F,YAAYwE,UAKzG,OAJIkuG,EAAa/mG,GAAG,KAClB4mG,EAAaA,EAAW/pG,KAAKkqG,EAAalvG,MAAMsjE,KAG3CyrC,GACPr4G,KAAK+E,cAAc6I,MAAM,IAI3BwqG,EAAiBvwC,EAAcp2D,GAAG,GAAKzD,KAAKuF,KAAK6kG,EAAen+F,IAAI4tD,IAAkB,EAKhF1U,EAAWjlD,SAASiB,KAAK+yC,MAAM,KAC/Bu2D,EAAcz4G,KAAK+E,cAAc6I,MAAMulD,GAAU5kD,MAAM6pG,GACvDM,EAAgB7wC,EAAcp2D,GAAG,GAAK0mG,EAAsBl+F,IAAI4tD,GAAiB7nE,KAAK+E,cAAc6I,MAAM,GAC3F,MACE,OACjB+qG,EAAmB3qG,KAAKoE,IAAI,EAAEpE,KAAK+E,MAAM0lG,EAAYx+F,IADpC,UAEjB6iC,EAAM27D,EAAYhnG,GAAG,GAAKinG,EAAcpvG,MAHzB,OAG6C2Q,IAAI0+F,GAAkBrvG,MAAM,KAAOtJ,KAAK+E,cAAc6I,MAAM,GAI9H0jG,EAAY9nG,KAAK,CACfoX,MAAM,MACN9Z,MAAK,GAAAkD,OAAI8yC,EAAIvzC,QAAQ,GAAhB,KACL8+F,YAAY,+DAGRuQ,EAAc54G,KAAKwE,MAAMkxG,UAAY11G,KAAK+E,cAAcmK,YAAiC,IAArBlP,KAAKwE,MAAMkxG,WAAgBphC,MAAMniE,OAAO,oBAAsB,GACxIm/F,EAAY9nG,KAAK,CACf1C,MAAM8xG,EACNh4F,MAAM,sBACNynF,YAAY,6BAGdroG,KAAK4F,SAAS,CACZ8D,QACA8rG,SACAgC,YACAlG,cACAC,cACA1pC,gBACA+tC,iBACAI,mNAI2B90E,mEAC7BlhC,KAAK4F,SAAS,CACZs7B,0JAIMoqE,GACRtrG,KAAK4F,SAAS,CACZ0lG,6DAIcuK,GAChB71G,KAAK4F,SAAS,CACZiwG,iEAIkBrvG,GACpB,IACMsvG,EAAkBtvG,EAAEuW,OAAOjW,MAC3B+xG,EAAW74G,KAAK+E,cAAcmK,cAC9Bi2B,EAAQnlC,KAAK+E,cAAcmK,YAAY4mG,EAAgB,IAAI+C,EAAS1mG,OAAO,YAAY,uBAAuBw2B,IAAI,EAAE,UAC1H,GAAIxD,EAAM2zE,UAAU,CAClB,IAAM5C,EAAsBhoG,SAASi3B,EAAMsD,GAAG14B,UAAU,KAExD/P,KAAK4F,SAAS,CACZkwG,kBACAG,mBATuB,KAUvBC,kEAKWD,GACf,IAAMS,EAAU12G,KAAKwE,MAAMkxG,UAAY11G,KAAK+E,cAAcmK,YAAiC,IAArBlP,KAAKwE,MAAMkxG,WAAkB11G,KAAK+E,cAAcmK,cAChHynG,EAAU32G,KAAK+E,cAAcmK,cAAcy5B,IAAI,EAAE,QACnDxD,EAAQuxE,EAAQ/tE,IAAIstE,EAAmBnvG,MAAMmvG,EAAmBrrG,MAAM+9B,IAAI,EAAE,UAG5ExD,EAAMyxE,QAAQD,KAChBxxE,EAAQwxE,GAGV,IAAMb,EAAkB3wE,EAAMhzB,OAAO,cAC/B+jG,EAAsBhoG,SAASi3B,EAAMsD,GAAG14B,UAAU,KAIxD/P,KAAK4F,SAAS,CACZkwG,kBACAG,qBACAC,6GAIuBxoG,EAAG2jB,EAAOsB,oGAE/B43E,EAAU,KACVwL,EAAkB,UACd/1G,KAAKwE,MAAM8mG,sBACZ,gBAWA,yBA0BA,qBAWA,yCA/CGyN,EAAkBrrG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkByrG,EAAK30G,MAAM6F,YAAYoD,QAAQC,eAAiBipB,EAAIu2B,OAAOn5B,KAAM,SAAA4jB,GAAC,OAAIA,EAAEjqC,cAAcmf,SAASssF,EAAK30G,MAAM41E,aAAa3sE,QAAQmpC,QAAQ,KAAK,IAAIlpC,kBAAoBipB,EAAIu2B,OAAOn5B,KAAM,SAAA4jB,GAAC,OAAIA,EAAEjqC,cAAcmf,SAASssF,EAAK30G,MAAMuM,QAAQ6lC,QAAQ,KAAK,IAAIlpC,kBAAoBipB,EAAIjuB,KAAKgF,gBAAgB,qEAAqEA,gBAAkB,KAC9e6vG,EAAeD,EAAkB/4G,KAAK+E,cAAcsM,iBAAiBnD,SAAS6qG,EAAgB50G,KAAK,IAAInE,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GACzKmoG,EAAkB,CAChB9yG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,wCAAAmG,OAAyCgvG,EAAazvG,QAAQ,GAA9D,KAAAS,OAAoEhK,KAAKC,MAAMsF,cAA/E,+CAIEvF,KAAKwE,MAAMqxG,sBACZ,iBASA,2CARHE,EAAkB,CAChB9yG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,0DAAAmG,OAA2DhK,KAAK+E,cAAcmK,YAA2C,IAA/BlP,KAAKwE,MAAM0xG,qBAA0B5hC,MAAMniE,OAAO,oBAA5I,sDAIA8mG,EAA0BvrG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkByrG,EAAK30G,MAAM6F,YAAYoD,QAAQC,eAAiBipB,EAAIu2B,OAAOn5B,KAAM,SAAA4jB,GAAC,OAAIA,EAAEjqC,cAAcmf,SAASssF,EAAK30G,MAAM41E,aAAa3sE,QAAQmpC,QAAQ,KAAK,IAAIlpC,kBAAoBipB,EAAIu2B,OAAOn5B,KAAM,SAAA4jB,GAAC,OAAIA,EAAEjqC,cAAcmf,SAASssF,EAAK30G,MAAMuM,QAAQ6lC,QAAQ,KAAK,IAAIlpC,kBAAoBipB,EAAIjuB,KAAKgF,gBAAgB,qEAAqEA,gBAAkB,KACtf+vG,EAAiBD,EAA0Bj5G,KAAK+E,cAAcsM,iBAAiBnD,SAAS+qG,EAAwB90G,KAAK,IAAInE,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GAC3LmoG,EAAkB,CAChB9yG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,uDAAAmG,OAAwDkvG,EAAe3vG,QAAQ,GAA/E,KAAAS,OAAqFhK,KAAKC,MAAMsF,cAAhG,0HAQJ4uG,EAAoBzmG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkByrG,EAAK30G,MAAM6F,YAAYoD,QAAQC,gBAAkB,KACtKirG,EAAiBD,EAAoBn0G,KAAK+E,cAAcsM,iBAAiBnD,SAASimG,EAAkBhwG,KAAK,IAAInE,KAAKC,MAAM6F,YAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,GAC/KmoG,EAAkB,CAChB9yG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,2CAAAmG,OAA4CoqG,EAAe7qG,QAAQ,GAAnE,KAAAS,OAAyEhK,KAAKC,MAAMsF,cAApF,kDAIA8uG,EAAoBr0G,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY5R,KAAKC,MAAM41E,aAAa48B,cAC5F6B,EAAqB5mG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAKA,EAAIlpB,QAAQC,gBAAkBkrG,EAAkBnrG,QAAQC,eAAiBipB,EAAIu2B,OAAOn5B,KAAM,SAAA4jB,GAAC,OAAIA,EAAEjqC,cAAcmf,SAASssF,EAAK30G,MAAMuM,QAAQ6lC,QAAQ,KAAK,IAAIlpC,mBAAsB,KAC3QorG,EAAkBD,EAAqBt0G,KAAK+E,cAAcsM,iBAAiBnD,SAASomG,EAAmBnwG,KAAK,IAAIkwG,EAAkB/pG,UAAYtK,KAAK+E,cAAc6I,MAAM,GAC7KmoG,EAAkB,CAChB9yG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,yCAAAmG,OAA0CuqG,EAAgBhrG,QAAQ,GAAlE,KAAAS,OAAwEhK,KAAKC,MAAM41E,aAAa48B,YAAhG,gFAOmB,EAE7BzyG,KAAK4F,SAAS,CACZ2kG,UACAwL,kBACA9J,sBAL2B,GAM3B,WACA2I,EAAK9C,kTAIQC,kCACTrsG,EAAW,YAOPiS,QAAQqD,IAAI,CACpBhb,KAAK+E,cAAc4nC,gBAAgB3sC,KAAKC,MAAMsF,cAAcvF,KAAKC,MAAMuM,SACvExM,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,cAAc,CAACV,KAAKC,MAAMuM,+CAJ9Fg6B,OACAkvE,OAMFhwG,EAASgwG,UAAYA,GAAaxnG,SAASwnG,GAAW,EAAIxnG,SAASwnG,GAAa,KAChFhwG,EAASiwG,YAAcjwG,EAASgwG,WAAahwG,EAASgwG,WAAWxnG,SAASiB,KAAK+yC,MAAM,KACrFx8C,EAAS8gC,aAAgBxmC,KAAK+E,cAAc6I,MAAM44B,GAAc53B,QAAmD5O,KAAK+E,cAAc6I,MAAM,GAAlE5N,KAAK+E,cAAc6I,MAAM44B,GAI9E,cAFjB8kE,EAAiBtrG,KAAKwE,MAAM8mG,iBAEI5lG,EAASiwG,cAC3CrK,EAAiB,OACjB5lG,EAAS4lG,eAAiBA,GAIxB5lG,EAASgwG,WAA8B,SAAjBpK,GACxBA,EAAiB,gBACjB5lG,EAASmwG,eAAiB,OAC1BnwG,EAAS4lG,eAAiBA,GACA,kBAAjBA,GAAqC5lG,EAASmwG,gBAAmB71G,KAAKwE,MAAMqxG,iBACrFnwG,EAASmwG,eAAiB,QAIP,kBAAjBvK,GAAoC5lG,EAASiwG,cAC/CrK,EAAiB,WACjB5lG,EAAS4lG,eAAiBA,QAGpBA,SACD,iBAMA,0BAOA,6CAZH5lG,EAAS0jG,eAAgB,EACzB1jG,EAAS4jG,gBAAiB,EAC1B5jG,EAAS0lG,YAAc1lG,EAAS8gC,aAChC9gC,EAASmlG,mBAAT,8CAAA7gG,OAA4EhK,KAAKC,MAAMsF,cAAvF,+CAGAG,EAAS0jG,eAAgB,EACzB1jG,EAAS4jG,gBAAiB,EAC1B5jG,EAASmlG,mBAAqB,GAC9BnlG,EAAS0lG,YAAc1lG,EAAS8gC,aAChC9gC,EAASowG,gBAAkB91G,KAAK+E,cAAcmK,YAA+B,IAAnBxJ,EAASgwG,WAAgBvjG,OAAO,kDAG1FzM,EAAS0jG,eAAgB,EACzB1jG,EAAS4jG,gBAAiB,EAC1B5jG,EAASmlG,mBAAqB,GAC9BnlG,EAAS0lG,YAAcprG,KAAK+E,cAAcsM,iBAAiB3L,EAASmiE,cAAc7nE,KAAKC,MAAM6F,YAAYwE,2EAMzGynG,IACFrsG,EAAS6kG,QAAU,KACnB7kG,EAASqwG,gBAAkB,KAC3BrwG,EAASumG,sBAAuB,GAG5B0K,EAAU32G,KAAK+E,cAAcmK,cAAcy5B,IAAI,EAAE,QAAQx2B,OAAO,cACtEzM,EAASywG,0BAA0BzwG,EAASgwG,WAAY11G,KAAK+E,cAAcmK,YAA+B,IAAnBxJ,EAASgwG,WAAgBvjG,OAAO,gBAAgBwkG,EAIvI32G,KAAK4F,SAASF,EAAS,WACrBovG,EAAKD,kJAIA,IAAAsE,EAAAn5G,KAED+0G,EAAY,SAAA90G,GAChB,IAAM6B,EAASvC,OAAAsmD,EAAA,EAAAtmD,CAAA,CACbE,EAAE,EACF6E,GAAG,EACH3E,MAAM,OACHM,EAAM6B,WAEX,OACEqlB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACEhnF,MAAO3gB,EAAM2gB,MACb9e,UAAWA,EACX+mB,WAAY,CACV3nB,SAAS,EACTD,WAAW,GAEbknG,iBAAkB,CAChBrrF,GAAG,EACHpS,GAAG,GAEL29F,YAAapoG,EAAMooG,aAEnBlhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACEsd,GAAI,EACJ5b,SAAU,CAAC,EAAE,GACbT,MAAO,aACHR,EAAM2D,WAET3D,EAAM6G,SAMTsyG,EAAuC,SAA9Bp5G,KAAKwE,MAAM8mG,eACpB4J,EAAwC,UAA9Bl1G,KAAKwE,MAAM8mG,eACrB+N,EAAwC,UAA9Br5G,KAAKwE,MAAM8mG,eACrB2J,EAA0C,aAA9Bj1G,KAAKwE,MAAM8mG,eACvBgO,EAA2C,kBAA9Bt5G,KAAKwE,MAAM8mG,eACxB6J,EAAWn1G,KAAKwE,MAAM8mG,eACtBiO,GAAev5G,KAAKwE,MAAMmxG,YAEhC,OACExuF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAGPK,KAAKC,MAAM6F,aAAe9F,KAAKC,MAAM6F,YAAYsvG,UAC/CjuF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,eAKA6iB,EAAA/mB,EAAAC,cAACsqG,EAAA,EAAD,CACE7tF,GAAI,EACJrc,MAAO,OACPuc,WAAY,OACZE,KAAMld,KAAKC,MAAM6F,YAAYsvG,UAE7BjuF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3mB,MAAO,OACPwK,MAAO,CACL8lB,SAAS,OACTC,SAAS,SACT5lB,WAAW,SACX6lB,aAAa,aAGdjxB,KAAKC,MAAM6F,YAAYsvG,YAOhCp1G,KAAKwE,MAAMqjE,eAAiB7nE,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMqjE,eAAep2D,GAAG,IAAMzR,KAAKwE,MAAM8sG,YAAYhwG,OAAO,GACpH6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,eAKA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,EACPsL,MAAO,CACLC,UAAU,IACVC,KAAK,UACL8uB,SAAS,QAEXv3B,eAAgB,iBAGd1C,KAAKwE,MAAM8sG,YAAY9+F,IAAK,SAAC6iG,EAASxnG,GAAV,OAC1BsZ,EAAA/mB,EAAAC,cAAC00G,EAADx1G,OAAAC,OAAA,CACEuE,IAAG,eAAAiG,OAAiB6D,GACpB/L,UAAW,CACTwC,GAAG,EACH3E,MAAM,CAAC,MAAM,QAGfiE,UAAW,CACT1C,SAAS,CAAC,EAAE,KAEVm0G,QAShBr1G,KAAKC,MAAMsF,eACT4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,kBAGA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGW,OAAzB1C,KAAKwE,MAAMkxG,UACTvuF,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAO05G,EAAS,EAAI,GAEtBv/E,QAAS,OACTl6B,MAAO,CAAC,EAAE,OACVw6B,SAAU,kBACVr3B,SAAU9C,KAAKC,MAAM6C,SAErBC,WAAY,CACVuB,GAAG,CAAC,EAAE,GACN1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAUg3G,EACV74G,YAAc,SAAAiG,GAAC,OAAI2yG,EAAKr9E,UAAU,WAEjC97B,KAAKwE,MAAMmxG,YAkBdxuF,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAOu1G,EAAY,EAAI,GAEzBt1G,MAAO,CAAC,EAAE,OACVk6B,QAAS,WACTM,SAAU,oBACVr3B,SAAU9C,KAAKC,MAAM6C,SAErBC,WAAY,CACVuB,GAAG,CAAC,EAAE,GACN1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAU6yG,EACV10G,YAAc,SAAAiG,GAAC,OAAI2yG,EAAKr9E,UAAU,eAhCpC3U,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAO45G,EAAa,EAAI,GAE1B35G,MAAO,CAAC,EAAE,OACVyC,SAAUk3G,EACVz/E,QAAS,gBACTM,SAAU,kBACVr3B,SAAU9C,KAAKC,MAAM6C,SACrBC,WAAY,CACVuB,GAAG,CAAC,EAAE,GACN1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCvC,YAAc,SAAAiG,GAAC,OAAI2yG,EAAKr9E,UAAU,oBAsBxC3U,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAO25G,EAAU,EAAI,GAEvB15G,MAAO,CAAC,EAAE,OACVk6B,QAAS,QACTM,SAAU,oBACVr3B,SAAU9C,KAAKC,MAAM6C,SAErBC,WAAY,CACVuB,GAAG,CAAC,EAAE,GACN1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAUi3G,EACV94G,YAAc,SAAAiG,GAAC,OAAI2yG,EAAKr9E,UAAU,YAEpC3U,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAOw1G,EAAU,EAAI,GAEvBv1G,MAAO,CAAC,EAAE,OACVk6B,QAAS,QACTM,SAAU,mBACVr3B,SAAU9C,KAAKC,MAAM6C,SACrBC,WAAY,CACVuB,GAAG,CAAC,EAAE,GACN1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAU8yG,EACV30G,YAAc,SAAAiG,GAAC,OAAI2yG,EAAKr9E,UAAU,aAIpC97B,KAAKwE,MAAMuxG,iBACT5uF,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD/uB,OAAAC,OAAA,CACEsC,UAAW,CACTgb,GAAG,EACHxY,GAAG,IAEDtE,KAAKwE,MAAMuxG,kBAKnBb,EACE/tF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,EACPsL,MAAO,CACLgvB,SAAS,QAEXv3B,eAAgB,iBAGZ1C,KAAKwE,MAAMkF,OAAU1J,KAAKwE,MAAMkF,MAAMpI,OAmBpCtB,KAAKwE,MAAMkF,MAAM8I,IAAK,SAAC6iG,EAASxnG,GAAV,OACxBsZ,EAAA/mB,EAAAC,cAAC00G,EAADx1G,OAAAC,OAAA,CACEuE,IAAG,SAAAiG,OAAW6D,GACd/L,UAAW,CACTnC,MAAM,CAAC,EAAE,SAEP01G,MAxBNluF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,sBAadsjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,wBAKA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACT2W,GAAG,EACH0b,GAAG,EACHnyB,GAAG,EACHrC,MAAM,EACN0H,QAAQ,OACR7E,WAAW,SACXE,eAAe,UAEjBN,UAAU,EACVD,eAAe,GAGbnC,KAAKwE,MAAMwxG,oBAAsBh2G,KAAKwE,MAAMwxG,mBAAmB10G,OAC7D6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3O,GAAI,EACJ0b,GAAI,EACJx0B,MAAO,EACP8C,cAAe,MACfimG,aAAY,aAAA1+F,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOygB,UAEnDkD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZtB,MAAOK,KAAKC,MAAM6C,SAAW,GAAM,IAHrC,QAOAqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZtB,MAAOK,KAAKC,MAAM6C,SAAW,GAAM,GACnC3B,UAAWnB,KAAKC,MAAM6C,SAAW,QAAU,QAJ7C,WASG9C,KAAKC,MAAM6C,UACVqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GACPuB,SAAU,EACVD,WAAY,GAHd,SAWJjB,KAAKwE,MAAMwxG,mBAAmBxjG,IAAK,SAACgnG,EAAO3rG,GAAR,OACjCsZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACErlB,GAAI,EACJpC,MAAO,EACP8C,cAAe,MACfsB,IAAG,WAAAiG,OAAa6D,GAChB66F,aAAY,aAAA1+F,OAAemvG,EAAKl5G,MAAMsD,MAAMC,OAAOygB,UAEnDkD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZR,MAAO,YACPS,SAAUi4G,EAAKl5G,MAAM6C,SAAW,EAAI,EACpCnD,MAAOw5G,EAAKl5G,MAAM6C,SAAW,GAAM,IAElC02G,EAAO/mG,MAEV0U,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZR,MAAO,YACPS,SAAUi4G,EAAKl5G,MAAM6C,SAAW,EAAI,EACpCnD,MAAOw5G,EAAKl5G,MAAM6C,SAAW,GAAM,GACnC3B,UAAWg4G,EAAKl5G,MAAM6C,SAAW,QAAU,QAE1C02G,EAAOnoF,OAAO9nB,QAAQ,GAPzB,IAO8BiwG,EAAOhtE,YAGlC2sE,EAAKl5G,MAAM6C,UACVqkB,EAAA/mB,EAAAC,cAACsqG,EAAA,EAAD,CACEhrG,MAAO,GACPc,MAAO,OACPuc,WAAY,OACZE,KAAMi8F,EAAKp0G,cAAcoY,2BAA2Bq8F,EAAO1rG,OAE3DqZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZR,MAAO,QAEN04G,EAAKp0G,cAAc6vC,YAAY4kE,EAAO1rG,OAEzCqZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJ9J,KAAM,QACNH,MAAO,OACPC,KAAM,oBAWxBymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,aAFT,iCAWPT,KAAKC,MAAMuM,SAAWxM,KAAKC,MAAM6F,aAAe9F,KAAKwE,MAAM4mG,aAAeprG,KAAKwE,MAAM+sG,aAAevxG,KAAKC,MAAM41E,aAClH1uD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP2E,GAAI,CAAC,EAAE,IAGJg1G,GAAcC,GACbpyF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,0BAGA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE2D,UAAW,CACT1C,SAAS,CAAC,EAAE,IAEdY,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERsD,KAAM,aACNC,UAAW,UACXI,YAAa,UACblB,SAAyC,SAA9BpC,KAAKwE,MAAMqxG,eACtBt1G,YAAc,SAAAiG,GAAC,OAAI2yG,EAAKM,kBAAkB,SAC1C51G,KAAM7D,KAAKC,MAAM6C,SAAW,OAAS,mBAEvCqkB,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE2D,UAAW,CACT1C,SAAS,CAAC,EAAE,IAEdY,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERsD,KAAM,cACNC,UAAW,SACXI,YAAa,UACblB,SAAyC,WAA9BpC,KAAKwE,MAAMqxG,eACtBt1G,YAAc,SAAAiG,GAAC,OAAI2yG,EAAKM,kBAAkB,WAC1C51G,KAAM7D,KAAKC,MAAM6C,SAAW,SAAW,wBAO7Cs2G,GAAUp5G,KAAKwE,MAAM4mG,aAAeprG,KAAKwE,MAAM08B,kBAAoBlhC,KAAKwE,MAAM4mG,YAAY35F,GAAG,IAAQ6nG,GAAcC,IACnHpyF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IAGJy5G,GAAwC,SAA9Bp5G,KAAKwE,MAAMqxG,iBACpB1uF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,uBAIGtE,KAAKwE,MAAM2xG,wBAuFVhvF,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD,CACExsB,UAAW,CACTgb,GAAG,EACHxY,GAAG,GAELrB,KAAM,UACNE,UAAW,CACT1C,MAAM,YAERoD,KAAI,2DA/FNsjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZE,eAAgB,SAChBD,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACPiL,KAAM,OACN+2B,UAAU,EACV/hC,OAAQ,QACRC,aAAc,EACdoB,WAAY,IACZsH,YAAa,aACblF,gBAAiB,SACjBib,UAAW,kBACXxX,MAAO9G,KAAKwE,MAAMsxG,iBAAmB,GACrCl2F,SAAU5f,KAAK05G,sBAAsB/qF,KAAK3uB,MAC1CN,OAAM,aAAAsK,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOygB,WAE/CkD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd1C,KAAKwE,MAAMixG,YAAYjjG,IAAK,SAAC/S,EAAEoO,GAC7B,IAAMzL,IAAW+2G,EAAK30G,MAAMyxG,qBAAqBkD,EAAK30G,MAAMyxG,mBAAmBnvG,QAAQrH,EAAEqH,OAASqyG,EAAK30G,MAAMyxG,mBAAmBrrG,OAASnL,EAAEmL,MAC3I,OACEuc,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFE,MAAM,KAERyC,SAAUA,EACVD,eAAe,EACf4B,IAAG,cAAAiG,OAAgB6D,GACnBtN,YAAa,SAAAiG,GAAC,OAAI2yG,EAAKQ,iBAAiBl6G,KAExC0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbC,UAAW,SACXV,MAAO2B,EAAW,YAAc,YAE/B3C,EAAEoK,WAQbyvG,GACEnyF,EAAA/mB,EAAAC,cAAC2xB,GAAA,EAADzyB,OAAAC,OAAA,CACEmzB,OAAQ,IACJ3yB,KAAKC,MAFX,CAGEmpB,YAAa,CACXzpB,MAAM,EACN6C,WAAW,SACXE,eAAe,UAEjB5B,UAAW84G,IACXrmF,eAAgB,CACdryB,SAAS,EACTD,WAAW,EACXL,KAAK,SACLjB,MAAM,CAAC,EAAE,IACTE,aAAa,EACbC,UAAU,UACVgH,MAAM,gBACN/G,SAASC,KAAKwE,MAAM82B,gBAEtBjtB,OAAQ,gBACRikB,WAAY,uBACZC,aAAcvyB,KAAKC,MAAM41E,aAAan1E,KACtCiF,SAAU3F,KAAKisG,qBAAqBt9E,KAAK3uB,MACzC4yB,qBAAsB5yB,KAAK65G,sBAAsBlrF,KAAK3uB,YA0B3Eo5G,GAAsC,WAA5Bp5G,KAAKwE,MAAMqxG,eACpB1uF,EAAA/mB,EAAAC,cAAC2rG,EAADzsG,OAAAC,OAAA,CACEqX,MAAO,MACH7W,KAAKC,MAFX,CAGEoO,OAAQ8mG,EACR3K,MAAOxqG,KAAKwE,MAAMgmG,MAClBD,QAASvqG,KAAKwE,MAAM+lG,QACpBzkG,YAAa9F,KAAKC,MAAM6F,YACxB0gC,aAAcxmC,KAAKwE,MAAM4mG,YACzBv1B,aAAc71E,KAAKC,MAAM41E,aACzBuzB,cAAeppG,KAAKwE,MAAM4kG,cAC1B9tE,eAAgBt7B,KAAKwE,MAAM82B,eAC3BguE,eAAgBtpG,KAAKwE,MAAM8kG,eAC3B3jG,SAAU3F,KAAKisG,qBAAqBt9E,KAAK3uB,MACzC6qG,mBAAoB7qG,KAAKwE,MAAMqmG,mBAC/BvoE,oBAAqBtiC,KAAKwE,MAAM89B,oBAChCknE,oBAAqBxpG,KAAKwpG,oBAAoB76E,KAAK3uB,MACnDkhC,iBAAkBlhC,KAAKksG,yBAAyBv9E,KAAK3uB,MACrD4yB,qBAAsB5yB,KAAK4yB,qBAAqBjE,KAAK3uB,QAErDmnB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,IAGJ0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,WACND,MAAO,WACPG,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAGRi4G,GAAUE,EAAX,sBAAAtvG,OACwBhK,KAAKC,MAAMsF,cADnC,oBAEI0vG,GAAS,6BAAAjrG,OACkBhK,KAAKC,MAAMsF,cAD7B,qBAQpB+zG,IAAeC,EAClBpyF,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,IAGJ0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,WACND,MAAO,WACPG,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,2DAUF8zG,EACF9tF,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,IAIFO,KAAKwE,MAAMmxG,YACTxuF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,WACND,MAAO,WACPG,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJpD,SAAU,EACVT,MAAO,WACPU,UAAW,UALb,+CAO+CnB,KAAKC,MAAMsF,cAP1D,KASA4hB,EAAA/mB,EAAAC,cAAC2xB,GAAA,EAADzyB,OAAAC,OAAA,CACEmzB,OAAQ,IACJ3yB,KAAKC,MAFX,CAGEa,UAAW84G,IACXxwF,YAAa,CACXzpB,MAAM,EACN6C,WAAW,SACXE,eAAe,UAEjB6wB,eAAgB,CACdryB,SAAS,EACTD,WAAW,EACXL,KAAK,SACLjB,MAAM,CAAC,EAAE,IACTE,aAAa,EACbC,UAAU,SACVgH,MAAM,YAERuH,OAAQ,WACRikB,WAAY,WACZC,aAAcvyB,KAAKC,MAAM41E,aAAan1E,KACtCiF,SAAU3F,KAAKisG,qBAAqBt9E,KAAK3uB,UAI7CmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,WACND,MAAO,WACPG,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,kDAMkDnB,KAAK+E,cAAcmK,YAAiC,IAArBlP,KAAKwE,MAAMkxG,WAAgBphC,MAAMniE,OAAO,oBANzH,yBAMoKnS,KAAKC,MAAMsF,cAN/K,OAYN8zG,GACFlyF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACF6E,GAAG,IAIFtE,KAAKwE,MAAMgzG,WAAax3G,KAAKwE,MAAMgzG,UAAU/lG,GAAG,GAC/C0V,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3mB,MAAO,WACPC,KAAM,iBACNE,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJpD,SAAU,CAAC,EAAE,GACbT,MAAO,WACPU,UAAW,UALb,iBAOgBgmB,EAAA/mB,EAAAC,cAAA,cAASL,KAAKwE,MAAMgzG,UAAUjuG,QAAQ,GAAtC,IAA2CvJ,KAAKC,MAAM41E,aAAa48B,aAPnF,KASAtrF,EAAA/mB,EAAAC,cAAC2xB,GAAA,EAADzyB,OAAAC,OAAA,CACEmzB,OAAQ,IACJ3yB,KAAKC,MAFX,CAGEa,UAAW84G,IACXxwF,YAAa,CACXzpB,MAAM,EACN6C,WAAW,SACXE,eAAe,UAEjB6wB,eAAgB,CACdryB,SAAS,EACTD,WAAW,EACXL,KAAK,SACLjB,MAAM,CAAC,EAAE,EAAE,GACXmH,MAAM,QACNjH,aAAa,EACbC,UAAU,UAEZuO,OAAQ,QACRikB,WAAY,QACZ3sB,SAAU3F,KAAKisG,qBAAqBt9E,KAAK3uB,MACzCuyB,aAAcvyB,KAAKC,MAAM6F,YAAYswG,eAAe11G,SAIxDymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,WACND,MAAO,WACPG,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,0CAYRgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,oBAKA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACT2W,GAAG,EACH0b,GAAG,EACHnyB,GAAG,EACHrC,MAAM,EACN0H,QAAQ,OACR7E,WAAW,SACXE,eAAe,UAEjBN,UAAU,EACVD,eAAe,GAGbnC,KAAKwE,MAAMoxG,gBAAkB51G,KAAKwE,MAAMoxG,eAAet0G,OACrD6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3O,GAAI,EACJ0b,GAAI,EACJx0B,MAAO,EACP8C,cAAe,MACfimG,aAAY,aAAA1+F,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOygB,UAEnDkD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZtB,MAAOK,KAAKC,MAAM6C,SAAW,GAAM,IAHrC,QAOAqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZtB,MAAOK,KAAKC,MAAM6C,SAAW,GAAM,GACnC3B,UAAWnB,KAAKC,MAAM6C,SAAW,QAAU,QAJ7C,WASG9C,KAAKC,MAAM6C,UACVqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GACPuB,SAAU,EACVD,WAAY,GAHd,SAWJjB,KAAKwE,MAAMoxG,eAAepjG,IAAK,SAAC6kE,EAAMxpE,GAAP,OAC7BsZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACErlB,GAAI,EACJpC,MAAO,EACP8C,cAAe,MACfsB,IAAG,SAAAiG,OAAW6D,GACd66F,aAAY,aAAA1+F,OAAemvG,EAAKl5G,MAAMsD,MAAMC,OAAOygB,UAEnDkD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZR,MAAO,YACPS,SAAUi4G,EAAKl5G,MAAM6C,SAAW,EAAI,EACpCnD,MAAOw5G,EAAKl5G,MAAM6C,SAAW,GAAM,IAElCu0E,EAAM5kE,MAET0U,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZR,MAAO,YACPS,SAAUi4G,EAAKl5G,MAAM6C,SAAW,EAAI,EACpCnD,MAAOw5G,EAAKl5G,MAAM6C,SAAW,GAAM,GACnC3B,UAAWg4G,EAAKl5G,MAAM6C,SAAW,QAAU,QAE1Cu0E,EAAMhmD,OAAO9nB,QAAQ,GAPxB,IAO6B8tE,EAAM7qC,YAGhC2sE,EAAKl5G,MAAM6C,UACVqkB,EAAA/mB,EAAAC,cAACsqG,EAAA,EAAD,CACEhrG,MAAO,GACPc,MAAO,OACPuc,WAAY,OACZE,KAAMi8F,EAAKp0G,cAAcoY,2BAA2Bk6D,EAAMvpE,OAE1DqZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZR,MAAO,QAEN04G,EAAKp0G,cAAc6vC,YAAYyiC,EAAMvpE,OAExCqZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJ9J,KAAM,QACNH,MAAO,OACPC,KAAM,oBAWxBymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,aAFT,8BAcbT,KAAKC,MAAMuM,QAQd2a,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,qBAtBVsjB,EAAA/mB,EAAAC,cAACu6B,EAAA,EAADr7B,OAAAC,OAAA,CACEsC,UAAW,CACTgb,GAAG,IAED9c,KAAKC,iBAxkDDa,kCCsrCXg5G,8MAlrCbt1G,MAAQ,CACNimG,KAAK,EACLsP,MAAM,KACNvP,MAAM,CACJwP,EAAE,YACFC,EAAE,aAEJC,cAAc,CACZC,GAAG,CACDtwG,MAAM,OAERuwG,GAAG,CACDvwG,MAAM,OAERwwG,GAAG,CACDxwG,MAAM,OAERywG,IAAI,CACFzwG,MAAM,OAGVqsE,QAAQ,KACRpB,QAAQ,KACRylC,SAAS,KACTroF,SAAQ,EACRsoF,UAAU,KACVC,YAAY,GACZC,YAAY,GACZC,WAAW,KACXC,YAAY,KACZC,aAAY,EACZC,aAAY,EACZh1G,YAAY,KACZ0gC,aAAa,KACbjhC,cAAc,KACdw1G,gBAAgB,GAChBv9E,eAAc,EACdw9E,eAAe,KACfC,gBAAgB,KAChBC,kBAAkB,GAClBC,iBAAiB,KACjBC,kBAAkB,KAClBC,mBAAmB,KACnB/P,eAAe,UACfgQ,oBAAmB,EACnBC,qBAAoB,EACpBC,qBAAqB,KACrBC,sBAAsB,KACtBC,yBAAyB,QAI3B32G,cAAgB,OAuIhB42G,aAAe,SAACn1G,GACd,IAAMi0G,EAAcj0G,EAAEuW,OAAOjW,MAAMxF,SAAWsN,MAAMpI,EAAEuW,OAAOjW,OAASkH,KAAK+E,MAAMvM,EAAEuW,OAAOjW,OAAS,GAC7F+zG,EAAc75G,EAAK+D,cAAc6I,MAAM6sG,GAAahpG,GAAG,IAAMzQ,EAAK+D,cAAc6I,MAAM6sG,GAAar+E,IAAIp7B,EAAKwD,MAAMo2G,aACxH55G,EAAK4E,SAAS,CACZ60G,cACAI,mBAIJe,aAAe,SAACp1G,GACd,IAAMk0G,EAAcl0G,EAAEuW,OAAOjW,MAAMxF,SAAWsN,MAAMpI,EAAEuW,OAAOjW,OAASN,EAAEuW,OAAOjW,MAAQ,GACjFg0G,EAAc5sG,SAASwsG,IAAc,IAAMxsG,SAASwsG,IAAc,IACxE15G,EAAK4E,SAAS,CACZ80G,cACAI,cACAE,eAAe,UAInBa,aAAe,SAACb,GACdh6G,EAAK46G,aAAa,CAChB7+F,OAAO,CACLjW,MAAMk0G,QAqFZc,iBAAmB,SAACpuG,GAElB1M,EAAK4E,SAAS,CACZ43B,eAFoB,OAMxBu+E,2BAA6B,SAACruG,GAE5B1M,EAAK4E,SAAS,CACZ01G,oBAFyB,OAM7BU,iBAAmB,SAAC3qF,GAClB,IAAM4qF,EAAmBj7G,EAAK+D,cAAck4B,qBAAqB5L,EAAOrwB,EAAKwD,MAAMsB,YAAYwE,UACzFixG,EAAsBv6G,EAAK+D,cAAc6I,MAAMyjB,GAAQ+K,IAAI,IAAMp7B,EAAK+D,cAAc6I,MAAMquG,GAAkBxqG,GAAGzQ,EAAKwD,MAAMg3G,qBAAqBvkC,oBACrJj2E,EAAK4E,SAAS,CACZ21G,2BAIJW,0BAA4B,SAACjlC,GAC3B,MAAO,CACL3kD,WAAW,cACX+nC,aAAa,CAACr5D,EAAKwD,MAAMg3G,qBAAqB10G,MAAM9F,EAAKwD,MAAMg3G,qBAAqB3mC,SAAS5wE,GAAGgzE,EAAmBj2E,EAAKwD,MAAMsB,YAAYq2G,iBAI9IC,0BAA4B,SAAC1uG,GAK3B1M,EAAKq7G,mBAGPC,6BAA+B,SAAC5uG,GAC9B,IAAMwoE,EAAUl1E,EAAK+D,cAAc6M,gBAAgB,CAAC,YAAY,SAAS,cAAc,eAAe,WAAWlE,GACjH1M,EAAK4E,SAAS,CACZswE,wFAvREl2E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAKq8G,kSAICtB,EAAkB,YACW/6G,KAAK+E,cAAcyvE,wBAAwBx0E,KAAKC,MAAMuM,uBACpEjL,QAAS,SAAAyyE,GACxBA,EAASa,UACXkmC,EAAgBvxG,KAAKwqE,KAInBuoC,EAA+Bv8G,KAAKC,MAAM6uG,UAAUE,OAAS+L,EAAgBvrF,KAAM,SAAAymD,GAAK,OAAI/nE,SAAS+nE,EAAMnvE,SAAWoH,SAASzI,EAAKxF,MAAM6uG,UAAUE,UAAY,KAEhKyM,EAAwBV,EAAgBz5G,OAAO,EAAIy5G,EAAgB,GAAK,KACxES,EAAuBe,IAA8Dd,GAAyB,MAEpHz7G,KAAK4F,SAAS,CACZm1G,kBACAS,uBACAC,0BAGInQ,EAAiB,CAAC,UAAU,SAAShjF,SAAStoB,KAAKC,MAAM6uG,UAAUG,QAAUjvG,KAAKC,MAAM6uG,UAAUG,OAASjvG,KAAKwE,MAAM8mG,eACtHkR,EAAoBx8G,KAAKC,MAAM6uG,UAAUE,QAAUzvG,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAiBgc,SAAStoB,KAAKC,MAAM6uG,UAAUE,QACnIzpG,EAAgBi3G,EAAoBx8G,KAAKC,MAAM6uG,UAAUE,OAASzvG,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAiB,GAE1HtM,KAAK+rG,kBAAkBT,GACvBtrG,KAAKy8G,oBAAoBl3G,sLAIL81G,EAAmBv1G,wFACjC46C,EAAkB1gD,KAAK+E,cAAc6M,gBAAgB,CAAC,UAAU,oBAChE8qG,EAAe18G,KAAK+E,cAAc6M,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAY8uC,aAC5E1gD,KAAK+E,cAAck9C,YAAnB,GAAAj4C,OAAkC0yG,EAAlC,cAAA1yG,OAA2DlE,EAAYoD,QAAvE,0BAAjBm7D,YACUA,EAASlgE,4BACjBo2G,EAAWl2C,EAASlgE,KAEpBy2G,EAAcL,GAAYA,EAAQ,WAAAvwG,OAAYqxG,IAAwBr7G,KAAK+E,cAAcsM,iBAAiBkpG,EAAQ,WAAAvwG,OAAYqxG,IAAsBv1G,EAAYwE,UAAYtK,KAAK+E,cAAc6I,MAAM,qBACpMgtG,oCAEF,4LAGgBv1G,EAAUC,2EACjCtF,KAAKmF,YAECuY,EAAuBpY,EAAUC,gBAAkBvF,KAAKwE,MAAMe,cAC9Do3G,EAA4Br3G,EAAU+1G,qBAAuBr7G,KAAKwE,MAAM62G,oBAC1E39F,GAAwBi/F,IAC1B38G,KAAK48G,kSAMDC,EAAqC,QAA7B78G,KAAKwE,MAAMe,cACnBm2G,EAA2B17G,KAAKwE,MAAMsB,YAAY6xE,WAAW33E,KAAKwE,MAAM62G,6BAGxE1jG,QAAQqD,IAAI,CAChBhb,KAAKC,MAAMq+B,aAAat+B,KAAKwE,MAAMsB,YAAY6H,MAAO3N,KAAKwE,MAAMsB,YAAYq2G,YAAan8G,KAAKwE,MAAMsB,YAAYu4B,KACjHr+B,KAAKC,MAAMq+B,aAAao9E,EAAyBh7G,KAAMg7G,EAAyBxyG,QAASwyG,EAAyBr9E,8BAS1G1mB,QAAQqD,IAAI,CACpBhb,KAAK88G,gBAAgB98G,KAAKwE,MAAM62G,mBAAmBr7G,KAAKwE,MAAMsB,aAC9D9F,KAAK+E,cAAc4nC,gBAAgB3sC,KAAKwE,MAAMsB,YAAY6H,MAAM3N,KAAKC,MAAMuM,SAC3ExM,KAAK+E,cAAc44B,mBAAmB39B,KAAKwE,MAAMe,cAAcvF,KAAKC,MAAM41E,aAAa3sE,QAAQlJ,KAAKC,MAAMuM,SAC1GxM,KAAK+E,cAAc44B,mBAAmB+9E,EAAyBh7G,KAAKV,KAAKC,MAAM41E,aAAa3sE,QAAQlJ,KAAKC,MAAMuM,SAC/GqwG,EAAQ78G,KAAK+E,cAAc80E,cAAc75E,KAAKC,MAAMuM,SAAQ,GAASxM,KAAK+E,cAAc4nC,gBAAgB+uE,EAAyBh7G,KAAKV,KAAKC,MAAMuM,SAAQ,wCAVzJouG,OACAQ,OACAE,OACA99E,OAUFgJ,GATEA,SAS6BxmC,KAAK+E,cAAc6I,MAAM,GACxDwtG,EAAoBA,GAAqBp7G,KAAK+E,cAAc6I,MAAM,GAElE5N,KAAK4F,SAAS,CACZg1G,cACAp0E,eACAhJ,gBACA49E,oBACAE,qBACAI,oNAIsBn2G,2EACJ,GACA,GACdO,EAAc9F,KAAKC,MAAMuoG,UAAUl8F,gBAAgB/G,GACnD81G,EAAqB97G,OAAO8B,KAAKyE,EAAY6xE,YAAY,GAE/D33E,KAAK4F,SAAS,CACZ60G,YALkB,GAMlBC,YAPkB,GAQlB50G,cACAP,gBACA81G,2KAIqBA,GACvBr7G,KAAK4F,SAAS,CACZy1G,mEAKF,IAAMZ,EAAcz6G,KAAKwE,MAAMo2G,YAAYrxG,UAC3CvJ,KAAK27G,aAAa,CAChB5+F,OAAO,CACLjW,MAAM2zG,6LAkCVz6G,KAAK4F,SAAS,CACZssB,SAAQ,IAIJ6qF,EAAY,CAChBC,OAAQh9G,KAAKwE,MAAMk2G,YACnBuC,YAAaj9G,KAAKwE,MAAMi2G,YACxByC,SAAUl9G,KAAKwE,MAAM62G,mBACrB/mE,gBAAiBt0C,KAAKwE,MAAMsB,YAAYoD,QACxCi0G,MAAOn9G,KAAKwE,MAAMsB,YAAY6xE,WAAW33E,KAAKwE,MAAM62G,oBAAoBnyG,SAKpEw3C,EAAkB1gD,KAAK+E,cAAc6M,gBAAgB,CAAC,UAAU,oBAChE8qG,EAAe18G,KAAK+E,cAAc6M,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAY8uC,IAC7F08D,YAAcV,+BAAiCK,EAAUE,iCAAwBF,EAAUG,4BAAmBH,EAAUC,mCAA0BD,EAAUzoE,0BAE3It0C,KAAK+E,cAAck9C,YAAYm7D,aAAhD/4C,SAEA01C,EAAQ11C,GAAYA,EAASlgE,KAAOkgE,EAASlgE,KAAO,6BAGxDnE,KAAK4F,SAAS,CACZssB,SAAQ,uBAEH,kBAIH/tB,EAAOnE,KAAKC,MAAMiY,KAAKC,IAAIkmB,IAAIg/E,iBACnC,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,UAAW,WACrD,CAACtD,EAAM9gE,MAAO8gE,EAAMuD,WAAYvD,EAAMwD,UAAWxD,EAAMyD,YAAazD,EAAMnzG,EAAGmzG,EAAMz1D,EAAGy1D,EAAM3oE,IAGxFqsE,EAAaz9G,KAAK+E,cAAcyrC,KAAK,aACfxwC,KAAK+E,cAAc05B,oBAAoBz+B,KAAKC,MAAM41E,aAAan1E,KAAK,yBAA1F+iC,SACAi6E,EAAY19G,KAAK+E,cAAcyrC,KAAKupE,EAAM9gE,OAC1C0kE,EAAeD,EAAUE,IAAI59G,KAAK+E,cAAcyrC,KAAK/M,IAAgBo6E,KAAK,KAAOl1E,IAAI+0E,GACrFI,EAAc99G,KAAK+E,cAAc+rC,MAAMisE,EAAUE,YAAY/iG,YAC7D+gG,EAAkB0C,EAClBnD,EAAYx6G,KAAK+E,cAAcsM,iBAAiB4pG,EAAgBj7G,KAAKwE,MAAMsB,YAAYwE,UACvFqwG,EAAaH,EAAUvgG,IAAIja,KAAKwE,MAAMi2G,aAAanxG,MAAM,KAAK2Q,IAAIja,KAAKwE,MAAMk2G,aAAapxG,MAAM,KAIhG4xG,EAAoB,CACxB6B,EAAUzoE,gBACVyoE,EAAUI,MACVW,EACAf,EAAUC,OACVS,EACAxC,EACA92G,GAGIg3G,EAAqD,QAAlCn7G,KAAKwE,MAAM62G,mBAA+BsC,EAAe,KAMrE,GACG,EAEhB39G,KAAK4F,SAAS,CACZ6kG,KAJW,EAKXsP,QACA7nF,SALc,EAMdsoF,YACAG,aACAM,kBACAE,mBACAD,mKAgDc5P,GACZA,IAAmBtrG,KAAKwE,MAAM8mG,gBAChCtrG,KAAK4F,SAAS,CACZ0lG,8DAKap1B,GACjB,IAAMslC,EAAuBx7G,KAAKwE,MAAMg3G,qBAAuBx7G,KAAKwE,MAAMu2G,gBAAgBvrF,KAAM,SAAAymD,GAAK,OAAI/nE,SAAS+nE,EAAMnvE,SAAWovE,IAAY,KAE/Il2E,KAAK4F,SAAS,CACZ41G,yDAWFx7G,KAAK4F,SAAS,CACZ6kG,KAPW,EAQXsP,MAPY,KAQZ7jC,QAPc,KAQdwkC,YAPkB,GAQlBD,YAPkB,GAQlBS,kBAPwB,sCAWnB,IAAAz0G,EAAAzG,KACP,OACEmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPmd,GAAI,CAAC,EAAE,GACPta,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,CAAC,EAAE,KACV8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,kBAGA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6B,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERiE,UAAW,CACT1C,SAAS,CAAC,EAAE,IAEd+B,KAAM,WACNC,UAAW,UACXW,KAAM,eACNP,YAAa,UACblB,SAAyC,YAA9BpC,KAAKwE,MAAM8mG,eACtB/qG,YAAc,SAAAiG,GAAC,OAAIC,EAAKslG,kBAAkB,eAE5C5kF,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6B,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERiE,UAAW,CACT1C,SAAS,CAAC,EAAE,IAEd+B,KAAM,aACNC,UAAW,SACXW,KAAM,eACNP,YAAa,UACblB,SAAyC,UAA9BpC,KAAKwE,MAAM8mG,eACtB/qG,YAAc,SAAAiG,GAAC,OAAIC,EAAKslG,kBAAkB,eAKhB,YAA9B/rG,KAAKwE,MAAM8mG,gBACTnkF,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD,CACExsB,UAAW,CACTC,GAAG,EACHC,GAAG,EACHO,GAAG,EACH5C,MAAM,GAERyC,UAAU,EACVD,eAAe,EACfc,KAAM,mBACNE,UAAW,CACT1C,MAAM,cAERmD,UAAW,CACTnD,MAAM,cAERoD,KAAI,yJAEJsjB,EAAA/mB,EAAAC,cAACsqG,EAAA,EAAD,CACEjgG,GAAI,EACJzJ,WAAY,IACZR,MAAO,UACPS,SAAU,OACV8b,WAAY,UACZE,KAAM,wDAENiK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAHlB,YAMEykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJ9J,KAAM,QACNH,MAAO,UACPC,KAAM,cAVV,OAkBwB,YAA9BV,KAAKwE,MAAM8mG,eACTnkF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP8C,cAAe,MACfC,eAAgB,iBAGdnD,OAAO8B,KAAKrB,KAAKwE,MAAMgmG,OAAOh4F,IAAK,SAAAk4F,GAAS,OAC1CvjF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLC,UAAU,IACVC,KAAK,UACL4yG,eAAe,OACf3/F,OAAO3X,EAAKjC,MAAMimG,MAAMC,EAAY,UAAY,WAElDxpG,SAAU,EACVC,UAAW,SACX4C,IAAG,QAAAiG,OAAU0gG,GACbjqG,MAAQgG,EAAKjC,MAAMimG,MAAMC,EAAY,UAAY,WACjD1tF,WAAavW,EAAKjC,MAAMimG,MAAMC,EAAY,UAAY,WACtDsT,YAAcv3G,EAAKjC,MAAMimG,MAAMC,EAAY,UAAY,YAEtDjkG,EAAKjC,MAAMgmG,MAAME,OAK1BvjF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACNC,OAAO,QAETkH,MAAQ,EAAEvH,OAAO8B,KAAKrB,KAAKwE,MAAMgmG,OAAOlpG,OAAQtB,KAAKwE,MAAMimG,QAI5DzqG,KAAKwE,MAAMe,eAAkBvF,KAAKwE,MAAMgiC,aAcrCxmC,KAAKwE,MAAM0xE,QACb/uD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD,CACExsB,UAAW,CACTgb,GAAG,GAEL7Z,KAAM,UACNE,UAAW,CACT1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,qEAAAmG,OAAuEhK,KAAKwE,MAAM0xE,QAAlF,eAEN/uD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJrc,MAAO,OACPuc,WAAY,UACZK,QAASrd,KAAKi+G,MAAMtvF,KAAK3uB,OAJ3B,kBASCA,KAAKwE,MAAMu1G,MA4Nd5yF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WAJT,kBAQA0mB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHuC,GAAG,EACHtC,GAAG,GAELI,UAAU,EACVD,eAAe,GAEfglB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,YAJT,aAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WAJT,gBAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,YAJT,gBAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WAENT,KAAKwE,MAAMe,eAEd4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,YAJT,iBAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WAENT,KAAKwE,MAAMi2G,YANd,IAM4Bz6G,KAAKwE,MAAM62G,oBAEvCl0F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,YAJT,iBAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WAENT,KAAKwE,MAAMk2G,YANd,SAQAvzF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,YAJT,gBAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WAENT,KAAKwE,MAAMg2G,UAAUjxG,QAAQ,GANhC,IAMqCvJ,KAAKwE,MAAM62G,oBAEhDl0F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,YAJT,gBAQA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WAENT,KAAKwE,MAAMm2G,WAAWpxG,QAAQ,GANjC,MASF4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMgiC,cAAch4B,GAAGxO,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMu1G,MAAM9gE,QAC7F9xB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACF6E,GAAG,IAGL6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,MACNF,KAAM,WACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,yBAMyBnB,KAAKwE,MAAM62G,mBANpC,oBAQAl0F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJrc,MAAO,OACPuc,WAAY,UACZK,QAASrd,KAAKi+G,MAAMtvF,KAAK3uB,OAJ3B,mBAUDA,KAAKwE,MAAMg5B,cA4DdrW,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC2xB,GAAA,EAADzyB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEmpB,YAAa,CACXzpB,MAAM,EACN6C,WAAW,SACXE,eAAe,UAEjB5B,UAAW84G,IACXrmF,eAAgB,CACdryB,SAAS,EACTD,WAAW,EACXL,KAAK,SACLjB,MAAM,CAAC,EAAE,IACTE,aAAa,EACbC,UAAU,UACVgH,MAAM,eACN/G,SAASC,KAAKwE,MAAM82B,gBAEtBjtB,OAAQ,eACRikB,WAAY,WACZxrB,MAAO9G,KAAKwE,MAAM22G,iBAClBxoF,OAAQ3yB,KAAKwE,MAAM02G,kBACnB3oF,aAAcvyB,KAAKC,MAAM41E,aAAan1E,KACtCiF,SAAU3F,KAAKs8G,6BAA6B3tF,KAAK3uB,SAEnDmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJrc,MAAO,OACPuc,WAAY,UACZK,QAASrd,KAAKi+G,MAAMtvF,KAAK3uB,OAJ3B,kBA1FFmnB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACF6E,GAAG,IAGL6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,MACNF,KAAM,WACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,+DAQAgmB,EAAA/mB,EAAAC,cAAC2xB,GAAA,EAADzyB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEmpB,YAAa,CACXzpB,MAAM,EACN6C,WAAW,SACXE,eAAe,UAEjB5B,UAAW84G,IACXrmF,eAAgB,CACdryB,SAAS,EACTD,WAAW,EACXL,KAAK,SACLjB,MAAM,CAAC,EAAE,IACTE,aAAa,EACbiH,MAAM,UACNhH,UAAU,WAEZuO,OAAQ,UACRikB,WAAY,UACZ3sB,SAAU3F,KAAK87G,iBAAiBntF,KAAK3uB,MACrCuyB,aAAcvyB,KAAKwE,MAAMk3G,yBAAyBh7G,KAClDiyB,OAAQ,CAAC3yB,KAAKC,MAAM41E,aAAa3sE,QAAQlJ,KAAKC,MAAMiY,KAAKu4B,MAAMg3B,iBAAiB,UAElFtgD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJrc,MAAO,OACPuc,WAAY,UACZK,QAASrd,KAAKi+G,MAAMtvF,KAAK3uB,OAJ3B,qBAhbZmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,0BAGA6iB,EAAA/mB,EAAAC,cAACkvB,GAAA,EAADhwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgE,GAAI,aACJ4rB,aAAa,EACbjR,cAAc,EACdrZ,cAAevF,KAAKwE,MAAMe,cAC1Bqa,SAAU5f,KAAKy8G,oBAAoB9tF,KAAK3uB,MACxCsM,gBAAiBtM,KAAKC,MAAMuoG,UAAUl8F,oBAG1C6a,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ9B,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,8BAGAD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE4iB,UAAW,MACX/b,QAAO,kFAEP9G,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJ9J,KAAM,MACNF,KAAM,OACND,MAAO,gBAIb0mB,EAAA/mB,EAAAC,cAACkvB,GAAA,EAADhwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE4vB,aAAa,EACbtqB,cAAevF,KAAKwE,MAAM62G,mBAC1Bz7F,SAAU5f,KAAKk+G,yBAAyBvvF,KAAK3uB,MAC7CsM,gBAAiBtM,KAAKwE,MAAMsB,YAAY6xE,eAI1C33E,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAMo2G,aAAanpG,GAAG,GAClD0V,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,kCAKA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnZ,IAAK,EACLw8F,KAAM,EACN9qG,MAAO,OACPiL,KAAM,SACN+2B,UAAU,EACV/hC,OAAQ,QACRC,aAAc,EACdoB,WAAY,IACZsH,YAAa,aACblF,gBAAiB,SACjBib,UAAW,kBACXxX,MAAO9G,KAAKwE,MAAMi2G,YAClB76F,SAAU5f,KAAK27G,aAAahtF,KAAK3uB,MACjCN,OAAM,aAAAsK,OAAehK,KAAKC,MAAMsD,MAAMC,OAAOygB,SAC7CsW,YAAW,UAAAvwB,OAAYhK,KAAKwE,MAAM62G,mBAAmBroG,cAA1C,aAEbmU,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPoxB,SAAU,OACVvuB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVD,WAAY,EACZR,MAAO,YACPU,UAAW,QACX6b,WAAY,YACZK,QAAU,SAAC7W,GAAD,OAAOC,EAAK03G,qBACtBlzG,MAAO,CACL8lB,SAAS,OACTC,SAAS,SACT5lB,WAAW,SACX6lB,aAAa,aAZjB,kBAekBjxB,KAAKwE,MAAMo2G,YAAYrxG,QAAQvJ,KAAKC,MAAM6C,SAAW,EAAI,GAf3E,IAegF9C,KAAKwE,MAAM62G,sBAI/Fl0F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,sBAKA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnZ,IAAK,EACLtO,MAAO,OACPiL,KAAM,SACN+2B,UAAU,EACV/hC,OAAQ,QACRC,aAAc,EACdoB,WAAY,IACZgF,YAAa,MACbm4G,YAAa,QACb/6G,gBAAiB,SACjBib,UAAW,kBACXxX,MAAO9G,KAAKwE,MAAMk2G,YAClBngF,YAAa,0BACb3a,SAAU5f,KAAK47G,aAAajtF,KAAK3uB,MACjCuI,YAAavI,KAAKwE,MAAMs2G,YAAc,aAAe,SAGpD96G,KAAKwE,MAAMs2G,aACV3zF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJrB,SAAU,EACVT,MAAO,OAHT,2CASJ0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJta,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdnD,OAAO8B,KAAKrB,KAAKwE,MAAM01G,eAAe1nG,IAAK,SAAAwqG,GACzC,IAAMqB,EAAa53G,EAAKjC,MAAM01G,cAAc8C,GACtC56G,EAAWqE,EAAKjC,MAAMw2G,iBAAiBgC,EACvCr9G,EAAS,EAAEJ,OAAO8B,KAAKoF,EAAKjC,MAAM01G,eAAe54G,OAAQ,IAC/D,OACE6lB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFE,MAAMA,GAERyC,SAAUA,EACVD,eAAe,EACf4B,IAAG,eAAAiG,OAAiBgzG,GACpBz8G,YAAa,SAAAiG,GAAC,OAAIC,EAAKo1G,aAAamB,KAEpC71F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZE,UAAW,SACXV,MAAOgG,EAAKxG,MAAMmC,SAAW,YAAc,UAE1Ci8G,EAAWx0G,YAQ1Bsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP+C,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACi+G,GAAA,EAAD,CACEh/G,YAAa,CACXiD,GAAG,EACHmpB,GAAG,CAAC,EAAG,GACP9qB,KAAK,SACLf,aAAa,EACbC,UAAU,OACVC,UAAWC,KAAKwE,MAAMq2G,cAAgB76G,KAAKwE,MAAM62G,qBAAuBr7G,KAAKwE,MAAMk2G,cAAgB16G,KAAKwE,MAAMs2G,aAEhHyD,WAAY,YACZC,UAAWx+G,KAAKwE,MAAM0tB,QACtB3xB,YAAc,SAAAiG,GAAC,OAAIC,EAAKg4G,SAASj4G,QAKvC2gB,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD,CACExsB,UAAW,CACTgb,GAAG,GAEL7Z,KAAM,WACNE,UAAW,CACT1C,MAAM,YAERoD,KAAI,gBAAAmG,OAAkBhK,KAAKwE,MAAMe,cAA7B,uCA7PZ4hB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACTO,GAAG,EACHra,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,uBAugBkB,UAA9B7D,KAAKwE,MAAM8mG,gBACbnkF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAGLK,KAAKwE,MAAMu2G,gBAAgBz5G,OAAO,EAChC6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,iBAGA6iB,EAAA/mB,EAAAC,cAACmd,EAAA,EAADje,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE2e,cAAc,EACdle,KAAM,mBACNkd,QAAS5d,KAAKwE,MAAMu2G,gBACpBn7F,SAAU5f,KAAK0+G,mBAAmB/vF,KAAK3uB,MACvC8d,aAAc9d,KAAKwE,MAAMi3G,yBAGzBz7G,KAAKwE,MAAMg3G,qBAAqB1mC,QAC9B3tD,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD,CACExsB,UAAW,CACTgb,GAAG,GAEL7Z,KAAM,UACNE,UAAW,CACT1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,uCAAAmG,OAAyChK,KAAKwE,MAAMg3G,qBAAqB7kC,cAAcptE,QAAQ,GAA/F,KAAAS,OAAqGhK,KAAKwE,MAAMg3G,qBAAqB3jC,WAArI,+BAGN1wD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,EACHxY,GAAG,IAGL6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,MACNH,MAAO,WACPC,KAAM,eAERymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,WACPU,UAAW,UAHb,uBAKsBgmB,EAAA/mB,EAAAC,cAAA,cAASL,KAAKwE,MAAMg3G,qBAAqB1kC,gBAAgBvtE,QAAQ,GAAjE,IAAsEvJ,KAAKwE,MAAMg3G,qBAAqB3jC,YAL5H,oBAOA1wD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,QACPU,UAAW,UAHb,yFASJgmB,EAAA/mB,EAAAC,cAAC2rG,EAADzsG,OAAAC,OAAA,CACEqX,MAAO,MACH7W,KAAKC,MAFX,CAGEmpG,eAAe,EACfE,gBAAgB,EAChBj7F,OAAQ,cACRvI,YAAa9F,KAAKwE,MAAMsB,YACxB+vE,aAAc71E,KAAKC,MAAM41E,aACzBv6C,eAAgBt7B,KAAKwE,MAAM+2G,oBAC3B51G,SAAU3F,KAAKo8G,0BAA0BztF,KAAK3uB,MAC9CwpG,oBAAqBxpG,KAAKg8G,iBAAiBrtF,KAAK3uB,MAChDkhC,iBAAkBlhC,KAAK+7G,2BAA2BptF,KAAK3uB,MACvD4yB,qBAAsB5yB,KAAKk8G,0BAA0BvtF,KAAK3uB,MAC1D6qG,mBAAoB,+DACpBrkE,aAAcxmC,KAAK+E,cAAc6I,MAAM5N,KAAKwE,MAAM42G,mBAAmB3pG,GAAGzR,KAAKwE,MAAMg3G,qBAAqBxkC,kBAAoBh3E,KAAKwE,MAAMg3G,qBAAqBxkC,iBAAmBh3E,KAAKwE,MAAM42G,oBAE1Lj0F,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAGLqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,WACND,MAAO,WACPG,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,sBAMsBnB,KAAKwE,MAAMe,cANjC,yBAgBd4hB,EAAA/mB,EAAAC,cAACiuB,EAAA,EAAD,CACExsB,UAAW,CACTgb,GAAG,GAEL7Z,KAAM,UACNE,UAAW,CACT1C,MAAM,YAERoD,KAAI,2DAvqCA/C,8CCyYX69G,8MA7Ybn6G,MAAQ,CACN6J,OAAO,KACPk8F,QAAQ,KACRqU,YAAY,KACZ94G,YAAY,KACZ+4G,aAAa,KACbr4E,aAAa,KACbqvC,aAAa,KACbtwE,cAAc,KACd+jG,gBAAe,EACfuB,mBAAmB,KACnBgH,yBAAwB,KAI1B9sG,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAKoF,gMAGkBC,EAAUC,6EACjCtF,KAAKmF,YAEC67B,EAAiB17B,EAAU+I,SAAWrO,KAAKwE,MAAM6J,QAAYrO,KAAKC,MAAMoO,SAAWhJ,EAAUgJ,OAC7FywG,EAAuB/yG,KAAKC,UAAUhM,KAAKC,MAAMu0G,iBAAmBzoG,KAAKC,UAAU3G,EAAUmvG,eAC7FuK,EAAsBhzG,KAAKC,UAAUhM,KAAKC,MAAMy0G,gBAAkB3oG,KAAKC,UAAU3G,EAAUqvG,eAC7F1zE,GAAiB89E,GAAwBC,IAC3C/+G,KAAKoF,wQAKDiJ,EAASrO,KAAKC,MAAMoO,QAAUrO,KAAKwE,MAAM6J,QAAU,OACzDrO,KAAK4F,SAAS,CACZyI,UACA,WACA5I,EAAKu5G,cACLv5G,EAAKw5G,uMAIappC,4EAEfA,4CACI,UAGLrvC,EAAe,UACXqvC,EAAan1E,YACd,+CACkBV,KAAK+E,cAAc80E,cAAc75E,KAAKC,MAAMuM,uBAAjEg6B,uDAIMxmC,KAAKC,MAAMq+B,aAAau3C,EAAan1E,KAAKm1E,EAAa3sE,QAAQ2sE,EAAax3C,8BAC7Dr+B,KAAK+E,cAAc4nC,gBAAgBkpC,EAAan1E,KAAKV,KAAKC,MAAMuM,wBAArFg6B,6CAIJA,EAAeA,GAAgBxmC,KAAK+E,cAAc6I,MAAM,qBAEjD44B,sQAKFxmC,KAAKC,MAAMuoG,UAAUgM,eAAkBx0G,KAAKC,MAAMuoG,UAAUkM,uDACxD,0BAOC/8F,QAAQqD,IAAI,CACpBhb,KAAK2sC,gBAAgB3sC,KAAKC,MAAMuoG,UAAUkM,cAC1C10G,KAAK2sC,gBAAgB3sC,KAAKC,MAAMuoG,UAAUgM,oDAJ1CoK,OACAC,OAMIr4E,EAAqC,SAAtBxmC,KAAKwE,MAAM6J,OAAoBwwG,EAAeD,EAGnE5+G,KAAK4F,SAAS,CACZg5G,cACAC,eACAr4E,+JAIc,IAAA//B,EAAAzG,KACZuqG,EAAU,KACVzkG,EAAc,KACd0gC,EAAe,KACfjhC,EAAgB,KAChB+jG,GAAiB,EACjBuB,EAAqB,KAEzB,OAAQ7qG,KAAKwE,MAAM6J,QACjB,IAAK,OACHi7F,GAAiB,EACjB9iE,EAAexmC,KAAKwE,MAAMq6G,aAC1B/4G,EAAc9F,KAAKC,MAAMuoG,UAAUgM,cACnCjvG,EAAgBvF,KAAKC,MAAMuoG,UAAUgM,cAAc9zG,KACnDmqG,EAAkB,eAAA7gG,OAAkBhK,KAAKC,MAAMuoG,UAAUkM,aAAah0G,KAApD,iDAClB6pG,EAAU,CACRtnG,KAAK,eAILY,KAAI,aAAAmG,OAAchK,KAAKC,MAAMuoG,UAAUgM,cAAc9zG,KAAjD,aAAAsJ,OAAiEhK,KAAKC,MAAMuoG,UAAUkM,aAAah0G,OAE3G,MACA,IAAK,SACH6E,EAAgBvF,KAAKC,MAAMuoG,UAAUkM,aAAah0G,KAClD4oG,GAAiB,EACjB9iE,EAAexmC,KAAKwE,MAAMo6G,YAC1B94G,EAAc9F,KAAKC,MAAMuoG,UAAUkM,aACnC7J,EAAkB,oBAAA7gG,OAAuBhK,KAAKC,MAAMuoG,UAAUgM,cAAc9zG,KAA1D,iDAClB6pG,EAAU,CACRtnG,KAAK,aAILY,KAAI,eAAAmG,OAAgBhK,KAAKC,MAAMuoG,UAAUkM,aAAah0G,KAAlD,kBAAAsJ,OAAuEhK,KAAKC,MAAMuoG,UAAUgM,cAAc9zG,OAOpHV,KAAK4F,SAAS,CACZ2kG,UACAzkG,cACA0gC,eACAjhC,gBACA+jG,iBACAuB,sBACA,WACApkG,EAAKu4G,kDAIC3wG,GACRrO,KAAK4F,SAAS,CACZyI,wDAIiBX,EAAG2jB,EAAOsB,GAAO,IAAAiH,EAAA55B,KAChCuqG,EAAU,KAEd,OAAQvqG,KAAKwE,MAAM6J,QACjB,IAAK,OACH,IAAM6wG,EAAUxxG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkBywB,EAAK35B,MAAMuoG,UAAUkM,aAAaxrG,QAAQC,gBAAkB,KACzKg2G,EAAeD,EAAUhxG,SAASgxG,EAAQ/6G,KAAK,IAAMktB,EACzD8tF,EAAen/G,KAAK+E,cAAcsM,iBAAiB8tG,EAAan/G,KAAKwE,MAAMsB,YAAYwE,UACvFigG,EAAU,CACRtnG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,6BAAAmG,OAA8Bm1G,EAAa51G,QAAQ,GAAnD,KAAAS,OAAyDhK,KAAKC,MAAMuoG,UAAUkM,aAAah0G,KAA3F,cAER,MACA,IAAK,SACH,IAAM0+G,EAAc1xG,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkBywB,EAAK35B,MAAMuoG,UAAUkM,aAAaxrG,QAAQC,gBAAkB,KAC7Kk2G,EAAkBD,EAAclxG,SAASkxG,EAAYj7G,KAAK,IAAMktB,EACpEguF,EAAkBr/G,KAAK+E,cAAcsM,iBAAiBguG,EAAgBr/G,KAAKwE,MAAMsB,YAAYwE,UAC7FigG,EAAU,CACRtnG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,6BAAAmG,OAA8Bq1G,EAAgB91G,QAAQ,GAAtD,KAAAS,OAA4DhK,KAAKC,MAAMuoG,UAAUgM,cAAc9zG,KAA/F,cAQVV,KAAKg/G,cAELh/G,KAAK4F,SAAS,CACZ2kG,yDAIiBl5E,GACnB,IAAMsB,EAAS,GACf,OAAQ3yB,KAAKwE,MAAM6J,QACjB,IAAK,OACHskB,EAAO7rB,MAAQuqB,EACfsB,EAAO0nC,aAAe,GACtB1nC,EAAOL,WAAatyB,KAAKC,MAAMuoG,UAAUgM,cAAcC,WACzD,MACA,IAAK,SACH9hF,EAAO7rB,MAAQ,KACf6rB,EAAO0nC,aAAe,CAAChpC,GACvBsB,EAAOL,WAAatyB,KAAKC,MAAMuoG,UAAUkM,aAAaC,aAK1D,OAAOhiF,mCAGA,IAAAi9E,EAAA5vG,KAEDs/G,IAAct/G,KAAKC,MAAMq/G,UAE/B,OACEn4F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBoa,GAAI,CAAC,EAAEwiG,EAAY,EAAI,IAEvBn4F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChB/C,MAAO,CAAC,EAAE2/G,EAAY,EAAI,MAGvBt/G,KAAKC,MAAMuM,QAoCV2a,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IAGJK,KAAKC,MAAMoO,QACV8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,sBAKA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6B,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,OACNX,UAAW,UACXD,KAAM,gBACNK,YAAa,UACblB,SAAiC,SAAtBpC,KAAKwE,MAAM6J,OACtB9N,YAAc,SAAAiG,GAAC,OAAIopG,EAAK9zE,UAAU,YAEpC3U,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6B,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,SACNX,UAAW,SACXD,KAAM,cACNK,YAAa,UACblB,SAAiC,WAAtBpC,KAAKwE,MAAM6J,OACtB9N,YAAc,SAAAiG,GAAC,OAAIopG,EAAK9zE,UAAU,gBAO5C3U,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP4C,GAAI+8G,EAAY,EAAI,GAGQ,OAA1Bt/G,KAAKwE,MAAMgiC,aACTrf,EAAA/mB,EAAAC,cAAC2rG,EAADzsG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEqpG,gBAAgB,EAChBj7F,OAAQrO,KAAKwE,MAAM6J,OACnBk8F,QAASvqG,KAAKwE,MAAM+lG,QACpBzkG,YAAa9F,KAAKwE,MAAMsB,YACxB0gC,aAAcxmC,KAAKwE,MAAMgiC,aACzBqvC,aAAc71E,KAAKC,MAAMuoG,UAAUkM,aACnC/uG,SAAU3F,KAAKisG,qBAAqBt9E,KAAK3uB,MACzC6qG,mBAAoB7qG,KAAKwE,MAAMqmG,mBAE/Bj4E,qBAAsB5yB,KAAK4yB,qBAAqBjE,KAAK3uB,QAErDmnB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,IAGJ0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,WACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,sBAMsBnB,KAAKwE,MAAMe,cANjC,OAMoDvF,KAAKwE,MAAM6J,OAN/D,uBAYN8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,0BAjJlBsjB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAGLqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,QACtCpC,KAAM,QACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,CAAC,EAAE,GACP5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,uDAQAgmB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,KAEXY,YAAaP,KAAKC,MAAM66B,2BAL1B,sBAtQSh6B,+DC6RZy+G,8MA5Rb/6G,MAAQ,CACNC,UAAU,KACV+6G,WAAW,KACXC,YAAY,KACZl6G,cAAc,KACd0nE,oBAAoB,QAItBloE,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,oDAK9CD,KAAKmF,gNAQLnF,KAAK4uG,qMAGkBvpG,EAAWC,mEAClCtF,KAAKmF,6RAKC+wC,EAAY,GACdspE,EAAax/G,KAAK+E,cAAc6I,MAAM,GACpCqC,EAAyC,SAAhCjQ,KAAKC,MAAMiQ,0BAEpBlQ,KAAK+E,cAAc6H,aAAarN,OAAO8B,KAAKrB,KAAKC,MAAMqM,iBAAvD,eAAAO,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAwE,SAAAC,EAAOU,GAAP,IAAA7H,EAAA2K,EAAA/B,EAAA83B,EAAA,OAAAhc,EAAApqB,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtEzH,EAAcL,EAAKxF,MAAMqM,gBAAgBqB,GAD6BN,EAAAE,KAAA,EAE7C9H,EAAKV,cAAc4nC,gBAAgB7mC,EAAYy6B,KAAK5yB,MAAMlI,EAAKxF,MAAMuM,SAFxB,YAEtEiE,EAFsEpD,EAAAkD,MAAA,CAAAlD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKjD9H,EAAKV,cAAc8yC,kBAAkB/xC,GALY,cAKpE4I,EALoErB,EAAAkD,KAAAlD,EAAAE,KAAA,GAM/C9H,EAAKV,cAAcs7B,oBAAoB5vB,EAAiBnH,MAAMoF,GAAYf,EAAM7H,EAAYmK,GAN7C,SAMpEu2B,EANoEn5B,EAAAkD,MAQzDkB,GAAG,KAClBykC,EAAUvoC,GAAS64B,EAGnBg5E,EAAaA,EAAWlxG,KAAKk4B,IAZ2C,yBAAAn5B,EAAAwB,SAAA5B,EAAAjN,SAAxE,gBAAA8O,GAAA,OAAAjC,EAAAkC,MAAA/O,KAAAgP,YAAA,2BAkB8BhP,KAAK+E,cAAcu0F,yBAAyBt5F,KAAKC,MAAMuM,QAAQxM,KAAKC,MAAMqM,gBAAgB,MAAM,MAAK,WAAnI4sF,WAEJ35F,OAAO8B,KAAK63F,GAAuB33F,QAAS,SAAAyqC,GAC1C,IAAM2sD,EAAkBlzF,EAAKV,cAAc6I,MAAMsrF,EAAsBltD,IACvEkK,EAAUlK,GAAY2sD,EACtB6mB,EAAaA,EAAWlxG,KAAKqqF,KAI3Bl0F,EAAY,GAElBlF,OAAO8B,KAAK60C,GAAW30C,QAAQ,SAAAoM,GAC7B,IAAM64B,EAAe0P,EAAUvoC,GAC/B,GAAI64B,EAAa/0B,GAAG,GAAG,CACrB,IAAMiuG,EAAkBl5E,EAAavsB,IAAIulG,GAAYl2G,MAAM,KACvDq2G,EAAgBl6G,EAAKV,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,EAAMqF,cAAc,QAAQ,QACrG2sG,EAAgBA,EAAgBA,EAAc/1G,KAAK,KAAO,UAC1DnF,EAAU+E,KAAK,CACbvF,GAAG0J,EACH9D,MAAM8D,EAAMqO,OAAO,EAAE,GAAGhJ,cAAcrF,EAAMqO,OAAO,GACnDlV,MAAMkH,KAAKk2D,MAAMw7C,GACjBj/G,MAAM,OAAOk/G,EAAc,SAKjC3/G,KAAK4F,SAAS,CACZswC,YACAzxC,YACA+6G,mJAIK,IAAA/4G,EAAAzG,KAED0E,EAAa,CACjBqB,SAAS,EACTC,SAAQ,EACRC,YAAY,EACZC,aAAa,EACbE,YAAY,IACZD,cAAc,GACdE,gBAAgB,GAChB7C,OAAO,SAAA8C,GAAC,OAAIA,EAAE7F,OACdkG,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GACV,OAAI+C,WAAW/C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGXC,YAAa,SAAAT,GACX,OAAO,MAET/C,MAAM,CACJyD,QAAS,CACPC,UAAW,CACTI,QAAS,SAGbC,OAAO,CACLzD,KAAK,CACH3C,SAAS,GACTD,WAAW,IACXsG,WAAYhE,KAAMiE,MAAMC,YAG5BC,QAAQ,CACN7D,KAAK,CACH3C,SAAS,GACTD,WAAW,IACXsG,WAAYhE,KAAMiE,MAAMC,aAI9BE,sBAAsB,EACtBC,sBAAsB,GACtBE,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCE,sBAAsB,CAAEC,KAAM,SAC9Bs3G,wBAAwB1xG,SAAgC,GAAvBlO,KAAKwE,MAAMi7G,aAC5Ch3G,OAAQzI,KAAKC,MAAM6C,SAAW,CAAE4F,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAI1E,KAAM,IAAO,CAAEwE,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAI1E,KAAM,IACrHqC,aAAa,SAACpC,EAAMqC,GAClB,IAAMjB,EAAgBpB,EAAKF,GACrBgpE,EAAsB1nE,EAAgBkB,EAAKxG,MAAMqM,gBAAgB/G,IAAkBkB,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASrM,IAAkB,KAChKkB,EAAKb,SAAS,CACZL,gBACA0nE,yBAGJvmE,aAAa,SAACvC,EAAMqC,GAClBC,EAAKb,SAAS,CACZL,cAAc,KACd0nE,oBAAoB,QAGxBvlE,QAAQ,CACN,CACEslG,UAAW,GACXC,WAAY,GACZC,WAAYltG,KAAKC,MAAM6C,SAAW,GAAK,GACvCqqG,WAAY,GACZC,OAAQ,SACR3hE,UAAW,MACX4hE,cAAe9pG,KAAMC,OAAOuQ,OAC5Bu5F,YAAa,SACbC,QAAS,CACP,CACE/xC,GAAI,QACJvwD,MAAO,CACLoiG,cAAe,aAQrB9nG,IAA6C,OAA7BvF,KAAKwE,MAAMe,gBAA0BvF,KAAKwE,MAAM0xC,UAAUl2C,KAAKwE,MAAMe,iBAAiBvF,KAAKwE,MAAM0xC,UAAUl2C,KAAKwE,MAAMe,eACtI2kC,EAAelqC,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa5R,KAAKC,MAAMiQ,iBAAiB,SAC5F8kF,IAAeh1F,KAAKwE,MAAMe,eAAgBvF,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,SAAS5R,KAAKwE,MAAMe,cAAc,wBAE9H,OACE4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IAGJK,KAAKwE,MAAMg7G,YAAcj6G,IACxB4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhd,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZxE,KAAM,CAAC,MAAM,OACb/C,UAAW,SACXqB,WAAY,SACZ7C,MAAO,CAAC,MAAM,OACdwK,SAAU,WACVvK,OAAQ,CAAC,MAAM,OACf6C,cAAe,SACfC,eAAgB,UAGd6C,EACE4hB,EAAA/mB,EAAAC,cAAA8mB,EAAA/mB,EAAAsnG,SAAA,KACEvgF,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACE/W,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJqE,GAAG,EACH1E,OAAO,UAGX+N,MAAO3N,KAAKwE,MAAMe,cAClBO,YAAa9F,KAAKwE,MAAMyoE,sBAE1B9lD,EAAA/mB,EAAAC,cAACsxB,EAAA,EAAD,CACElnB,UAAW,CACTC,GAAG,EACHxJ,SAAS,EACTD,WAAW,GAEbqJ,SAAU,EACVpJ,SAAU,CAAC,EAAE,GACbqJ,aAAc,EACdtJ,WAAY,CAAC,EAAE,GACfgtG,KAAOjZ,EAAe,IAAM,KAC5BxqF,OAAQxK,KAAKwE,MAAM0xC,UAAUl2C,KAAKwE,MAAMe,iBAE1C4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,aAENT,KAAKwE,MAAMe,gBAIhB4hB,EAAA/mB,EAAAC,cAAA8mB,EAAA/mB,EAAAsnG,SAAA,KACEvgF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ1E,OAAQ,QACRiD,IAAKqnC,IAEP/iB,EAAA/mB,EAAAC,cAACsxB,EAAA,EAAD,CACEs8E,KAAM,IACNxjG,UAAW,CACTC,GAAG,EACHxJ,SAAS,EACTD,WAAW,GAEbqJ,SAAU,EACVpJ,SAAU,CAAC,EAAE,GACbqJ,aAAc,EACdtJ,WAAY,CAAC,EAAE,GACfuJ,OAAQxK,KAAKwE,MAAMg7G,aAErBr4F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,aAHT,iBAYZ0mB,EAAA/mB,EAAAC,cAACmuB,EAAA,EAADjvB,OAAAC,OAAA,CACEoL,KAAMC,KACFnG,EAFN,CAGEoG,YAAY,EACZ3G,KAAMnE,KAAKwE,MAAMC,UACjBgS,SAAUzW,KAAKC,MAAMwW,SACrBC,eAAgB1W,KAAKC,MAAMwW,oBAtRR3V,mCC6dd++G,8MA7dbr7G,MAAQ,CACNs7G,eAAe,KACfC,oBAAoB,KACpBC,uBAAuB,KACvBC,6BAA6B,KAC7BC,gBAAgB,CACdC,EAAE,CACAC,MAAQ,CACNC,KAAK,EAAE,GACP1gH,MAAM,EAAE,GAEV2gH,WAAW,CACTD,KAAK,EAAE,EACP1gH,MAAM,EAAE,GAEV4gH,WAAW,CACTF,KAAK,IACL1gH,MAAM,EAAE,EACR6gH,WAAW,OAGfC,GAAG,CACDF,WAAW,CACTF,KAAK,IACL1gH,MAAM,KAER+gH,WAAW,CACTL,KAAK,EAAE,GACP1gH,MAAM,EAAE,IAEVghH,KAAO,CACLN,KAAK,EACL1gH,MAAM,EAAE,GACR6gH,WAAW,OAGfnG,GAAG,CACDsG,KAAO,CACLN,KAAK,EACL1gH,MAAM,EAAE,GAEVihH,UAAU,CACRP,KAAK,EACL1gH,MAAM,EAAE,GAEVkhH,UAAU,CACRR,KAAK,EACL1gH,MAAM,GACN6gH,WAAW,WAOnBz7G,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAK8gH,oMAGkBz7G,EAAUC,mEACjCtF,KAAKmF,gKAGgB46G,GACrB//G,KAAK4F,SAAS,CACZm6G,2MAKEgB,EAAa,GACbjB,EAAiB,GAGf7vG,EAAyC,SAAhCjQ,KAAKC,MAAMiQ,iBAEpB8wG,EAAqB,CACzBn6E,SAAS7mC,KAAK+E,cAAc6I,MAAM,GAClCT,WAAWnN,KAAK+E,cAAc6I,MAAM,GACpCqzG,aAAajhH,KAAK+E,cAAc6I,MAAM,aAGlC5N,KAAK+E,cAAc6H,aAAa5M,KAAKC,MAAMgM,cAA3C,eAAAY,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAyD,SAAAC,EAAOU,GAAP,IAAA7H,EAAAkxC,EAAA7mC,EAAAyH,EAAAzK,EAAAmsC,EAAA4xC,EAAA3jD,EAAAV,EAAAo6E,EAAAx8E,EAAAqT,EAAAopE,EAAAC,EAAAC,EAAA,OAAA52F,EAAApqB,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvDzH,EAAcL,EAAKxF,MAAMqM,gBAAgBqB,GADcN,EAAAE,KAAA,EAE/B9H,EAAKV,cAAcmzC,mBAAmBpyC,EAAYL,EAAKxF,MAAMuM,SAF9B,cAEvDwqC,EAFuD3pC,EAAAkD,KAAAlD,EAAAE,KAAA,EAIPoK,QAAQqD,IAAI,CAChEvV,EAAKV,cAAcs7B,oBAAoB2W,EAAgBrpC,EAAM7H,EAAYmK,GACzExK,EAAKV,cAAcy0C,eAAe,CAAC7rC,GAAOlI,EAAKxF,MAAMuM,SACrD/G,EAAKV,cAAc8yC,kBAAkB/xC,KAPsB,cAAAqK,EAAA9C,EAAAkD,KAAAqH,EAAArY,OAAAouC,EAAA,EAAApuC,CAAA4Q,EAAA,GAItDhD,EAJsDyK,EAAA,GAI3C0hC,EAJ2C1hC,EAAA,GAI/BszE,EAJ+BtzE,EAAA,GAUvD2vB,EAAe2jD,EAAejxE,IAAIq/B,EAAY3rC,IAAQY,MAAM,GAC5Ds4B,EAAW15B,EAAW7D,MAAMi+B,GAE9B05E,EAAe,EACfx8E,EAAW,EAd8Cp3B,EAAAE,KAAA,GAerC9H,EAAKV,cAAcozC,aAAaryC,GAfK,SAevDgyC,EAfuDzqC,EAAAkD,OAgBvB,OAArBunC,EAAUse,SACzB3xB,EAAWqT,EAAUM,OACrB6oE,EAAe9zG,EAAW7D,MAAMm7B,EAASxqB,IAAI,OAGzCinG,EAAmBlzG,KAAK+E,MAAM8zB,EAAS5sB,IAAIgnG,GAAc33G,MAAM,MAE/D63G,EAAgB5hH,OAAO8B,KAAKoE,EAAKjB,MAAM07G,iBAAiBzyG,OAAO,SAAA4yG,GAAI,OAAIA,GAAMa,IAC7EE,EAAkBlzG,SAASizG,EAAcrwG,OAE/CiwG,EAAWK,GAAmBL,EAAWK,GAAmBL,EAAWK,GAAiB,EAAI,EAEvF37G,EAAKV,cAAc6I,MAAMT,GAAYyB,SAAYnJ,EAAKV,cAAc6I,MAAMs9E,GAAgBt8E,SAAYnJ,EAAKV,cAAc6I,MAAMi5B,GAAUj4B,SAAYnJ,EAAKV,cAAc6I,MAAMqzG,GAAcryG,UAC/LkxG,EAAenyG,GAAS,CACtBk5B,WACA15B,aACA8zG,eACA/1B,kBAOF81B,EAAmBn6E,SAAWm6E,EAAmBn6E,SAASv4B,KAAKu4B,GAC/Dm6E,EAAmB7zG,WAAa6zG,EAAmB7zG,WAAWmB,KAAKnB,GACnE6zG,EAAmBC,aAAeD,EAAmBC,aAAa3yG,KAAK2yG,IA1CZ,yBAAA5zG,EAAAwB,SAAA5B,EAAAjN,SAAzD,gBAAA8O,GAAA,OAAAjC,EAAAkC,MAAA/O,KAAAgP,YAAA,WA8CAqyG,EAAe9hH,OAAO8B,KAAK0/G,GAAYvmE,OAAQ,SAAC6mE,EAAa5W,GACjE,IAAMxG,EAAQ8c,EAAWtW,GAKzB,OAJIxG,EAAMod,EAAapd,QACrBod,EAAa5W,KAAOv8F,SAASu8F,GAC7B4W,EAAapd,MAAQ/1F,SAAS+1F,IAEzBod,GACP,CACA5W,KAAK,EACLxG,MAAM,IAGF8b,EAAsBsB,EAAa5W,MAAQv8F,SAAS3O,OAAO8B,KAAKrB,KAAKwE,MAAM07G,iBAAiB,IAE5FoB,EAAwB,GAC9BthH,KAAKC,MAAMgM,cAAc1K,QAAS,SAAAoM,GAC5BmyG,EAAenyG,KACjB2zG,EAAsB3zG,GAASmyG,EAAenyG,MAIlDmyG,EAAiBwB,EAGb/hH,OAAO8B,KAAKy+G,GAAgBx+G,OAAO,IACrCw+G,EAAc,IAAUkB,GAGtBf,EAA+B,KAC7BD,EAAyBzgH,OAAO8B,KAAKrB,KAAKwE,MAAM07G,iBAAiB1tG,IAAK,SAAAi4F,GAC1E,IAAM8W,EAAiBhiH,OAAOiO,OAAO/H,EAAKjB,MAAM07G,gBAAgBzV,IAAO35F,MACjEjH,EAAQ03G,EAAef,WAAae,EAAef,WAAajhH,OAAO8B,KAAKoE,EAAKjB,MAAM07G,gBAAgBzV,IAAO35F,MAC9GhK,EAAQoH,SAASu8F,GACjB+W,EAAS,CAAE16G,QAAO+C,SAKxB,OAHI/C,IAAUi5G,IACZE,EAA+BuB,GAE1BA,IAGTxhH,KAAK4F,SAAS,CACZk6G,iBACAC,sBACAC,yBACAC,qKAIK,IAAAx5G,EAAAzG,KAEP,IAAKA,KAAKwE,MAAMs7G,eACd,OACE34F,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,MACd4sB,UAAUrvB,KAAKC,MAAML,QAEvByc,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,2BAKZ,IAAMq8G,EAAkBlgH,KAAKwE,MAAM07G,gBAAgBlgH,KAAKwE,MAAMu7G,qBAAuB//G,KAAKwE,MAAM07G,gBAAgBlgH,KAAKwE,MAAMu7G,qBAAuB//G,KAAKwE,MAAM07G,gBAAgB,GAE7K,OACE/4F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpc,GAAI,EACJzI,GAAI,EACJ5C,MAAO,EACPqC,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPuc,UAAW,EACXze,aAAc,EACd0I,YAAa,aACblF,gBAAiB,UAEjB8jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ8F,OAAQ,KACR1H,eAAgB,YAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhd,OAAQ,KACRzK,MAAO,CAAC,EAAE,IACV8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACmd,EAAA,EAAD,CACEW,WAAY,CACV1e,EAAE,EACFuC,GAAG,GAELtB,KAAM,kBACNkd,QAAS5d,KAAKwE,MAAMw7G,uBACpBpgG,SAAW,SAAAhZ,GAAC,OAAIH,EAAKg7G,uBAAuB76G,IAC5CkX,aAAc9d,KAAKwE,MAAMy7G,iCAK7B1gH,OAAO8B,KAAKrB,KAAKwE,MAAMs7G,gBAAgBttG,IAAI,SAAC7E,EAAM+zG,GAChD,IAAM57G,EAAcW,EAAKxG,MAAMqM,gBAAgBqB,GACzCsqC,EAAgBxxC,EAAKjC,MAAMs7G,eAAenyG,GAC1Cg0G,EAAqBl7G,EAAK1B,cAAc6I,MAAMrO,OAAOiO,OAAO0yG,GAAiBpvG,MAAMuvG,MACnFuB,EAAgB3pE,EAAcgpE,aAAa33G,MAAMq4G,GACjDE,EAAa7zG,KAAKC,IAAI,EAAE5E,WAAW4uC,EAAcpR,SAAS5sB,IAAI2nG,KAC9DE,EAAYh8G,GAAeA,EAAY7C,KAAO6C,EAAY7C,KAA9C,iBAAA+G,OAAqE2D,EAArE,QACZo0G,EAAgBt7G,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,EAAM,QAAQ,QAAQ/D,KAAK,KAEtG,OACEud,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnjB,GAAE,SAAA+F,OAAW2D,GACblL,cAAe,MACfsB,IAAG,SAAAiG,OAAW2D,GACdq0G,UAAsB,QAAVr0G,EAAA,aAAA3D,OAA+BvD,EAAKxG,MAAMsD,MAAMC,OAAOygB,SAAY,MAE/EkD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACVwK,SAAU,YAEVgd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPC,OAAQ,OACRuK,SAAU,WACV3H,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,IAAK,MAGfwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,IAAK,IACbC,OAAQ,OACR6C,cAAe,OAGblD,OAAO8B,KAAK6+G,GAAiB1tG,IAAI,SAAC3I,EAAMo4G,GACtC,IAAMV,EAAiBrB,EAAgBr2G,GACjCq4G,EAAyBjqE,EAAcgpE,aAAa33G,MAAM7C,EAAK1B,cAAc6I,MAAM2zG,EAAelB,OACpG8B,EAAkC17G,EAAK1B,cAAc8O,YAAYquG,EAAuBz7G,EAAKxG,MAAM6C,SAAW,EAAIo/G,EAAuB1zG,GAAG,GAAK,EAAI,GAKzJ,OAJ4B/H,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,SAASjE,EAAM,0BAErFw0G,EAAkC,KAAKA,GAGvCh7F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpc,GAAI,EACJtI,eAAgB,WAChB/C,MAAO4hH,EAAe5hH,MACtB8Y,GAAe,QAAV9K,EAAkB,EAAI,KAC3B5J,IAAG,kBAAAiG,OAAoB2D,EAApB,KAAA3D,OAA6Bi4G,GAChCG,YAAW,aAAAp4G,OAAevD,EAAKxG,MAAMsD,MAAMC,OAAOygB,WAGrC,QAAVtW,GAAoBs0G,IAAkB1iH,OAAO8B,KAAK6+G,GAAiB5+G,OAAO,IACzE6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,OACb+J,MAAO,CACLo3G,UAAU,aAEZ5hH,MAAOw3C,EAAcpR,SAASvG,IAAI4hF,GAA0B,YAAc,UAEzEC,QASnBh7F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPyK,OAAQ,EACR5H,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChB+V,GAAe,QAAV9K,EAAkB,CAAC,MAAM,SAAW,QACzCwmB,GAAKutF,EAAWniH,OAAO8B,KAAKoF,EAAKjC,MAAMs7G,gBAAgBx+G,OAAO,EAAI,MAAQ,GAE1E6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,IAAK,IACb+C,eAAgB,CAAC,aAAa,aAE9BykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpc,GAAI,CAAC,EAAE,GACP9J,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAEd0M,IAGLwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,IAAK,IACb6C,WAAY,SACZC,cAAe,MACf7C,OAAQ,CAAC,OAAO,QAChB8C,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExnB,OAAQ,OACRD,MAAOkiH,EACPx+G,gBAAiB,UAEjB8jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExnB,OAAQ,OACRD,MAAO,OACPE,aAAc,CAAC,gBAAgB,iBAC/BoL,MAAO,CAAC9D,WAAU,+BAAA6C,OAAgC+3G,EAAhC,iBAAA/3G,OAA6D+3G,EAA7D,oBAAA/3G,OAA6F+3G,EAA7F,iBAGtB56F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEk7F,GAAI,EACJ3iH,MAAO,OACPC,OAAQ,OACR4C,WAAY,SACZE,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAOvkB,IAAKi/G,EAAWliH,OAAQ,CAAC,QAAQ,YAGxCunB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEk7F,GAAI,EACJ9/G,WAAY,UAGA,QAAVmL,EACEwZ,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAADzjC,OAAAC,OAAA,GACMiH,EAAKxG,MADX,CAEE0N,MAAOA,EACP7H,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,kBACLT,MAAM,CACJqK,SAAS7D,EAAKxG,MAAM6C,SAAW,EAAI,EACnCyH,aAAa9D,EAAKxG,MAAM6C,SAAW,EAAI,GACvCmI,MAAM,CACJxK,MAAMgG,EAAKxG,MAAMsD,MAAMC,OAAOsb,UAC9B7d,WAAWwF,EAAKxG,MAAM6C,SAAW,IAAM,IACvC5B,SAASuF,EAAKxG,MAAM6C,SAAW,OAAS,aAMhDqkB,EAAA/mB,EAAAC,cAAC4vG,EAAD1wG,OAAAC,OAAA,GACMiH,EAAKxG,MADX,CAEEqK,SAAU7D,EAAKxG,MAAM6C,SAAW,EAAI,EACpCyH,aAAc9D,EAAKxG,MAAM6C,SAAW,EAAI,GACxCgrG,aAAc,CACZrtG,MAAMgG,EAAKxG,MAAMsD,MAAMC,OAAOsb,UAC9B7d,WAAWwF,EAAKxG,MAAM6C,SAAW,IAAM,IACvCyE,WAAWd,EAAKxG,MAAMsD,MAAMiE,MAAMC,UAClCvG,SAASuF,EAAKxG,MAAM6C,SAAW,OAAS,gBAWvD2D,EAAKxG,MAAM6C,UACVqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,IAAM6C,WAAY,aAAcE,eAAgB,gBAOzEykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACVwK,SAAU,YAEVgd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,CAAC,IAAK,MACnBwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,IAAK,IACb8C,cAAe,OAGblD,OAAO8B,KAAK6+G,GAAiB1tG,IAAI,SAAC+vG,EAAgBN,GAChD,IAAMV,EAAiBrB,EAAgBqC,GACvC,OACEp7F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3O,GAAI,EACJzN,GAAI,CAAC,EAAE,GACPtI,eAAgB,WAChB/C,MAAO4hH,EAAe5hH,MACtBoE,IAAG,kBAAAiG,OAAoBi4G,GACvBG,YAAW,aAAAp4G,OAAevD,EAAKxG,MAAMsD,MAAMC,OAAOygB,UAElDkD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,UAEN8hH,UAUdviH,KAAKC,MAAM6C,UACVqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,IAAM6C,WAAY,aAAcE,eAAgB,UAC3DykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnmB,WAAY,EAAGC,SAAU,cArddJ,aCuFlB0hH,8MAvFbz9G,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,iMAGkBE,EAAUC,mEACjCtF,KAAKmF,kJAIL,OACEgiB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTkJ,GAAG,EACHjJ,GAAG,CAAC,EAAE,GACNugH,GAAG,CAAC,EAAE,IAERlgH,UAAU,EACVD,eAAe,EACf5B,YAAaP,KAAKC,MAAMM,aAExB4mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExnB,OAAQ,OACR4C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEplB,GAAI,CAAC,EAAE,IAGLhC,KAAKC,MAAMgD,KACTkkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAMV,KAAKC,MAAMgD,KACjBrC,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,MACtCrC,MAAOT,KAAKC,MAAMiD,UAAYlD,KAAKC,MAAMiD,UAAY,WAErDlD,KAAKC,MAAM0C,OACbwkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEvkB,IAAK7C,KAAKC,MAAM0C,MAChBhD,MAAOK,KAAKC,MAAM6C,SAAW,QAAU,QACvClD,OAAQI,KAAKC,MAAM6C,SAAW,QAAU,WAKhDqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,CAAC,EAAE,GACPjI,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,IAEZlB,KAAKC,MAAM2gB,OAEduG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAENT,KAAKC,MAAM4D,OAGhBsjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExkB,MAAO,SACPnC,MAAO,WACPC,KAAM,qBACNE,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,mBAlFhBhC,aCynDnB2hH,8MAzmDbj+G,MAAQ,CACN0xC,UAAU,KACVuB,gBAAgB,GAChB+pD,gBAAgB,GAChBkhB,iBAAiB,GACjBC,gBAAgB,KAChBjqC,gBAAgB,KAChB+1B,iBAAgB,EAChBmU,mBAAmB,KACnBC,yBAAyB,KACzBC,+BAA+B,KAC/BnU,8BAA8B,UAIhC5pG,cAAgB,OAChBC,oBAAqB,6EAGfhF,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,oDAK9CD,KAAKmF,2DAILnF,KAAKgF,oBAAqB,sKAIpBhF,KAAK4uG,qMAGYvpG,EAAWC,kFAClCtF,KAAKmF,YAEC2nB,EAAiBznB,EAAUmH,UAAYxM,KAAKC,MAAMuM,QAClDu2G,EAAyBh3G,KAAKC,UAAU3G,EAAUiH,mBAAqBP,KAAKC,UAAUhM,KAAKC,MAAMqM,kBACnGwgB,GAAkBi2F,IAEpB/iH,KAAK4F,SAAS,CACZ6oG,iBAAgB,GAChB,WACAhpG,EAAKmpG,oMAKQlpG,wFAASC,iCAAS,KAC9B3F,KAAKgF,4DACDhF,KAAK4F,SAASF,EAASC,oCAEzB,kKAGwBgpG,GAC/B3uG,KAAKwF,aAAa,CAChBmpG,oOAKIriG,EAAkBtM,KAAKC,MAAMqM,iBAAmB,IAElDtM,KAAKwE,MAAMiqG,0DACN,cAILzuG,KAAKC,MAAMuM,gCACP9G,EAAW,GACX46C,EAAmBtgD,KAAK+E,cAAc6M,gBAAgB,CAAC,UAAU,8BAO7D+F,QAAQqD,IAAI,CAEpB,GAEAhb,KAAK+E,cAAcu8F,mBAAmBthG,KAAKC,MAAMiQ,kBAEjDlQ,KAAK+E,cAAcwyC,oBAAoBjrC,EAAgBtM,KAAKC,MAAMuM,SAElExM,KAAK+E,cAAcwH,gBAAgBvM,KAAKC,MAAMuM,QAAQ8zC,EAAiB,SAAS/gD,OAAO8B,KAAKiL,4CAX5FosE,OACA8oB,OACAtrD,OAYFxwC,EAASwwC,UAAYA,EAErBxwC,EAASgzE,gBAAkBA,GAAmBn5E,OAAO8B,KAAKq3E,GAAiBp3E,OAAO,EAAIo3E,EAAkB,KAEpGhzE,EAASgzE,kBACXhzE,EAASo9G,+BAAiCvjH,OAAO8B,KAAKqE,EAASgzE,iBAAiBl+B,OAAQ,SAACsoE,EAA+Bn1G,GACtH,IAAMq1G,EAAYt9G,EAASgzE,gBAAgB/qE,GACrC7H,EAAcW,EAAK1B,cAAc6M,gBAAgB,CAAC,QAAQ,eAAe,QAAQ,kBAAkBjE,IACzG,GAAI7H,EAAYqkC,WAAa1jC,EAAKxG,MAAMiQ,iBAAiB,CACvD,OAAQ8yG,EAAUj1G,QAChB,IAAK,UACHjI,EAAY2iB,WAAa,YACzB3iB,EAAY6iB,gBAAkB,CAC5BloB,MAAMgG,EAAKxG,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO2X,SAEtD,MACA,IAAK,WACH5f,EAAY2iB,WAAa,OACzB3iB,EAAY6iB,gBAAkB,CAC5BloB,MAAMgG,EAAKxG,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAMxD3f,EAAY6H,MAAQA,EACpB7H,EAAYiI,OAASi1G,EAAUj1G,OAC/BjI,EAAYszC,UAAY4pE,EAAUvpC,cAClC3zE,EAAYm9G,WAAaD,EAAUxpC,aACnCspC,EAA+Bh9G,EAAY2xB,WAAa3xB,EAE1D,OAAOg9G,GACP,MAIA5sE,0BACIuB,EAAkBl4C,OAAO8B,KAAK60C,EAAUxpC,eAAee,OAAO,SAAAE,GAAK,OAAMlH,EAAK1B,cAAc6I,MAAMsoC,EAAUxpC,cAAciB,GAAO8C,kBAAkBgB,GAAG,KAE5J/L,EAAS+xC,gBAAkBA,EAErBxnC,EAAyC,SAAhCjQ,KAAKC,MAAMiQ,iBAEtBkmC,EAASp2C,KAAK+E,cAAc6I,MAAM,GAClCgnF,EAAW50F,KAAK+E,cAAc6I,MAAM,GACpC0oC,EAAkBt2C,KAAK+E,cAAc6I,MAAM,GAC3Cs1G,EAAwBljH,KAAK+E,cAAc6I,MAAM,aAE/C5N,KAAK+E,cAAc6H,aAAa6qC,EAAhC,eAAA7/B,EAAArY,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAgD,SAAAoD,EAAOzC,GAAP,IAAA7H,EAAAo4B,EAAAC,EAAA2Z,EAAAxT,EAAAn3B,EAAA6qC,EAAAxR,EAAAuR,EAAAtT,EAAA,OAAAja,EAAApqB,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAC9CzH,EAAcwG,EAAgBqB,GADgB0C,EAAA9C,KAAA,EAO1CoK,QAAQqD,IAAI,CACpBvU,EAAK1B,cAAcozC,aAAaryC,GAChCW,EAAK1B,cAAcmiC,cAAcphC,EAAYmK,GAC7CxJ,EAAK1B,cAAcmzC,mBAAmBpyC,EAAYW,EAAKxG,MAAMuM,WAVX,cAAA0xB,EAAA7tB,EAAAE,KAAA4tB,EAAA5+B,OAAAouC,EAAA,EAAApuC,CAAA2+B,EAAA,GAIlD4Z,EAJkD3Z,EAAA,GAKlDmG,EALkDnG,EAAA,GAMlDhxB,EANkDgxB,EAAA,GAAA9tB,EAAA9C,KAAA,GAatB9G,EAAK1B,cAAcs7B,oBAAoBlzB,EAAWQ,EAAM7H,EAAYmK,GAb9C,QAa9C+nC,EAb8C3nC,EAAAE,KAe9Ci2B,EAAe0P,EAAUxpC,cAAciB,GAAO64B,aAC9CuR,EAAcvR,EAAavsB,IAAIi8B,EAAUQ,eACzCjS,EAAWqT,EAAUM,SAAW3xC,EAAK1B,cAAc6I,MAAMkqC,EAAUM,QAAQxpC,QAAUnI,EAAK1B,cAAc6I,MAAMkqC,EAAUM,QAAU3xC,EAAK1B,cAAc6I,MAAM,IAEnJgB,UACZwnC,EAASA,EAAO9nC,KAAKm2B,EAASn7B,MAAMyuC,MAGjCzT,EAAW11B,SAAW01B,EAAW7yB,GAAG,KACvCmjF,EAAWA,EAAStmF,KAAKg2B,EAAWh7B,MAAMk9B,IAC1C08E,EAAwBA,EAAsB50G,KAAKk4B,IAGjDwR,IACF1B,EAAkBA,EAAgBhoC,KAAK0pC,IA7BW,yBAAA3nC,EAAAxB,SAAAuB,EAAApQ,SAAhD,gBAAAwQ,GAAA,OAAAoH,EAAA7I,MAAA/O,KAAAgP,YAAA,mBAiCDk0G,EAAsBt0G,SAAWs0G,EAAsBzxG,GAAG,KAC7DmjF,EAAWA,EAAS36E,IAAIipG,cAMUljH,KAAK+E,cAAcurE,6BAA6BtwE,KAAKC,MAAMuM,QAAQF,EAAgB,sBAAjH62G,mBAC6BnjH,KAAK+E,cAAcu0F,yBAAyBt5F,KAAKC,MAAMuM,QAAQF,EAAgB,cAA5G82G,SACAC,EAA+BD,EAAuB7jH,OAAO8B,KAAK+hH,GAAsB5wG,IAAK,SAAAw5B,GACjG,IAAMv9B,EAAU20G,EAAqBp3E,GACrC,OAAIv9B,EAAQgD,GAAG,GACb,IAAAzH,OAAWyE,EAAQlF,QAAQ,GAA3B,KAAAS,OAAiCgiC,GAE1B,OAERv+B,OAAO,SAAA7G,GAAC,OAAW,OAANA,IAAe,KAE/BlB,EAAS0wC,OAASA,EAClB1wC,EAASkvF,SAAWA,EACpBlvF,EAASy9G,sBAAwBA,EACjCz9G,EAAS29G,6BAA+BA,UAG1C39G,EAAS87F,gBAAkBA,EAC3B97F,EAAS+oG,iBAAkB,EAErBkU,EAAkBpjH,OAAO8B,KAAKiL,GAAiBmB,OAAO,SAAAE,GAAK,OAAMjI,EAAS+xC,gBAAgBnvB,SAAS3a,KAAWpO,OAAO8B,KAAKqE,EAAS87F,iBAAiBl5E,SAAS3a,KACnKjI,EAASi9G,gBAAkBA,EAG3B3iH,KAAKwF,aAAaE,2BAGlB1F,KAAKwF,aAAa,CAChBg8F,gBAAgB,GAChB/pD,gBAAgB,GAChBg3D,iBAAgB,EAChBkU,gBAAgBpjH,OAAO8B,KAAKiL,yIAK1B,IAAAstB,EAAA55B,KACAqqG,EAAwC,WAA7BrqG,KAAKC,MAAMqqG,cACtBrnE,EAAYjjC,KAAK+E,cAAc6M,gBAAgB,CAAC,cAChD0xG,EAAUtjH,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,YACzD2xG,EAAYvjH,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,cAC3D4xG,EAAexjH,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,iBAC9D+hE,EAAoB3zE,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,gBAChE6mE,EAAqBz4E,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,iBAEvE,OACEuV,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CACEuD,GAAI,GAEHtE,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa5R,KAAKC,MAAMiQ,iBAAiB,UAHhF,aAMGlQ,KAAKwE,MAAMiqG,gBAiBVtnF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAGLK,KAAKC,MAAMuM,SAAWxM,KAAKwE,MAAMizC,gBAAgBn2C,OAAO,EACtD6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACPmd,GAAI,CAAC,EAAE,GACPta,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpc,GAAI,CAAC,EAAE,GACPrL,MAAO,CAAC,EAAE,EAAE,GACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,CAAC,EAAE,GACNuC,GAAG,CAAC,EAAE,GACN+C,QAAQ,OACR7E,WAAW,SACX5C,OAAO,CAAC,OAAO,SACf8C,eAAe,WAGjBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAKwE,MAAM4xC,OACTjvB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhmB,WAAY,EACZH,WAAY,CAAC,EAAE,GACfR,MAAO,YACP8G,WAAY,UACZrG,SAAU,CAAC,EAAE,SACboK,wBAAyB,CAAEC,OAAQvL,KAAKwE,MAAM4xC,OAAO7sC,QAAQ,GAAG,sBAIlE4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,SAGjBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,WAOA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE4iB,UAAW,SACX/b,QAASjuB,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,aAExDuV,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJhK,KAAM,OACNE,KAAM,MACNH,MAAO,mBAOnB0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpc,GAAI,CAAC,EAAE,GACPrL,MAAO,CAAC,EAAE,EAAE,GACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,CAAC,EAAE,GACNuC,GAAG,CAAC,EAAE,GACN+C,QAAQ,OACR7E,WAAW,SACX5C,OAAO,CAAC,OAAO,SACf8C,eAAe,WAGjBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAKwE,MAAM0xC,UACT/uB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC2vG,EAADzwG,OAAAC,OAAA,CACE8K,SAAU,GACNtK,KAAKC,MAFX,CAGEi2C,UAAWl2C,KAAKwE,MAAM0xC,aAExB/uB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IACP6C,WAAY,SACZE,eAAgB,YAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZsG,WAAYvH,KAAKC,MAAMsD,MAAMiE,MAAMuZ,QACnCtgB,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAJrD,IAMIzlB,KAAKwE,MAAM0xC,UAAUK,kBAAkBhtC,QAAQ,GANnD,MASF4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEsE,GAAI,EACJxqB,SAAU,EACVD,WAAY,EACZsG,WAAYvH,KAAKC,MAAMsD,MAAMiE,MAAMuZ,QACnCtgB,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WALrD,KAOA0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,IACP6C,WAAY,SACZE,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAAC4vG,EAAD1wG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEguG,KAAM,KACN3jG,SAAU,EACVwjG,aAAc,CACZ5sG,SAAS,GACTD,WAAW,IACXR,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpDywB,UAAWl2C,KAAKwE,MAAM0xC,gBAM9B/uB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,SAGjBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,iBAQET,KAAKwE,MAAM2+G,uBACTh8F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE4iB,UAAW,SACX/b,QAAS,8DAA8DjuB,KAAKwE,MAAM2+G,uBAAyBnjH,KAAKwE,MAAM2+G,sBAAsB1xG,GAAG,GAAxE,KAAAzH,OAAkFhK,KAAKwE,MAAM6+G,6BAA6Bz5G,KAAK,OAA/H,KAA2I,KAElNud,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJhK,KAAM,OACNE,KAAM,MACNH,MAAO,mBASvB0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,EAAE,GACZ8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,CAAC,EAAE,GACNuC,GAAG,CAAC,EAAE,GACN+C,QAAQ,OACR7E,WAAW,SACX5C,OAAO,CAAC,OAAO,SACf8C,eAAe,WAGjBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAKwE,MAAMowF,SACTztE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhmB,WAAY,EACZH,WAAY,CAAC,EAAE,GACfR,MAAO,YACP8G,WAAY,UACZrG,SAAU,CAAC,EAAE,SACboK,wBAAyB,CAAEC,OAAQvL,KAAKwE,MAAMowF,SAASrrF,QAAQ,MAIjE4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,SAGjBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAHT,kBAOA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE4iB,UAAW,SACX/b,QAASjuB,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,oBAExDuV,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJhK,KAAM,OACNE,KAAM,MACNH,MAAO,oBAQrB0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPsE,GAAI,mBACJvB,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,CAAC,EAAE,GACP3E,MAAO,CAAC,EAAE,MACV8C,cAAe,SACfwB,GAAI,yBAEJkjB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACEhnF,MAAO,cACPiI,WAAc7oB,KAAKC,MAAM6C,SAIrB,KAJgC,CAClCmI,MAAM,CACJokB,UAAU,UAIdlI,EAAA/mB,EAAAC,cAACojH,GAADlkH,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEwW,SAAU,6BAIhB0Q,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,MACV8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,KACEzgF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3O,GAAI,CAAC,EAAE,GACPzW,GAAI,CAAC,EAAE,GACPmuG,UAAW,SACX1tG,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,IACV8C,cAAe,SACfC,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CACEE,WAAY,EACZC,SAAU,CAAC,EAAE,GACbC,UAAW,QAHb,gBAQFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,CAAC,EAAE,GACPnd,MAAO,CAAC,EAAE,IACV8C,cAAe,SACfC,eAAgB,YAEhBykB,EAAA/mB,EAAAC,cAACmd,EAAA,EAAD,CACEW,WAAY,CACV1e,EAAE,EACFuC,GAAG,GAEL8b,aACE,CAAChX,MAAM,OAAO+C,MAAM,MAEtBnJ,KAAM,mBACNkd,QAAS,CACP,CAAC9W,MAAM,OAAO+C,MAAM,MACpB,CAAC/C,MAAM,QAAQ+C,MAAM,MACrB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,MAAM+C,MAAM,QAErB+V,SAAW,SAAAhZ,GAAC,OAAIgzB,EAAKw2E,iCAAiCxpG,QAI5DugB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,CAAC,EAAE,GACPylG,UAAW,SACXztG,eAAgB,SAChBuB,GAAI,yBAEJkjB,EAAA/mB,EAAAC,cAACmL,GAAA,EAADjM,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgM,cAAe,GACfwK,SAAU,wBACVC,eAAgB,wBAChB5K,mBAAoB9L,KAAKwE,MAAMmqG,8BAC/Bt8F,iBAAkBrS,KAAK+E,cAAc8jC,oBAAoB,MAAM,WAQ3E1hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJonB,GAAI,OACJ/rB,MAAO,CAAC,EAAE,IACVwwG,UAAW,SACXztG,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbC,UAAW,UAGTnB,KAAKC,MAAM6C,SACT9C,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa5R,KAAKC,MAAMiQ,iBAAiB,cAE7ElQ,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa5R,KAAKC,MAAMiQ,iBAAiB,gBAOtFm6F,GAAYrqG,KAAKwE,MAAMizC,gBAAgBn2C,OAAO,GAAKtB,KAAKC,MAAMuM,SAAWmnE,EAAkB9oD,SAC1F1D,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACPsE,GAAI,QACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE+M,GAAI,EACJx0B,MAAO,EACP2E,GAAI,CAAC,EAAE,GACPiE,YAAa,UACbmgG,aAAc,yBAEdvhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQghF,GAAT,CACElnG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,UAOFkmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,CAAC,SAAS,QAGvB,CAAC,WAAW,cAAc,aAAa+P,IAAK,SAACkxG,EAASC,GACpD,IAAMC,EAAahqF,EAAK70B,cAAc6M,gBAAgB,CAAC,QAAQ8xG,IAC/D,OACEv8F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,EAAE,GACZoE,IAAG,QAAAiG,OAAU25G,GACbr/G,GAAIq/G,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1B34G,GAAI24G,EAAU,EAAI,CAAC,EAAE,GAAK,GAE1Bx8F,EAAA/mB,EAAAC,cAACwjH,GAADtkH,OAAAC,OAAA,GACMo6B,EAAK35B,MADX,CAEEgD,KAAM2gH,EAAW3gH,KACjBY,KAAM+/G,EAAWvvF,KACjB1xB,MAAOihH,EAAWjhH,MAClBie,MAAOgjG,EAAW/5G,MAClBtJ,YAAc,SAAAiG,GAAC,OAAIozB,EAAK35B,MAAMivG,YAAX,SAAAllG,OAAgC45G,EAAWxhF,iBAW9EuxC,EAAkB9oD,SAAW7qB,KAAKwE,MAAM0xC,WAAal2C,KAAKwE,MAAM0xC,UAAUQ,aAAajlC,GAAG,IACxF0V,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPsE,GAAI,mBACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACyjH,GAAA,EAADvkH,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE2gB,MAAO,WACPiI,WAAY,CACVtmB,GAAG,OAOXvC,KAAKwE,MAAMk0E,iBACTvxD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP2E,GAAI,CAAC,EAAE,GACPL,GAAI,mBACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CAAOwB,GAAI,CAAC,EAAE,IAAd,oBACA4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC0jH,GAAA,EAADxkH,OAAAC,OAAA,CACEyM,cAAe1M,OAAO8B,KAAKrB,KAAKwE,MAAMs+G,gCACtCx7F,KAAM,CACJ,CACE1G,MAAM,QACN3gB,MAAM,CACJN,MAAM,CAAC,GAAI,KAEbspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,WAGpB,CACEc,KAAK,eAIX,CACEyoB,QAAO,EACPvI,MAAM,YACN3gB,MAAM,CACJN,MAAM,CAAC,IAAM,MAEfspB,OAAO,CACL,CACEvoB,KAAK,SACLkK,KAAK,SACLse,KAAK,CAAC,aACNjpB,MAAM,CACJqK,SAAU,IAGd,CACE5J,KAAK,YACLT,MAAM,CACJyK,GAAG,MAKX,CACEkW,MAAM,aACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,SACLkK,KAAK,SACLse,KAAK,CAAC,cACNjpB,MAAM,CACJqK,SAAU,IAGd,CACEM,KAAK,OACLlK,KAAK,SACLwoB,KAAK,CAAC,SACNjpB,MAAM,CACJyK,GAAG,MAKX,CACEkW,MAAM,SACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEre,KAAK,OACLue,QAAO,EACPzoB,KAAK,SACLwoB,KAAK,CAAC,cACNjpB,MAAM,CACJmD,GAAG,EACHxC,KAAKZ,KAAKC,MAAM6C,SAAW,QAAU,UAGzC,CACEpC,KAAK,SACLwoB,KAAK,CAAC,UACNjpB,MAAM,CACJgL,MAAM,CACJI,cAAc,kBAMxB,CACEuV,MAAM,GACNuI,OAA8B,OAAvBnpB,KAAKC,MAAMuM,QAClBvM,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdypB,YAAY,CACVzpB,MAAM,GAERspB,OAAO,CACL,CACEvoB,KAAK,SACLmJ,MAAM,QACNwf,UAAU,CACRtpB,SAAS,SAACE,GAAD,MAAyC,YAA7BA,EAAM6F,YAAYiI,SAEzC9N,MAAM,CACJN,MAAM,EACNuB,SAAS,EACTD,WAAW,EACXrB,OAAO,OACPC,aAAa,EACbye,UAAU,KACVxe,UAAU,UACVc,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,SACtCvC,YAAY,SAACN,GAAD,OAAW25B,EAAK35B,MAAMivG,YAAX,SAAAllG,OAAgCyuE,EAAmBr2C,MAAnD,KAAAp4B,OAA4D/J,EAAM6F,YAAY6H,eAM3G3N,KAAKC,MAhIX,CAiIEqM,gBAAiBtM,KAAKwE,MAAMs+G,oCAMtC37F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPsE,GAAI,mBACJxB,cAAe,SACf6B,GAAKtE,KAAKwE,MAAMizC,gBAAgBn2C,OAAa,EAAJ,IAGtCtB,KAAKwE,MAAMizC,gBAAgBn2C,OAAO,GAAK/B,OAAO8B,KAAKrB,KAAKwE,MAAMg9F,iBAAiBlgG,OAAO,GAAKtB,KAAKwE,MAAMm+G,gBAAgBrhH,OAAO,IAC5H6lB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CAAOwB,GAAI,CAAC,EAAE,IAAd,oBAEJ4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,EAAG8C,cAAe,UAE3BlD,OAAO8B,KAAKrB,KAAKwE,MAAMg9F,iBAAiBlgG,OAAO,GAC/C6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP2E,GAAI,CAAC,EAAE,GACPL,GAAI,iBACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE+M,GAAI,EACJx0B,MAAO,EACP2E,GAAI,CAAC,EAAE,GACPiE,YAAa,UACbmgG,aAAc,yBAEdvhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQghF,GAAT,CACElnG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,sBAOFkmB,EAAA/mB,EAAAC,cAAC0jH,GAAA,EAADxkH,OAAAC,OAAA,CACEyM,cAAe1M,OAAO8B,KAAKrB,KAAKwE,MAAMg9F,iBACtCjhG,YAAa,SAACN,GAAD,OAAW25B,EAAK35B,MAAM8vB,YAAY9vB,EAAM0N,QACrD2Z,KAAM,CACJ,CACE1G,MAAM,WACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,WAGpB,CACEc,KAAK,eAIX,CACEkgB,MAAM,OACNuI,OAA8B,OAAvBnpB,KAAKC,MAAMuM,QAClBvM,MAAM,CACJN,MAAM,CAAC,IAAM,MAEfspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJqK,SAAS,MAKjB,CACEsW,MAAM,MACNyT,KAAKivF,EACLrjH,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdypB,YAAY,CACV3mB,cAAc,SACdD,WAAW,cAEbymB,OAAO,CACL,CACEvoB,KAAK,MACLunC,aAAY,GAEd,CACEvnC,KAAK,mBACLoK,YAAW,EACX7K,MAAM,CACJqK,SAAStK,KAAKC,MAAM6C,SAAW,EAAI,EACnC5B,SAASlB,KAAKC,MAAM6C,SAAW,MAAQ,MAK/C,CACE8d,MAAM,QACNyT,KAAKkvF,EACLtjH,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,WAIX,CACEkgB,MAAM,UACNuI,QAAO,EACPlpB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdypB,YAAY,CACVzpB,MAAM,EACNqL,GAAG,CAAC,EAAE,IAERie,OAAO,CACL,CACEvoB,KAAK,qBAIX,CACEyoB,QAAO,EACPvI,MAAM,UACNyT,KAAKmvF,EACLvjH,MAAM,CACJN,MAAM,CAAC,IAAK,KACZwB,UAAU,UAEZ8nB,OAAO,CACL,CACEvoB,KAAK,eAIX,CACEkgB,MAAM,GACNuI,OAA8B,OAAvBnpB,KAAKC,MAAMuM,QAClBvM,MAAM,CACJN,MAAM,CAAyB,OAAvBK,KAAKC,MAAMuM,QAAmB,IAAO,EAAG,MAElD4c,YAAY,CACVzpB,MAAM,GAERspB,OAAO,CACL,CACEvoB,KAAK,SACLmJ,MAAO,UACP5J,MAAM,CACJN,MAAM,EACNuB,SAAS,EACTD,WAAW,EACXrB,OAAO,OACPC,aAAa,EACbye,UAAU,KACVxe,UAAU,UACVc,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,SACtCvC,YAAY,SAACN,GAAD,OAAW25B,EAAK35B,MAAM8vB,YAAY9vB,EAAM0N,cAM1D3N,KAAKC,SAKfD,KAAKwE,MAAMizC,gBAAgBn2C,OAAO,GAChC6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAKtE,KAAKwE,MAAMm+G,gBAAgBrhH,OAAO,EAAI,CAAC,EAAE,GAAK,EACnD3B,MAAO,EACPsE,GAAI,mBACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE+M,GAAI,EACJx0B,MAAO,EACP2E,GAAI,CAAC,EAAE,GACPiE,YAAa,UACbmgG,aAAc,yBAEdvhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQghF,GAAT,CACElnG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOFkmB,EAAA/mB,EAAAC,cAAC0jH,GAAA,EAADxkH,OAAAC,OAAA,CACEyM,cAAejM,KAAKwE,MAAMizC,gBAC1Bl3C,YAAa,SAACN,GAAD,OAAW25B,EAAK35B,MAAM8vB,YAAY9vB,EAAM0N,QACrD2Z,KAAM,CACJ,CACE1G,MAAM,WACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,WAGpB,CACEc,KAAK,eAIX,CACEkgB,MAAM,OACNuI,QAAO,EACPlpB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJqK,SAAS,MAKjB,CACEsW,MAAM,MACNyT,KAAKivF,EACLrjH,MAAM,CACJN,MAAM,CAAC,GAAK,MAEdypB,YAAY,CACV3mB,cAAc,SACdD,WAAW,cAEbymB,OAAO,CACL,CACEvoB,KAAK,MACLunC,aAAY,GAEd,CACEvnC,KAAK,mBACLoK,YAAW,EACX7K,MAAM,CACJqK,SAAStK,KAAKC,MAAM6C,SAAW,EAAI,EACnC5B,SAASlB,KAAKC,MAAM6C,SAAW,MAAQ,MAK/C,CACE8d,MAAM,QACNyT,KAAKkvF,EACLtjH,MAAM,CACJN,MAAM,CAAC,IAAK,KAEdypB,YAAY,CACV5mB,WAAW,CAAC,SAAS,eAEvBymB,OAAO,CACL,CACEvoB,KAAK,WAIX,CACEkgB,MAAM,YACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,gBAIX,CACEyoB,QAAO,EACPvI,MAAM,UACNyT,KAAKmvF,EACLvjH,MAAM,CACJN,MAAM,CAAC,IAAK,KACZwB,UAAU,UAEZ8nB,OAAO,CACL,CACEvoB,KAAK,YACLT,MAAM,CACJqK,SAAS,MAKjB,CACE6e,QAAO,EACPvI,MAAM,WACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZwB,UAAU,UAEZioB,YAAY,CACV5mB,WAAW,SACXC,cAAc,UAEhBwmB,OAAO,CACL,CACEvoB,KAAK,WACLT,MAAM,CACJqK,SAAS,IAGb,CACE5J,KAAK,eACLoK,YAAW,EACXygC,eAAc,EACdtrC,MAAM,CACJiB,SAAS,EACToJ,SAAS,MAkBjB,CACEsW,MAAM,GACNuI,QAAO,EACPlpB,MAAM,CACJN,MAAM,KAERypB,YAAY,CACVzpB,MAAM,GAERspB,OAAO,CACL,CACEvoB,KAAK,SACLmJ,MAAM,SACN5J,MAAM,CACJN,MAAM,EACNuB,SAAS,EACTD,WAAW,EACXrB,OAAO,OACPC,aAAa,EACbye,UAAU,KACVxe,UAAU,SACVc,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,SACtCvC,YAAY,SAACN,GAAD,OAAW25B,EAAK35B,MAAM8vB,YAAY9vB,EAAM0N,cAM1D3N,KAAKC,SAKbD,KAAKwE,MAAMm+G,gBAAgBrhH,OAAO,GAClC6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnjB,GAAG,mBAAmBtE,MAAO,EAAG8C,cAAe,UACnD0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE+M,GAAI,EACJx0B,MAAO,EACP2E,GAAI,CAAC,EAAE,GACPiE,YAAa,UACbmgG,aAAc,yBAEdvhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQghF,GAAT,CACElnG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOFkmB,EAAA/mB,EAAAC,cAAC0jH,GAAA,EAADxkH,OAAAC,OAAA,CACEyM,cAAejM,KAAKwE,MAAMm+G,gBAC1BpiH,YAAa,SAACN,GAAD,OAAW25B,EAAK35B,MAAM8vB,YAAY9vB,EAAM0N,QACrD2Z,KAAM,CACJ,CACE1G,MAAM,WACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,WAGpB,CACEc,KAAK,eAIX,CACEkgB,MAAM,OACNuI,OAA8B,OAAvBnpB,KAAKC,MAAMuM,QAClBvM,MAAM,CACJN,MAAM,CAAC,IAAM,KAEfspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJqK,SAAS,MAKjB,CACEsW,MAAM,MACNyT,KAAKivF,EACLrjH,MAAM,CACJN,MAAM,CAAC,KAAKK,KAAKwE,MAAMizC,gBAAgBn2C,OAAW,OAEpD8nB,YAAY,CACV3mB,cAAc,SACdD,WAAW,cAEbymB,OAAO,CACL,CACEvoB,KAAK,MACLunC,aAAY,GAEd,CACEvnC,KAAK,mBACLoK,YAAW,EACX7K,MAAM,CACJqK,SAAStK,KAAKC,MAAM6C,SAAW,EAAI,EACnC5B,SAASlB,KAAKC,MAAM6C,SAAW,MAAQ,MAK/C,CACE8d,MAAM,QACNyT,KAAKkvF,EACLtjH,MAAM,CACJN,MAAM,CAAC,IAAK,KAEdspB,OAAO,CACL,CACEvoB,KAAK,WAIX,CACEyoB,QAAO,EACPvI,MAAM,UACNyT,KAAKmvF,EACLvjH,MAAM,CACJN,MAAM,CAAC,IAAK,KACZwB,UAAU,UAEZ8nB,OAAO,CACL,CACEvoB,KAAK,YACLT,MAAM,CACJqK,SAAS,MAKjB,CACEsW,MAAM,gBACNuI,QAAO,EACPlpB,MAAM,CACJN,MAAM,KAERypB,YAAY,CACVzpB,MAAM,EACNqL,GAAG,CAAC,EAAE,IAERie,OAAO,CACL,CACEvoB,KAAK,WACLuK,MAAM,CACJ+lB,SAAS,cAKjB,CACEpQ,MAAM,GACNuI,OAA8B,OAAvBnpB,KAAKC,MAAMuM,QAClBvM,MAAM,CACJN,MAAM,CAAyB,OAAvBK,KAAKC,MAAMuM,QAAmB,IAAO,EAAI,MAEnD4c,YAAY,CACVzpB,MAAM,GAERspB,OAAO,CACL,CACEvoB,KAAK,SACLmJ,MAAO,SAAC5J,GACN,OAAOV,OAAO8B,KAAKu4B,EAAKp1B,MAAMg9F,iBAAiBl5E,SAASroB,EAAM0N,OAAS,UAAY,WAErF1N,MAAM,CACJN,MAAM,EACNuB,SAAS,EACTD,WAAW,EACXrB,OAAO,OACPC,aAAa,EACbye,UAAU,KACV1d,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,SACtCvC,YAAY,SAACN,GAAD,OAAW25B,EAAK35B,MAAM8vB,YAAY9vB,EAAM0N,SAEtD0b,UAAU,CACRvpB,UAAW,SAACG,GACV,OAAOV,OAAO8B,KAAKu4B,EAAKp1B,MAAMg9F,iBAAiBl5E,SAASroB,EAAM0N,OAAS,UAAY,iBAO3F3N,KAAKC,WAOjBD,KAAKwE,MAAMizC,gBAAgBn2C,OAAO,GAChC6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPsE,GAAI,gBACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CAAOwB,GAAI,CAAC,EAAE,IAAd,iBACA4kB,EAAA/mB,EAAAC,cAAC0jH,GAAA,EAADxkH,OAAAC,OAAA,CACEyM,cAAe1M,OAAO8B,KAAK4hC,GAAWx1B,OAAQ,SAAAu+B,GAAQ,OAAI/I,EAAU+I,GAAUnhB,UAC9EvD,KAAM,CACJ,CACE1G,MAAM,QACN3gB,MAAM,CACJN,MAAM,CAAC,GAAI,MAEbspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,CAAC,QAAQ,WAGpB,CACEc,KAAK,eAIX,CACEyoB,QAAO,EACPvI,MAAM,UACN3gB,MAAM,CACJN,MAAM,CAAC,IAAM,MAEfspB,OAAO,CACL,CACEvoB,KAAK,eACLT,MAAM,CACJqK,SAAUtK,KAAKC,MAAM6C,SAAW,EAAI,MAK5C,CACE8d,MAAM,aACNyT,KAAKr0B,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,8BACpD3R,MAAM,CACJN,MAAM,CAAC,IAAK,IACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,oBACLT,MAAM,CACJqK,SAAUtK,KAAKC,MAAM6C,SAAW,EAAI,MAK5C,CACE8d,MAAM,eACNyT,KAAKr0B,KAAK+E,cAAc6M,gBAAgB,CAAC,WAAW,0BACpD3R,MAAM,CACJN,MAAM,CAAC,IAAK,KAEdspB,OAAO,CACL,CACEvoB,KAAK,wBACLT,MAAM,CACJqK,SAAS,QAgDftK,KAAKC,MA9GX,CA+GEqM,gBAAiB22B,MAKvBjjC,KAAKwE,MAAMizC,gBAAgBn2C,OAAO,GAChC6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPsE,GAAG,sBACHxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CAAOwB,GAAI,CAAC,EAAE,IAAd,sBACA4kB,EAAA/mB,EAAAC,cAAC2jH,GAADzkH,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgM,cAAejM,KAAKwE,MAAMizC,oBAKhCz3C,KAAKC,MAAMuM,SAAWxM,KAAKwE,MAAMizC,gBAAgBn2C,OAAO,GACtD6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,CAAC,EAAE,GACP3E,MAAO,EACPsE,GAAI,eACJxB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACU,EAAA,EAAD,CAAOwB,GAAI,CAAC,EAAE,IAAd,gBACA4kB,EAAA/mB,EAAAC,cAACosG,EAAA,EAADltG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgM,cAAe,GACfqb,KAAM,CACJ,CACE1G,MAAO5gB,KAAKC,MAAM6C,SAAW,GAAK,OAClC7C,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,OACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,KAGV,CACE1C,KAAK,OACLyoB,QAAO,KAIb,CACEvI,MAAM,SACNuI,QAAO,EACPlpB,MAAM,CACJN,MAAM,KAERspB,OAAO,CACL,CACEvoB,KAAK,YAIX,CACEkgB,MAAM,OACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,MAEdspB,OAAO,CACL,CACEvoB,KAAK,UAIX,CACEkgB,MAAM,SACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,KACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,aACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,KAGV,CACE+lB,QAAO,EACPzoB,KAAK,YAIX,CACEkgB,MAAM,SACN3gB,MAAM,CACJN,MAAM,KAERspB,OAAO,CACL,CACEvoB,KAAK,YAIX,CACEkgB,MAAM,QACN3gB,MAAM,CACJN,MAAM,CAAC,IAAK,IACZ+C,eAAe,CAAC,SAAS,eAE3BumB,OAAO,CACL,CACEvoB,KAAK,YACLT,MAAM,CACJmD,GAAG,CAAC,EAAE,GACNxD,OAAO,CAAC,QAAQ,WAGpB,CACEupB,QAAO,EACPzoB,KAAK,qBA32CvBymB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACEn/B,UAAW,CACT4sG,SAAS,EACTvvG,WAAW,GAEbob,YAAa,CACX/X,GAAG,EACH1D,KAAK,QAEP2b,UAAW,CACT8S,UAAU,OACV5sB,cAAc,UAEhBoB,KAAM,iCA7PO/C,mDC0wCZmjH,8MA/vCbz/G,MAAQ,CACN0/G,UAAS,EACT3qC,YAAY,GACZ4qC,YAAW,EACX91G,OAAO,UACPorE,cAAc,GACd3zE,YAAY,KACZkR,WAAW,CACTsc,QAAQ,CACN9Y,OAAO,KACP0X,SAAQ,GAEVmlD,MAAM,CACJ78D,OAAO,KACP0X,SAAQ,IAGZgJ,WAAU,EACVs+C,aAAa,GACbE,cAAc,KACd0vB,eAAc,EACdgb,cAAa,EACbC,cAAa,EACb9+G,cAAc,KACd8jG,eAAc,EACdtwB,eAAe,KACfurC,gBAAe,EACfC,gBAAe,EACfj4G,gBAAgB,KAChB4D,iBAAiB,KACjBs0G,iBAAgB,EAChBC,kBAAiB,EACjBlpF,kBAAiB,EACjBmpF,oBAAmB,EACnBz3C,oBAAoB,KACpBr+B,oBAAoB,KACpB+1E,qBAAoB,EACpB9oF,2BAA0B,EAC1B+0E,2BAA2B,QAI7B7rG,cAAgB,OA+ZhB+2B,UAAY,SAACztB,GACX,GAAe,OAAXA,GAAmB,CAAC,UAAU,UAAUia,SAASja,EAAOlF,eAAe,CAEzEnI,EAAK4E,SAAS,CACZyI,SACAq2G,oBAHyB,QAc/B7lF,yBAA2B,SAACtD,GAC1Bv6B,EAAK4E,SAAS,CACZ21B,wBAIJ0E,kBAAoB,SAACvyB,GACnB1M,EAAK4jH,aAAY,+EAnbb5kH,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAK6kH,sMAGkBx/G,EAAUC,sFACjCtF,KAAKmF,YAEoBE,EAAUypG,UAAUG,SAAWjvG,KAAKC,MAAM6uG,UAAUG,QAE3EjvG,KAAK4F,SAAS,CACZ4+G,iBAAgB,GADlBjlH,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAEE,SAAA8K,IAAA,OAAA0S,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cAAA0K,EAAA1K,KAAA,EACM9H,EAAKwrG,aADX,wBAAAh5F,EAAApJ,SAAAiJ,EAAA9X,UAK4BsF,EAAU4K,mBAAqBlQ,KAAKwE,MAAM0L,mBAElE3K,EAAgBhG,OAAO8B,KAAKrB,KAAKwE,MAAM8H,iBAAiB,GAC9DtM,KAAKg4B,YAAYzyB,IAGbmY,EAAuBpY,EAAUC,gBAAkBvF,KAAKwE,MAAMe,cAC9Du/G,EAA0Bx/G,EAAUm/G,mBAAqBzkH,KAAKwE,MAAMigH,iBACpEzS,EAA0B1sG,EAAUu2B,4BAA8B77B,KAAKwE,MAAMq3B,2BAC/Ene,GAAwBs0F,GAA2B8S,IACrD9kH,KAAK4kH,6QAOS,EAEVG,EAAkB,SAACr3G,EAAGmJ,GAC1B,IAAMqmB,EAA4B,YAAdxvB,EAAGK,OAGjBskB,EAAY,CAChBxI,YAAa,UACbD,cAAe,gBAGb/S,IACFwb,EAAUvI,WAAarjB,EAAK1B,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrBtH,EAAK1B,cAAc4kB,yBAAyB0I,GAG9C5rB,EAAKb,SAAS,SAACN,GAAD,MAAgB,CAC5Bm/G,iBAAiBvnF,EACjBlmB,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERsc,QAAQ,CACN9Y,OAAO,KACP0X,SAAQ,SAMV8yF,EAAyB,SAACt3G,GAC9B,IAAM8M,EAAS9M,EAAGglB,gBAClBjsB,EAAKb,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERsc,QAAQ/zB,OAAAsmD,EAAA,EAAAtmD,CAAA,GACH+F,EAAU0R,WAAWsc,QADnB,CAEL9Y,iBAMRxa,KAAKC,MAAM8yB,0BAA0B/yB,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAM,eAAgB,EAAC,GAAO,KAAMqkH,EAAiBC,GAE3IhlH,KAAK4F,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERsc,QAAQ/zB,OAAAsmD,EAAA,EAAAtmD,CAAA,GACH+F,EAAU0R,WAAWsc,QADnB,CAELpB,SApDU,oUA0DAwyF,kCAEVpnF,EAAwBt9B,KAAKwE,MAAMyoE,oBAAoBxvC,2BAEvD9lB,QAAQqD,IAAI,CAChBhb,KAAKC,MAAMq+B,aAAahB,EAAsB58B,KAAK48B,EAAsBp0B,QAAQo0B,EAAsBe,KACvGr+B,KAAKC,MAAMq+B,aAAat+B,KAAKwE,MAAMsB,YAAYpF,KAAKV,KAAKwE,MAAMsB,YAAYoD,QAAQlJ,KAAKwE,MAAMsB,YAAYu4B,8BAOlG1mB,QAAQqD,IAAI,CACpBhb,KAAK+E,cAAckzE,4BAA4B36C,EAAsBp0B,SACrElJ,KAAK+E,cAAc05B,oBAAoBz+B,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAK,aAC7FV,KAAK+E,cAAc44B,mBAAmB39B,KAAKwE,MAAMsB,YAAYpF,KAAK48B,EAAsBp0B,QAAQlJ,KAAKC,MAAMuM,8CAN3G2sE,OACAJ,OACAl9C,OAQEX,GAAY,GACXW,GAA6ByB,EAAsBoD,WAAwD,IAA3CpD,EAAsBoD,UAAUp/B,SAC7F0+B,EAAe1C,EAAsBoD,UAAU,GACrDxF,EAA8C,qBAA3B8E,EAAa9E,WAA4B8E,EAAa9E,UACnEipC,EAAcnkE,KAAK+E,cAAc6M,gBAAgB,CAAC,SAAS5R,KAAKwE,MAAMsB,YAAYpF,KAAK,gBACvFq/B,EAAiB//B,KAAK+E,cAAc24B,kBAAkB19B,KAAKwE,MAAMsB,YAAYpF,MACnFw6B,EAAYA,GAAa6E,KAAoBokC,QAAuD73C,IAAxCyT,EAAevG,QAAQ2qC,KAG/Ez+D,EAAW,GACX6zE,EAAc,GACdC,EAAe,GACfC,EAAgB,GAClB6qC,GAAiB,EAErBvrC,EAAiBA,GAAkB,EAC1BC,EAAa,eAAGA,GAAc9qE,SAAS6qE,sCAKpCphE,QAAQqD,IAAI,CACpBhb,KAAK+E,cAAc05B,oBAAoBz+B,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAK,cAAc,CAACs4E,IAC5Gh5E,KAAK+E,cAAc05B,oBAAoBz+B,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAK,sBAAsB,CAACs4E,IACpHh5E,KAAK+E,cAAc05B,oBAAoBz+B,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAK,gBAAgB,CAACV,KAAKC,MAAMuM,QAAQwsE,0CANjII,OACAC,OACAC,OAMEF,GAA6B,OAAfA,IAChBG,EAAYP,GAAch5E,KAAK+E,cAAcsM,iBAAiB+nE,EAAWp5E,KAAKwE,MAAMsB,YAAYwE,WAE7E,OAAjBgvE,IACFD,EAAcr5E,KAAK+E,cAAcsM,iBAAiBgoE,EAAY,KAC9DC,EAAet5E,KAAK+E,cAAcsM,iBAAiBioE,EAAat5E,KAAKwE,MAAMsB,YAAYwE,WACtEmH,GAAG,KAClBgoE,EAAcT,GAAcM,EAE5BE,EAAaR,GAAcM,EAAahwE,MAAM+vE,GAAap/D,IAAIs/D,EAAYP,IACvEQ,EAAaR,GAAYvnE,GAAG4nE,KAC9BG,EAAaR,GAAcK,GAGzBL,EAAaD,IACfurC,GAAiB,aAzByCtrC,4BA+BlEtzE,EAAS+zE,cAAgBA,EAEnB2qC,EAAgB3qC,GAAiBl6E,OAAO8B,KAAKo4E,GAAen4E,OAAO,EAEnEo4E,EAAgBP,GAAmBA,EAAgB73E,OAAS63E,EAAgB,GAAK,KACjF8rC,EAAmBjlH,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,iBAC/D+yG,EAAsBM,EAAiB3jF,eAE7C57B,EAASw1B,UAAYA,EACrBx1B,EAAS2jG,eAAgB,EACzB3jG,EAAS6+G,gBAAiB,EAC1B7+G,EAAS8+G,iBAAkB,EAC3B9+G,EAAS++G,kBAAmB,EAC5B/+G,EAAS6zE,YAAcA,EACvB7zE,EAAS0+G,aAAeA,EACxB1+G,EAAS8zE,aAAeA,EACxB9zE,EAASg0E,cAAgBA,EACzBh0E,EAASqzE,eAAiBA,EAC1BrzE,EAAS4+G,eAAiBA,EAC1B5+G,EAASg/G,mBAAqBA,EAC9Bh/G,EAASi/G,oBAAsBA,EAC/Bj/G,EAASw+G,SAAWI,GAAkBF,EAEtC1+G,EAASy+G,WAAaQ,IAAwBL,EAC9C5+G,EAASm2B,0BAA4BA,EACrCn2B,EAAS2I,OAAS+1G,GAAgB1+G,EAASw+G,SAAW,SAAW,UAEjElkH,KAAK4F,SAASF,mRAMRw/G,EAA0B,YAC1BllH,KAAK+E,cAAc6H,aAAarN,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAjE,eAAAi3B,EAAAhkC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAkF,SAAA4M,EAAOjM,GAAP,IAAA7H,EAAA,OAAA0kB,EAAApqB,EAAAgN,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,UAChFzH,EAAc8zB,EAAK35B,MAAMuoG,UAAUl8F,gBAAgBqB,GACnCisB,EAAK70B,cAAc24B,kBAAkB53B,EAAY6H,SACjD7H,EAAYu4B,IAHoD,CAAAtkB,EAAAxM,KAAA,eAAAwM,EAAAxM,KAAA,EAI9EqsB,EAAK35B,MAAMq+B,aAAax4B,EAAY6H,MAAM7H,EAAYoD,QAAQpD,EAAYu4B,KAJI,OAMtF6mF,EAAwBp/G,EAAYqkC,WAAY,EANsC,wBAAApwB,EAAAlL,SAAA+K,EAAA5Z,SAAlF,gBAAA8O,GAAA,OAAAy0B,EAAAx0B,MAAA/O,KAAAgP,YAAA,YASA4/B,EAAsBrvC,OAAO8B,KAAK6jH,GAAyB1yG,IAAK,SAAA23B,GACpE,IAAM++B,EAAiBtvC,EAAK70B,cAAc6M,gBAAgB,CAAC,aAAau4B,IACxE,MAAO,CACLrjC,MAAMqjC,EACNlnC,KAAKimE,EAAejmE,KACpB4G,MAAMq/D,EAAetoD,WAMEguB,EAAoBttC,OAAO,IAChD4O,EAAmB0+B,EAAoB,GAAG9nC,OAC1CvB,EAAgBvF,KAAKC,MAAM6uG,UAAUG,QAAUjvG,KAAKC,MAAMuoG,UAAUl8F,gBAAgBtM,KAAKC,MAAM6uG,UAAUG,QAAUjvG,KAAKC,MAAM6uG,UAAUG,OAAS,QAE7IhiC,EAAsBjtE,KAAKC,MAAMuoG,UAAUl8F,gBAAgB/G,GACjEA,EAAgB0nE,EAAoBx1C,UACpCvnB,EAAmB+8D,EAAoB9iC,UAGzCnqC,KAAK4F,SAAS,CACZgpC,uBACA,WACAhV,EAAKurF,eAAej1G,EAAiB3K,uLAcrB2K,8FAAiB3K,iCAAc,KAC7C+G,EAAkB/M,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBACtDmB,OAAO,SAAA1J,GAAG,OAAI6rG,EAAK3vG,MAAMuoG,UAAUl8F,gBAAgBvI,GAAKomC,WAAaj6B,IACrEsqC,OAAO,SAAC4qE,EAAKrhH,GACZ,IAAM+B,EAAc8pG,EAAK3vG,MAAMuoG,UAAUl8F,gBAAgBvI,GACnDkjD,EAAkB2oD,EAAK3vG,MAAM2uC,oBAAoB1+B,GAAkBpK,EAAY2xB,WAOrF,OALA3xB,EAAYu4B,IAAM4oB,EAAgB5oB,IAClCv4B,EAAY6H,MAAQs5C,EAAgBt5C,MACpC7H,EAAYoD,QAAU+9C,EAAgB/9C,QACtCpD,EAAYwE,SAAW28C,EAAgB38C,SACvC86G,EAAIt/G,EAAY2xB,WAAa3xB,EACtBs/G,GACN,IAELplH,KAAK4F,SAAS,CACZ0G,kBACA4D,oBACA,WACI3K,GACFqqG,EAAK53E,YAAYzyB,oLAKJA,iGACX0nE,EAAsBjtE,KAAKwE,MAAM8H,gBAAgB/G,GACjD8/G,EAA0BrlH,KAAKC,MAAM2uC,oBAAoBq+B,EAAoB9iC,UAE7E8c,EAAkBo+D,EAAwBp4C,EAAoBt/D,QAE9D7H,EAAc,CAClBpF,KAAKumD,EAAgBt5C,MACrBA,MAAMs5C,EAAgBt5C,MACtBzE,QAAQ+9C,EAAgB/9C,QACxBoB,SAAS28C,EAAgB38C,WAIfi2B,KAAO0mB,EAAgB1mB,KAG7BvD,EAAc,CAClBqB,IAAI4oB,EAAgB5oB,IACpB39B,KAAKumD,EAAgBt5C,MACrBA,MAAMs5C,EAAgBt5C,MACtBzE,QAAQ+9C,EAAgB/9C,SAGpBu0B,EAAoBwvC,EAAoBxvC,kBAG1CwpB,EAAgBq+D,kBAClB7nF,EAAkBiD,UAAU,GAAGhgC,KAAOumD,EAAgBq+D,iBAGxDx/G,EAAYi3B,UAAY,CACtBlS,SAAQ,EACRmS,cACAS,oBACAinF,oBAAmB,aAGf1kH,KAAKC,MAAMslH,iBAAiBt4C,EAAoB9iC,SAAS8c,EAAgBt5C,eAE/E3N,KAAK4F,SAAS,CACZE,cACAP,gBACA0nE,uBACA,WAEA,GAAIA,EAAoB9iC,WAAayqE,EAAKpwG,MAAM0L,iBAAiB,CAC/D,IAAMA,EAAmB+8D,EAAoB9iC,SAC7CyqE,EAAKuQ,eAAej1G,sQAMnBlQ,KAAKwE,MAAM8/G,wDACP,cAGO,EACO,EACjBkB,EAAUjmH,OAAO8B,KAAKrB,KAAKwE,MAAMi1E,eAAe,GAEhDgsC,EAAgB,SAAC/3G,EAAGmJ,GACxB,IAAMqmB,EAA4B,YAAdxvB,EAAGK,OAGjBskB,EAAY,CAChBxI,YAAa,QACbD,cAAa,eACbuT,WAAYjvB,SAVO,GAWnB4b,WAAYgrF,EAAK70G,MAAMsF,eAGrBsR,IACFwb,EAAUvI,WAAagrF,EAAK/vG,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrB+mG,EAAK/vG,cAAc4kB,yBAAyB0I,GAG9CyiF,EAAKlvG,SAAS,SAACN,GAAD,MAAgB,CAC5Bi/G,eAAernF,EACflmB,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERqgE,MAAM,CACJ78D,OAAO,KACP0X,SAAQ,SAMVwzF,EAAuB,SAACh4G,GAC5B,IAAM8M,EAAS9M,EAAGglB,gBAClBoiF,EAAKlvG,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERqgE,MAAM93E,OAAAsmD,EAAA,EAAAtmD,CAAA,GACD+F,EAAU0R,WAAWqgE,MADrB,CAEH78D,iBAMRxa,KAAKC,MAAM8yB,0BAA0B/yB,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAM,WAAY,CAAC8kH,GAAU,KAAMC,EAAeC,GAExI1lH,KAAK4F,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERqgE,MAAM93E,OAAAsmD,EAAA,EAAAtmD,CAAA,GACD+F,EAAU0R,WAAWqgE,MADrB,CAEHnlD,SAxDU,4PA+DhBlyB,KAAK4F,SAAS,CACZy+G,cAAa,8IAKfrkH,KAAK4F,SAAS,CACZyjG,eAAc,oFAIIxtE,mEAEhBA,IAA8B77B,KAAKwE,MAAMq3B,2BAC3C77B,KAAK4F,SAAS,CACZi2B,6KAecutE,GAClBppG,KAAK4F,SAAS,CACZwjG,mDAcK,IAAA+P,EAAAn5G,KAEP,IAAKA,KAAKwE,MAAM0L,iBACd,OAAO,KAGT,IAAMgrB,EAAYl7B,KAAKwE,MAAM4kG,eAAiBppG,KAAKwE,MAAM02B,UAEnDm+C,EAAcr5E,KAAKwE,MAAMg1E,cAAgBj6E,OAAOiO,OAAOxN,KAAKwE,MAAMg1E,cAAcl4E,OAAO,EAAI/B,OAAOiO,OAAOxN,KAAKwE,MAAMg1E,cAAc,GAAK,KACvIF,EAAet5E,KAAKwE,MAAMi1E,eAAiBl6E,OAAOiO,OAAOxN,KAAKwE,MAAMi1E,eAAen4E,OAAO,EAAI/B,OAAOiO,OAAOxN,KAAKwE,MAAMi1E,eAAe,GAAK,KAC3Iv4C,EAAoBhG,GAAal7B,KAAKwE,MAAM6/G,eAAmBnpF,GAAal7B,KAAKwE,MAAMq3B,0BACvF8pF,EAAkB3lH,KAAKwE,MAAM+0E,aAAev5E,KAAKwE,MAAM+0E,YAAYv5E,KAAKwE,MAAMu0E,iBAAmB/4E,KAAKwE,MAAM+0E,YAAYv5E,KAAKwE,MAAMu0E,gBAAgBtnE,GAAG,GACtJm0G,EAAuB5lH,KAAKwE,MAAM0L,iBAAmBlQ,KAAKwE,MAAMoqC,oBAAoBpf,KAAM,SAAA4hB,GAAC,OAAIA,EAAEtqC,QAAUqyG,EAAK30G,MAAM0L,mBAAqBlQ,KAAKwE,MAAMoqC,oBAAoB,GAwGhL,OACEznB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPmd,GAAI,CAAC,EAAE,GACPta,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACV6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,wBAKA6iB,EAAA/mB,EAAAC,cAACmd,EAAA,EAADje,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEES,KAAM,WACNke,cAAc,EACdd,aAAc8nG,EACd5nG,kBAjIgB,SAAA/d,GACxB,IAAM4J,EAAQ5J,EAAM4J,MACd/D,EAAc,CAClB7C,KAAKhD,EAAMkE,KAAKlB,MAGlB,OACEkkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,UAEZ2kB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACP/D,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHzD,MAAM,MACNC,OAAO,UAIbunB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACPoiB,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,mBA+FVmd,QAAS5d,KAAKwE,MAAMoqC,oBACpBhvB,SAAU5f,KAAKmlH,eAAex2F,KAAK3uB,MACnCie,qBAxFmB,SAAAhe,GAE3B,IACMye,GAA4D,IADlDze,EAAMye,YAAYd,QACN4B,QAAQvf,EAAMye,YAAY5X,OAAgB7G,EAAMye,YAAY5X,MAAQ,KAEhG,IAAK4X,EACH,OAAO,KAGT,IAAM7U,EAAQ6U,EAAY7U,MACpB/D,EAAc,CAClB7C,KAAKyb,EAAYzb,MAGnB,OACEkkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACEyL,MAAO,CACLE,KAAK,KAEPzI,eAAgB,iBACZzC,EAAMke,YAEVgJ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACEC,EAAG,EACHE,MAAO,GACHM,EAAMke,WAHZ,CAIE3b,WAAY,SACZC,cAAe,MACfwI,MAAO,CAACmT,OAAO,WACf1b,eAAgB,eAEhBykB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACP/D,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,UAIbunB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACPoiB,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,uBA2CZT,KAAKwE,MAAM8H,iBACT6a,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,4BAKA6iB,EAAA/mB,EAAAC,cAACkvB,GAAA,EAADhwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgE,GAAI,aACJ4rB,aAAa,EACbjR,cAAc,EACdgB,SAAU5f,KAAKg4B,YAAYrJ,KAAK3uB,MAChCuF,cAAevF,KAAKwE,MAAMe,cAC1B+G,gBAAiBtM,KAAKwE,MAAM8H,qBAKjCtM,KAAKwE,MAAMggH,iBACVr9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJra,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,2BAMX7D,KAAKC,MAAMuM,QAmCRxM,KAAKwE,MAAMggH,iBAAoBxkH,KAAKwE,MAAMyoE,sBAAwBjtE,KAAKwE,MAAM2/G,YAAcnkH,KAAKwE,MAAM0/G,WACxG/8F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFuC,GAAG,EACH8a,GAAG,IAGLqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAOwgC,EAAmB,WAAa,WACvCzgC,MAAQygC,EAAmBlhC,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAErF0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVT,MAAO,WACPU,UAAW,QAGT+5B,EAAY,uBAAyB,uCAI3C/T,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAQV,KAAKwE,MAAM4/G,cAAgBpkH,KAAKwE,MAAM8/G,eAAkB,WAAa,WAC7E7jH,MAAST,KAAKwE,MAAM4/G,cAAgBpkH,KAAKwE,MAAM8/G,eAAkBtkH,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAE3H0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVT,MAAO,WACPU,UAAW,QAJb,gBAMgBnB,KAAKwE,MAAMe,gBAG7B4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAOV,KAAKwE,MAAM8/G,eAAiB,WAAa,SAChD7jH,MAAQT,KAAKwE,MAAM8/G,eAAiBtkH,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAE9F0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVT,MAAO,WACPU,UAAW,QAJb,2BAOEgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJzJ,WAAY,EACZR,MAAO,UACP4G,QAAS,SACT2V,WAAY,UACZK,QAAU,SAAA7W,GAAC,OAAI2yG,EAAKl5G,MAAM4lH,iBAAiB,2BAA2B1M,EAAKp0G,cAAc6M,gBAAgB,CAAC,WAAW,qCANvH,iBAYJuV,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAOV,KAAKwE,MAAM+/G,eAAiB,WAAa,SAChD9jH,MAAQT,KAAKwE,MAAM+/G,eAAiBvkH,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAE9F0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVT,MAAO,WACPU,UAAW,QAJb,cAMcnB,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,OAE1CwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE4iB,UAAW,MACX/b,QAAO,oFAAAjkB,OAAsFhK,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,QAEzHwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJ9J,KAAM,QACNF,KAAM,UACND,MAAO,UACPwK,MAAO,CACLmT,OAAO,mBA3JvB+I,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAGLqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,QACtCpC,KAAM,QACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,CAAC,EAAE,GACP5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,uDAQAgmB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,KAEXY,YAAaP,KAAKC,MAAM66B,2BAL1B,aAgJN96B,KAAKwE,MAAMggH,iBAAmBxkH,KAAKC,MAAMuM,SAAWxM,KAAKwE,MAAM8H,iBAAmBtM,KAAKwE,MAAMe,eAC3F4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKznB,MAAO,IAEPuhC,GAAoBlhC,KAAKwE,MAAM0/G,WAC9B/8F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJra,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,sBAGA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFE,MAAM,IACN40B,YAAY,WACV,OAAO4kF,EAAK30G,MAAM2/G,WAAahL,EAAKr9E,UAAU,WAAa,OAG/D35B,eAAe,EACfE,YAAcrC,KAAKwE,MAAM2/G,WACzB/hH,SAAiC,YAAtBpC,KAAKwE,MAAM6J,QAEtB8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACuwB,GAAA,EAAD,CACElZ,YAAa,CACXrJ,OAAO,WAET4d,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,MAIT+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,GAFd,aAQJkmB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFE,MAAM,IACN40B,YAAY,WACV,OAAO4kF,EAAK30G,MAAM0/G,SAAW/K,EAAKr9E,UAAU,UAAY,OAG5D35B,eAAe,EACfE,YAAcrC,KAAKwE,MAAM0/G,SACzB9hH,SAAiC,WAAtBpC,KAAKwE,MAAM6J,QAEtB8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACuwB,GAAA,EAAD,CACElZ,YAAa,CACXrJ,OAAO,UAET4d,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,MAIT+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,GAFd,aAYVjB,KAAKwE,MAAM6kG,eAAuC,YAAtBrpG,KAAKwE,MAAM6J,QAAwBrO,KAAKwE,MAAM02B,WAAal7B,KAAKwE,MAAM+2B,mBAAqBv7B,KAAKwE,MAAMkgH,mBAChIv9F,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACH8a,GAAG,EACHzV,QAAQ,OACR7E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNH,MAAO,WACPC,KAAM,qBAERymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAEVnB,KAAKwE,MAAMe,cANd,iIASF4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ6kB,UAAU,EACVC,QAAS5hC,KAAKwE,MAAM4kG,cACpBv/F,MAAK,8CACL+V,SAAW,SAAApZ,GAAC,OAAI2yG,EAAKvO,oBAAoBpkG,EAAEuW,OAAO6kB,cAGnD5hC,KAAKwE,MAAM6kG,eAAuC,YAAtBrpG,KAAKwE,MAAM6J,QAAwBrO,KAAKwE,MAAM02B,WAAal7B,KAAKwE,MAAM+2B,mBAAqBv7B,KAAKwE,MAAMkgH,oBACrIv9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,EACHqd,GAAI,EACJnd,MAAO,EACPE,aAAc,EACd2C,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjmB,UAAW,SACX6b,WAAY,UACZK,QAASrd,KAAKqpG,cAAc16E,KAAK3uB,OAHnC,2CAWkB,YAAtBA,KAAKwE,MAAM6J,OACTrO,KAAKwE,MAAMmgH,oBACTx9F,EAAA/mB,EAAAC,cAAC06B,GAAA,EAADx7B,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEu/B,WAAW,EACX0C,aAAa,EACbhH,UAAWA,EACX6C,eAAe,EACfgE,iBAAiB,EACjB7B,qBAAqB,EACrByC,cAAe,eACflmB,SAAU,uBACV3W,YAAa9F,KAAKwE,MAAMsB,YACxBP,cAAevF,KAAKwE,MAAMe,cAC1Bq6B,gBAAiB,SAAAH,GAAS,MAAI,CAACA,IAC/BvvB,iBAAkBlQ,KAAKC,MAAMiQ,iBAC7BqvB,eAAgBv/B,KAAKu/B,eAAe5Q,KAAK3uB,MACzCi/B,gBAAiBj/B,KAAKi/B,gBAAgBtQ,KAAK3uB,MAC3CigC,kBAAmBjgC,KAAKigC,kBAAkBtR,KAAK3uB,MAC/C6+B,yBAA0B7+B,KAAK6+B,yBAAyBlQ,KAAK3uB,MAC7D4iC,cAAa,gBAAA54B,OAAkBhK,KAAKwE,MAAMe,cAA7B,+CAAAyE,OAAwFhK,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,MAApH,OAEbwZ,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAGLqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,WACND,MAAO,WACPG,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,UAExCqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,sBAMsBnB,KAAKwE,MAAMe,cANjC,uBAYN4hB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACF8C,GAAG,IAGL4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,WACPU,UAAW,UAHb,+CAWNgmB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAIH9c,KAAKwE,MAAMwS,WAAWqgE,MAAMnlD,QAC1B/K,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACsW,EAAA,EAADpX,OAAAC,OAAA,GAAmBQ,KAAKC,MAAxB,CAA+BiY,KAAMlY,KAAKC,MAAMiY,KAAMuE,SAAQ,qBAAwBD,WAAU,gCAAmC1O,KAAM9N,KAAKwE,MAAMwS,WAAWqgE,MAAM78D,WAErKxa,KAAKwE,MAAM+/G,eACbp9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,UACNE,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,QACtCrC,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,YAErD0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,CAAC,EAAE,GACP5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,wCAMwCnB,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,MANpE,KAQAwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ3b,UAAW,SACX6b,WAAY,UACZK,QAAU,SAAA7W,GAAC,OAAI2yG,EAAKl5G,MAAMivG,YAAYiK,EAAK30G,MAAMyoE,oBAAoB9iC,SAAS,IAAIgvE,EAAK30G,MAAMyoE,oBAAoBx1C,aAJnH,wBASAz3B,KAAKwE,MAAM8/G,eACbn9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,QACtCrC,MAAO,WACPC,KAAM,eAERymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,WACPU,UAAW,UAHb,+BAK8BgmB,EAAA/mB,EAAAC,cAAA,WAL9B,0BAK4Dg5E,EAAY9vE,QAAQ,GALhF,IAKqFvJ,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,OAEjHwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,UACPU,UAAW,UAHb,2BAK2BnB,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,MALvD,iCAOAwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,IACTG,UAAUE,KAAKC,MAAMsD,MAAMC,OAAOG,QAEpCpD,YAAc,SAAAiG,GAAC,OAAI2yG,EAAK9hC,UAN1B,WAaJlwD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNH,MAAO,WACPC,KAAM,mBAERymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,CAAC,EAAE,GACP5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAEXgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CACEjc,MAAO,YADT,mCAGkC0mB,EAAA/mB,EAAAC,cAAA,cAASi5E,EAAa/vE,QAAQ,GAA9B,IAAmCvJ,KAAKwE,MAAMe,eAHhF,2DAGgKvF,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,MAH5L,QAaZ3N,KAAKwE,MAAM+0E,YAAYv5E,KAAKwE,MAAMu0E,iBAChC5xD,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACF8C,GAAG,IAIHvC,KAAKwE,MAAMwS,WAAWsc,QAAQpB,QAC5B/K,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACsW,EAAA,EAADpX,OAAAC,OAAA,GAAmBQ,KAAKC,MAAxB,CAA+Bwc,SAAQ,+BAAkCD,WAAU,wCAA2C1O,KAAM9N,KAAKwE,MAAMwS,WAAWsc,QAAQ9Y,WAElKxa,KAAKwE,MAAMigH,iBACbt9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,QACtCpC,KAAM,UACND,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,YAErD0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,CAAC,EAAE,GACP5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,iCAUFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,IACZR,MAAO,YACPU,UAAW,UAHb,eAKenB,KAAKwE,MAAM+0E,YAAYv5E,KAAKwE,MAAMu0E,gBAAgBxvE,QAAQ,GALzE,IAK8EvJ,KAAKwE,MAAMe,eAGvFogH,GACEx+F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjmB,UAAW,SACX6b,WAAY,UACZK,QAASrd,KAAKszB,QAAQ3E,KAAK3uB,OAH7B,iBASFA,KAAKwE,MAAM+0E,YAAYv5E,KAAKwE,MAAMu0E,gBAAgBvqE,GAAGxO,KAAKwE,MAAMyoE,oBAAoB64C,cAClF3+F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVT,MAAO,QACPU,UAAW,UAJb,wCAMwCnB,KAAK+E,cAAc8O,YAAY7T,KAAKwE,MAAMyoE,oBAAoB64C,YAAY,GANlH,IAMuH9lH,KAAKwE,MAAMe,cANlI,oBAWFvF,KAAKwE,MAAMk1E,eACTvyD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,WACPU,UAAW,UAHb,yBAKyBnB,KAAK+E,cAAcmK,YAA+C,IAAnClP,KAAKwE,MAAMk1E,cAAcvrE,WAAgBmmE,MAAMniE,OAAO,qCA/uCnHrR,wBCqvBZilH,8MArwBbvhH,MAAQ,CACNgmG,MAAM,KACND,QAAQ,KACRyb,SAAS,KACT9vE,UAAU,KACVzb,WAAW,KACX4tE,YAAY,KACZviG,YAAY,KACZ0gC,aAAa,KACbqvC,aAAa,KACbtwE,cAAc,KACd+lG,eAAe,KACfoG,eAAe,KACfzpF,gBAAgB,KAChBg+F,gBAAgB,KAChBC,iBAAiB,KACjBhlF,kBAAiB,EACjB2pE,mBAAmB,KACnBvoE,oBAAoB,KACpB2pE,sBAAqB,KAIvBlnG,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAKoF,gMAIkBC,EAAUC,0FACjCtF,KAAKmF,cAE2BG,EAAU4gH,mBAAqBlmH,KAAKwE,MAAM0hH,0CAElE3gH,EAAgBvF,KAAKwE,MAAM0hH,iBAAiB39F,WAC5CziB,EAAcvG,OAAOiO,OAAOxN,KAAKC,MAAM2uC,qBAAqB,GAAGrpC,YAC1CvF,KAAK+E,cAAc4nC,gBAAgBpnC,EAAcvF,KAAKC,MAAMuM,gBAAjFg6B,SACA8kE,EAAkBtrG,KAAKwE,MAAM8mG,eAA4DtrG,KAAKwE,MAAM8mG,eAArDtrG,KAAKC,MAAM6uG,UAAUG,QAAU,QACpFjvG,KAAK4F,SAAS,CACZE,cACA0gC,eACAjhC,gBACA+lG,2BAIE0G,EAA0B1sG,EAAU47B,mBAAqBlhC,KAAKwE,MAAM08B,iBACpE6wE,EAAwBzsG,EAAUgmG,iBAAmBtrG,KAAKwE,MAAM8mG,eAChE6a,EAAoB7gH,EAAUm1B,aAAez6B,KAAKwE,MAAMi2B,YAAcz6B,KAAKwE,MAAMi2B,WAAWhpB,GAAG,GAC/F20G,EAAkBr6G,KAAKC,UAAU1G,EAAU0gH,YAAcj6G,KAAKC,UAAUhM,KAAKwE,MAAMwhH,WAAahmH,KAAKwE,MAAMi2B,YAAcz6B,KAAKwE,MAAMi2B,WAAWhpB,GAAG,IACpJsgG,GAAyBoU,GAAqBC,GAAmBpU,IACnEhyG,KAAK8xG,aAGqB/lG,KAAKC,UAAU1G,EAAUuwE,gBAAkB9pE,KAAKC,UAAUhM,KAAKwE,MAAMqxE,eAE/F71E,KAAKwpG,wMAISn4E,iFAChBA,EAASrxB,KAAK+E,cAAc6I,MAAMyjB,IACtBziB,UAAWyiB,EAAO5f,GAAG,wBAG3BzR,KAAKwE,MAAMkK,YAAc1O,KAAKwE,MAAM6hH,SAAWrmH,KAAKwE,MAAM8hH,kCAEtDD,EAAUrmH,KAAKwE,MAAM6hH,QACrB33G,EAAa1O,KAAKwE,MAAMkK,WAE9B63G,GADIA,EAAiBl1F,EAAOpX,IAAIvL,IACAH,MAAMg4G,EAAej9G,MAAM+8G,sBAEpD,CACLh1F,SACAk1F,mDAKC,0RAGiB9rF,iCAAW,KAC/BurF,EAAW,KACX1jF,EAAsB,OAC1B7H,EAAaA,GAAcz6B,KAAKwE,MAAMi2B,cAEpBz6B,KAAK+E,cAAc6I,MAAM6sB,GAAYhpB,GAAG,yBAChDzR,KAAKwE,MAAM8mG,sBACZ,gBAMA,kBACA,2CANHhpE,EAAsB,CACpB7hC,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAClD5hB,KAAI,kBAAAmG,OAAmBywB,EAAWlxB,QAAQ,GAAtC,2DAKA8nB,EAASrxB,KAAK+E,cAAck4B,qBAAqBxC,EAAWz6B,KAAKwE,MAAMsB,YAAYwE,oBACxEtK,KAAKwmH,YAAYn1F,kBAAlC20F,YAGI1jF,EADE0jF,EAASO,eAAenqF,IAAIp8B,KAAKwE,MAAM8hH,WACnB,CACpB7lH,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAClD5hB,KAAI,kBAAAmG,OAAmBhK,KAAK+E,cAAcsM,iBAAiB20G,EAASO,eAAe,IAAIh9G,QAAQ,GAA3F,KAAAS,OAAiGhK,KAAKwE,MAAM8mG,iBAG5F,CACpBznG,KAAI,uBACJpD,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO4X,0EAU9D3lB,KAAK4F,SAAS,CACZogH,WACAvrF,aACA6H,gNAIuBjR,iFACrBiB,EAAa,KACb+nC,EAAe,KACnBhpC,EAASrxB,KAAK+E,cAAc6I,MAAMyjB,GAC5Bo1F,EAAczmH,KAAK+E,cAAc6I,MAAM,GAAGw2D,IAAI,KAAK71D,MAAM,GAAGhF,QAAQ,QAClEvJ,KAAKwE,MAAM8mG,sBACZ,gBAIA,kBACA,2CAJHh5E,EAAa,WACb+nC,EAAe,CAACr6D,KAAKwE,MAAMsB,YAAYoD,QAAQgF,SAASlO,KAAKwE,MAAM0hH,iBAAiB7xC,qBAAqBr0E,KAAK+E,cAAco7B,aAAa9O,wCAIzIiB,EAAa,qBACPo0F,EAAsB1mH,KAAKwE,MAAM0hH,iBAAiB9xC,OAAOp0E,KAAKwE,MAAM8mG,0BACnDtrG,KAAKwmH,YAAYn1F,gBAAlC20F,+BAEAA,EAASO,eAAenqF,IAAIp8B,KAAKwE,MAAM8hH,4BACzCjsD,EAAe,CAACr6D,KAAKwE,MAAMsB,YAAYoD,QAAQlJ,KAAK+E,cAAco7B,aAAa9O,GAAQq1F,EAAoBx9G,QAASlJ,KAAK+E,cAAco7B,aAAa6lF,EAASO,gBAAiBE,oDAEvK,mFAOR,CACLn0F,aACA+nC,sMAImBn5B,mEACrBlhC,KAAK4F,SAAS,CACZs7B,6MAIuBxzB,EAAG2jB,EAAOsB,8GAC/B43E,EAAU,KACRoc,aAAmB3mH,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY,uBACnEg1G,EAAc5mH,KAAK+E,cAAcsM,iBAAiBggB,EAAOrxB,KAAKwE,MAAMsB,YAAYwE,eAC9EtK,KAAKwE,MAAM8mG,sBACZ,gBAaA,kBAYA,2CAxBGub,EAAiBn5G,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkB1D,EAAKjB,MAAM0hH,iBAAiB9xC,OAA5B,MAA4ClrE,UAAY,KAC1K49G,EAAmBp5G,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkB1D,EAAKjB,MAAM0hH,iBAAiB9xC,OAA5B,QAA8ClrE,UAAY,KAC9K69G,EAAoBF,EAAiB7mH,KAAK+E,cAAcsM,iBAAiBnD,SAAS24G,EAAe1iH,KAAK,IAAInE,KAAKwE,MAAMqxE,aAAavrE,UAAYs8G,EAC9II,EAAsBF,EAAmB9mH,KAAK+E,cAAcsM,iBAAiBnD,SAAS44G,EAAiB3iH,KAAK,IAAInE,KAAKwE,MAAMqxE,aAAavrE,UAAYs8G,EAC1Jrc,EAAU,CACRtnG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,wCAAAmG,OAAyC+8G,EAAkBx9G,QAAQ,GAAnE,gCAAAS,OAAoGg9G,EAAoBz9G,QAAQ,GAAhI,2CAAAS,OAA4K28G,EAA5K,qDAAA38G,OAA4OhK,KAAKC,MAAMsD,MAAMC,OAAOme,QAApQ,8DAIAslG,EAAmBjnH,KAAKwE,MAAM0hH,iBAAiB9xC,OAAOp0E,KAAKwE,MAAM8mG,gBACjE4b,EAAiBx5G,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkB89G,EAAiB/9G,UAAY,KAC/Ii+G,EAAsBD,EAAiBlnH,KAAK+E,cAAcsM,iBAAiBnD,SAASg5G,EAAe/iH,KAAK,IAAI8iH,EAAiBG,aAAa98G,UAAYtK,KAAK+E,cAAcsM,iBAAiBshB,EAAO,GAAGs0F,EAAiBG,aAAa98G,UACxOigG,EAAU,CACRtnG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,wCAAAmG,OAAyCm9G,EAAoB59G,QAAQ,GAArE,KAAAS,OAA2EhK,KAAKwE,MAAM8mG,eAAtF,uHAAAthG,OAA0N28G,EAA1N,qDAAA38G,OAA0RhK,KAAKC,MAAMsD,MAAMC,OAAOme,QAAlT,8DAKA0lG,EAAqBrnH,KAAKwE,MAAM0hH,iBAAiB9xC,OAAOp0E,KAAKwE,MAAM8mG,gBACnEgc,EAAmB55G,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkBk+G,EAAmBn+G,UAAY,KACnJq+G,EAAwBD,EAAmBtnH,KAAK+E,cAAcsM,iBAAiBnD,SAASo5G,EAAiBnjH,KAAK,IAAIkjH,EAAmBD,aAAa98G,UAAYtK,KAAK+E,cAAcsM,iBAAiBshB,EAAO,GAAG00F,EAAmBD,aAAa98G,UAClPigG,EAAU,CACRtnG,KAAK,UACLE,UAAU,CACR1C,MAAMT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAEpD5hB,KAAI,wCAAAmG,OAAyCu9G,EAAsBh+G,QAAQ,GAAvE,KAAAS,OAA6EhK,KAAKwE,MAAM8mG,eAAxF,6HAAAthG,OAAkO28G,EAAlO,qDAAA38G,OAAkShK,KAAKC,MAAMsD,MAAMC,OAAOme,QAA1T,kGAQN6oF,EAAQxqG,KAAKwE,MAAMgmG,OACjB,GAAG/kF,WAAY,EAEfwmF,GAAuB,YACFjsG,KAAK+E,cAAc4nC,gBAAgB3sC,KAAKwE,MAAMe,cAAcvF,KAAKC,MAAMuM,iBAA5Fg6B,SAINxmC,KAAK4F,SAAS,CACZ4kG,QACAD,UACA/jE,eACAylE,iVAKElvD,EAAM,KACJytD,EAAQ,GACVD,EAAU,KACV8b,EAAU,KACVC,EAAY,KACZ53G,EAAa,KACbN,EAAc,KACdynE,EAAe,KACf2xC,EAAmB,KACnB3c,EAAqB,KAEnBoc,EAAmBjnH,KAAKwE,MAAM0hH,iBAAiB9xC,OAA5B,MACnBizC,EAAqBrnH,KAAKwE,MAAM0hH,iBAAiB9xC,OAA5B,QACrBqzC,EAAsBR,EAAiBG,aACvCM,EAAwBL,EAAmBD,uBAE3CzvG,QAAQqD,IAAI,CAChBhb,KAAKC,MAAMq+B,aAAa2oF,EAAiBvmH,KAAKumH,EAAiB/9G,QAAQ+9G,EAAiB5oF,KACxFr+B,KAAKC,MAAMq+B,aAAa+oF,EAAmB3mH,KAAK2mH,EAAmBn+G,QAAQm+G,EAAmBhpF,KAC9Fr+B,KAAKC,MAAMq+B,aAAampF,EAAoB/mH,KAAK+mH,EAAoBv+G,QAAQu+G,EAAoBppF,KACjGr+B,KAAKC,MAAMq+B,aAAaopF,EAAsBhnH,KAAKgnH,EAAsBx+G,QAAQw+G,EAAsBrpF,gCAQ/F1mB,QAAQqD,IAAI,CAEpBhb,KAAK+E,cAAc4nC,gBAAgBs6E,EAAiBvmH,KAAKV,KAAKC,MAAMuM,SAEpExM,KAAK+E,cAAc4nC,gBAAgB06E,EAAmB3mH,KAAKV,KAAKC,MAAMuM,SAEtExM,KAAK+E,cAAc4nC,gBAAgB86E,EAAoB/mH,KAAKV,KAAKC,MAAMuM,SAEvExM,KAAK+E,cAAc4nC,gBAAgB+6E,EAAsBhnH,KAAKV,KAAKC,MAAMuM,+CAZzEm7G,OACAC,OACAC,OACAC,OAaIC,EAAkBJ,GAAqBC,GAAuBD,EAAkBl2G,GAAG,IAAMm2G,EAAoBn2G,GAAG,QAG9GzR,KAAKwE,MAAM8mG,sBACZ,iBAGA,oBAGA,0CALHz1B,EAAe71E,KAAKC,MAAMuoG,UAAUt2D,6CAGpC2jC,EAAewxC,EAAmBD,iDAGlCvxC,EAAeoxC,EAAiBG,iFAM9BV,EAAsB1mH,KAAKwE,MAAM0hH,iBAAiB9xC,OAAOp0E,KAAKwE,MAAM8mG,iBAEtEz1B,uBACE6wC,oCAKQ/uG,QAAQqD,IAAI,CACpBhb,KAAK+E,cAAc05B,oBAAoBo3C,EAAan1E,KAAK,cACzDV,KAAK+E,cAAc05B,oBAAoBo3C,EAAan1E,KAAK,aAAa,CAACgmH,EAAoBx9G,UAC3FlJ,KAAK+E,cAAc05B,oBAAoBo3C,EAAan1E,KAAK,eAAe,CAACV,KAAKwE,MAAMsB,YAAYoD,QAAQw9G,EAAoBx9G,gDAN5Hm9G,OACAC,QACA53G,UASM2qG,EAAwC,UAA9Br5G,KAAKwE,MAAM8mG,eACrBj3B,EAAsBr0E,KAAKwE,MAAM0hH,iBAAiB7xC,oBAClD/kE,GAA6B,IAApB+kE,EAA2BllE,KAAK+yC,OAAjC,MACdxzC,EAAa1O,KAAK+E,cAAcsM,iBAAiB3C,EAAW1O,KAAKwE,MAAMsB,YAAYwE,UAC7E09G,EAAW3O,EAAU3qG,EAAa1O,KAAK+E,cAAc6I,MAAM,GAAGW,MAAMG,GAAYuL,IAAIvL,GAC1FquC,EAAM/8C,KAAK+E,cAAc6I,MAAM,KAAKtE,MAAM0+G,GAAU1+G,MAAM,KAAK2Q,IAAI3K,IAIjE+2G,IACFA,EAAUrmH,KAAK+E,cAAcsM,iBAAiBg1G,EAAQ,kBAIlDrmH,KAAKwE,MAAM8mG,sBACZ,iBAiCA,oBAgCA,0CAhEHT,EAAkB,sCAClBN,EAAU,CACRtnG,KAAK,iBACLY,KAAI,SAAAmG,OAAUhK,KAAKwE,MAAMe,cAArB,gYAAAyE,OAAiahK,KAAKC,MAAMsD,MAAMC,OAAOme,QAAzb,4BAGN6oF,EAAMhhG,KAAK,CACTvG,KAAK,WACLolG,YAAYwC,EACZplF,UAAUzlB,KAAKwE,MAAM08B,mBAGvBspE,EAAMhhG,KAAK,CACTvG,KAAK,WACLwiB,UAAUsiG,EACV1f,YAAW,kCAGbmC,EAAMhhG,KAAK,CACTvG,KAAK,SACLolG,YAAW,6CACX5iF,UAAUoiG,GAA4BA,EAAyBp2G,GAAG,GAClEyS,KAAI,0CAAAla,OAA2ChK,KAAKwE,MAAM0hH,iBAAiB9xC,OAA5B,MAA4CgzC,aAAal+G,QAApG,OAGNshG,EAAMhhG,KAAK,CACTvG,KAAK,SACLolG,YAAW,+CACX5iF,UAAUqiG,GAA8BA,EAA2Br2G,GAAG,GACtEyS,KAAI,0CAAAla,OAA2ChK,KAAKwE,MAAM0hH,iBAAiB9xC,OAA5B,QAA8CgzC,aAAal+G,QAAtG,2CAIFlJ,KAAKwE,MAAMwhH,UACbwB,EAAmBxnH,KAAK+E,cAAcsM,iBAAiBrR,KAAKwE,MAAMwhH,SAAS30F,OAAOrxB,KAAKwE,MAAMsB,YAAYwE,UACzG8D,EAAcpO,KAAK+E,cAAcsM,iBAAiBrR,KAAKwE,MAAMwhH,SAASO,eAAe1wC,EAAavrE,UAClGigG,EAAU,CACRtnG,KAAK,eACLY,KAAI,wBAAAmG,OAAyBw9G,EAAiBj+G,QAAQ,GAAlD,KAAAS,OAAwDhK,KAAKwE,MAAMe,cAAnE,wDAAAyE,OAAuIoE,EAAY7E,QAAQ,GAA3J,KAAAS,OAAiKhK,KAAKwE,MAAMe,cAA5K,oFAGNglG,EAAU,CACRtnG,KAAK,eACLY,KAAI,iCAAAmG,OAAkChK,KAAKwE,MAAMe,cAA7C,kGAKRglG,EAAQ1mG,MAAR,GAAAmG,OAAiB+yC,EAAG,4BAAA/yC,OAA+BhK,KAAKC,MAAMsD,MAAMC,OAAOme,QAAvD,kFAAA3X,OAA+I+yC,EAAIxzC,QAAQ,GAA3J,cAA4K,KAAhM,2JAAAS,OAA8VhK,KAAKC,MAAMsD,MAAMC,OAAOme,QAAtX,iGAGAkpF,EAAkB,6CAClBL,EAAMhhG,KAAK,CACTvG,KAAK,WACLolG,YAAYwC,EACZplF,UAAUzlB,KAAKwE,MAAM08B,mBAGvBspE,EAAMhhG,KAAK,CACTvG,KAAK,WACLwiB,UAAUmiG,GAAuBA,EAAoBn2G,GAAG,GACxD42F,YAAW,gCAAAr+F,OAAiChK,KAAKwE,MAAMe,qDAIrDvF,KAAKwE,MAAMwhH,UACbwB,EAAmBxnH,KAAK+E,cAAcsM,iBAAiBrR,KAAKwE,MAAMwhH,SAAS30F,OAAOrxB,KAAKwE,MAAMsB,YAAYwE,UACzG8D,EAAcpO,KAAK+E,cAAcsM,iBAAiBrR,KAAKwE,MAAMwhH,SAASO,eAAe1wC,EAAavrE,UACrE,GAC7BigG,EAAU,CACRtnG,KAAK,cACLY,KAAI,wBAAAmG,OAAyBw9G,EAAiBj+G,QAAQ,GAAlD,KAAAS,OAAwDhK,KAAKwE,MAAMe,cAAnE,sDAAAyE,OAAqIoE,EAAY7E,QAAQ,GAAzJ,KAAAS,OAA+JhK,KAAKwE,MAAMe,cAA1K,aAAAyE,OAAwN,aAAAA,OAHjM,GAGiM,iCAAxN,6FAGNugG,EAAU,CACRtnG,KAAK,cACLY,KAAI,+BAAAmG,OAAgChK,KAAKwE,MAAMe,cAA3C,oHAIRglG,EAAQ1mG,MAAR,GAAAmG,OAAiB+yC,EAAG,4BAAA/yC,OAA+BhK,KAAKC,MAAMsD,MAAMC,OAAOme,QAAvD,8EAAA3X,OAA2I+yC,EAAIxzC,QAAQ,GAAvJ,KAA+J,KAAnL,oKAAAS,OAA0VhK,KAAKC,MAAMsD,MAAMC,OAAOme,QAAlX,iGAGAkpF,EAAkB,2CAClBL,EAAMhhG,KAAK,CACTvG,KAAK,WACLolG,YAAYwC,EACZplF,UAAUzlB,KAAKwE,MAAM08B,mBAGvBspE,EAAMhhG,KAAK,CACTvG,KAAK,WACLwiB,UAAUkiG,GAAqBA,EAAkBl2G,GAAG,GACpD42F,YAAW,8BAAAr+F,OAA+BhK,KAAKwE,MAAMe,mFAO9B,EAC7BvF,KAAK4F,SAAS,CACZm3C,MACAytD,QACAD,UACA8b,UACAC,YACA53G,aACAmnE,eACAg1B,qBACAoB,sBAV2B,4QAgBzB94C,EAAWjlD,SAASiB,KAAK+yC,MAAM,KAC/Bj6B,EAAkBjoB,KAAKC,MAAMuoG,UAAUpgF,UAAUoyB,OAAQ,SAACpuB,EAAO/D,EAAExa,GACvE,GAAIwa,EAAEgsD,oBAAoBlhB,EAAS,CACjC,IAAM4f,EAAiBtsE,EAAK1B,cAAcmK,YAAkC,IAAtBmZ,EAAEgsD,qBAA0BC,MAAMniE,OAAO,uBAAuB,OAChHlP,EAAI,iBAAA+G,OAAoBqe,EAAEE,WAAtB,QACJ1e,EAAK,eAAAG,OAAkBqe,EAAEE,WAApB,mBAAAve,OAAgD+oE,GAC3D3mD,EAAO5iB,KAAK,CACVvG,OACA4G,QACA1F,KAAKkkB,EACLvhB,MAAMisE,IAGV,OAAO3mD,GACP,aAEsBpsB,KAAK+E,cAAcwyC,6BAArCrB,SACA+vE,EAAkBh+F,EAAgB3mB,OAAS2mB,EAAgB,GAAK,KAEtEjoB,KAAK4F,SAAS,CACZswC,YACA+vE,kBACAh+F,mBACA,WACIg+F,GACFx/G,EAAKwhH,eAAehC,sLAKLjyC,yEACbkyC,EAAmBlyC,EAAS7vE,KAClCnE,KAAK4F,SAAS,CACZsgH,0JAIM5a,GACRtrG,KAAK4F,SAAS,CACZ0lG,oDAIK,IAAA1xE,EAAA55B,KAEDkoH,EAAuC,SAA9BloH,KAAKwE,MAAM8mG,eACpB6c,EAA2C,UAA9BnoH,KAAKwE,MAAM8mG,eACxB8c,EAA6C,YAA9BpoH,KAAKwE,MAAM8mG,eAC1B6J,EAAW+S,EAASloH,KAAKwE,MAAM8mG,eAAd,OAAAthG,OAAsChK,KAAKwE,MAAM8mG,gBAwGxE,OACEnkF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGb1C,KAAKwE,MAAMyjB,gBAmBVd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZE,eAAgB,UAGb1C,KAAKwE,MAAMyjB,gBAAgB3mB,OAU1B6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACV6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,oBAGA6iB,EAAA/mB,EAAAC,cAACmd,EAAA,EAADje,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEES,KAAM,WACNke,cAAc,EACdhB,QAAS5d,KAAKwE,MAAMyjB,gBACpBjK,kBAlKM,SAAA/d,GACxB,IAAM4J,EAAQ5J,EAAM4J,MACd/D,EAAc,CAClB7C,KAAKhD,EAAMkE,KAAKlB,MAGlB,OACEkkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,UAEZ2kB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACP/D,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHzD,MAAM,MACNC,OAAO,UAIbunB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACPoiB,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,mBAgIAqd,aAAc9d,KAAKwE,MAAMyhH,gBACzBrmG,SAAU5f,KAAKioH,eAAet5F,KAAK3uB,MACnCie,qBAzHS,SAAAhe,GAE3B,IACMye,GAA4D,IADlDze,EAAMye,YAAYd,QACN4B,QAAQvf,EAAMye,YAAY5X,OAAgB7G,EAAMye,YAAY5X,MAAQ,KAEhG,IAAK4X,EACH,OAAO,KAGT,IAAM7U,EAAQ6U,EAAY7U,MACpB/D,EAAc,CAClB7C,KAAKyb,EAAYzb,MAGnB,OACEkkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACEyL,MAAO,CACLE,KAAK,KAEPzI,eAAgB,iBACZzC,EAAMke,YAEVgJ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACEC,EAAG,EACHE,MAAO,GACHM,EAAMke,WAHZ,CAIE3b,WAAY,SACZC,cAAe,MACfwI,MAAO,CAACmT,OAAO,WACf1b,eAAgB,eAEhBykB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACP/D,YAAaA,EACbmmB,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,EACHxD,OAAO,UAIbunB,EAAA/mB,EAAAC,cAAC2iC,EAAA,EAAD,CACEr1B,MAAO9D,EACPoiB,UAAW,CACTvrB,KAAK,YACLT,MAAM,CACJiB,SAAS,CAAC,EAAE,GACZD,WAAW,IACXR,MAAM,uBA4EFT,KAAKwE,MAAM0hH,kBACT/+F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,kBAGA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAOwoH,EAAS,EAAI,GAEtBvoH,MAAO,CAAC,EAAE,OACVk6B,QAAS,gBACTM,SAAU,kBACVr3B,SAAU9C,KAAKC,MAAM6C,SACrBulH,WAAY,qDACZtlH,WAAY,CACVuB,GAAG,EACH1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAU8lH,EACV3nH,YAAc,SAAAiG,GAAC,OAAIozB,EAAKkC,UAAU,WAEpC3U,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAOyoH,EAAa,EAAI,GAE1BxoH,MAAO,CAAC,EAAE,OACVk6B,QAAS,YACTM,SAAU,mBACVr3B,SAAU9C,KAAKC,MAAM6C,SACrBulH,WAAY,wDACZtlH,WAAY,CACVuB,GAAG,EACH1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAU+lH,EACV5nH,YAAc,SAAAiG,GAAC,OAAIozB,EAAKkC,UAAU,YAEpC3U,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXosB,GAAG,EACHhsB,OAAO0oH,EAAe,EAAI,GAE5BzoH,MAAO,CAAC,EAAE,OACVk6B,QAAS,cACT/2B,SAAU9C,KAAKC,MAAM6C,SACrBq3B,SAAU,qBACVkuF,WAAY,yDACZtlH,WAAY,CACVuB,GAAG,EACH1E,OAAOI,KAAKC,MAAM6C,SAAW,OAAS,QAExCV,SAAUgmH,EACV7nH,YAAc,SAAAiG,GAAC,OAAIozB,EAAKkC,UAAU,eAIpC97B,KAAKwE,MAAMsB,aAAe9F,KAAKwE,MAAMgiC,cAAgBxmC,KAAKwE,MAAMqxE,cAC9D1uD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJxY,GAAI,EACJ3E,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC2rG,EAADzsG,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEoO,OAAQ8mG,EACRt+F,MAAO7W,KAAKwE,MAAMqS,MAClB2zF,MAAOxqG,KAAKwE,MAAMgmG,MAClBD,QAASvqG,KAAKwE,MAAM+lG,QACpBzkG,YAAa9F,KAAKwE,MAAMsB,YACxB0gC,aAAcxmC,KAAKwE,MAAMgiC,aACzBqvC,aAAc71E,KAAKwE,MAAMqxE,aACzBlwE,SAAU3F,KAAKisG,qBAAqBt9E,KAAK3uB,MACzCkhC,iBAAkBlhC,KAAKkhC,iBAAiBvS,KAAK3uB,MAC7C6qG,mBAAoB7qG,KAAKwE,MAAMqmG,mBAC/BvoE,oBAAqBtiC,KAAKwE,MAAM89B,oBAChCknE,oBAAqBxpG,KAAKwpG,oBAAoB76E,KAAK3uB,MACnD4yB,qBAAsB5yB,KAAK4yB,qBAAqBjE,KAAK3uB,QAErDmnB,EAAA/mB,EAAAC,cAACq0B,EAAA,EAADn1B,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE22B,YAAY,EACZhC,iBAAkB,GAClBI,SAAUh1B,KAAKwE,MAAMe,qBA7HvC4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YACPU,UAAW,UAJb,mCAzBNgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJra,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,OAEhB4Z,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,yCA5mBM/C,gGCgTbwnH,8MAhTb9jH,MAAQ,CACNsB,YAAY,KACZ4qG,kBAAkB,KAClBC,kBAAkB,KAClB+T,oBAAmB,EACnB9T,2BAA2B,QAI7B7rG,cAAgB,OA0ChBwjH,gBAAkB,SAAChjH,GACjB,IAAMijH,EAAcxnH,EAAK+D,cAAc6M,gBAAgB,CAAC,QAAQ,mBAChE5Q,EAAKf,MAAMivG,YAAX,SAAAllG,OAAgCw+G,EAAYpmF,MAA5C,KAAAp4B,OAAqDzE,OAGvDsrG,sDAAkB,SAAAx5F,EAAOq5F,GAAP,IAAAxT,EAAAyT,EAAAC,EAAA,OAAApmF,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,OACV2vF,EAAYl8F,EAAKf,MAAMuoG,UAAUl8F,gBAAgBokG,GAEnDC,EAAoB,KAClBC,EAA6B,IAE6C,qBAA7C5vG,EAAKf,MAAMuoG,UAAU55D,oBAAsC5tC,EAAKf,MAAMuoG,UAAU55D,oBAAsBrvC,OAAO8B,KAAKL,EAAKf,MAAM2uC,sBAE5IrtC,QAAS,SAAA4oC,GAC3B,IACM8c,EAD2BjmD,EAAKf,MAAM2uC,oBAAoBzE,GAChB+yD,EAAUzlE,WAC1D,IAAKwvB,EACH,OAAO,SAIFA,EAAgBhkD,KAElB0tG,IACHA,EAAoB1pD,EAAgB1mB,KAAK5yB,OAE3Cs5C,EAAgB9c,SAAWA,EAC3B8c,EAAgBxvB,UAAYylE,EAAUzlE,UACtCm5E,EAA2B3pD,EAAgB1mB,KAAK5yB,OAASs5C,IAG3DjmD,EAAK4E,SAAS,CACZE,YAAY,KACZ4qG,oBACAE,8BACA,WACA5vG,EAAK8vG,gBAAgBH,KA/BP,wBAAAp5F,EAAA1I,SAAAwI,EAAArX,iEAmClB8wG,sDAAkB,SAAAh5F,EAAO64F,GAAP,IAAAthB,EAAA6N,EAAAp3F,EAAAk3B,EAAAS,EAAA,OAAAjT,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cAEV8hF,EAAkBruF,EAAKwD,MAAMosG,2BAA2BD,GACxDzT,EAAYl8F,EAAKf,MAAMuoG,UAAUl8F,gBAAgBtL,EAAKwD,MAAMksG,oBAE5D5qG,EAAc,CAClB6H,MAAM0hF,EAAgB53D,UACtBvuB,QAAQmmF,EAAgBnmF,QACxBoB,SAAS+kF,EAAgB/kF,WAIfi2B,KAAO8uD,EAAgB9uD,KAG7BvD,EAAc,CAClBqB,IAAI6+D,EAAU7+D,IACd39B,KAAKw8F,EAAUvvF,MACfA,MAAMuvF,EAAUvvF,MAChBzE,QAAQg0F,EAAUh0F,SAGdu0B,EAAoBz8B,EAAKf,MAAMuoG,UAAU/qE,kBAG3Cy/D,EAAUooB,kBACZ7nF,EAAkBiD,UAAU,GAAGhgC,KAAOw8F,EAAUooB,iBAGlDx/G,EAAYi3B,UAAY,CACtBlS,SAAQ,EACRmS,cACAS,oBACAinF,oBAAmB,GAjCLzsG,EAAA1K,KAAA,GAoCVvM,EAAKf,MAAMslH,iBAAiBl2B,EAAgBllD,SAAS+yD,EAAUzlE,WApCrD,QAsChBz2B,EAAK4E,SAAS,CACZE,cACA6qG,sBAxCc,yBAAA14F,EAAApJ,SAAAiJ,EAAA9X,iEA4ClBigC,kBAAoB,WAClBj/B,EAAK4E,SAAS,CACZ8+G,oBAAmB,gFA7HjB1kH,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,mKAK9CD,KAAKmF,qBACCnF,KAAKixG,gRAILP,EAAoB1wG,KAAKC,MAAM6uG,UAAUG,QAAUjvG,KAAKC,MAAMuoG,UAAUl8F,gBAAgBtM,KAAKC,MAAM6uG,UAAUG,QAAUjvG,KAAKC,MAAM6uG,UAAUG,OAAS1vG,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAiB,YAEvMtM,KAAK+E,cAAc6H,aAAarN,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAjE,eAAAsL,EAAArY,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAkF,SAAAoD,EAAOzC,GAAP,IAAA7H,EAAA,OAAA0kB,EAAApqB,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,UAChFzH,EAAcL,EAAKxF,MAAMuoG,UAAUl8F,gBAAgBqB,GACnClI,EAAKV,cAAc24B,kBAAkB53B,EAAY6H,SACjD7H,EAAYu4B,IAHoD,CAAAhuB,EAAA9C,KAAA,eAAA8C,EAAA9C,KAAA,EAI9E9H,EAAKxF,MAAMq+B,aAAax4B,EAAY6H,MAAM7H,EAAYoD,QAAQpD,EAAYu4B,KAJI,wBAAAhuB,EAAAxB,SAAAuB,EAAApQ,SAAlF,gBAAA8O,GAAA,OAAA8I,EAAA7I,MAAA/O,KAAAgP,YAAA,WAQF0hG,GAAqBA,IAAsB1wG,KAAKC,MAAM6uG,UAAUG,QAClEjvG,KAAKuoH,gBAAgB7X,GAGvB1wG,KAAK6wG,gBAAgBH,wLAGErrG,EAAUC,sEACjCtF,KAAKmF,cAEoBE,EAAUypG,UAAUG,SAAWjvG,KAAKC,MAAM6uG,UAAUG,wCAErEjvG,KAAKixG,mJAgGb,OAAKjxG,KAAKwE,MAAMksG,kBAKdvpF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPmd,GAAI,CAAC,EAAE,GACPta,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACV6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,4BAGA6iB,EAAA/mB,EAAAC,cAACkvB,GAAA,EAADhwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgE,GAAI,aACJ4rB,aAAa,EACbjR,cAAc,EACdgB,SAAU5f,KAAKuoH,gBACfhjH,cAAevF,KAAKwE,MAAMksG,kBAC1BpkG,gBAAiBtM,KAAKC,MAAMuoG,UAAUl8F,oBAIxCtM,KAAKwE,MAAMosG,4BAA8B5wG,KAAKwE,MAAMmsG,mBAClDxpF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,6BAGA6iB,EAAA/mB,EAAAC,cAACkvB,GAAA,EAADhwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgE,GAAI,aACJ4rB,aAAa,EACbjQ,SAAU5f,KAAK8wG,gBACfvrG,cAAevF,KAAKwE,MAAMmsG,kBAC1BrkG,gBAAiBtM,KAAKwE,MAAMosG,+BAKlC5wG,KAAKwE,MAAMksG,mBAAqB1wG,KAAKwE,MAAMmsG,kBACzCxpF,EAAA/mB,EAAAC,cAAC06B,GAAA,EAADx7B,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEiiC,aAAa,EACbnE,eAAe,EACfgE,iBAAiB,EACjBj8B,YAAa9F,KAAKwE,MAAMsB,YACxBm6B,kBAAmBjgC,KAAKigC,kBACxB16B,cAAevF,KAAKwE,MAAMksG,kBAC1BxgG,iBAAkBlQ,KAAKC,MAAMiQ,mBAG1BlQ,KAAKC,MAAMuM,QAoCV2a,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAIH9c,KAAKwE,MAAMkgH,mBACTv9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,UACND,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,YAErD0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,QAMQnB,KAAKwE,MAAMksG,kBANnB,sCAUFvpF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,WACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,sBAMsBnB,KAAKwE,MAAMksG,kBANjC,sBAvERvpF,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAGLqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,QACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,uDAQAgmB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,KAEXY,YAAaP,KAAKC,MAAM66B,2BAL1B,cA+DR,OAxJH,YAlJgBh6B,aC2xBd2nH,8MAxwBbjkH,MAAQ,CACN0/G,UAAS,EACT3qC,YAAY,GACZ4qC,YAAW,EACX91G,OAAO,UACPorE,cAAc,GACd3zE,YAAY,KACZkR,WAAW,CACTqgE,MAAM,CACJ78D,OAAO,KACP0X,SAAQ,IAGZkyF,cAAa,EACb7+G,cAAc,KACd++G,gBAAe,EACfC,gBAAe,EACfG,oBAAmB,EACnBz3C,oBAAoB,KACpBpxC,2BAA0B,EAC1B+0E,2BAA2B,QAI7B7rG,cAAgB,OAwGhB8rG,sDAAkB,SAAAx5F,EAAO9R,GAAP,IAAA0nE,EAAAo4C,EAAAp+D,EAAAnhD,EAAAk3B,EAAAS,EAAA,OAAAjT,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,cAEV0/D,EAAsBjsE,EAAKf,MAAMuoG,UAAUl8F,gBAAgB/G,GAC3D8/G,EAA2BrkH,EAAKf,MAAM2uC,oBAAoBq+B,EAAoB9iC,UAE9E8c,EAAkBo+D,EAAwBp4C,EAAoBx1C,YAE9D3xB,EAAc,CAClB6H,MAAMs/D,EAAoBx1C,UAC1BvuB,QAAQ+jE,EAAoB/jE,QAC5BoB,SAAS2iE,EAAoB3iE,WAInBi2B,KAAO0mB,EAAgB1mB,KAG7BvD,EAAc,CAClBqB,IAAI4uC,EAAoB5uC,IACxB39B,KAAKusE,EAAoBvsE,KACzBiN,MAAMs/D,EAAoBt/D,MAC1BzE,QAAQ+jE,EAAoB/jE,SAGxBu0B,EAAoBwvC,EAAoBxvC,kBAG1CwpB,EAAgBq+D,kBAClB7nF,EAAkBiD,UAAU,GAAGhgC,KAAOumD,EAAgBq+D,iBAGxDx/G,EAAYi3B,UAAY,CACtBlS,SAAQ,EACRmS,cACAS,oBACAinF,oBAAmB,GAnCLntG,EAAAhK,KAAA,GAsCVvM,EAAKf,MAAMslH,iBAAiBt4C,EAAoB9iC,SAAS8c,EAAgBxvB,WAtC/D,QAwChBz2B,EAAK4E,SAAS,CACZE,cACAP,gBACA0nE,wBA3Cc,yBAAA11D,EAAA1I,SAAAwI,EAAArX,iEA+ClBq3E,2BAAQ,SAAAv/D,IAAA,IAAA0tG,EAAAC,EAAAC,EAAA,OAAAl7F,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,UACDvM,EAAKwD,MAAM8/G,eADV,CAAArsG,EAAA1K,KAAA,eAAA0K,EAAAM,OAAA,SAEG,MAFH,QAKU,EACO,EACjBitG,EAAUjmH,OAAO8B,KAAKL,EAAKwD,MAAMi1E,eAAe,GAEhDgsC,EAAgB,SAAC/3G,EAAGmJ,GACxB,IAAMqmB,EAA4B,YAAdxvB,EAAGK,OAGjBskB,EAAY,CAChBzI,cAAa,iBACbC,YAAa,QACbC,WAAY9oB,EAAKf,MAAMsF,cACvB43B,WAAYjvB,SAXO,IAcjB2I,IACFwb,EAAUvI,WAAa9oB,EAAK+D,cAAcytB,oBAAoB3b,KAI5DA,GAA8B,UAArBwb,EAAUtkB,SACrB/M,EAAK+D,cAAc4kB,yBAAyB0I,GAG9CrxB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5Bi/G,eAAernF,EACflmB,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERqgE,MAAM,CACJ78D,OAAO,KACP0X,SAAQ,SAMVwzF,EAAuB,SAACh4G,GAC5B,IAAM8M,EAAS9M,EAAGglB,gBAClB1xB,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERqgE,MAAM93E,OAAAsmD,EAAA,EAAAtmD,CAAA,GACD+F,EAAU0R,WAAWqgE,MADrB,CAEH78D,iBAMRxZ,EAAKf,MAAM8yB,0BAA0B/xB,EAAKwD,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAM,WAAY,CAAC8kH,GAAU,KAAMC,EAAeC,GAExI1kH,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERqgE,MAAM93E,OAAAsmD,EAAA,EAAAtmD,CAAA,GACD+F,EAAU0R,WAAWqgE,MADrB,CAEHnlD,SAxDU,SALV,wBAAAja,EAAApJ,SAAAiJ,EAAA9X,WAmER87B,UAAY,SAACztB,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAUia,SAASja,EAAOlF,gBAC1DnI,EAAK4E,SAAS,CACZyI,cAKN4xB,kBAAoB,WAClBj/B,EAAK4jH,cACL5jH,EAAK4E,SAAS,CACZ8+G,oBAAmB,gFAlOjB1kH,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,mKAK9CD,KAAKmF,qBACCnF,KAAKixG,0SAKL3zE,EAAwBt9B,KAAKwE,MAAMyoE,oBAAoBxvC,2BAEvD9lB,QAAQqD,IAAI,CAChBhb,KAAKC,MAAMq+B,aAAahB,EAAsB58B,KAAK48B,EAAsBp0B,QAAQo0B,EAAsBe,KACvGr+B,KAAKC,MAAMq+B,aAAat+B,KAAKwE,MAAMyoE,oBAAoBvsE,KAAKV,KAAKwE,MAAMyoE,oBAAoB/jE,QAAQlJ,KAAKwE,MAAMyoE,oBAAoB5uC,8BAG3E1mB,QAAQqD,IAAI,CACnEhb,KAAK+E,cAAc05B,oBAAoBz+B,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAK,aAC7FV,KAAK+E,cAAc44B,mBAAmB39B,KAAKwE,MAAMyoE,oBAAoBvsE,KAAK48B,EAAsBp0B,QAAQlJ,KAAKC,MAAMuM,iDAF9GusE,OAAel9C,OAKhBn2B,EAAW,GACX+zE,EAAgB,GAChBF,EAAc,GAChB+qC,GAAiB,EAEE,OAAnBvrC,mBACOC,EAAa,eAAGA,GAAcD,qCACCphE,QAAQqD,IAAI,CAChDhb,KAAK+E,cAAc05B,oBAAoBz+B,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAK,cAAc,CAACs4E,IAC5Gh5E,KAAK+E,cAAc05B,oBAAoBz+B,KAAKwE,MAAMyoE,oBAAoBxvC,kBAAkB/8B,KAAK,gBAAgB,CAACV,KAAKC,MAAMuM,QAAQwsE,0CAF9HI,OAAWE,OAIZF,GAA6B,OAAfA,IAChBG,EAAYP,GAAch5E,KAAK+E,cAAcsM,iBAAiB+nE,EAAWp5E,KAAKwE,MAAMyoE,oBAAoB3iE,WAErF,OAAjBgvE,IACFA,EAAet5E,KAAK+E,cAAcsM,iBAAiBioE,EAAat5E,KAAKwE,MAAMyoE,oBAAoB3iE,WAC9EmH,GAAG,KAElBgoE,EAAcT,GAAcM,EAExBN,EAAaD,IACfurC,GAAiB,YAf+BtrC,4BAqBxDtzE,EAAS+zE,cAAgBA,UAGrB2qC,EAAgB3qC,GAAiBl6E,OAAO8B,KAAKo4E,GAAen4E,OAAO,EAEnE6/B,EAAqBnhC,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,mBACjEyvB,EAA+BF,EAAmBG,eAExD57B,EAAS6+G,gBAAiB,EAC1B7+G,EAAS6zE,YAAcA,EACvB7zE,EAAS4+G,eAAiBA,EAC1B5+G,EAAS0+G,aAAeA,EACxB1+G,EAASy+G,YAAcC,GAAgB/iF,EACvC37B,EAASw+G,SAAWI,GAAkBF,EACtC1+G,EAAS2I,OAAS+1G,EAAe,SAAW,UAC5C1+G,EAASm2B,0BAA4BA,EAErC77B,KAAK4F,SAASF,uQAIRH,EAAgBvF,KAAKC,MAAM6uG,UAAUG,QAAUjvG,KAAKC,MAAMuoG,UAAUl8F,gBAAgBtM,KAAKC,MAAM6uG,UAAUG,QAAUjvG,KAAKC,MAAM6uG,UAAUG,OAAS1vG,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAiB,YAEnMtM,KAAK+E,cAAc6H,aAAarN,OAAO8B,KAAKrB,KAAKC,MAAMuoG,UAAUl8F,iBAAjE,eAAAs3B,EAAArkC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAkF,SAAA8L,EAAOnL,GAAP,IAAA7H,EAAA,OAAA0kB,EAAApqB,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,UAChFzH,EAAcL,EAAKxF,MAAMuoG,UAAUl8F,gBAAgBqB,GACnClI,EAAKV,cAAc24B,kBAAkB53B,EAAY6H,SACjD7H,EAAYu4B,IAHoD,CAAArlB,EAAAzL,KAAA,eAAAyL,EAAAzL,KAAA,EAI9E9H,EAAKxF,MAAMq+B,aAAax4B,EAAY6H,MAAM7H,EAAYoD,QAAQpD,EAAYu4B,KAJI,wBAAArlB,EAAAnK,SAAAiK,EAAA9Y,SAAlF,gBAAAsY,GAAA,OAAAsrB,EAAA70B,MAAA/O,KAAAgP,YAAA,WAQNhP,KAAK6wG,gBAAgBtrG,wLAGEF,EAAUC,sEACjCtF,KAAKmF,cAEoBE,EAAUypG,UAAUG,SAAWjvG,KAAKC,MAAM6uG,UAAUG,wCAErEjvG,KAAKixG,oBAGgB3rG,EAAUC,gBAAkBvF,KAAKwE,MAAMe,eAElEvF,KAAK4kH,oJAqIA,IAAAn+G,EAAAzG,KAEP,IAAKA,KAAKwE,MAAMe,cACd,OAAO,KAGT,IACM87B,EADqBrhC,KAAK+E,cAAc6M,gBAAgB,CAAC,QAAQ,mBACf0vB,eAElDkkF,EAAUxlH,KAAKwE,MAAMi1E,eAAiBl6E,OAAO8B,KAAKrB,KAAKwE,MAAMi1E,eAAen4E,OAAO,EAAI/B,OAAO8B,KAAKrB,KAAKwE,MAAMi1E,eAAe,GAAK,KAClIH,EAAet5E,KAAKwE,MAAMi1E,eAAiBl6E,OAAOiO,OAAOxN,KAAKwE,MAAMi1E,eAAen4E,OAAO,EAAI/B,OAAOiO,OAAOxN,KAAKwE,MAAMi1E,eAAe,GAAK,KAEjJ,OACEtyD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPmd,GAAI,CAAC,EAAE,GACPta,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACV6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,GAEPwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,4BAGA6iB,EAAA/mB,EAAAC,cAACkvB,GAAA,EAADhwB,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEgE,GAAI,aACJ4rB,aAAa,EACbjR,cAAc,EACdgB,SAAU5f,KAAK6wG,gBACftrG,cAAevF,KAAKwE,MAAMe,cAC1B+G,gBAAiBtM,KAAKC,MAAMuoG,UAAUl8F,qBAIvCtM,KAAKwE,MAAM2/G,YAAcnkH,KAAKwE,MAAM0/G,WACnC/8F,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFuC,GAAG,EACH8a,GAAG,IAGLqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAOV,KAAKwE,MAAMq3B,0BAA4B,WAAa,WAC3Dp7B,MAAQT,KAAKwE,MAAMq3B,0BAA4B77B,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAEzG0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVT,MAAO,WACPU,UAAW,QAJb,yCASFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAOV,KAAKwE,MAAM4/G,aAAe,WAAa,WAC9C3jH,MAAQT,KAAKwE,MAAM4/G,aAAepkH,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAE5F0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVT,MAAO,WACPU,UAAW,QAJb,gBAMgBnB,KAAKwE,MAAMyoE,oBAAoBt/D,QAGjDwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAOV,KAAKwE,MAAM8/G,eAAiB,WAAa,SAChD7jH,MAAQT,KAAKwE,MAAM8/G,eAAiBtkH,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAE9F0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVT,MAAO,WACPU,UAAW,QAJb,sCASFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAOV,KAAKwE,MAAM+/G,eAAiB,WAAa,SAChD9jH,MAAQT,KAAKwE,MAAM+/G,eAAiBvkH,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UAAY,aAE9F0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJxJ,SAAU,EACVT,MAAO,WACPU,UAAW,QAJb,cAMcnB,KAAKwE,MAAMe,cANzB,SAaRvF,KAAKwE,MAAMe,cACT4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKznB,MAAO,GAERK,KAAKwE,MAAMq3B,4BAA8B77B,KAAKwE,MAAM2/G,YAAcnkH,KAAKwE,MAAM0/G,WAC3E/8F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJra,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,sBAGA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFE,MAAM,IACN40B,YAAY,WACV,OAAO9tB,EAAKjC,MAAM2/G,WAAa19G,EAAKq1B,UAAU,WAAa,OAG/D35B,eAAe,EACfE,YAAcrC,KAAKwE,MAAM2/G,WACzB/hH,SAAiC,YAAtBpC,KAAKwE,MAAM6J,QAEtB8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACuwB,GAAA,EAAD,CACElZ,YAAa,CACXrJ,OAAO,WAET4d,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,MAIT+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,GAFd,aAQJkmB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFE,MAAM,IACN40B,YAAY,WACV,OAAO9tB,EAAKjC,MAAM0/G,SAAWz9G,EAAKq1B,UAAU,UAAY,OAG5D35B,eAAe,EACfE,YAAcrC,KAAKwE,MAAM0/G,SACzB9hH,SAAiC,WAAtBpC,KAAKwE,MAAM6J,QAEtB8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACuwB,GAAA,EAAD,CACElZ,YAAa,CACXrJ,OAAO,UAET4d,UAAW,CACTvrB,KAAK,OACLT,MAAM,CACJmD,GAAG,MAIT+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,GAFd,aAYY,YAAtBjB,KAAKwE,MAAM6J,OACTgzB,EACEla,EAAA/mB,EAAAC,cAAC06B,GAAA,EAADx7B,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEiiC,aAAa,EACbtC,gBAAiB,GACjB7B,eAAe,EACfgE,iBAAiB,EACjBY,cAAe,eACflmB,SAAU,uBACV3W,YAAa9F,KAAKwE,MAAMsB,YACxBP,cAAevF,KAAKwE,MAAMe,cAC1B05B,gBAAiBj/B,KAAK4kH,YAAYj2F,KAAK3uB,MACvCkQ,iBAAkBlQ,KAAKC,MAAMiQ,iBAC7B+vB,kBAAmBjgC,KAAKigC,kBAAkBtR,KAAK3uB,MAC/C4iC,cAAa,gBAAA54B,OAAkBhK,KAAKwE,MAAMyoE,oBAAoBt/D,MAAjD,+CAAA3D,OAAoGhK,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,MAAhI,OAGV3N,KAAKC,MAAMuM,QAoCV2a,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACF8C,GAAG,IAIHijH,EACEr+F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNH,MAAO,WACPC,KAAM,mBAERymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAGTnB,KAAKwE,MAAM8/G,eACTn9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CACEjc,MAAO,YADT,qFAIA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CACEjc,MAAO,YADT,mCAGmC64E,EAAa/vE,QAAQ,GAHxD,IAG6DvJ,KAAKwE,MAAMyoE,oBAAoBt/D,MAH5F,kEAK+C,qBAApC3N,KAAKwE,MAAM+0E,YAAYisC,IAC9Br+F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CACEjc,MAAO,YAEP0mB,EAAA/mB,EAAAC,cAAA,WAHF,eAGqBL,KAAKwE,MAAM+0E,YAAYisC,GAASj8G,QAAQ,GAH7D,IAGkEvJ,KAAKwE,MAAMyoE,oBAAoBt/D,UAQ3G3N,KAAKwE,MAAMkgH,mBACbv9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,UACND,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,YAErD0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,wCAMwCnB,KAAKwE,MAAMyoE,oBAAoBt/D,MANvE,qBAUFwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,WACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,sBAMsBnB,KAAKwE,MAAMyoE,oBAAoBt/D,MANrD,sBA9GRwZ,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACFqd,GAAG,IAGLqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,QACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,uDAQAgmB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,KAEXY,YAAaP,KAAKC,MAAM66B,2BAL1B,cAuGV3T,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACF8C,GAAG,IAGL4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,WACPU,UAAW,UAHb,iDAWNgmB,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,EACF8C,GAAG,IAIHvC,KAAKwE,MAAMwS,WAAWqgE,MAAMnlD,QAC1B/K,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACsW,EAAA,EAADpX,OAAAC,OAAA,GAAmBQ,KAAKC,MAAxB,CAA+Bwc,SAAQ,qBAAwBD,WAAU,gCAAmC1O,KAAM9N,KAAKwE,MAAMwS,WAAWqgE,MAAM78D,WAE9Ixa,KAAKwE,MAAM+/G,eACbp9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,UACND,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,YAErD0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,wCAMwCnB,KAAKwE,MAAMe,cANnD,QAQA4hB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ3b,UAAW,SACX6b,WAAY,UACZK,QAAU,SAAA7W,GAAC,OAAIC,EAAKxG,MAAMivG,YAAYzoG,EAAKjC,MAAMyoE,oBAAoB9iC,SAAS,IAAI1jC,EAAKjC,MAAMyoE,oBAAoBx1C,aAJnH,wBASAz3B,KAAKwE,MAAM8/G,eACbn9F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNH,MAAO,WACPC,KAAM,eAERymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,+BAM8BgmB,EAAA/mB,EAAAC,cAAA,WAN9B,0BAM4DL,KAAKwE,MAAMsB,YAAYy6B,KAAK5yB,MANxF,QAQAwZ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACXwd,GAAG,EACHnd,MAAM,CAAC,EAAE,IACTG,UAAUE,KAAKC,MAAMsD,MAAMC,OAAOG,QAEpCpD,YAAc,SAAAiG,GAAC,OAAIC,EAAK4wE,UAN1B,WAaJlwD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNH,MAAO,WACPC,KAAM,mBAERymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAEXgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CACEjc,MAAO,YADT,mCAGmC64E,EAAa/vE,QAAQ,GAHxD,IAG6DvJ,KAAKwE,MAAMyoE,oBAAoBt/D,MAH5F,qEAK+C,qBAApC3N,KAAKwE,MAAM+0E,YAAYisC,IAC9Br+F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CACEjc,MAAO,YAEP0mB,EAAA/mB,EAAAC,cAAA,WAHF,eAGqBL,KAAKwE,MAAM+0E,YAAYisC,GAASj8G,QAAQ,GAH7D,IAGkEvJ,KAAKwE,MAAMyoE,oBAAoBt/D,YAYnH,cAlwBa7M,4EC6xCd4nH,8MAzyCblkH,MAAQ,CACNmkH,QAAQ,GACR3xG,WAAY,CACVwD,OAAO,KACP0X,SAAQ,EACR02F,YAAY,IAEdv6G,OAAO,SACPw6G,WAAU,EACVC,WAAW,KACXC,WAAW,KACXC,WAAU,EACVC,aAAa,GACbnjH,YAAY,KACZ0gC,aAAa,KACbqvC,aAAa,KACbqzC,aAAY,EACZC,aAAa,KACbC,cAAc,KACdC,kBAAkB,GAClBC,kBAAiB,EACjBrkD,OAAO,CACL,CACEvkE,KAAK,QACLkK,KAAK,WAEP,CACElK,KAAK,YACLkK,KAAK,WAEP,CACElK,KAAK,gBACLkK,KAAK,eAMX7F,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,yCAItCoO,GACRrO,KAAK4F,SAAS,CACZyI,SACA06G,WAAW,KACXD,WAAW,KACXM,cAAc,KACdE,iBAAiB,2JAKnBtpH,KAAK4F,SAAS,CACZoR,WAAY,CACVwD,OAAO,KACP0X,SAAQ,EACR02F,YAAY,6PAMhB5oH,KAAKmF,YACLnF,KAAKq8G,qMAGkBh3G,EAAUC,mEACjCtF,KAAKmF,YACLnF,KAAKupH,eACLvpH,KAAKwpH,cAEoBlkH,EAAUgkH,mBAAqBtpH,KAAKwE,MAAM8kH,kBAAoBtpH,KAAKwE,MAAM8kH,kBAEhGtpH,KAAKq8G,qSAKDv2G,EAAc9F,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY,SAC9D63G,EAAuBzpH,KAAKC,MAAMuoG,UAAUr2D,UAAUs3E,qBACtDjtE,EAAYx8C,KAAK+E,cAAc6M,gBAAgB,CAAC,UAAU,8BACrC5R,KAAK+E,cAAcg1D,sBAAsB,eAAgB,eAAgB,CAACvd,YAAWC,QAAS,yBAAnHitE,SACAC,EAA6BD,EAAaj8G,OAAQ,SAAAhO,GAAC,OAAIA,EAAEm9C,aAAagtE,eAAezgH,gBAAkBsgH,EAAqBvgH,QAAQC,gBAAgBqJ,IAAK,SAAA/S,GAAC,OAAIA,EAAEm9C,aAAaitE,QAG7KR,EAAoB,aACpBrpH,KAAK+E,cAAc6H,aAAa+8G,EAAhC,eAAA98G,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA4D,SAAAoD,EAAOkkC,GAAP,IAAA/hB,EAAApiB,EAAAyH,EAAA8pD,EAAAm2C,EAAAiS,EAAAC,EAAAC,EAAArxE,EAAA,OAAAnuB,EAAApqB,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAC1DglB,EAD0D,cAAAvoB,OAC7BsqC,GAD6BjkC,EAAA9C,KAAA,EAE1D9H,EAAKxF,MAAMq+B,aAAa/L,EAAa+hB,EAAgBm1E,EAAqBprF,KAFhB,cAAAhuB,EAAA9C,KAAA,EAUtDoK,QAAQqD,IAAI,CAElBvV,EAAKV,cAAc05B,oBAAoBlM,EAAa,SACpD9sB,EAAKV,cAAc05B,oBAAoBlM,EAAa,aACpD9sB,EAAKV,cAAc05B,oBAAoBlM,EAAa,iBACpD9sB,EAAKV,cAAc4nC,gBAAgB7mC,EAAY6H,MAAM2mC,GACrD7uC,EAAKV,cAAc05B,oBAAoBlM,EAAa,uBAhBQ,OAAApiB,EAAAE,EAAAE,KAAAqH,EAAArY,OAAAouC,EAAA,EAAApuC,CAAA4Q,EAAA,GAK9DuxD,EAL8D9pD,EAAA,GAM9DigG,EAN8DjgG,EAAA,GAO9DkyG,EAP8DlyG,EAAA,GAQ9DmyG,EAR8DnyG,EAAA,GAS9DoyG,EAT8DpyG,EAAA,GAmB5D+gC,EAAiBlzC,EAAKV,cAAc6I,MAAM,GAC1Co8G,IACFrxE,EAAiBqxE,EAAexvE,OAAQ,SAAC6oC,EAAMhyD,GAE7C,OADAgyD,EAAQA,EAAM/0E,KAAK+iB,IAEnB5rB,EAAKV,cAAc6I,MAAM,IAE3B+qC,EAAiBlzC,EAAKV,cAAcsM,iBAAiBsnC,EAAe7yC,EAAYwE,WAKlF++G,EAAkB7/G,KAAK,CACrBk4D,QACAm2C,YACAtlF,eACAu3F,gBACAnxE,iBACArE,kBACAy1E,qBAtC8D,yBAAA15G,EAAAxB,SAAAuB,EAAApQ,SAA5D,gBAAA8O,GAAA,OAAAjC,EAAAkC,MAAA/O,KAAAgP,YAAA,6BAyCqBhP,KAAK+E,cAAc4nC,gBAAgB,OAAO3sC,KAAKC,MAAMuM,iBAA1Eg6B,SAINxmC,KAAK4F,SAAS,CACZE,cACA0gC,eACA6iF,gKAKF,IAAMR,EAAYtpH,OAAOiO,OAAOxN,KAAKwE,MAAMmkH,SAASrnH,OAAO,EACvDunH,IAAc7oH,KAAKwE,MAAMqkH,WAC3B7oH,KAAK4F,SAAS,CACZijH,2DAKex3F,GAMnB,MALe,CACbvqB,MAAM,KACNwrB,WAAW,UACX+nC,aAAa,CAAChpC,0CAKJ3jB,GAAG,IAAAjH,EAAAzG,KAEf,GAAkB,YAAd0N,EAAGK,OAAqB,CAC1B/N,KAAKq8G,gBAEL,IAAM4N,EAAmBv8G,EAAG2+C,WAAa3+C,EAAG2+C,UAAU3a,KAAOhkC,EAAG2+C,UAAU3a,KAAKliB,KAAM,SAAA4C,GAAG,OAAIA,EAAIlpB,QAAQC,gBAAkB1C,EAAKjC,MAAMsB,YAAYoD,QAAQC,gBAAkB,KAC3K,GAAI8gH,EAAiB,CACnB,IAAMb,EAAgBppH,KAAK+E,cAAcsM,iBAAiBnD,SAAS+7G,EAAiB9lH,KAAK,IAAInE,KAAKwE,MAAMsB,YAAYwE,UACpHtK,KAAK4F,SAAS,CACZwjH,4DAMQ17G,EAAG2jB,EAAOsB,GAEN,YAAdjlB,EAAGK,QACL/N,KAAKq8G,8DAIazxG,GAAwB,IAAnBs/G,EAAmBl7G,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,IAAAA,UAAA,GACxCm7G,EAAe,KACnB,OAAQv/G,GACN,IAAK,UACHu/G,EAAe,sBACjB,MACA,IAAK,YACHA,EAAe,+BACjB,MACA,IAAK,SACHA,EAAe,SACjB,MACA,IAAK,OACHA,EAAe,QACjB,MACA,IAAK,UACL,IAAK,QACHA,EAAe,SACjB,MACA,QACEA,EAAe,KAQnB,OAJKD,GAAgBC,IACnBA,EAAe,IAAIx2E,OAAOw2E,IAGrBA,wCAGI,IAAAvwF,EAAA55B,KAEX,IAAKA,KAAKwE,MAAM2kH,aACd,OAAO,EAGT,IAAMlkD,EAASjlE,KAAKwE,MAAMygE,OACtBikD,EAAc3pH,OAAOiO,OAAOxN,KAAKwE,MAAM2kH,cAAc7nH,SAAW2jE,EAAO3jE,OAEvE4nH,GACF3pH,OAAOiO,OAAOxN,KAAKwE,MAAM2kH,cAAc5nH,QAAS,SAACk5B,EAAW2vF,GAC1D,IAAMC,EAAYplD,EAAOmlD,GACnBD,EAAevwF,EAAK0wF,sBAAsBD,EAAUz/G,MACpD2/G,GAAaJ,GAAkD,OAAnC1vF,EAAW4O,MAAM8gF,GACnDjB,EAAcA,GAAeqB,IAK7BrB,IAAgBlpH,KAAKwE,MAAM0kH,aAC7BlpH,KAAK4F,SAAS,CACZsjH,oDAKM1iH,EAAE4jH,GACZ,IAAII,EAAchkH,EAAEuW,OAAOjW,MAC3B9G,KAAK4F,SAAS,CACZ4kH,oDAIQhkH,EAAE4jH,GACZ,IAAI3vF,EAAaj0B,EAAEuW,OAAOjW,MAE1B9G,KAAK4F,SAAS,SAACN,GAAD,MAAgB,CAC5B6jH,aAAa5pH,OAAAsmD,EAAA,EAAAtmD,CAAA,GACR+F,EAAU6jH,aADH5pH,OAAAkrH,GAAA,EAAAlrH,CAAA,GAET6qH,EAAY3vF,8CAMjB,GAA8B,OAA1Bz6B,KAAKwE,MAAMukH,WAAoB,CACjC,IAAIJ,EAAU3oH,KAAKwE,MAAMmkH,QACzB,GAAIA,EAAQ3oH,KAAKwE,MAAMukH,YAAY,QAC1BJ,EAAQ3oH,KAAKwE,MAAMukH,YAC1BJ,EAAUppH,OAAOiO,OAAOm7G,GAIxB3oH,KAAK4F,SAAS,CACZ+iH,UACAI,WALiB,KAMjBI,aALmB,6CAWhB,IAAAvZ,EAAA5vG,KA2BT,GAxBeT,OACEiO,OAAOxN,KAAKwE,MAAM2kH,cAAc17G,OAAQ,SAAA7G,GAAC,OAAIA,EAAEtF,OAAO,IACtDkR,IAAK,SAACioB,EAAW2vF,GAChB,IAAMC,EAAYza,EAAKprG,MAAMygE,OAAOmlD,GACpC,OAAQC,EAAUz/G,MAChB,IAAK,YACH6vB,EAAaA,EAAW9B,MAAM,KAChC,MACA,IAAK,YACH8B,EAAaA,EAAW9B,MAAM,KAAKnmB,IAAK,SAAAu4B,GAAC,OAAI6kE,EAAK7qG,cAAcyrC,KAAKzF,KACvE,MACA,IAAK,UACHtQ,EAAam1E,EAAK7qG,cAAcyrC,KAAK/V,GACvC,MACA,QACoC,OAA9B4vF,EAAUz/G,KAAKoR,QAAQ,KACzBye,EAAaA,EAAW9B,MAAM,MAKpC,OAAO8B,IAGdn5B,OAAOtB,KAAKwE,MAAMygE,OAAO3jE,OAClC,OAAO,EAGT,IAAM+M,EAAS,CACbq8G,QAAQ,KACRp2E,gBAAgB,KAChB2wB,OAAOjlE,KAAKwE,MAAM2kH,cAIdR,EAAUppH,OAAOiO,OAAOxN,KAAKwE,MAAMmkH,SAEX,OAA1B3oH,KAAKwE,MAAMukH,WACbJ,EAAQn/G,KAAK6E,GAEbs6G,EAAQ3oH,KAAKwE,MAAMukH,YAAc16G,EAMnCrO,KAAK4F,SAAS,CACZ+iH,UACAK,WAdgB,EAehBD,WANiB,KAOjBI,aANmB,6CAUTJ,GAEZ,IAAK/oH,KAAKwE,MAAMmkH,QAAQI,GACtB,OAAO,EAGT,GAAIA,IAAe/oH,KAAKwE,MAAMukH,WAC5B,OAAO,EAGT,IAGMI,EAHSnpH,KAAKwE,MAAMmkH,QAAQI,GAGN9jD,OAE5BjlE,KAAK4F,SAAS,CACZojH,WAJgB,EAKhBD,aACAI,uDAIUL,GAEZ,GAAIA,IAAe9oH,KAAKwE,MAAMskH,WAAW,CACvC,IAAMW,EAAuBzpH,KAAKC,MAAMuoG,UAAUr2D,UAAUs3E,qBACtDkB,EAAmB3qH,KAAKwE,MAAM6kH,kBAAkBP,GAChDjzC,EAAe,CACnBx3C,IAAIorF,EAAqBprF,IACzB39B,KAAKiqH,EAAiBp4F,aACtBrpB,QAAQyhH,EAAiBr2E,iBAE3Bt0C,KAAK4F,SAAS,CACZkjH,aACAjzC,eACAuzC,cAAc,6CAKPJ,GACX,GAAIA,IAAchpH,KAAKwE,MAAMwkH,UAC3B,OAAO,EAKThpH,KAAK4F,SAAS,CACZojH,YACAD,WAJiB,oFAQFviH,6FACjBA,EAAEiwB,iBAEIgzF,EAAuBzpH,KAAKC,MAAMuoG,UAAUr2D,UAAUs3E,qBACtDmB,EAAc5qH,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY,OAAO,YAErEjM,EAAW,SAAC+H,EAAGmJ,EAAM+xG,GACzB,IAAM1rF,EAA4B,YAAdxvB,EAAGK,OACjB46G,EAAUppH,OAAOiO,OAAOonG,EAAKpwG,MAAMmkH,SACnCkC,EAAe38G,SAAS06G,KAAe16G,SAAS0mG,EAAKpwG,MAAMmkH,QAAQrnH,QAAQ,EAC3EgoH,EAAmBpsF,GAAe2tF,EAExC,GAAI3tF,EAAY,CACd,IAAM4tF,EAAsBp9G,EAAG2+C,UAAUzhC,QAAUld,EAAG2+C,UAAUzhC,OAAOmgG,aAAer9G,EAAG2+C,UAAUzhC,OAAOmgG,aAAanuE,aAAa,GAAxG,KAAA5yC,OAAkH0D,EAAG2+C,UAAU3a,KAAK,GAAGvtC,KAAK6X,QAAQ,KAChL2sG,EAAQC,GAAat0E,gBAAkBw2E,OAGvCnC,EAAQC,GAAa8B,SAAU,EAKjC9V,EAAKhvG,SAAS,CACZ+iH,UACAW,oBACA,WACIuB,GACFjW,EAAKx3F,uBAKLqV,EAAkB,SAAC/kB,EAAGk7G,GAC1B,IAAMpuG,EAAS9M,EAAGglB,gBAEZ1b,EAAazX,OAAOC,OAAO,GAAGo1G,EAAKpwG,MAAMwS,YAC/CA,EAAWwD,OAASA,EACpBxD,EAAW4xG,YAAYp/G,KAAKo/G,GAC5BhU,EAAKhvG,SAAS,CACZoR,gBAIJhX,KAAKwE,MAAMmkH,QAAQpnH,QAAQ,SAAC8M,EAAOu6G,GACjC,IAAMoC,EAAe38G,EAAO42D,OAAO,GAC7BgmD,EAAmB58G,EAAO42D,OAAO,GACjC6kD,EAAgBz7G,EAAO42D,OAAO,GAE9BimD,EAAWtW,EAAK30G,MAAMiY,KAAKC,IAAIkmB,IAAIg/E,iBACvC,CAAC,UAAU,UAAU,UAAU,WAC/B,CAAC2N,EAAaJ,EAAYK,EAAiBnB,IAEvCzvD,EAAe,CAACovD,EAAqBvgH,QAL3B,8CAK2CgiH,GAC3DtW,EAAK7vG,cAAcguB,0BAA0B,eAAgB,gBAAiBsnC,EAAc,SAAC3sD,EAAGmJ,GAAJ,OAAclR,EAAS+H,EAAGmJ,EAAM+xG,IAAc,SAACl7G,GAAD,OAAQ+kB,EAAgB/kB,EAAGk7G,OAGvK5oH,KAAK4F,SAAS,SAACN,GAAD,MAAgB,CAC5B0R,WAAWzX,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAU0R,WADL,CAERkb,SAAQ,0BAIL,uIAGA,IAAA4iF,EAAA90G,KAEDmrH,EAAmBnrH,KAAKwE,MAAM6kH,kBAAkB57G,OAAQ,SAAA4a,GAAC,OAAIA,EAAEq5C,MAAMv4D,gBAAkB2rG,EAAK70G,MAAMuM,QAAQrD,gBAC1GiiH,EAAiBprH,KAAKwE,MAAM6kH,kBAAkB57G,OAAQ,SAAA4a,GAAC,OAAIA,EAAEwvF,UAAU1uG,gBAAkB2rG,EAAK70G,MAAMuM,QAAQrD,gBAElH,OACEge,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,EAAE,KACV6C,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,GADN,sBAKA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6B,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,SACNZ,KAAM,cACNC,UAAW,UACXI,YAAa,UACblB,SAAiC,WAAtBpC,KAAKwE,MAAM6J,OACtB9N,YAAc,SAAAiG,GAAC,OAAIsuG,EAAKh5E,UAAU,cAEpC3U,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6B,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,UACNX,UAAW,UACXD,KAAM,gBACNK,YAAa,UACblB,SAAiC,YAAtBpC,KAAKwE,MAAM6J,OACtB9N,YAAc,SAAAiG,GAAC,OAAIsuG,EAAKh5E,UAAU,eAEpC3U,EAAA/mB,EAAAC,cAACwB,EAAA,EAADtC,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6B,UAAW,CACTE,GAAG,EACHD,GAAG,EACHpC,MAAM,KAERkE,KAAM,QACNX,UAAW,SACXD,KAAM,cACNK,YAAa,UACblB,SAAiC,UAAtBpC,KAAKwE,MAAM6J,OACtB9N,YAAc,SAAAiG,GAAC,OAAIsuG,EAAKh5E,UAAU,eAIxC3U,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE+M,GAAI,EACJx0B,MAAO,EACP4C,GAAI,CAAC,EAAE,GACPgG,YAAa,UACbmgG,aAAc,yBAEdvhF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQghF,GAAT,CACElnG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,GACfgK,MAAO,CACLI,cAAc,eAGfrL,KAAKwE,MAAM6J,SAGhB8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,UAGS,WAAtBzC,KAAKwE,MAAM6J,OACT8Y,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPkpH,UAAW7oH,KAAKwE,MAAMqkH,UACtBwC,SAAUrrH,KAAKsrH,aAAa38F,KAAK3uB,OAG/BT,OAAOiO,OAAOxN,KAAKwE,MAAMmkH,SAASn2G,IAAK,SAACnE,EAAOu6G,GAC7C,OACEzhG,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHsC,GAAG,EACH3E,MAAM,GAERwoG,iBAAkB,CAChBz9F,GAAG,EACHnI,GAAG,EACHG,eAAe,UAEjBmmB,WAAY,CACV3nB,SAAS,EACTD,WAAW,GAEbkB,eAAe,EACf4B,IAAG,UAAAiG,OAAY4+G,GACfhoG,MAAQk0F,EAAKtwG,MAAMukH,aAAeH,EAAc,gBAAkB,KAClEroH,YAAc,SAAAiG,GAAC,OAAoIsuG,EAAKyW,cAAc3C,KAGpK9T,EAAKtwG,MAAMukH,aAAeH,EACxBzhG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdoyG,EAAKtwG,MAAMygE,OAAOzyD,IAAK,SAAC8d,EAAM85F,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQljG,SAASgI,EAAM1lB,MAAQ,SAAW,OACjEu/G,EAAerV,EAAKwV,sBAAsBh6F,EAAM1lB,MAAK,GAC3D,OACEuc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBsB,IAAG,SAAAiG,OAAWogH,GACdvgH,MAAK,GAAAG,OAAKsmB,EAAM5vB,KAAX,MAAAsJ,OAAoBsmB,EAAM1lB,KAA1B,MAELuc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRhiC,MAAO,EACPiL,KAAM4gH,EACNC,QAAStB,EACT5hH,YAAa,aACblF,gBAAiB,SACjBk3B,YAAW,GAAAvwB,OAAKsmB,EAAM5vB,KAAX,MAAAsJ,OAAoBsmB,EAAM1lB,KAA1B,KACXgV,SAAW,SAAApZ,GAAC,OAAIsuG,EAAK4W,YAAYllH,EAAE4jH,IACnCtjH,MAAOguG,EAAKtwG,MAAM2kH,cAAgBrU,EAAKtwG,MAAM2kH,aAAaiB,GAActV,EAAKtwG,MAAM2kH,aAAaiB,GAAc,QAMxHjjG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd2L,EAAOimC,gBACLntB,EAAA/mB,EAAAC,cAACsqG,EAAA,EAAD,CACEzpG,SAAU,EACVT,MAAOq0G,EAAK70G,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UACnDzI,WAAY83F,EAAK70G,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,UACxDvI,KAAM43F,EAAK/vG,cAAcytD,uBAAuBnkD,EAAOimC,kBAJzD,eAMejmC,EAAOimC,kBAEnBwgE,EAAKtwG,MAAMwS,WAAWkb,SACzB/K,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACX0C,GAAG,CAAC,EAAE,GACN4I,KAAK,SACLjL,MAAM,CAAC,EAAE,QACTI,UAAU+0G,EAAKtwG,MAAM0kH,aAEvB3oH,YAAau0G,EAAK6W,UAAUh9F,KAAKmmF,IAPnC,iBAWA3tF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJrc,MAAO,MACPuc,WAAY,MACZK,QAASy3F,EAAK8W,aAAaj9F,KAAKmmF,IAJlC,sBAcV3tF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACG0tF,EAAK/vG,cAAc6vC,YAAYvmC,EAAO42D,OAAO,IADhD,MACwD6vC,EAAK/vG,cAAc6vC,YAAYvmC,EAAO42D,OAAO,IADrG,MAC6G52D,EAAO42D,OAAO,GAD3H,IACiI52D,EAAOimC,gBAAkB,aAAe,IAGvKjmC,EAAOimC,gBACLntB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,MACH+C,WAAY,SACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,OACNkC,MAAO,SACPhC,KAAMk0G,EAAK70G,MAAM6C,SAAW,QAAU,QACtCrC,MAAOq0G,EAAK70G,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,aAGrDqvF,EAAKtwG,MAAMwS,WAAWkb,SAAW4iF,EAAKtwG,MAAMwS,WAAW4xG,aAAe9T,EAAKtwG,MAAMwS,WAAW4xG,YAAYtgG,SAASpa,SAAS06G,IAC5HzhG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,SACXyN,EAAOq8G,QACTvjG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,MACH+C,WAAY,SACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3mB,MAAO,MACPC,KAAM,QACNkC,MAAO,SACPhC,KAAOk0G,EAAK70G,MAAM6C,SAAW,QAAU,WAI3CqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,CAAC,MAAM,OACVI,aAAc,MACd2C,WAAY,SACZE,eAAgB,SAChBW,gBAAkByxG,EAAK70G,MAAMsD,MAAMC,OAAOC,aAAaC,SAASC,QAEhEwjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,OACNkC,MAAO,SACPnC,MAAO,SACPG,KAAOk0G,EAAK70G,MAAM6C,SAAW,QAAU,gBAazD9C,KAAKwE,MAAM8kH,mBAAqBtpH,KAAKwE,MAAMwS,WAAWkb,WAAalyB,KAAKwE,MAAMmkH,SAAWppH,OAAOiO,OAAOxN,KAAKwE,MAAMmkH,SAASrnH,OAAOtB,KAAKwE,MAAMykH,eAC7I9hG,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHsC,GAAG,EACH3E,MAAM,GAERwoG,iBAAkB,CAChBz9F,GAAG,EACHnI,GAAG,EACHG,eAAe,UAEjBmmB,WAAY,CACV3nB,SAAS,EACTD,WAAW,GAEbkB,eAAe,EACf5B,YAAc,SAAAiG,GAAC,OAAIsuG,EAAK+W,cAAa,IACrCjrG,MAAQ5gB,KAAKwE,MAAMwkH,UAAY,eAAiB,MAG9ChpH,KAAKwE,MAAMwkH,UACT7hG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd1C,KAAKwE,MAAMygE,OAAOzyD,IAAK,SAAC8d,EAAM85F,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQljG,SAASgI,EAAM1lB,MAAQ,SAAW,OACjEu/G,EAAerV,EAAKwV,sBAAsBh6F,EAAM1lB,MAAK,GAC3D,OACEuc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBsB,IAAG,SAAAiG,OAAWogH,GACdvgH,MAAK,GAAAG,OAAKsmB,EAAM5vB,KAAX,MAAAsJ,OAAoBsmB,EAAM1lB,KAA1B,MAELuc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRhiC,MAAO,EACPiL,KAAM4gH,EACNC,QAAStB,EACT5hH,YAAa,aACblF,gBAAiB,SACjBk3B,YAAW,GAAAvwB,OAAKsmB,EAAM5vB,KAAX,MAAAsJ,OAAoBsmB,EAAM1lB,KAA1B,KACXgV,SAAW,SAAApZ,GAAC,OAAIsuG,EAAK4W,YAAYllH,EAAE4jH,IACnCtjH,MAAOguG,EAAKtwG,MAAM2kH,cAAgBrU,EAAKtwG,MAAM2kH,aAAaiB,GAActV,EAAKtwG,MAAM2kH,aAAaiB,GAAc,QAMxHjjG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACX0C,GAAG,CAAC,EAAE,GACN4I,KAAK,SACLjL,MAAM,CAAC,EAAE,QACTI,UAAUC,KAAKwE,MAAM0kH,aAEvB3oH,YAAaP,KAAK2rH,UAAUh9F,KAAK3uB,OAPnC,kBAcJmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,qBAGAD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,CAAC,MAAM,OACVI,aAAc,MACd2C,WAAY,SACZE,eAAgB,SAChBW,gBAAkBrD,KAAKC,MAAMsD,MAAMC,OAAOC,aAAaC,SAASC,QAEhEwjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,MACNkC,MAAO,SACPnC,MAAO,SACPG,KAAOZ,KAAKC,MAAM6C,SAAW,QAAU,aASvDqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZE,eAAgB,UAGd1C,KAAKwE,MAAM8kH,iBACTniG,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHrC,MAAM,CAAC,EAAE,UAGXwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,UACNkC,MAAO,SACPhC,KAAOZ,KAAKC,MAAM6C,SAAW,QAAU,QACvCrC,MAAOT,KAAKC,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,YAErD0B,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ7b,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YACPU,UAAW,UALb,8CAWFnB,KAAKwE,MAAMwS,YAAchX,KAAKwE,MAAMwS,WAAWkb,QACjD/K,EAAA/mB,EAAAC,cAACsW,EAAA,EAADpX,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6N,KAAM9N,KAAKwE,MAAMwS,WAAWwD,OAC5BiC,SAAQ,0BACRD,WAAU,mCACVY,kBAAmBpd,KAAKod,kBAAkBuR,KAAK3uB,SAGjDmnB,EAAA/mB,EAAAC,cAACyqG,EAAA,EAAD,CACExrG,YAAa,CACXsL,KAAK,SACLjL,MAAM,CAAC,EAAE,QACTI,UAAUC,KAAKwE,MAAMqkH,YAJzB,sBAagB,YAAtB7oH,KAAKwE,MAAM6J,OACb88G,EAAiB7pH,OAAO,EACtB6pH,EAAiB34G,IAAK,SAACqjE,EAAa+yC,GAClC,OACEzhG,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHsC,GAAG,EACH3E,MAAM,GAERwoG,iBAAkB,CAChBz9F,GAAG,EACHnI,GAAG,EACHG,eAAe,UAEjBmmB,WAAY,CACV3nB,SAAS,EACTD,WAAW,GAEbkB,eAAe,EACf4B,IAAG,UAAAiG,OAAY4+G,GACfroH,YAAc,SAAAiG,GAAC,OAAIsuG,EAAKgX,cAAclD,IACtChoG,MAAQk0F,EAAKtwG,MAAMskH,aAAeF,EAAc,gBAAkB,MAGhE9T,EAAKtwG,MAAMskH,aAAeF,EACxBzhG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBoH,MAAK,oBAELsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRoqF,UAAQ,EACRpsH,MAAO,EACPiL,KAAM,UACNrC,YAAa,aACblF,gBAAiB,SACjByD,MAAO+uE,EAAavhC,mBAItBwgE,EAAKtwG,MAAMygE,OAAOzyD,IAAK,SAAC8d,EAAM85F,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQljG,SAASgI,EAAM1lB,MAAQ,SAAW,OACvE,OACEuc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBsB,IAAG,SAAAiG,OAAWogH,GACdvgH,MAAK,GAAAG,OAAKsmB,EAAM5vB,KAAX,MAAAsJ,OAAoBsmB,EAAM1lB,KAA1B,MAELuc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRoqF,UAAQ,EACRpsH,MAAO,EACPiL,KAAM4gH,EACNjjH,YAAa,aACblF,gBAAiB,SACjByD,MAAO+uE,EAAavlD,EAAM5vB,WAMpCymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBoH,MAAK,mBAELsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRoqF,UAAQ,EACRpsH,MAAO,EACPiL,KAAM,UACNrC,YAAa,aACblF,gBAAiB,SACjByD,MAAO+uE,EAAal9B,eAAepvC,QAAQ,MAG/C4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBoH,MAAK,qBAELsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRoqF,UAAQ,EACRpsH,MAAO,EACPiL,KAAM,UACNrC,YAAa,aACblF,gBAAiB,SACjByD,MAAO+uE,EAAak0C,iBAAiBxgH,QAAQ,MAGjD4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBs/G,UAAW,yBAEX76F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC2rG,EAADzsG,OAAAC,OAAA,GACMs1G,EAAK70G,MADX,CAEEoO,OAAQymG,EAAKtwG,MAAM6J,OACnBvI,YAAagvG,EAAKtwG,MAAMsB,YACxB0gC,aAAcsuE,EAAKtwG,MAAMgiC,aACzBqvC,aAAci/B,EAAKtwG,MAAMqxE,aACzBlwE,SAAUmvG,EAAKkX,gBAAgBr9F,KAAKmmF,GACpCliF,qBAAsBkiF,EAAKliF,qBAAqBjE,KAAKmmF,GACrDjK,mBAAoB,iDAEpB1jF,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTrC,EAAE,IAGJ0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZC,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,QACNF,KAAM,WACND,MAAO,aAET0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ5b,SAAU,EACVT,MAAO,WACPU,UAAW,UAJb,kDAeZgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACG0tF,EAAK/vG,cAAc6vC,YAAYihC,EAAanU,OAD/C,MAC0DozC,EAAK/vG,cAAc6vC,YAAYihC,EAAagiC,WADtG,MACqHhiC,EAAai0C,eAElI3iG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,CAAC,MAAM,OACVI,aAAc,MACd2C,WAAY,SACZE,eAAgB,SAChBW,gBAAkByxG,EAAK70G,MAAMsD,MAAMC,OAAOC,aAAaC,SAASC,QAEhEwjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,SACNkC,MAAO,SACPnC,MAAO,SACPG,KAAOk0G,EAAK70G,MAAM6C,SAAW,QAAU,eAUvDqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjmB,UAAW,UADb,0CAMoB,UAAtBnB,KAAKwE,MAAM6J,QACX+8G,EAAe9pH,OAAO,EACpB8pH,EAAe54G,IAAK,SAACqjE,EAAa+yC,GAChC,OACEzhG,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHsC,GAAG,EACH3E,MAAM,GAERwoG,iBAAkB,CAChBz9F,GAAG,EACHnI,GAAG,EACHG,eAAe,UAEjBmmB,WAAY,CACV3nB,SAAS,EACTD,WAAW,GAEbkB,eAAe,EACf4B,IAAG,UAAAiG,OAAY4+G,GACfroH,YAAc,SAAAiG,GAAC,OAAIsuG,EAAKgX,cAAclD,IACtChoG,MAAQk0F,EAAKtwG,MAAMskH,aAAeF,EAAc,gBAAkB,MAGhE9T,EAAKtwG,MAAMskH,aAAeF,EACxBzhG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBoH,MAAK,oBAELsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRoqF,UAAQ,EACRpsH,MAAO,EACPiL,KAAM,UACNrC,YAAa,aACblF,gBAAiB,SACjByD,MAAO+uE,EAAavhC,mBAItBwgE,EAAKtwG,MAAMygE,OAAOzyD,IAAK,SAAC8d,EAAM85F,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQljG,SAASgI,EAAM1lB,MAAQ,SAAW,OACvE,OACEuc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBsB,IAAG,SAAAiG,OAAWogH,GACdvgH,MAAK,GAAAG,OAAKsmB,EAAM5vB,KAAX,MAAAsJ,OAAoBsmB,EAAM1lB,KAA1B,MAELuc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRoqF,UAAQ,EACRpsH,MAAO,EACPiL,KAAM4gH,EACNjjH,YAAa,aACblF,gBAAiB,SACjByD,MAAO+uE,EAAavlD,EAAM5vB,WAMpCymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBoH,MAAK,mBAELsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRoqF,UAAQ,EACRpsH,MAAO,EACPiL,KAAM,UACNrC,YAAa,aACblF,gBAAiB,SACjByD,MAAO+uE,EAAal9B,eAAepvC,QAAQ,MAG/C4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACLtL,MAAM,OACN0H,QAAQ,OACR7E,WAAW,UACXC,cAAc,UAEhBoH,MAAK,qBAELsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRoqF,UAAQ,EACRpsH,MAAO,EACPiL,KAAM,UACNrC,YAAa,aACblF,gBAAiB,SACjByD,MAAO+uE,EAAak0C,iBAAiBxgH,QAAQ,MAGjD4d,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBs/G,UAAW,yBAEX76F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdoyG,EAAKtwG,MAAM4kH,eACTjiG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAOq0G,EAAK70G,MAAMsD,MAAMC,OAAOC,aAAasK,OAAO0X,WAJrD,iCAMiCqvF,EAAKtwG,MAAM4kH,cAAc7/G,QAAQ,GANlE,IAMuEurG,EAAKtwG,MAAMsB,YAAY6H,OAKhGkoE,EAAak0C,kBAAoBl0C,EAAak0C,iBAAiBt4G,GAAG,MAChE0V,EAAA/mB,EAAAC,cAAC2xB,GAAA,EAADzyB,OAAAC,OAAA,CACEmzB,OAAQ,IACJmiF,EAAK70G,MAFX,CAGEa,UAAW84G,IACXrmF,eAAgB,CACd3yB,KAAK,SACLkG,MAAM,QACNhH,UAAU,UAEZwyB,WAAY,QACZjkB,OAAQymG,EAAKtwG,MAAM6J,OACnB1I,SAAUmvG,EAAKmX,cAAct9F,KAAKmmF,GAClCviF,aAAcsjD,EAAatjD,gBAG7BpL,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,YAJT,4BAcV0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP6C,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACG0tF,EAAK/vG,cAAc6vC,YAAYihC,EAAanU,OAD/C,MAC0DozC,EAAK/vG,cAAc6vC,YAAYihC,EAAagiC,WADtG,MACqHhiC,EAAai0C,eAElI3iG,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,CAAC,MAAM,OACVI,aAAc,MACd2C,WAAY,SACZE,eAAgB,SAChBW,gBAAkByxG,EAAK70G,MAAMsD,MAAMC,OAAOC,aAAaC,SAASC,QAEhEwjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,SACNkC,MAAO,SACPnC,MAAO,SACPG,KAAOk0G,EAAK70G,MAAM6C,SAAW,QAAU,eAUvDqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjmB,UAAW,UADb,oDA7xCaL,mICuDzBqvC,GAAMC,8/CAEN3mC,GAAgB,CACpByiH,QAAS,OACThqD,QAAS,OACTzqC,UAAW,MACXk4B,QAAS,uBACTw8D,SAAS,2BACT5oH,MAAM,CACJ6oH,iBAAgB,GAElBv8D,QAAS,4BACTr3B,UAAU,CACR6zF,IAAM,2BACNC,IAAM,iBACNC,IAAM,YACNC,IAAM,SACNC,IAAM,QACNC,IAAM,SACNC,IAAM,SACNC,IAAM,YACNC,IAAM,QACNC,IAAM,SACNC,IAAM,SACNC,IAAM,eACNC,IAAM,eAERv7E,KAAK,CACHO,eAAc,EACdN,iBAAgB,GAElBu7E,WAAW,CACTC,SAAS,CACPtiG,SAAQ,EACRw9F,WAAW,qBAEb+E,MAAM,CACJviG,SAAQ,EACRw9F,WAAW,yBAEbgF,OAAO,CACLxiG,SAAQ,EACR5nB,KAAK,aACLolH,WAAW,qBAEbiF,SAAS,CACPziG,SAAQ,EACR5nB,KAAK,eACLolH,WAAW,gCAEbkF,YAAY,CACV1iG,SAAQ,EACRw9F,WAAW,6BAEbmF,cAAc,CACZ3iG,SAAQ,EACR4iG,UAAU,oBACVpF,WAAW,wBAEbqF,WAAW,CACT7iG,SAAQ,EACR5nB,KAAK,eACLvC,KAAK,kBACL2nH,WAAW,wBAEbsF,OAAO,CACL9iG,SAAQ,EAERnqB,KAAK,kBACL2nH,WAAW,gCAEbuF,UAAU,CACR/iG,SAAQ,EACRw9F,WAAW,2BAEbwF,OAAO,CACLhjG,SAAQ,EACRw9F,WAAW,qBAEbyF,UAAU,CACRjjG,SAAQ,EACRw9F,WAAW,uBAEb0F,MAAM,CACJljG,SAAQ,EACR5nB,KAAK,YACLolH,WAAW,+BAEb2F,OAAO,CACLnjG,SAAQ,EACRw9F,WAAW,mBAEb4F,OAAO,CACLpjG,SAAQ,EACRw9F,WAAW,mBAEb6F,WAAW,CACTrjG,SAAQ,EACRw9F,WAAW,uBAEb8F,OAAO,CACLtjG,SAAQ,EACRw9F,WAAW,mBAGf+F,uBAAuB,CACrB7rE,SAAS,iDAEX8rE,SAAS,CACPC,WAAW,sBACXC,SAAS,0BACT7/G,WAAW,2DACX8/G,YAAY,2DACZC,mBAAmB,8EACnB1iF,kBAAkB,mFAClB2iF,WAAW,4FACXC,eAAe,qGACf7iF,sBAAsB,iHACtB8iF,YAAY,iIACZC,0BAA0B,6IAC1BC,eAAe,8JACfC,cAAc,wLACdC,8BAA8B,qNAC9B1L,QAAQ,8TACRE,aAAa,0bACbD,UAAS,0aACT0L,kBAAiB,4bAEnBvkG,UAAU,CACRC,OAAO,CACLC,OAAO,CACLC,SAAQ,EACR4lC,cAAa,EACbK,sBAAqB,GAEvBo+D,SAAS,CACPrkG,SAAQ,KAIdskG,OAAO,CACLC,wBAAuB,EACvBC,qBAAoB,EACpBjrG,QAAQ,CACNyG,SAAQ,GAEVykG,QAAQ,CACNzkG,SAAQ,EACR8pC,UAAU,SAGd46D,UAAU,CACRC,UAAU,aACVjsH,MAAM,CACJkyF,KAAK,QACL22B,iBAAgB,IAGpBqD,WAAW,CACTC,MAAK,EACL7kG,SAAQ,EACR+qD,WAAW,SACX45C,UAAU,cACVvvH,MAAM,CACJusC,UAAU,OACVmjF,mBAAmB,CACjB/kD,OACAglD,eACAC,eACAC,iBACAC,iBACAC,oBAGJ98D,UAAU,CACR+8D,EAAE,CACA5nB,YAAW,8mBAUfl2D,UAAU,CACR+9E,UAAU,OACVT,WAAW,kBAGf16G,MAAM,CACJ8V,SAAQ,EACR8H,OAAO,CACLq3D,QAAQ,EACRngF,MAAM,QACNu4B,MAAM,mBACNz/B,MAAM,6BACNwtH,cAAc,kCAEhB/6D,MAAM,CACJlsC,KAAK,CAAC,MAAM,MAAM,QAClBq5B,SAAS,4CAEX6tE,aAAa,CACX9lH,SAAS,GACT+zB,IAAIgyF,GACJ3vH,KAAK,4BACLiN,MAAM,4BACNzE,QAAQ,8CAEVyjF,gBAAgB,CACdtuD,IAAIiyF,GACJ5vH,KAAK,mBACLwI,QAAQ,8CAEVqnH,cAAc,CACZlyF,IAAImyF,GACJ9vH,KAAK,mBACLwI,QAAQ,8CAEVunH,YAAY,CACVpyF,IAAIqyF,GACJhwH,KAAK,eACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIiyF,GACJ5vH,KAAK,mBACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,mBAIX4L,gBAAgB,CACdqkH,aAAa,CACXrmH,SAAS,GACTugB,SAAQ,EACR4M,UAAU,MACV9pB,MAAM,eACNzE,QAAQ,6CACR02B,gBAAgB,CACdoqD,QAAQ,EACRK,UAAU,IAGdumC,cAAc,CACZtmH,SAAS,GACTugB,SAAQ,EACR4M,UAAU,OACV9pB,MAAM,gBACNzE,QAAQ,6CACR02B,gBAAgB,CACdoqD,QAAQ,EACRK,UAAU,IAGdwmC,cAAc,CACZvmH,SAAS,GACTugB,SAAQ,EACR4M,UAAU,OACV9pB,MAAM,gBACNzE,QAAQ,6CACR02B,gBAAgB,CACdoqD,QAAQ,EACRK,UAAU,MAKlBvoB,OAAO,CACLgvD,IAAI,CACF5uD,QAAQ,EACR2B,WAAW,KACXM,YAAY,SACZzjE,KAAK,iBACLkK,KAAK,CACH,CAAElK,KAAM,SAAUkK,KAAM,WACxB,CAAElK,KAAM,UAAWkK,KAAM,WACzB,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,SAAUkK,KAAM,WACxB,CAAElK,KAAM,UAAWkK,KAAM,UAG7BmmH,KAAK,CACH7uD,QAAQ,EACRxhE,KAAK,WACLmjE,WAAW,KACXM,YAAY,SACZv5D,KAAK,CACH,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,UAAWkK,KAAM,WACzB,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,WAAYkK,KAAM,aAG9BomH,IAAI,CACF9uD,QAAQ,EACR2B,WAAW,KACXM,YAAY,SACZzjE,KAAK,qBACLkK,KAAK,CACH,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,UAAWkK,KAAM,WACzB,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,QAASkK,KAAM,WACvB,CAAElK,KAAM,WAAYkK,KAAM,cAIhCq4B,UAAU,CACR2nC,KAAK,CACHvsC,IAAIusC,EACJtgE,SAAS,GACTqD,MAAM,OACNkd,SAAQ,EACRszE,SAAQ,EACR12D,SAAQ,EACRlb,SAAS,OACTma,WAAU,EACV7W,aAAY,EACZqoE,gBAAe,EACfzoB,iBAAiB,QACjBthD,sBAAsB,MACtB1tB,MAAM,sBACNwC,KAAK,yBACLisC,eAAe,CAAC,eAAe,gBAC/BhmC,QAAQ,8CAIV+nH,KAAK,CACH5yF,IAAI4yF,GACJ3mH,SAAS,GACTqD,MAAM,OACNkd,SAAQ,EACRszE,SAAQ,EACR12D,SAAQ,EACRf,WAAU,EACV7W,aAAY,EACZqf,eAAe,GACf3iB,SAAS,WACT2rE,gBAAe,EACfzoB,iBAAiB,QACjBthD,sBAAsB,MACtB1tB,MAAM,sBACNyI,QAAQ,8CAGVgoH,QAAQ,CACN7yF,IAAI8yF,GACJ7mH,SAAS,GACT6zF,SAAQ,EACR12D,SAAQ,EACR5c,SAAQ,EACR6b,WAAU,EACV/4B,MAAM,UACNkiB,aAAY,EACZtD,SAAS,SACT2rE,gBAAe,EACfzoB,iBAAiB,SACjBhvE,MAAM,qBACN0tB,sBAAsB,MACtBjlB,QAAQ,6CACR08E,gBAAgB,6CAChB12C,eAAe,CAAC,gBAAgB,gBAAgB,kBAGpDiD,UAAU,CACRi/E,aAAa,CACX/yF,IAAIgzF,GACJnoH,QAAQ,8CAEVooH,WAAW,CACTjzF,IAAIizF,GACJpoH,QAAQ,8CAEV0mH,YAAY,CACVvxF,IAAIuxF,GACJ1mH,QAAQ,8CAEV2mH,YAAY,CACVxxF,IAAIwxF,GACJ3mH,QAAQ,8CAGVqoH,SAAS,CACPlzF,IAAIkzF,GACJroH,QAAQ,8CAGV6mH,cAAc,CACZ1xF,IAAI0xF,GACJ7mH,QAAQ,8CAGVsoH,cAAc,CACZnzF,IAAImzF,GACJtoH,QAAQ,8CAGV8mH,eAAe,CACb3xF,IAAI2xF,GACJ9mH,QAAQ,8CAGVuoH,aAAa,CACTpzF,IAAIozF,GACJvoH,QAAQ,8CAGZ4mH,cAAc,CACZzxF,IAAIyxF,GACJ5mH,QAAQ,8CAGVwoH,YAAY,CACVrzF,IAAIqzF,GACJxoH,QAAQ,8CAGVyoH,gBAAgB,CACdtzF,IAAIuzF,GACJ1oH,QAAQ,8CAEV2oH,cAAc,CACZxzF,IAAIyzF,GACJ5oH,QAAQ,8CAEV6oH,sBAAsB,CACpB1zF,IAAI0zF,GACJ7oH,QAAQ,+CAGZkrE,OAAO,CACL08C,IAAI,CACFkB,cAAc,CACZC,YAAa,0BACblkC,UAAU,6EACVmkC,cAAe,CACXC,aAAc,6CACd1uF,cAAe,SAIvBstF,KAAK,CACHiB,cAAc,CACZC,YAAa,0BACblkC,UAAU,6EACVmkC,cAAe,CACXC,aAAc,6CACd1uF,cAAe,UAKzB0S,SAAS,CACPs0B,GAAG,CACDhqE,MAAM,CAEJitB,IAAI,UACJD,IAAI,CAAC,EAAG,IAAK,KACb9jB,IAAI,CAAC,MAAO,OAAQ,QAEtBiB,KAAK,KACLw3B,MAAM,SACNn/B,KAAK,WACL0lG,SAAS,SACTjoG,KAAK,iBACLmoG,SAAS,CACP,uCACA,0BACA,kCACA,gCAEFR,YAAY,CACVO,KAAK,qIACLzkF,QAAQ,4IACRiuG,MAAM,0EACNC,QAAQ,4EACR/sG,SAAS,4DACTumF,YAAY,2FACZC,aAAa,uGAGjBphC,GAAG,CACDjqE,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,GACf9jB,IAAI,CAAC,KAAM,OAAQ,QAErBiB,KAAK,KACLw3B,MAAM,SACNn/B,KAAK,aACL0lG,SAAS,SACTjoG,KAAK,iBACLmoG,SAAS,CACP,2CACA,qDACA,kCACA,gCAEFR,YAAY,CACVO,KAAK,mIACLzkF,QAAQ,+IACRiuG,MAAM,0EACNC,QAAQ,4EACR/sG,SAAS,4DACTumF,YAAY,2FACZC,aAAa,wGAInB93C,WAAW,CACT7d,SAAS,CACPxoC,MAAM,MACNqmB,SAAQ,EACRppB,KAAK,UACL2hB,SAAS,OACT9rB,MAAM,UACN6xH,YAAW,EACX1xG,MAAM,WACNuL,cAAa,EACbomG,aAAa,KACb5xH,SAAS,WACTc,UAAW4sG,GACXmkB,kBAAiB,EACjBC,WAAW,kBACXxvH,KAAK,oCACLyvH,aAAa,qCACbC,iBAAiB,uCACjBt+F,KAAK,uEAEPu+F,KAAK,CACHjlH,MAAM,MACNqmB,SAAQ,EACRvzB,MAAM,UACNmK,KAAK,WACL0nH,YAAW,EACXnmG,cAAa,EACbomG,aAAa,KACb3xG,MAAM,aACNjgB,SAAS,WACT6xH,kBAAiB,EACjB/wH,UAAWghH,GACXgQ,WAAW,kBACXxvH,KAAK,gCACLyvH,aAAa,iCACbC,iBAAiB,mCACjBt+F,KAAK,8CACLw+F,SAAS,4lBACTC,UAAU,0JAEZC,KAAK,CACHplH,MAAM,MACNqmB,SAAQ,EACRvzB,MAAM,UACNmK,KAAK,WACL0nH,YAAW,EACXC,aAAa,KACbpmG,cAAa,EACbxrB,SAAS,WACTigB,MAAM,gBACN4xG,kBAAiB,EACjB/wH,UAAWghH,GACXgQ,WAAW,mBACXxvH,KAAK,gCACLyvH,aAAa,iCACbC,iBAAiB,mCACjBt+F,KAAK,oDACLw+F,SAAS,6aACTC,UAAU,yGAmBdppH,MAAM,CACJmhB,SAAQ,EACRuqC,MAAM,CACJjgB,IAAI,IACJoN,SAAS,mCAEXg9C,KAAK,CACHpqD,IAAI,IACJoN,SAAS,kCAEXywE,SAAS,CACP79E,IAAI,KACJoN,SAAS,sCAEX2iD,OAAO,CACL/vD,IAAI,IACJoN,SAAS,oCAEX0L,OAAO,CACLgP,QAAS9sB,GAAI8iF,mBAAqB,CAAEC,cAAa,UAAAlpH,OAAYmmC,GAAI8iF,qBAAyB,IAE5FE,SAAS,CAYPC,GAAG,CACDvpH,MAAM,UACNwpH,oBAAoB,GACpB5+D,aAAa,WACbvvB,eAAe,WACfouF,wBAAuB,EACvBC,iBAAiB,CACfR,KAAK,CACHt+D,aAAa,aAGjB++D,kBAAkB,CAAC,OAAO,QAC1BvnH,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,SAEnDwnH,GAAG,CACD5pH,MAAM,UACN4qD,aAAa,KACbvvB,eAAe,WACfsuF,kBAAkB,CAAC,OAAO,QAC1BF,wBAAuB,EACvBC,iBAAiB,CACfR,KAAK,CACH7tF,eAAe,aAGnBj5B,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAC/DonH,oBAAoB,CAClB,CACE/oH,SAAS,GACTiiB,SAAS,WACT7rB,KAAK,mBACLuL,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,SAE1D,CACE3B,SAAS,GACTiiB,SAAS,SACT7rB,KAAK,oBACLuL,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,YAKhEmoE,OAAO,CACL08C,IAAI,CACFxmH,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJgtB,IAAI,CAAC,IAAI,IAAI,IACbC,IAAI,UACJ/jB,IAAI,CAAC,KAAM,MAAO,QAEpB+pH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzuF,eAAe,aACfh8B,QAAQ,6CACR0qH,mBAAmB,8KAErBC,IAAI,CACFhpG,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,KACf9jB,IAAI,CAAC,KAAM,MAAO,QAEpB+pH,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCzqH,QAAQ,KACRg8B,eAAe,cAEjB6rF,KAAK,CACHzmH,SAAS,EACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,GAAG,IAAI,KACZ9jB,IAAI,CAAC,MAAO,MAAO,QAErB+pH,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCzuF,eAAe,aACfh8B,QAAQ,6CACR0qH,mBAAmB,8KAErBE,KAAK,CACHxpH,SAAS,EACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,GAAI,IAAK,KACd9jB,IAAI,CAAC,MAAO,MAAO,QAErB+pH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzuF,eAAe,aACfh8B,QAAQ,6CACR0qH,mBAAmB,8KAErBG,KAAK,CACHzpH,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,SACJD,IAAI,CAAC,EAAG,GAAI,KACZ9jB,IAAI,CAAC,MAAO,MAAO,QAErB+pH,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCzuF,eAAe,aACfh8B,QAAQ,8CAEV8qH,KAAK,CACH1pH,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,GAAI,GAAI,IACb9jB,IAAI,CAAC,MAAO,MAAO,QAErB+pH,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCzuF,eAAe,aACfh8B,QAAQ,8CAEV+qH,KAAK,CACH3pH,SAAS,EACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,IACf9jB,IAAI,CAAC,KAAM,MAAO,QAEpBu7B,eAAe,aACfvzB,oBAAoB,eACpB+hH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzqH,QAAQ,6CACR0qH,mBAAmB,8KAErBM,KAAK,CACH5pH,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,IAAK,GAAI,KACd9jB,IAAI,CAAC,MAAO,MAAO,QAErBu7B,eAAe,aACfvzB,oBAAoB,eACpB+hH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzqH,QAAQ,6CACR0qH,mBAAmB,8KAErB3C,KAAK,CACH3mH,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,EAAG,IAAK,KACb9jB,IAAI,CAAC,MAAO,OAAQ,QAEtBu7B,eAAe,aACfvzB,oBAAoB,eACpB+hH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzqH,QAAQ,8CAEVgoH,QAAQ,CACN5mH,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,IAAK,GAAI,KACd9jB,IAAI,CAAC,MAAO,MAAO,QAErBu7B,eAAe,aACfvzB,oBAAoB,eACpB+hH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzqH,QAAQ,8CAEV0hE,KAAK,CACHtgE,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,GAAI,GAAI,KACb9jB,IAAI,CAAC,MAAO,MAAO,QAErBu7B,eAAe,aACfjiC,KAAK,yBACL0O,oBAAoB,eACpB+hH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzqH,QAAQ,8CAEVirH,IAAI,CACF7pH,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,GAAI,IAAK,KACd9jB,IAAI,CAAC,MAAO,MAAO,QAErByqH,eAAe,CAAC,SAChBlvF,eAAe,aACfjiC,KAAK,wBACL0O,oBAAoB,cACpB+hH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzqH,QAAQ,8CAEVmrH,IAAI,CACF/pH,SAAS,GACTugB,SAAQ,EACRpqB,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,GAAI,IAAK,KACd9jB,IAAI,CAAC,MAAO,MAAO,QAErByqH,eAAe,CAAC,SAChBlvF,eAAe,aACfvzB,oBAAoB,cACpB+hH,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCzqH,QAAQ,8CAEVorH,4BAA4B,CAC1BhqH,SAAS,GACTugB,SAAQ,EACRnqB,KAAK,WACLD,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,IAAK,EAAG,GACb9jB,IAAI,CAAC,IAAK,OAAQ,QAEpBu7B,eAAe,eAGnBr8B,UAAU,CACR0rH,SAAS,CACPxgH,QAAO,EACP8W,SAAQ,EACRhhB,MAAM,WACNpJ,MAAM,CACJgtB,IAAI,CAAC,EAAG,IAAK,KACb9jB,IAAI,CAAC,MAAO,OAAQ,SAGxB6qH,kBAAkB,CAChB3pG,SAAQ,EACRhhB,MAAM,oBACNq7B,eAAe,sBAMfzkC,MAAM,CACJitB,IAAI,UACJD,IAAI,CAAC,IAAK,GAAI,KACd9jB,IAAI,CAAC,MAAO,MAAO,QAErB8qH,UAAU,CAAC,OAAO,sBAEpBC,iBAAiB,CACf7pG,SAAQ,EACRhhB,MAAM,kBACNpJ,MAAM,CACJgtB,IAAI,CAAC,EAAG,IAAK,KACb9jB,IAAI,CAAC,MAAO,OAAQ,QAEtB8qH,UAAU,CAAC,OAAO,0BAEpBE,QAAQ,CACN5gH,QAAO,EACP8W,SAAQ,EACRhhB,MAAM,UACNpJ,MAAM,CACJgtB,IAAI,CAAC,EAAG,IAAK,KACb9jB,IAAI,CAAC,MAAO,MAAO,SAGvBirH,IAAI,CACF/qH,MAAM,MACNghB,SAAQ,EACR5nB,KAAK,WACLxC,MAAM,CACJgtB,IAAI,CAAC,IAAK,GAAI,IACd9jB,IAAI,CAAC,MAAO,MAAO,SAGvBkrH,KAAK,CACH9gH,QAAO,EACPlK,MAAM,OACNghB,SAAQ,EACRpqB,MAAM,CACJgtB,IAAI,CAAC,GAAI,GAAI,IACb9jB,IAAI,CAAC,MAAO,KAAM,SAGtBmrH,MAAM,CACJjrH,MAAM,QACNghB,SAAQ,GAEVkqG,KAAK,CACHlrH,MAAM,UACNkK,QAAO,EACP8W,SAAQ,EACRpqB,MAAM,CACJgtB,IAAI,CAAC,IAAK,IAAK,KACf9jB,IAAI,CAAC,MAAO,MAAO,SAGvBqrH,OAAO,CACLjhH,QAAO,EACP8W,SAAQ,EACR5nB,KAAK,WACL4G,MAAM,UACNpJ,MAAM,CACJgtB,IAAI,CAAC,IAAK,GAAI,KACd9jB,IAAI,CAAC,MAAO,MAAO,SAGvBsrH,MAAM,CACJlhH,QAAO,EACP8W,SAAQ,EACRhhB,MAAM,QACN5G,KAAK,YACLxC,MAAM,CACJgtB,IAAI,CAAC,IAAK,IAAK,KACf9jB,IAAI,CAAC,MAAO,MAAO,SAGvBurH,KAAK,CACHnhH,QAAO,EACP8W,SAAQ,EACRhhB,MAAM,OACN5G,KAAK,WACLxC,MAAM,CACJgtB,IAAI,CAAC,EAAG,EAAG,GACX9jB,IAAI,CAAC,IAAK,KAAM,QAGpBoL,MAAM,CACJlL,MAAM,GACNghB,SAAQ,EACRpqB,MAAM,CACJgtB,IAAI,CAAC,EAAG,GAAI,KACZ9jB,IAAI,CAAC,MAAO,OAAQ,SAGxB42B,KAAK,CACH12B,MAAM,OACNghB,SAAQ,EACRpqB,MAAM,CACJgtB,IAAI,CAAC,EAAG,GAAI,KACZ9jB,IAAI,CAAC,MAAO,OAAQ,WAK5BuoC,SAAS,CACP1Y,QAAQ,CACN71B,OAAO,CACLwxH,eAAc,EACdx5F,yBAAwB,GAE1BxX,QAAQ,CACNixG,UAAS,EACTC,iBAAiB,IACjBC,uBAAsB,EACtBC,yBAAwB,EACxB55F,yBAAwB,EAExB65F,4BAA4B,CAC1BC,UAAU,CACR5qG,SAAQ,EACRwT,IAAIq3F,GACJh1H,KAAK,iBACLi1H,SAAS,cACTzsH,QAAQ,8CAGVkrE,OAAO,CACL08C,IAAI,CACFjmG,SAAQ,EACR0zC,WAAW,aACXlgC,IAAIu3F,GACJD,SAAS,mBACTj1H,KAAK,0BACLwI,QAAQ,8CAGV6nH,KAAK,CACHlmG,SAAQ,EACRwT,IAAIu3F,GACJr3D,WAAW,iBACX79D,KAAK,2BACLi1H,SAAS,0BACTzsH,QAAQ,gDAKd2sH,cAAc,CACZhrG,SAAQ,EACRwT,IAAIy3F,GACJp1H,KAAK,kBACLi1H,SAAS,sBACTzsH,QAAQ,+CAGZkb,QAAQ,CACN+wG,eAAc,EACdx1F,sBAAsB,IACtBo2F,4BAA4B,KAE9BC,gBAAgB,CACdnrG,SAAQ,GAEVkkG,cAAc,CACZlkG,SAAQ,EACRqkB,eAAe,CAAC,cAAc,eAAe,iBAE/C+mF,UAAU,CACRprG,SAAQ,EACRwT,IAAI63F,MAIV9iG,QAAQ,CACN29B,kBAAkB,CAChBipD,EAAE,UACFmc,EAAE,UACFC,EAAE,UACFC,GAAG,QACHC,KAAK,WAEPC,UAAS,EACT71E,gBAAgB,EAChBvS,cAAc,QACd+/C,eAAe,QACf5tC,iBAAiB,QACjBk2E,sBAAuB,EACvBC,gBAAgB,CAAC,EAAE,GAAG,MACtBC,sBAAuB,EACvBrgG,UAAU,CACRsgG,OAAO,CACLN,GAAI,8BACJrc,EAAG,gCACHsc,KAAM,iCAERlhF,IAAI,CACFvqB,SAAQ,EACR2qB,kBAAkB,CAAC,IAErBohF,MAAM,CACJl1E,UAAU,CACRs4D,EAAE,iCACFqc,GAAG,2CAGPQ,UAAU,CACRhsG,SAAQ,EACRxpB,KAAK,CACH8uC,GAAIwR,wBACJxR,GAAI2mF,yBACJ3mF,GAAI4mF,yBACJ5mF,GAAI6mF,0BAENt1E,UAAU,CACRs4D,EAAG,+BACHsc,KAAM,+BACND,GAAI,sCAENY,QAAQ,CACNjd,EAAG,uBACHsc,KAAM,uBACND,GAAI,+BAGRviE,SAAS,CACPb,UAAU,CACR,6CACA,8CAEFvR,UAAU,CACRwR,UAAU,2DAEZgkE,KAAK,CACHhkE,UAAU,4DAGdx0B,SAAS,CACP7T,SAAQ,EACRssG,aAAY,EACZ3hF,kBAAkB,CAAC,EAAE,IACrB4hF,gBAAgB,CAAC,aACjB11E,UAAU,CACRqb,OAAO,mDAETpqC,OAAO,CACL6tB,OAAO,EACPkO,OAAQve,GAAIknF,uBACZC,OAAQnnF,GAAIonF,yBACZv6D,MAAO,yCAIX7K,SAAS,CACPtnC,SAAQ,EACR2qB,kBAAkB,CAAC,GACnBgiF,WAAW,SAACviF,EAAU8b,GACpB,IAAI0mE,EAAc,KAClB,OAAQxiF,GACN,KAAK,EACHwiF,EAAc,UAChB,MACA,QACEA,EAAc1mE,EAAkB9b,GAAa8b,EAAkB9b,GAAW9rC,cAAgB,UAG9F,OAAOsuH,GAET9kG,OAAO,CACL+kG,UAAWr8G,OAAOo4B,SAASuG,OAC3BkyE,QAAS,OACTyL,MAAO,uCACPC,qBAAqB,EACrBxkG,QAAS,cAKjBxI,OAAO,CACLkmG,IAAI,CACF7nG,OAAO,CACL8pB,GAAG,MACHzqC,KAAK,MACLxB,MAAM,SAIZ+wH,cAAc,CACZ,CACEhtG,SAAQ,EACR+f,IAAI,cACJC,MAAM,cACNp4B,KAAK,yBACLmO,MAAM,2BACN9S,KAAK,kCACLnL,MAAM,mCACNkB,KAAK,+CAGTi0H,MAAM,CACJ1F,MAAM,CACJvnG,SAAQ,EACR5nB,KAAK,SACL4G,MAAM,UACNu4B,MAAM,UACN21F,aAAazvB,EACbj0E,KAAK,gEACLp0B,MAAM,CACJqM,gBAAgB,CACds+D,KAAK,CACHnpE,UAAU8zG,GACVrjE,SAAS,CACP7T,IAAI25F,GACJ1tH,SAAS,GACT5J,KAAK,UACL87C,UAAU,SACVi2D,YAAY,OACZvpG,QAAQ,8CAEVktG,eAAe,CACb55D,UAAU,SACVne,IAAI45F,GACJv3H,KAAK,wBACLwI,QAAQ,8CAEVm1B,IAAIusC,EACJlqE,KAAK,OACLiN,MAAM,OACNrD,SAAS,GACTugB,SAAQ,EACRhhB,MAAM,aACN5G,KAAK,yBACLiG,QAAQ,6CACRksG,SAAS,4EAEX4b,IAAI,CACFvvH,UAAU4vG,GACVn/D,SAAS,CACP5nC,SAAS,GACT5J,KAAK,YACLmzG,cAAc,EACdx1E,IAAI65F,GACJnkB,aAAa,IACbtB,YAAY,OACZvpG,QAAQ,8CAEVxI,KAAK,MACLiN,MAAM,MACNrD,SAAS,GACTugB,SAAQ,EACRwT,IAAI85F,GACJtuH,MAAM,8BACN5G,KAAK,iCACLiG,QAAQ,6CACRksG,SAAS,mFAKjBgjB,YAAY,CACVvtG,SAAQ,EACR5nB,KAAK,WACLm/B,MAAM,WACNv4B,MAAM,WACNwqB,KAAK,0DACL0jG,aAAaje,GACb75G,MAAM,CACJqM,gBAAgB,CACdqkH,aAAa,CACXrmH,SAAS,GACT+zB,IAAIg6F,GACJ33H,KAAK,eACLiN,MAAM,eAENzE,QAAQ,6CACRizG,YAAY,6CAEZxkC,WAAW,CACTm5C,IAAI,CACFzyF,IAAIi6F,EACJ53H,KAAK,MACLiN,MAAM,MACNrD,SAAS,GAETpB,QAAQ,gDAKd2nH,cAAc,CACZvmH,SAAS,GACT+zB,IAAIg6F,GACJ33H,KAAK,gBACLiN,MAAM,gBAENzE,QAAQ,6CACRizG,YAAY,6CACZxkC,WAAW,CACTm5C,IAAI,CACFzyF,IAAIi6F,EACJ53H,KAAK,MACLiN,MAAM,MACNrD,SAAS,GAETpB,QAAQ,kDAOlBysE,YAAY,CAEVC,WAAW,SAEX4B,2BAA4B,QAC5B3B,aAAa,CACXx3C,IAAIk6F,GACJ73H,KAAK,yBAELwI,QAAQ,8CAEVksE,cAAc,CACZ/2C,IAAIm6F,GACJ93H,KAAK,uBAELwI,QAAQ,gDAIduvH,WAAW,CACT5tG,SAAQ,EACRmJ,SAAQ,EACR/wB,KAAK,cACL4G,MAAM,cACNu4B,MAAM,uBACN21F,aAAarP,GACbr0F,KAAK,qJACLp0B,MAAM,CACJkyC,UAAU,CACRs3E,qBAAqB,CACnBprF,IAAIq6F,GACJxvH,QAAQ,iDAKhByvH,WAAW,CACT9tG,SAAQ,EACRhhB,MAAM,cACNu4B,MAAM,cACN21F,aAAapZ,GACbh8G,MAAM,yBACN0xB,KAAK,iEACLp0B,MAAM,CACJu0G,cAAc,CACZ9zG,KAAK,MACLiN,MAAM,MACNrD,SAAS,GACTmqG,WAAW,WAEbC,aAAa,CACXr2E,IAAI61F,EACJxzH,KAAK,OACL4J,SAAS,GACTqD,MAAM,OACNgnG,aAAa,WACbzrG,QAAQ,gDAId0vH,cAAc,CACZ/tG,SAAQ,EACRhhB,MAAM,iBACNu4B,MAAM,iBACN21F,aAAahS,GACbpjH,MAAM,kCACN0xB,KAAK,8DACLtL,aAAa,6DACb9oB,MAAM,CACJiyC,SAAS,CACP5nC,SAAS,GACT+zB,IAAIw6F,GACJn4H,KAAK,YACLwI,QAAQ,8CAEVkf,UAAU,CACR,CACEG,WAAW,MACX8rD,oBAAoB,WACpBD,OAAO,CACL0kD,MAAM,CACJz6F,IAAI06F,GACJr4H,KAAK,oCACLwI,QAAQ,6CACRk+G,aAAa,CACX98G,SAAS,GACT+zB,IAAI26F,GACJt4H,KAAK,wCACLwI,QAAQ,+CAGZ+vH,QAAQ,CACN56F,IAAI06F,GACJr4H,KAAK,sCACLwI,QAAQ,6CACRk+G,aAAa,CACX98G,SAAS,GACT+zB,IAAI26F,GACJt4H,KAAK,0CACLwI,QAAQ,oDAQtBowE,aAAa,CACXzuD,SAAQ,EACR5nB,KAAK,UACLi2H,cAAa,EACb53F,gBAAe,EACfc,MAAM,gBACNv4B,MAAM,gBACNkuH,aAAa9T,GACb5vF,KAAK,6FACLp0B,MAAM,CACJqM,gBAAgB,CACdqkH,aAAa,CACXrmH,SAAS,GACT6/B,SAAS,OACT1S,UAAU,MACVquF,YAAY,IACZroF,kBAAkB,CAChBY,IAAI86F,GACJz4H,KAAK,qBACLwI,QAAQ,6CAERw3B,UAAU,CACR,CACEhgC,KAAK,UACLw6B,WAAU,EACVrxB,MAAM,UACNg3B,WAAW,uBAKnB+vF,cAAc,CACZtmH,SAAS,EACT6/B,SAAS,OACT1S,UAAU,OACVquF,YAAY,IACZroF,kBAAkB,CAChBY,IAAI86F,GACJz4H,KAAK,sBACLwI,QAAQ,6CAERw3B,UAAU,CACR,CACEhgC,KAAK,UACLmJ,MAAM,UACNqxB,WAAU,EACV2F,WAAW,0CAoIzBsT,eAAe,CACbtpB,SAAQ,EACRquG,cAAa,EACb53F,gBAAe,EACfr+B,KAAK,eACLm/B,MAAM,kBACNv4B,MAAM,kBACNkuH,aAAatP,GACbp0F,KAAK,8FACLp0B,MAAM,CACJqM,gBAAgB,CACdqkH,aAAa,CACXrmH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,MACV/2B,KAAK,iBACLiN,MAAM,iBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,wBACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,cAKbkwH,cAAc,CACZtmH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,OACV/2B,KAAK,kBACLiN,MAAM,kBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,yBACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,cAKbmwH,cAAc,CACZvmH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,OACV/2B,KAAK,kBACLiN,MAAM,kBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,yBACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,cAKb44H,cAAc,CACZhvH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,OACV/2B,KAAK,kBACLiN,MAAM,kBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,yBACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,cAKb64H,cAAc,CACZjvH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,OACV/2B,KAAK,kBACLiN,MAAM,kBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,yBACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,cAKb84H,cAAc,CACZlvH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,OACV/2B,KAAK,kBACLiN,MAAM,kBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,yBACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,cAKb+4H,YAAY,CACVnvH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,MACV/2B,KAAK,gBACLiN,MAAM,gBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,4BACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,cAKbg5H,aAAa,CACXpvH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,OACV/2B,KAAK,iBACLiN,MAAM,iBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,6BACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,cAKbi5H,aAAa,CACXrvH,SAAS,GACT+zB,IAAI+6F,GACJjvF,SAAS,OACT1S,UAAU,OACV/2B,KAAK,iBACLiN,MAAM,iBACNzE,QAAQ,6CACRu0B,kBAAkB,CAChBY,IAAIg7F,GACJ34H,KAAK,6BACLwI,QAAQ,6CACRw3B,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,iBAQnBk5H,eAAe,CACb/uG,SAAQ,EACR5nB,KAAK,YACLm/B,MAAM,UACNv4B,MAAM,kBACNwqB,KAAK,yEACL0jG,aAAazP,GACbroH,MAAM,CACJw9B,kBAAkB,CAChB/8B,KAAK,kBACL29B,IAAIw7F,GACJ3wH,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,uBAIXkuC,oBAAoB,CAAC,OAAO,QAC5BtiC,gBAAgB,CACdwtH,UAAU,CACRxvH,SAAS,GACTugB,SAAQ,EACR0B,SAAS,OACTkL,UAAU,MACV4G,IAAI07F,GACJpsH,MAAM,aACN1K,KAAK,4BACLqiH,gBAAgB,oBAChBp8G,QAAQ,8CAEV8wH,KAAK,CACH1vH,SAAS,EACTugB,SAAQ,EACRld,MAAM,OACN8pB,UAAU,MACVlL,SAAS,WACT+4F,gBAAgB,4BAChBp8G,QAAQ,8CAEV+wH,KAAK,CACH3vH,SAAS,GACTugB,SAAQ,EACRld,MAAM,OACN8pB,UAAU,MACVlL,SAAS,UACT+4F,gBAAgB,2BAChBp8G,QAAQ,8CAEVgxH,KAAK,CACH5vH,SAAS,GACTugB,SAAQ,EACRld,MAAM,OACN4e,SAAS,OACTkL,UAAU,MACV6tF,gBAAgB,wBAChBp8G,QAAQ,8CAEVixH,OAAO,CACL7vH,SAAS,GACTugB,SAAQ,EACRld,MAAM,SACN0wB,IAAI87F,GAAO97F,IACX5G,UAAU,MACVlL,SAAS,QACTtpB,KAAK,yBACLqiH,gBAAgB,yBAChBp8G,QAAQ,8CAEVkxH,OAAO,CACL9vH,SAAS,GACTugB,SAAQ,EACRld,MAAM,SACN8pB,UAAU,MACV4G,IAAI87F,GAAO97F,IACX9R,SAAS,QACTtpB,KAAK,yBACLqiH,gBAAgB,yBAChBp8G,QAAQ,8CAEVmxH,WAAW,CACT/vH,SAAS,GACTugB,SAAQ,EACR0B,SAAS,OACT8R,IAAI07F,GACJtiG,UAAU,OACV9pB,MAAM,cACN1K,KAAK,6BACLqiH,gBAAgB,oBAChBp8G,QAAQ,8CAEVoxH,MAAM,CACJhwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN8pB,UAAU,OACVlL,SAAS,WACT+4F,gBAAgB,4BAChBp8G,QAAQ,8CAEVqxH,MAAM,CACJjwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN8pB,UAAU,OACVlL,SAAS,UACT+4F,gBAAgB,2BAChBp8G,QAAQ,8CAEVsxH,MAAM,CACJlwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN4e,SAAS,OACTkL,UAAU,OACV6tF,gBAAgB,wBAChBp8G,QAAQ,8CAEVuxH,QAAQ,CACNnwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,UACN4e,SAAS,QACT8R,IAAIo8F,GAAQp8F,IACZ5G,UAAU,OACVx0B,KAAK,0BACLqiH,gBAAgB,yBAChBp8G,QAAQ,8CAEVwxH,QAAQ,CACNpwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,UACN4e,SAAS,QACT8R,IAAIo8F,GAAQp8F,IACZ5G,UAAU,OACVx0B,KAAK,0BACLqiH,gBAAgB,yBAChBp8G,QAAQ,8CAEVyxH,MAAM,CACJrwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN8pB,UAAU,OACVlL,SAAS,WACT+4F,gBAAgB,4BAChBp8G,QAAQ,8CAEV0xH,MAAM,CACJtwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN8pB,UAAU,OACVlL,SAAS,UACT+4F,gBAAgB,2BAChBp8G,QAAQ,8CAEV2xH,MAAM,CACJvwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN4e,SAAS,OACTkL,UAAU,OACV6tF,gBAAgB,wBAChBp8G,QAAQ,8CAEV4xH,QAAQ,CACNxwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,UACN0wB,IAAIy8F,GAAQz8F,IACZ9R,SAAS,QACTkL,UAAU,OACVx0B,KAAK,0BACLqiH,gBAAgB,yBAChBp8G,QAAQ,8CAEV6xH,QAAQ,CACNzwH,SAAS,EACTugB,SAAQ,EACRld,MAAM,UACN0wB,IAAIy8F,GAAQz8F,IACZ9R,SAAS,QACTkL,UAAU,OACVx0B,KAAK,0BACLqiH,gBAAgB,yBAChBp8G,QAAQ,8CAEV8xH,WAAW,CACT1wH,SAAS,GACTugB,SAAQ,EACRwT,IAAI07F,GACJxtG,SAAS,OACTkL,UAAU,OACV9pB,MAAM,mBACNihC,oBAAoB,CAAC,QACrB02E,gBAAgB,oBAChBriH,KAAK,kCACLiG,QAAQ,8CAEV+xH,MAAM,CACJ3wH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN4e,SAAS,OACTkL,UAAU,OACV6tF,gBAAgB,wBAChBp8G,QAAQ,8CAEVgyH,QAAQ,CACN5wH,SAAS,GACTugB,SAAQ,EACRld,MAAM,UACN0wB,IAAI68F,GACJzjG,UAAU,OACVlL,SAAS,QACTqiB,oBAAoB,CAAC,QACrB3rC,KAAK,4BACLqiH,gBAAgB,yBAChBp8G,QAAQ,8CAEViyH,WAAW,CACT7wH,SAAS,GACTugB,SAAQ,EACRwT,IAAI07F,GACJxtG,SAAS,OACTkL,UAAU,OACV9pB,MAAM,mBACNihC,oBAAoB,CAAC,QACrB02E,gBAAgB,oBAChBriH,KAAK,kCACLiG,QAAQ,8CAEVkyH,MAAM,CACJ9wH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN4e,SAAS,OACTkL,UAAU,OACV6tF,gBAAgB,wBAChBp8G,QAAQ,8CAEVmyH,QAAQ,CACN/wH,SAAS,GACTugB,SAAQ,EACRwT,IAAIg9F,GACJ1tH,MAAM,UACN8pB,UAAU,OACVlL,SAAS,QACTtpB,KAAK,4BACLqiH,gBAAgB,yBAChBp8G,QAAQ,8CAEVoyH,MAAM,CACJhxH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN8pB,UAAU,OACVlL,SAAS,WACT+4F,gBAAgB,4BAChBp8G,QAAQ,8CAEVqyH,MAAM,CACJjxH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN8pB,UAAU,OACVlL,SAAS,UACT+4F,gBAAgB,2BAChBp8G,QAAQ,8CAEVsyH,MAAM,CACJlxH,SAAS,EACTugB,SAAQ,EACRld,MAAM,QACN4e,SAAS,OACTkL,UAAU,OACV6tF,gBAAgB,wBAChBp8G,QAAQ,iDAKhBuyH,SAAS,CACP5wG,SAAQ,EACR5nB,KAAK,mBACLm/B,MAAM,YACNv4B,MAAM,YACNwqB,KAAK,oEACL0jG,aAAarjG,IACbihD,YAAY,CACV/+C,YAAW,EACXmD,eAAc,IAGlB2hG,UAAU,CACR7wG,SAAQ,EACR5nB,KAAK,OACLm/B,MAAM,aACNv4B,MAAM,aACNwqB,KAAK,kDACL0jG,aAAatnB,GACbxwG,MAAM,CACJqM,gBAAgB,CACdqvH,IAAM,CAAChuH,MAAQ,OACfmjH,IAAM,CAACnjH,MAAQ,OACfqmH,KAAO,CAACrmH,MAAQ,QAChBomH,KAAO,CAACpmH,MAAQ,QAChBojH,KAAO,CAACpjH,MAAQ,QAChBiuH,KAAO,CAACjuH,MAAQ,QAChBmmH,KAAO,CAACnmH,MAAQ,QAChBsmH,KAAO,CAACtmH,MAAQ,QAChBumH,KAAO,CAACvmH,MAAQ,QAChBkuH,KAAO,CAACluH,MAAQ,QAChBmuH,KAAO,CAACnuH,MAAQ,QAChBouH,OAAO,CAACpuH,MAAQ,QAChBquH,IAAM,CAACruH,MAAQ,OACfsuH,MAAQ,CAACtuH,MAAQ,SACjBuuH,KAAO,CAACvuH,MAAQ,QAChBwuH,IAAM,CAACxuH,MAAQ,OACfyuH,IAAM,CAACzuH,MAAQ,OACf0uH,KAAO,CAAC1uH,MAAQ,QAChB2uH,IAAM,CAAC3uH,MAAQ,OACf4uH,IAAM,CAAC5uH,MAAQ,OACf6uH,IAAM,CAAC7uH,MAAQ,OACf8uH,IAAM,CAAC9uH,MAAQ,OACf+uH,IAAM,CAAC/uH,MAAQ,OACfgvH,IAAM,CAAChvH,MAAQ,OACfivH,IAAM,CAACjvH,MAAQ,OACfkvH,IAAM,CAAClvH,MAAQ,OACfmvH,IAAM,CAACnvH,MAAQ,OACfovH,IAAM,CAACpvH,MAAQ,OACfqvH,IAAM,CAACrvH,MAAQ,OACfsvH,IAAM,CAACtvH,MAAQ,OACfuvH,MAAQ,CAACvvH,MAAQ,SACjBwvH,IAAM,CAACxvH,MAAQ,OACfyvH,IAAM,CAACzvH,MAAQ,OACf0vH,IAAM,CAAC1vH,MAAQ,OACf2vH,IAAM,CAAC3vH,MAAQ,OACf4vH,IAAM,CAAC5vH,MAAQ,OACf6vH,KAAO,CAAC7vH,MAAQ,QAChB8vH,IAAM,CAAC9vH,MAAQ,OACf+vH,IAAM,CAAC/vH,MAAQ,OACfgwH,KAAO,CAAChwH,MAAQ,QAChBiwH,KAAO,CAACjwH,MAAQ,QAChBkwH,KAAO,CAAClwH,MAAQ,QAChBmwH,IAAM,CAACnwH,MAAQ,OACfowH,KAAO,CAACpwH,MAAQ,QAChBqwH,IAAM,CAACrwH,MAAQ,OACfswH,IAAM,CAACtwH,MAAQ,OACfuwH,IAAM,CAACvwH,MAAQ,OACfwwH,IAAM,CAACxwH,MAAQ,OACfywH,IAAM,CAACzwH,MAAQ,OACf0wH,IAAM,CAAC1wH,MAAQ,OACf2wH,IAAM,CAAC3wH,MAAQ,OACf4wH,MAAQ,CAAC5wH,MAAQ,SACjB6wH,KAAO,CAAC7wH,MAAQ,QAChB8wH,IAAM,CAAC9wH,MAAQ,OACf+wH,IAAM,CAAC/wH,MAAQ,OACfgxH,IAAM,CAAChxH,MAAQ,OACfixH,IAAM,CAACjxH,MAAQ,OACfkxH,KAAO,CAAClxH,MAAQ,QAChBmxH,IAAM,CAACnxH,MAAQ,OACfoxH,IAAM,CAACpxH,MAAQ,OACfqxH,KAAO,CAACrxH,MAAQ,QAChBsxH,KAAO,CAACtxH,MAAQ,QAChBuxH,GAAK,CAACvxH,MAAQ,MACdwxH,IAAM,CAACxxH,MAAQ,OACfyxH,IAAM,CAACzxH,MAAQ,OACf0xH,IAAM,CAAC1xH,MAAQ,OACf2xH,IAAM,CAAC3xH,MAAQ,OACf4xH,IAAM,CAAC5xH,MAAQ,OACf6xH,IAAM,CAAC7xH,MAAQ,OACf8xH,IAAM,CAAC9xH,MAAQ,OACf+xH,IAAM,CAAC/xH,MAAQ,OACfgyH,IAAM,CAAChyH,MAAQ,OACfiyH,IAAM,CAACjyH,MAAQ,OACfkyH,IAAM,CAAClyH,MAAQ,OACfmyH,IAAM,CAACnyH,MAAQ,OACfoyH,MAAQ,CAACpyH,MAAQ,SACjBqyH,IAAM,CAACryH,MAAQ,OACfsyH,IAAM,CAACtyH,MAAQ,OACfuyH,IAAM,CAACvyH,MAAQ,OACfwyH,KAAO,CAACxyH,MAAQ,QAChByyH,IAAM,CAACzyH,MAAQ,OACf0yH,IAAM,CAAC1yH,MAAQ,OACf2yH,IAAM,CAAC3yH,MAAQ,SAGnBgoE,YAAY,KAIhB4qD,UAAU,CACRnI,YAAY,CACVvuH,MAAM,eACNlH,MAAM,oCACN69H,UAAU,2CAEZ5H,cAAc,CACZ/uH,MAAM,iBACNlH,MAAM,kCACN69H,UAAU,oCAGdpqG,SAAU,CACRoD,QAAQ,CACNinG,KAAK,CACHtpG,gBAAgB,KAChBQ,iBAAgB,EAChB13B,MAAM,CACJk6B,SAAS,kBACTN,QAAQ,iBAGZ6mG,KAAK,CACHvpG,gBAAgB,KAChBQ,iBAAgB,EAChB13B,MAAM,CACJk6B,SAAS,wBACTN,QAAQ,gBAGZ8mG,OAAO,CACLxpG,gBAAgB,gBAChBQ,iBAAgB,EAChB13B,MAAM,CACJk6B,SAAS,6BACTN,QAAQ,kBACR92B,WAAW,CACTgkB,QAAQ,CAAC,IAAI,WAKrBsP,UAAW,CACTuqG,KAAM,CACJ/1G,SAAS,EACTsP,SAAU,2BACVp3B,WAAY,CACVpD,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB2C,GAAI,OAENs3B,QAAS,WACTgnG,WAAY,MACZxY,WAAY,gBACZ/wF,iBAAiB,CAAC,QAClBe,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACxDb,gBAAgB,CAAC,OAAO,MAAM,OAC9BiB,gBAAgB,GAChB0X,IAAI,OACJ2wF,UAAU,CACRpR,KAAK,CACHqR,UAAU,kBAEZC,KAAK,CACHD,UAAU,mBAGdhqG,QAAS,SAAC92B,GACR,IAAMumB,EAAO,GACb,GAAIvmB,EAAM00B,gBAAkB10B,EAAM00B,eAChC,OAAQ10B,EAAM00B,gBACZ,IAAK,OACHnO,EAAK6hG,WAAL,8BACF,MACA,IAAK,OACH7hG,EAAK6hG,WAAL,4BAMN,OAAO7hG,GAET8P,cAAe,SAACr2B,EAAMwJ,EAAc0rB,GAClC,IAAMgb,EAAM1mC,EAAc2sB,SAASC,UAAUuqG,KAAKzwF,IAE5C8wF,EADYx3H,EAAc2sB,SAASC,UAAUuqG,KAAKE,UAAU3wF,GAC9B4wF,UAG9BpuG,EAAS,CACbuuG,KAAI,YAAAl3H,OAAc/J,EAAMuM,SACxB20H,aAAchsG,EAAU5vB,cAAgB4vB,EAAU5vB,cAAkBtF,EAAM6F,YAAY86H,MAAQ3gI,EAAM6F,YAAY86H,KAAKO,aAAelhI,EAAM6F,YAAY86H,KAAKO,aAAelhI,EAAMsF,cAChL07H,oBACAG,YAAY33H,EAAckmD,SAI5B,MAAO,GAAA3lD,OAVK,oCAUL,KAAUzK,OAAO8B,KAAKsxB,GACxBngB,IAAI,SAAA6uH,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB3uG,EAAO0uG,MACjEz3H,KAAK,MAEZ2sB,OAAQ,SAAChB,EAAWlE,EAAOpxB,EAAMwJ,GAE/B,IADmBqlB,SAASC,eAAe,eAC3B,CACd,IAAMwyG,EAAYzyG,SAASzuB,cAAc,OA2BzC,GA1BAkhI,EAAUvwF,UAAV,68BAAAhnC,OASeurB,EATf,2dAAAvrB,OAgBsBP,EAAc2sB,SAASC,UAAUuqG,KAAKzmG,SAhB5D,oQAuBArL,SAASosD,KAAK7hD,YAAYkoG,IAGrBzyG,SAASC,eAAe,oBAAoB,CAC/C,IAAMyyG,EAAY1yG,SAASzuB,cAAc,SACzCmhI,EAAUv9H,GAAK,mBACfu9H,EAAUxwF,UAAV,4aAaAliB,SAASosD,KAAK7hD,YAAYmoG,OAKlCC,KAAM,CACJ52G,SAAQ,EACRsP,SAAU,2BACVp3B,WAAY,CACVpD,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB2C,GAAI,OAENs3B,QAAS,WACTgnG,WAAY,MACZxY,WAAU,0BACV/wF,iBAAiB,CAAC,OAAO,QACzBoqG,MAAO,CACL79H,KAAK,iBACLpD,MAAM,OACNqwB,QAAQ,WAEV0G,gBAAgB,CAAC,MAAM,MAAM,QAC7Ba,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACtFtB,QAAS,SAAC92B,GACR,IAAMumB,EAAO,GACX,OAAQvmB,EAAM00B,gBACZ,IAAK,OACHnO,EAAK6R,mBAAqB,CAAC,MAAM,OACjC7R,EAAK6hG,WAAL,qBACF,MACA,IAAK,OACH7hG,EAAK6R,mBAAqB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC7F7R,EAAK6hG,WAAL,gBAKN,OAAO7hG,GAET8P,cAAe,SAACr2B,EAAMwJ,EAAc0rB,GACnC,MAAO,CACLwsG,YAAa,OACZxmE,YAAal7D,EAAMuM,QACnBo1H,WAAYzxF,GAAI0xF,mBAChB5rG,QAASh2B,EAAM6C,SAAW,SAAW,UACrCg/H,YAAW,GAAA93H,OAAKP,EAAckmD,QAAnB,0BACXoyE,UAAW5sG,EAAU5vB,cAAgB4vB,EAAU5vB,cAAkBtF,EAAM6F,YAAY27H,MAAQxhI,EAAM6F,YAAY27H,KAAKM,UAAY9hI,EAAM6F,YAAY27H,KAAKM,UAAY9hI,EAAMsF,gBAG3KgxB,OAAQ,SAAChB,EAAWlE,EAAOpxB,EAAMwJ,GAC/B,IAAIu4H,KAAezsG,GAChBimC,GAAG,IADN,eAAA3uD,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KACW,SAAAqK,EAAOihG,GAAP,IAAAvzG,EAAAkM,EAAA7C,EAAA,OAAAoc,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,OACDxI,EAAgB,IAAIG,IAAcjF,GACpCgR,EAAgB,KAChB7C,EAAc,KAHXmJ,EAAAiV,GAKC8rF,EAAM1tG,KALP2M,EAAAhK,KAMA,wBANAgK,EAAAiV,GAAA,yBAQHvsB,EAAMi2B,oBARH3e,EAAAhK,KAAA,EAUmBtN,EAAMs+B,mBAVzB,cAUHttB,EAVGsG,EAAAhH,KAYHnC,EAAckqG,EAAM7kD,QAAQwuE,SAAS7zH,YACrCA,EAAcrJ,EAAc6I,MAAMQ,EAAY8L,YAAYD,IAAIlV,EAAc6I,MAAMI,KAAKo2D,IAAI,GAAGl2D,SAAS+C,IAAgBiJ,aAAaA,WAGpImB,OAAOsa,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAA7rB,OAAKoE,EAAL,KAAApE,OAAoB/J,EAAMsF,cAA1B,2BAChBuwB,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YArBR1e,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,qCAAAhB,EAAA1I,SAAAwI,EAAArX,SADX,gBAAAqY,GAAA,OAAAxL,EAAAkC,MAAA/O,KAAAgP,YAAA,IA8BGkzH,SAGPC,QAAS,CACPt3G,SAAQ,EACRsP,SAAU,8BACVp3B,WAAY,CACVpD,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB2C,GAAI,OAENs3B,QAAS,WACTgnG,WAAY,MACZxY,WAAU,+BACV/wF,iBAAiB,CAAC,OAAO,QACzBe,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC9Db,gBAAgB,CAAC,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,QACzDiB,gBAAgB,CAAC2pG,0CAA0C,IAC3DjyF,IAAI,OACJuxF,MAAM,CACJ79H,KAAK,UACLitB,QAAQ,WAEVgwG,UAAU,CACRpR,KAAK,CACHhhE,OAAOve,GAAIkyF,2BACX3pG,IAAI,8BAENsoG,KAAK,CACHtyE,OAAOve,GAAImyF,2BACX5pG,IAAI,+BAGR3B,QAAS,SAAC92B,GACR,IAAMumB,EAAO,GAEPmO,EAAiB10B,EAAM00B,gBAAkB10B,EAAM00B,eACjDgS,EAAyB,SAAnBhS,EAA4B,OAAS,OAE/C,GAAI10B,EAAM40B,iBAAmB50B,EAAM40B,gBAAgB/tB,MACjD,OAAQ7G,EAAM40B,gBAAgB/tB,MAAMkM,eAClC,IAAK,MACHwT,EAAKk7G,MAAQ,CACX79H,KAAK,UACLitB,QAAQ,WAEVtK,EAAK6hG,WAAL,KAAAr+G,OAAuB28B,EAAvB,oBACF,MACA,IAAK,MACHA,EAAM,OACNngB,EAAKk7G,MAAQ,CACX79H,KAAK,UACLitB,QAAQ,WAEVtK,EAAK6hG,WAAL,KAAAr+G,OAAuB28B,EAAvB,oBACF,MACA,IAAK,MAEDngB,EAAKk7G,MADgB,SAAnB/sG,EACW,CACX9wB,KAAK,OACLpD,MAAM,WACNqwB,QAAQ,WAGG,CACXjtB,KAAK,UACLitB,QAAQ,WAGZtK,EAAK6hG,WAAL,KAAAr+G,OAAuB28B,EAAvB,oBAMN,OAAOngB,GAET8P,cAAe,SAACr2B,EAAMwJ,EAAc0rB,GAClC,IAAMgb,EAAM1mC,EAAc2sB,SAASC,UAAU8rG,QAAQhyF,IAC/C2wF,EAAYr3H,EAAc2sB,SAASC,UAAU8rG,QAAQrB,UAAU3wF,GAEjEoyF,EAAe,KAEnB,GAAIptG,EAAUN,iBAAmBM,EAAUN,gBAAgB/tB,MACzD,OAAQquB,EAAUN,gBAAgB/tB,MAAMkM,eACtC,IAAK,MACHuvH,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,QACEA,EAAe,MAKrB,IAAIC,EAAqBrtG,EAAU5vB,cAAgB4vB,EAAU5vB,cAAc4D,cAAkBlJ,EAAM6F,YAAYq8H,SAAWliI,EAAM6F,YAAYq8H,QAAQM,aAAexiI,EAAM6F,YAAYq8H,QAAQM,aAAexiI,EAAMsF,cAClNi9H,EAAqBA,EAAmBxvH,cAOxC,MAAO,CACL07C,OANaoyE,EAAUpyE,OAOvB8zE,qBACAE,cAPoBziI,EAAMuM,QAQ1B+1H,eACAI,kBARwB1iI,EAAMuM,QAS9Bo2H,0BAR+B,EAS/BjjI,MAAM,OACNC,OAAO,SAIX22B,OAAQ,SAAChB,EAAWlE,EAAOpxB,EAAMwJ,GAC/B,GAAI4R,OAAOwnH,cAAc,CAGvB,IADsB/zG,SAASC,eAAe,kBAC3B,CACjB,IAAMwyG,EAAYzyG,SAASzuB,cAAc,OAmBzC,GAlBAkhI,EAAUvwF,UAAV,szCAAAhnC,OAQsBP,EAAc2sB,SAASC,UAAU8rG,QAAQhoG,SAR/D,iQAeArL,SAASosD,KAAK7hD,YAAYkoG,IAGrBzyG,SAASC,eAAe,uBAAuB,CAClD,IAAM+zG,EAAeh0G,SAASzuB,cAAc,SAC5CyiI,EAAa7+H,GAAK,sBAClB6+H,EAAa9xF,UAAb,6cAaAliB,SAASosD,KAAK7hD,YAAYypG,IAI9BznH,OAAOwnH,cAActsG,OAAOhB,EAAY,+BAI9CwtG,QAAS,CACPl4G,SAAQ,EACRsP,SAAU,8BACVp3B,WAAY,CACVpD,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB2C,GAAI,OAENs3B,QAAS,WACTgnG,WAAY,MACZxY,WAAY,eACZ/wF,iBAAiB,CAAC,OAAO,QACzBe,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAChFb,gBAAgB,CAAC,OAAO,MAAM,OAC9B2Y,IAAI,OACJ2wF,UAAU,CACRpR,KAAK,CACHh3F,IAAI,iCACJg2B,OAAOve,GAAI6yF,4BAEbhC,KAAK,CACHtoG,IAAI,yBACJg2B,OAAOve,GAAI8yF,6BAGflsG,QAAS,SAAC92B,GACR,IAAMumB,EAAO,GACb,GAAIvmB,EAAM00B,gBAAkB10B,EAAM00B,eAChC,OAAQ10B,EAAM00B,gBACZ,IAAK,OACH,GAAI10B,EAAM40B,iBAAmB50B,EAAM40B,gBAAgB/tB,MACjD,OAAQ7G,EAAM40B,gBAAgB/tB,MAAMkM,eAClC,IAAK,MACHwT,EAAKk7G,MAAQ,CACX79H,KAAK,OACLpD,MAAM,WACNqwB,QAAQ,WAEVtK,EAAK6hG,WAAL,yBACF,MACA,IAAK,MACH7hG,EAAKk7G,MAAQ,CACX79H,KAAK,OAEP2iB,EAAK6hG,WAAL,yBACF,MACA,QACE7hG,EAAKk7G,MAAQ,KACbl7G,EAAK6hG,WAAL,6BAIR,MACA,IAAK,OACH7hG,EAAKk7G,MAAQ,KACbl7G,EAAK6hG,WAAL,aAMN,OAAO7hG,GAET8P,cAAe,SAACr2B,EAAMwJ,EAAc0rB,GAClC,IAAMgb,EAAM1mC,EAAc2sB,SAASC,UAAU0sG,QAAQ5yF,IAC/C2wF,EAAYr3H,EAAc2sB,SAASC,UAAU0sG,QAAQjC,UAAU3wF,GAE/Dxd,EAAS,CACb+7B,OAFaoyE,EAAUpyE,OAGvB+zE,aAActtG,EAAU5vB,cAAgB4vB,EAAU5vB,cAAc4D,cAAkBlJ,EAAM6F,YAAYi9H,SAAW9iI,EAAM6F,YAAYi9H,QAAQN,aAAexiI,EAAM6F,YAAYi9H,QAAQN,aAAexiI,EAAMsF,cAAc4D,cACrNu5H,cAAcziI,EAAMuM,QACpB02H,iBAAiB,MACjBC,uBAAuB,GAGnB3pG,EAAU,CACdinG,KAAO,CACLnU,IAAM,oBACNK,IAAM,sBAER+T,KAAO,qBAGH7rG,EAAkBM,EAAUN,iBAAmBM,EAAUN,gBAAgB/tB,MAAQquB,EAAUN,gBAAgB/tB,MAAMkM,cAAgB,KAGvI,GAAImiB,EAAUR,eACZ,OAAQQ,EAAUR,gBAChB,IAAK,OAEH,OADAhC,EAAOywG,sBAAwB5pG,EAAQrE,EAAUR,gBAAlB,IACvBE,GACN,IAAK,MACL,IAAK,MACHlC,EAAOywG,sBAAwB5pG,EAAQrE,EAAUR,gBAAgBE,GACnE,MACA,QACElC,EAAOywG,sBAAwB7jI,OAAOiO,OAAOgsB,EAAQrE,EAAUR,iBAAiB/qB,KAAK,KAG3F,MACA,IAAK,OACL,QACE+oB,EAAOywG,sBAAwB5pG,EAAQrE,EAAUR,gBAMvD,OAAQE,GACN,IAAK,MACHlC,EAAOuwG,iBAAmB,MAC5B,MACA,IAAK,MACHvwG,EAAOuwG,iBAAmB,MAC5B,MACA,QACEvwG,EAAOuwG,iBAAmB,MAI9B,IAAIxqG,EAAMooG,EAAUpoG,IAWpB,OARe2qG,UAAUC,UAAU9jH,QAAQ,WAAa,IAEjDsP,SAASy0G,OAAOl6F,MAAM,+CACzBva,SAASy0G,OAAS,qEAClB7qG,GAAO,gBAIJ,GAAA1uB,OAAG0uB,EAAH,KAAUn5B,OAAO8B,KAAKsxB,GACxBngB,IAAI,SAAA6uH,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB3uG,EAAO0uG,MACjEz3H,KAAK,MAEZ2sB,OAAQ,SAAChB,EAAWlE,EAAOpxB,EAAMwJ,GAE/B,IADsBqlB,SAASC,eAAe,kBAC3B,CACjB,IAAMwyG,EAAYzyG,SAASzuB,cAAc,OA8BzC,GA7BAkhI,EAAUvwF,UAAV,iqBAAAhnC,OAQiBurB,EARjB,yeAAAvrB,OAewBP,EAAc2sB,SAASC,UAAU0sG,QAAQ5oG,SAfjE,iwBA0BArL,SAASosD,KAAK7hD,YAAYkoG,IAGrBzyG,SAASC,eAAe,uBAAuB,CAClD,IAAMy0G,EAAe10G,SAASzuB,cAAc,SAC5CmjI,EAAav/H,GAAK,sBAClBu/H,EAAaxyF,UAAb,qbAaAliB,SAASosD,KAAK7hD,YAAYmqG,OAKlCxR,cAAe,CACbnnG,SAAS,EACTsP,SAAU,oCACVp3B,WAAY,CACVpD,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB2C,GAAI,OAENs3B,QAAS,WACTgnG,WAAY,MACZxY,WAAY,gBACZ/wF,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBiB,gBAAgB,CAACgrG,uCAAuC,IACxDntG,cAAe,SAACr2B,EAAMwJ,EAAc0rB,EAAUC,EAAUC,GAEtD,IAAMquG,EAAcj6H,EAAc2qE,OAAOj/C,EAAU5vB,eAC7C+kG,EAAgBjvF,OAAOsoH,mBAAqBtoH,OAAOsoH,mBAAmBr5B,cAAgB,KAE5F,OAAKo5B,EAAY1R,cAIV,CACL/8E,UAAWxrC,EAAc2pB,QAAQstB,gBACjC6b,QAAS9yD,EAAc2pB,QAAQstB,gBAC/BxrB,SAAUo1E,GAAiC,aAAhBA,GAA8BjvF,OAAOsoH,mBAAmBC,UAAUt5B,EAAcnhG,eAAiBkS,OAAOsoH,mBAAmBC,UAAUvoH,OAAOsoH,mBAAmBr5B,cAAcnhG,eAAe+rB,SAAW7Z,OAAOwoH,SACzO5R,YAAayR,EAAY1R,cAAcC,YACvCC,cAAewR,EAAY1R,cAAcE,cACzC4R,yBAA0BJ,EAAY1R,cAAcjkC,UACpDg2C,oBAAqB,CAACL,EAAY1R,cAAcjkC,WAChDi2C,gCAAgC,EAChC5uG,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cAbtB,MAgBXkB,OAAQ,SAAChB,EAAWlE,GACdhW,OAAO22G,eAAiBz8F,IACtBlE,IACFkE,EAAW0uG,sBAAwB56H,WAAWgoB,IAEhDhW,OAAO22G,cAAcz7F,OAAOhB,EAAY,WAI9C2uG,UAAW,CACTr5G,SAAS,EACTsP,SAAU,4BACVp3B,WAAY,CACVpD,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB2C,GAAI,OAENs3B,QAAS,YACTgnG,WAAY,MACZxY,WAAY,gBACZ/wF,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OACvE2sG,iBAAiB,CACft5G,SAAS,EACTypB,gBAAiB,6CACjB8vF,eAAgB,CACd,CACEh3E,aAAgB,UAChB1sD,KAAQ,gBACRkK,KAAQ,WAEV,CACEwiD,aAAgB,UAChB1sD,KAAQ,gBACRkK,KAAQ,WAEV,CACEwiD,aAAgB,UAChB1sD,KAAQ,eACRkK,KAAQ,WAEV,CACEwiD,aAAgB,UAChB1sD,KAAQ,eACRkK,KAAQ,aAId6tB,gBAAgB,CACd4rG,iDAAiD,GACjDC,gDAAgD,CAC9ClrG,cAActK,SAASosD,KACvBniD,QAAS,SAAC94B,EAAMwJ,EAAcqtB,GAI5B,IADA,IAAMrQ,EAAUqI,SAASy1G,iBAAiB,wBACjCx7H,EAAE,EAAEA,EAAE0d,EAAQnlB,OAAOyH,IAC5B0d,EAAQ1d,GAAGy7H,SASb,IADA,IAAMC,EAAU31G,SAASy1G,iBAAiB,qBACjCx7H,EAAE,EAAEA,EAAE07H,EAAQnjI,OAAOyH,IAC5B07H,EAAQ17H,GAAGy7H,SAGb,IAAMxzB,EAAW/wG,EAAM+wG,SAAW/wG,EAAM+wG,SAAvB,iBAAAhnG,OAAmD/J,EAAMsF,eAC1E,IAAKupB,SAASC,eAAeiiF,GAAU,CACrC,IAAM5wG,EAAI0uB,SAASzuB,cAAc,KACjCD,EAAE6D,GAAK+sG,EACP5wG,EAAE8c,KAAO4Z,EAAaR,cAAcr2B,EAAMwJ,GAC1CrJ,EAAE2c,OAAS,SACX3c,EAAE6c,IAAM,+BACR7c,EAAE4e,UAAY,kDACd5e,EAAEwgB,MAAQ,kBACVxgB,EAAE6K,MAAQ,gBACV6jB,SAASosD,KAAK7hD,YAAYj5B,OAKlCk2B,cAAe,SAACr2B,EAAMwJ,GAAiCuF,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,IAAAA,UAAA,OAC/CyoB,EAAYx3B,EAAMw3B,UAAYx3B,EAAMw3B,UAAY,MAChD9E,EAAS,CACb+xG,KAAK,KACL95H,KAAK,OACL6qF,KAAK,SACLlyF,MAAM,cACNohI,iBAAgB,EAEhBC,aAAY,GAAA56H,OAAIytB,EAAJ,KAAAztB,OAAiB/J,EAAMsF,eACnCqb,MAAK,QAAA5W,OAASytB,EAAT,SAAAztB,OAA0B/J,EAAMsF,eACrCs/H,YAAW,GAAA76H,OAAIytB,EAAJ,KAAAztB,OAAiB/J,EAAMsF,eAClCu/H,aAAa,6CACb1xG,QAAmD,IAA1C3pB,EAAc2pB,QAAQstB,gBAAwB,UAAY,QAKrE,MAAO,GAAA12C,OAFM,uCAEN,KAAUzK,OAAO8B,KAAKsxB,GACxBngB,IAAI,SAAA6uH,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB3uG,EAAO0uG,MACjEz3H,KAAK,MAEZ2sB,OAAQ,SAAChB,EAAWlE,EAAOpxB,GACzB,IAAM+wG,EAAW/wG,EAAM+wG,SAAW/wG,EAAM+wG,SAAvB,iBAAAhnG,OAAkD/J,EAAMsF,eACnEnF,EAAI0uB,SAASC,eAAeiiF,GAC9B5wG,GACFA,EAAE2kI,UAgCRC,QAAS,CACPn6G,SAAS,EACTsP,SAAU,8BACVp3B,WAAY,CACVpD,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB2C,GAAI,OAENs3B,QAAS,WACTgnG,WAAY,MACZxY,WAAY,aACZ/wF,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxB2Y,IAAI,aACJ1X,gBAAgB,CAACwsG,mDAAmD,IACpE3uG,cAAe,SAACr2B,EAAMwJ,EAAc0rB,EAAU+vG,EAAW7vG,GACvD,MAAO,CACL8a,IAAK,aACLslD,KAAM,MACN9nF,MAAO1N,EAAM6F,YAAYoD,QACzBuuB,UAAW,MACXytG,WAAYA,GAA0B,aACtC7vG,QAASA,GAAoB,eAGjCkB,OAAQ,SAAChB,EAAWlE,EAAOpxB,GACrBob,OAAO8pH,iBACL9zG,IACFkE,EAAWlE,OAASA,EAAOnX,YAE7BmB,OAAO8pH,eAAe5uG,OAAOhB,EAAW,WAI9C6vG,MAAO,CACLv6G,SAAS,EACTsP,SAAU,4BACVp3B,WAAY,CACVpD,MAAO,CAAC,OAAO,QACfC,OAAQ,CAAC,OAAO,QAChB2C,GAAI,OAENs3B,QAAS,WACTgnG,WAAY,MACZxY,WAAY,aACZ/wF,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxB2Y,IAAI,aACJ1X,gBAAgB,CAAC4sG,0CAA0C,IAC3D/uG,cAAe,SAACr2B,EAAMwJ,EAAc0rB,EAAU+vG,EAAW7vG,GACvD,MAAO,CACLiwG,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1B/2E,OAAQ,KACRg3E,uBAAwB,OAG5BnvG,OAAQ,SAAChB,EAAWlE,EAAOpxB,GACzB,GAAIob,OAAOsqH,YAAY,CACrB,IAAMC,EAAS,eACf,IAAK92G,SAASC,eAAe62G,GAAQ,CACnC,IAAMC,EAAuB/2G,SAASzuB,cAAc,OACpDwlI,EAAqB5hI,GAAK2hI,EAC1B92G,SAASosD,KAAK7hD,YAAYwsG,GAG5BxqH,OAAOsqH,YAAYvgH,QAAQiG,IAAIkK,EAAWzG,SAASC,eAAe62G,UAQ/Dn8H,oJCjhGT2kG,qdAMqB/oG,EAAUC,kMAKjC,OACEwgI,EAAA1lI,EAAAC,cAAC6yB,EAAA,EAAD,CACE5uB,GAAI,EACJ3E,MAAO,EACP6C,WAAY,SACZC,cAAe,OAEfqjI,EAAA1lI,EAAAC,cAAC6yB,EAAA,EAAD,CACEloB,GAAI,EACJC,MAAO,CACLC,UAAU,IACVC,KAAK,WAEP3I,WAAY,SACZE,eAAgB,cAGd1C,KAAKC,MAAMQ,OACXqlI,EAAA1lI,EAAAC,cAAC6yB,EAAA,EAAD,CACE9vB,GAAI,EACJzD,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdwD,gBAAiBrD,KAAKC,MAAMQ,QAIhCqlI,EAAA1lI,EAAAC,cAAC6yB,EAAA,EAAD,CACEhyB,SAAU,EACVD,WAAY,EACZE,UAAW,OACXV,MAAO,YACPwK,MAAO,CACLI,cAAc,eAGfrL,KAAKC,MAAM4J,QAGhBi8H,EAAA1lI,EAAAC,cAAC6yB,EAAA,EAAD,CACEjoB,MAAO,CACLC,UAAU,IACVC,KAAK,WAEP3I,WAAY,SACZE,eAAgB,YAEhBojI,EAAA1lI,EAAAC,cAAC6yB,EAAA,EAAD,CACEhyB,SAAU,EACVD,WAAY,EACZR,MAAO,WACPU,UAAW,QACX8J,MAAO,CACLG,WAAW,UAEbE,wBAAyB,CACvBC,OAAQvL,KAAKC,MAAM6G,kBAnEGhG,aA6ErBstG,iKCzET2V,6MAEJv/G,MAAQ,KAGRO,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,2JAK9CD,KAAKmF,iMAGkBE,EAAWC,mEAClCtF,KAAKmF,kJAGE,IAAAM,EAAAzF,KAEHiM,EAAgBjM,KAAKC,MAAMgM,cAK/B,OAJKA,GAAkBA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKrB,KAAKC,MAAMqM,kBAIvCrC,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CAAMxrB,GAAG,wBAAwBtE,MAAO,EAAG8C,cAAe,UACxDwH,EAAA7J,EAAAC,cAAC0lI,EAAA,EAADxmI,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEqnB,KAAMtnB,KAAKC,MAAMqnB,KACjBxkB,SAAU9C,KAAKC,MAAM6C,YAEvBmH,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CAAMxrB,GAAG,cAAcxB,cAAe,UAElCwJ,EAAcuG,IAAI,SAAA7E,GAChB,IAAM7H,EAAcL,EAAKxF,MAAMqM,gBAAgBqB,GAC/C,OAAK7H,EAIHmE,EAAA7J,EAAAC,cAAC2lI,EAAA,EAADzmI,OAAAC,OAAA,CACEmO,MAAOA,GACHlI,EAAKxF,MAFX,CAGE8D,IAAG,SAAAiG,OAAW2D,GACd7H,YAAaA,EACb+hB,MAAK,aAAA7d,OAAe2D,GACpBma,OAAM,cAAA9d,OAAgB2D,GACtBga,eAAgBliB,EAAKxF,MAAM0nB,gBAAkBqb,OAVxC,gBA1CEliC,aA+DVijH,8WC2RAkiB,6MA3VbzhI,MAAQ,2EAGN,OACE2iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAWC,IAAOsR,gBAAiB4D,GAAI,CAAC,EAAE,GAAInyB,GAAI,CAAC,EAAE,GAAIyW,GAAI,CAAC,MAAO,QACxE0O,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAWC,IAAOuR,iBACvBrJ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjd,SAAU,WAAYC,OAAQ,IACjC+c,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,SAAUD,WAAY,SAAUuuB,SAAU,CAAC,OAAQ,QAASrF,GAAI,OAAQyI,GAAI,EAAGhzB,UAAW,SAAUsX,GAAI,CAAC,MAAO,QACnI0O,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQzlB,GAAT,CAAY4F,WAAY,YAAanG,WAAY,QAASkD,GAAI,QAASpD,SAAU,CAAC,QAAQ,GAAIC,UAAW,SAAUV,MAAO,SAA1H,oBAGA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ8+G,GAAT,CAAYjlI,WAAY,MAAOG,WAAY,CAAC,QAAS,OAAQF,SAAU,CAAC,EAAE,GAAIC,UAAW,SAAUV,MAAO,SAA1G,+BAIF0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,SAAUD,WAAY,SAAUuuB,SAAU,CAAC,OAAQ,QAASrF,GAAI,OAAQvqB,UAAW,UACtGgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAWC,IAAO0R,cAAenuB,WAAY,SAAU7C,MAAO,OAAQ0vB,UAAW,CAAC,OAAO,QAAShsB,gBAAiB,QAAS5C,MAAO,YAAahB,EAAG,CAAC,EAAE,GAAI6e,UAAW,wCAAyCze,aAAc,OAAQoL,MAAO,CAACd,SAAS,aACxPgd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,kBAAmBkwB,GAAI,GAC9BhN,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM+M,GAAI,GAAV,wZAGAhN,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM+M,GAAI,GAAV,sgBAGAhN,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM+M,GAAI,GAAV,ikBAGAhN,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM+M,GAAI,GAAV,iuBAGAhN,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,+mCAKFD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,kBAAmBlC,GAAI,CAAC,EAAE,IACjColB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,sBAIAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,sGAIAolB,EAAA/mB,EAAAC,cAAA,MAAI2e,UAAWC,IAAOyR,MACpBvJ,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,4CADF,yKAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,iDADF,mjBAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,wCADF,sLAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,mDADF,4IAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,sDADF,mHAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,yDADF,6JAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,yCADF,mOAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,2CADF,wJAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,wCADF,iFAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,4CADF,4CAGA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,0DADF,sJAMJ8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,sBAAuBlC,GAAI,CAAC,EAAE,IACrColB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,mCAIAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,mjBAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,WAAYlC,GAAI,CAAC,EAAE,IAC1BolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,gBAKFimB,EAAA/mB,EAAAC,cAAA,MAAI2e,UAAWC,IAAOyR,MACpBvJ,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,+BAA8B8mB,EAAA/mB,EAAAC,cAAA,WADhC,qTAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,2BAA0B8mB,EAAA/mB,EAAAC,cAAA,WAD5B,kGAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,2CAA0C8mB,EAAA/mB,EAAAC,cAAA,WAD5C,qzBAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,kDAAiD8mB,EAAA/mB,EAAAC,cAAA,WADnD,uMAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,iEAAgE8mB,EAAA/mB,EAAAC,cAAA,WADlE,oWAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,4CAA2C8mB,EAAA/mB,EAAAC,cAAA,WAD7C,8EAGE8mB,EAAA/mB,EAAAC,cAAA,MAAI2e,UAAWC,IAAOyR,KAAMzlB,MAAO,CAACm7H,UAAU,gBAC5Cj/G,EAAA/mB,EAAAC,cAAA,0GACA8mB,EAAA/mB,EAAAC,cAAA,kMACA8mB,EAAA/mB,EAAAC,cAAA,4KAGJ8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,kDAAiD8mB,EAAA/mB,EAAAC,cAAA,WADnD,iFAGE8mB,EAAA/mB,EAAAC,cAAA,MAAI2e,UAAWC,IAAOyR,KAAMzlB,MAAO,CAACm7H,UAAU,gBAC5Cj/G,EAAA/mB,EAAAC,cAAA,mNACA8mB,EAAA/mB,EAAAC,cAAA,oKACA8mB,EAAA/mB,EAAAC,cAAA,gQACA8mB,EAAA/mB,EAAAC,cAAA,wOACA8mB,EAAA/mB,EAAAC,cAAA,0LACA8mB,EAAA/mB,EAAAC,cAAA,2JACA8mB,EAAA/mB,EAAAC,cAAA,qLACA8mB,EAAA/mB,EAAAC,cAAA,mEACA8mB,EAAA/mB,EAAAC,cAAA,uVACA8mB,EAAA/mB,EAAAC,cAAA,qNACA8mB,EAAA/mB,EAAAC,cAAA,0OACA8mB,EAAA/mB,EAAAC,cAAA,yHAIJ8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,+CAA8C8mB,EAAA/mB,EAAAC,cAAA,WADhD,sCAGE8mB,EAAA/mB,EAAAC,cAAA,MAAI2e,UAAWC,IAAOyR,KAAMzlB,MAAO,CAACm7H,UAAU,gBAC5Cj/G,EAAA/mB,EAAAC,cAAA,0LACA8mB,EAAA/mB,EAAAC,cAAA,+PACA8mB,EAAA/mB,EAAAC,cAAA,mUACA8mB,EAAA/mB,EAAAC,cAAA,yIACA8mB,EAAA/mB,EAAAC,cAAA,6QARJ,uXAYA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,iDAAgD8mB,EAAA/mB,EAAAC,cAAA,WADlD,sCAGE8mB,EAAA/mB,EAAAC,cAAA,MAAI2e,UAAWC,IAAOyR,KAAMzlB,MAAO,CAACm7H,UAAU,gBAC5Cj/G,EAAA/mB,EAAAC,cAAA,0HACA8mB,EAAA/mB,EAAAC,cAAA,4GAGJ8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,oCAAmC8mB,EAAA/mB,EAAAC,cAAA,WADrC,80BAMF8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,iBAAkBlC,GAAI,CAAC,EAAE,IAChColB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,qBAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,sLAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,qBAAsBlC,GAAI,CAAC,EAAE,IACpColB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,yBAGAimB,EAAA/mB,EAAAC,cAAA,MAAI2e,UAAWC,IAAOyR,MACpBvJ,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,iEAAgE8mB,EAAA/mB,EAAAC,cAAA,WADlE,sjBAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,8EAA6E8mB,EAAA/mB,EAAAC,cAAA,WAD/E,snCAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,iCAAgC8mB,EAAA/mB,EAAAC,cAAA,WADlC,wVAOJ8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,iCAAkClC,GAAI,CAAC,EAAE,IAChDolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,uCAGAimB,EAAA/mB,EAAAC,cAAA,MAAI2e,UAAWC,IAAOyR,MACpBvJ,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,0CAAyC8mB,EAAA/mB,EAAAC,cAAA,WAD3C,uRAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,mCAAkC8mB,EAAA/mB,EAAAC,cAAA,WADpC,mOAIA8mB,EAAA/mB,EAAAC,cAAA,UACE8mB,EAAA/mB,EAAAC,cAAA,+BAA8B8mB,EAAA/mB,EAAAC,cAAA,WADhC,sRAOJ8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,qBAAsBlC,GAAI,CAAC,EAAE,IACpColB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,yBAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,sqBAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,kBAAmBlC,GAAI,CAAC,EAAE,IACjColB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,sBAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,klCAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,0BAA2BlC,GAAI,CAAC,EAAE,IACzColB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,+BAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,4rBAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,+lBAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,2ZAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,weAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,sWAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,gjCAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,8mBAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,6MAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,0CAA2ClC,GAAI,CAAC,EAAE,IACzDolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,sDAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,wwCAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,0CAA2ClC,GAAI,CAAC,EAAE,IACzDolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,+BAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,yyBAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,iCAAkClC,GAAI,CAAC,EAAE,IAChDolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,0CAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,woBAIAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,62DAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,40BAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,2xBAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,4bAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,mPAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,2aAGAolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,giCAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,gBAAiBlC,GAAI,CAAC,EAAE,IAC/BolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,qBAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,mzBAKFolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnjB,GAAI,gBAAiBlC,GAAI,CAAC,EAAE,IAC/BolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY1lI,MAAO,YAAaU,UAAW,OAAQF,WAAY,EAAGG,WAAY,UAAWF,SAAU,CAAC,EAAE,IAAtG,qBAGAimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMrlB,GAAI,GAAV,62DASVolB,EAAA/mB,EAAAC,cAACs6B,EAAA,EAAD,cAtVU75B,8BCDHulI,EAAA,CACb7lH,YAAa,CAAC,OAAQ,QAEtB3B,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrC0B,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERrZ,MAAO,CACLsZ,MAAO,2CACPrZ,UAAW,qCACXsZ,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCthB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BuhB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,oBAAoB,qBACjCC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACP3hB,SAAU,IAEZyD,OAAQ,CACNme,QAAS,UACTG,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKzC,KAAK,GAC1B+C,OAAQ,UACRN,KAAM,UACNO,YAAa,UACbC,QAAS,UACTC,UAAW,UACXvD,UAAW,UACXwD,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,UACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cAIbC,MAAM,UACNC,YAAY,UACZC,cAAc,UACdC,gBAAgB,UAChBC,SAAS,UACTC,aAAa,UACb9N,gBAAgB,UAChB+N,qBAAqB,UACrBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,QAAS,UACTlD,QAAS,UACTpd,OAAQ,UACRugB,KAAK,UACLC,QAAS,UACTC,QAAS,UACTrQ,OAAQ,UACR3M,OAAO,UACPid,OAAO,UACPC,UAAU,UACVC,WAAW,UACXG,YAAY,UACZC,WAAW,UACXC,WAAW,UACXC,aAAa,UACbL,gBAAgB,UAChBC,gBAAgB,iCAChBhhB,aAAa,CACX4K,OAAO,CACLyW,KAAK,UACLC,KAAK,UACLC,MAAM,UACNrhB,OAAO,UACPshB,QAAQ,UACRd,QAAQ,UACRe,QAAQ,UACRC,QAAQ,UACRf,QAAQ,UACRgB,QAAQ,UACRC,SAAS,UACTC,SAAS,UACTC,eAAe,UACfC,gBAAgB,WAElB9hB,SAAS,CACPohB,KAAK,UACLC,KAAK,UACLC,MAAM,UACNrhB,OAAO,UACPshB,QAAQ,UACRd,QAAQ,UACRe,QAAQ,UACRE,QAAQ,UACRD,QAAQ,UACRf,QAAQ,UACRkB,SAAS,UACTD,SAAS,UACTE,eAAe,UACfC,gBAAgB,WAElBzX,OAAO,CACL0X,UAAU,UACVC,QAAQ,UACRC,OAAO,YAGXC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZlE,KAAM,CACJphB,MAAO,UACP8H,YAAa,UACblF,gBAAiB,WAEnB6iB,QAAS,CACPzlB,MAAOulB,YAAM,GAAKG,IAAMtE,MACxBxe,gBAAiB4iB,YAAK,GAAKE,IAAMtE,MACjCtZ,YAAa4d,IAAMtE,MAErBuE,QAAS,CACP3lB,MAAOulB,YAAM,GAAKK,IAAOxE,MACzBxe,gBAAiB4iB,YAAK,GAAKI,IAAOxE,MAClCtZ,YAAa8d,IAAOxE,MAEtByE,OAAQ,CACN7lB,MAAOulB,YAAM,GAAKO,IAAI1E,MACtBxe,gBAAiB4iB,YAAK,GAAKM,IAAI1E,MAC/BtZ,YAAage,IAAI1E,MAEnB2E,KAAM,CACJ/lB,MAAO,UACP8H,YAAa,UACblF,gBAAiB,YAGrBojB,QAAS,CACP9E,QAAS,CACPlhB,MAAOmhB,IAAK/d,KACZR,gBAAiBue,IAAKC,KAEtB6E,eAAgB9E,IAAKC,KACrB8E,mBAAoB/E,IAAK/d,MAE3B+iB,OAAQ,CACNnmB,MAAO+hB,IAAWD,MAClBoE,mBAAoBnE,IAAWD,OAEjC2D,QAAS,CACPQ,eAAgBP,IAAMtE,KACtB8E,mBAAoBR,IAAMtiB,MAE5ByiB,OAAQ,CACNI,eAAgBH,IAAI1E,KACpB8E,mBAAoBJ,IAAI1iB,OAG5BgjB,YAAa,CACXC,MAAO,CACL5lB,SAAU,UACVtB,OAAQ,OACRM,SAAU,OACV6mB,QAAS,UAEXC,OAAQ,CACN9lB,SAAU,OACVtB,OAAQ,OACRM,SAAU,QAEZ+mB,MAAO,CACL/lB,SAAU,SACVtB,OAAQ,OACRM,SAAU,OACVL,aAAc,gLCrOCymI,cAEnB,SAAAA,EAAYC,GAAQ,IAAAvlI,EAAAzB,OAAAgtC,EAAA,EAAAhtC,CAAAS,KAAAsmI,GAAA,IACLE,EAA+BD,EAApCE,IAAYlxG,EAAwBgxG,EAAxBhxG,WAAemxG,EADjBnnI,OAAAonI,EAAA,EAAApnI,CAC0BgnI,EAD1B,6BAElBvlI,EAAAzB,OAAAqnI,EAAA,EAAArnI,CAAAS,KAAAT,OAAAsnI,EAAA,EAAAtnI,CAAA+mI,GAAArlE,KAAAjhE,KAAM0mI,KAED3Y,MAAQ,KACb/sH,EAAKwlI,MAAQA,EACbxlI,EAAKu0B,WAAaA,EANAv0B,6LAUbhB,KAAK+tH,QACR/tH,KAAK+tH,MAAQ,IAAI/tH,KAAKwmI,MAAM,CAC1BM,eAAgB,2BAGd9mI,KAAK+tH,MAAMgZ,8BACX/mI,KAAK+tH,MAAMiZ,4RAIV,IAAIrvH,QAAJ,eAAA9K,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAA8K,EAAOC,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,OAClBwK,EAAQtS,EAAKsoH,MAAM74F,UADD,wBAAAjd,EAAApJ,SAAAiJ,EAAA9X,SAAb,gBAAAqY,EAAAC,GAAA,OAAAzL,EAAAkC,MAAA/O,KAAAgP,YAAA,kLAKQkmB,yFACQl1B,KAAK+tH,MAAMkZ,0BAA5B/0E,0CAESlyD,KAAK+tH,MAAMmZ,iBAAiB,CACvCC,SAASj1E,EAASi1E,SAClBC,WAAWl1E,EAASk1E,qFAGjB,0QAIDpnI,KAAK+tH,MAAMsZ,iJAGLj0G,GACZ7zB,OAAAqZ,EAAA,EAAArZ,QAAAsnI,EAAA,EAAAtnI,CAAA+mI,EAAArzC,WAAA,0BAAAjzF,MAAAihE,KAAAjhE,KAA8B,CAAEsnI,iBAAiB,WA3CTC,KCAvBC,cAEnB,SAAAA,EAAYjB,GAAQ,IAAAvlI,EAAAzB,OAAAgtC,EAAA,EAAAhtC,CAAAS,KAAAwnI,GAAA,IACLC,EAAgClB,EAArCE,IAAgBrzG,EAAqBmzG,EAArBnzG,QAAYszG,EADlBnnI,OAAAonI,EAAA,EAAApnI,CAC2BgnI,EAD3B,0BAElBvlI,EAAAzB,OAAAqnI,EAAA,EAAArnI,CAAAS,KAAAT,OAAAsnI,EAAA,EAAAtnI,CAAAioI,GAAAvmE,KAAAjhE,KAAM0mI,KAED5Y,UAAY,KACjB9sH,EAAKymI,UAAYA,EACjBzmI,EAAKoyB,QAAUA,EANGpyB,mMAUbhB,KAAK8tH,YACR9tH,KAAK8tH,UAAY,IAAI9tH,KAAKynI,UAAUznI,KAAKozB,mBAEpBpzB,KAAK0nI,0BAAtBxyG,0CAEEA,EAASyyG,yCACRzyG,uRAKF,IAAIvd,QAAJ,eAAA9K,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAA8K,EAAOC,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,OAClBwK,EAAQtS,EAAKqoH,UAAU4Z,eADL,wBAAAzvH,EAAApJ,SAAAiJ,EAAA9X,SAAb,gBAAAqY,EAAAC,GAAA,OAAAzL,EAAAkC,MAAA/O,KAAAgP,YAAA,kLAKQkmB,6EACXA,kCACqBA,EAAS0yG,0BAA1BC,YACUA,EAASvmI,gDAChBumI,EAAS,oCAGb,yQAIgB7nI,KAAK0nI,0BAAtBxyG,0CAEEA,EAAS4yG,0CACR5yG,2IAIG9B,GACZpzB,KAAK+nI,YAAY,CACftB,IAAKzmI,KAAKynI,UACVr0G,YAEF7zB,OAAAqZ,EAAA,EAAArZ,QAAAsnI,EAAA,EAAAtnI,CAAAioI,EAAAv0C,WAAA,0BAAAjzF,MAAAihE,KAAAjhE,KAA8B,CAAEsnI,iBAAiB,WAnDLC,eCA3BS,cAEnB,SAAAA,EAAYC,GAAkB,IAAAjnI,EAAA,OAAAzB,OAAAgtC,EAAA,EAAAhtC,CAAAS,KAAAgoI,IAC5BhnI,EAAAzB,OAAAqnI,EAAA,EAAArnI,CAAAS,KAAAT,OAAAsnI,EAAA,EAAAtnI,CAAAyoI,GAAAj5H,MAAA/O,KAASgP,aACJk5H,YAAa,EAClBlnI,EAAKinI,iBAAmBA,EACxBjnI,EAAKk0B,SAAW,IAAIl0B,EAAKinI,iBACzBjnI,EAAKmnI,eALuBnnI,yLASvBhB,KAAKk1B,WACRl1B,KAAKk1B,SAAW,IAAIl1B,KAAKioI,mBAGvBjoI,KAAKk1B,yCACDl1B,KAAKk1B,SAASkzG,2CACbpoI,KAAKk1B,6PAKVl1B,KAAKk1B,yCACMl1B,KAAKk1B,SAASmzG,ySAKzBroI,KAAKk1B,yCACMl1B,KAAKk1B,SAASwyG,0SAKzB1nI,KAAKk1B,yCACMl1B,KAAKk1B,SAASozG,ySAKzBtoI,KAAKk1B,yCACMl1B,KAAKk1B,SAAS+sC,gTAKzBjiE,KAAKk1B,yCACiBl1B,KAAKk1B,SAASqzG,0BAAhCA,SACNvoI,KAAKkoI,YAAa,oBACXK,mPAKLvoI,KAAKk1B,gCACPl1B,KAAKk1B,SAASszG,+BACPxoI,KAAKk1B,mHAxD+BqyG,KCA5BkB,cAEnB,SAAAA,EAAYlC,GAAQ,IAAAvlI,EAAAzB,OAAAgtC,EAAA,EAAAhtC,CAAAS,KAAAyoI,GAAA,IACLC,EAAiEnC,EAAtEE,IAAiBva,EAAqDqa,EAArDra,QAASyc,EAA4CpC,EAA5CoC,UAAWpsE,EAAiCgqE,EAAjChqE,QAASqsE,EAAwBrC,EAAxBqC,WAAelC,EADnDnnI,OAAAonI,EAAA,EAAApnI,CAC4DgnI,EAD5D,6DAElBvlI,EAAAzB,OAAAqnI,EAAA,EAAArnI,CAAAS,KAAAT,OAAAsnI,EAAA,EAAAtnI,CAAAkpI,GAAAxnE,KAAAjhE,KAAM0mI,KAEDxxG,SAAW,KAChBl0B,EAAK6nI,WAAa,KAClB7nI,EAAKkrH,QAAUA,EACflrH,EAAKu7D,QAAUA,EACfv7D,EAAK2nI,UAAYA,EACjB3nI,EAAK4nI,WAAaA,EAClB5nI,EAAK0nI,WAAaA,EAVA1nI,+LAcbhB,KAAK6oI,aACR7oI,KAAK6oI,WAAa,IAAI7oI,KAAK0oI,WAAW,CACpCI,UAAU,EACV5c,QAASlsH,KAAKksH,QACdyc,UAAW3oI,KAAK2oI,UAChBC,WAAY5oI,KAAK4oI,gBAIf1zG,EAAWl1B,KAAK0nI,+CAEdxyG,EAASyyG,yCACRzyG,2IAQT,OAHKl1B,KAAKk1B,WACRl1B,KAAKk1B,SAAWl1B,KAAK6oI,WAAWE,iBAAiB/oI,KAAK2oI,UAAW3oI,KAAKu8D,UAEjEv8D,KAAKk1B,oFAGGA,6EACXA,kCAEqBA,EAASpQ,KAAK,mCAA/B+iH,YACUA,EAASvmI,gDAChBumI,EAAS,oCAGb,8PAID3yG,EAAWl1B,KAAK0nI,sCAEpB1nI,KAAK6oI,WAAWG,sBACV9zG,EAAS+zG,wCACR/zG,2IAIG9B,GACZpzB,KAAK+nI,YAAY,CACf30G,UACAqzG,IAAKzmI,KAAK0oI,WACVxc,QAASlsH,KAAKksH,QACd3vD,QAASv8D,KAAKu8D,QACdosE,UAAW3oI,KAAK2oI,UAChBC,WAAY5oI,KAAK4oI,aAEnBrpI,OAAAqZ,EAAA,EAAArZ,QAAAsnI,EAAA,EAAAtnI,CAAAkpI,EAAAx1C,WAAA,0BAAAjzF,MAAAihE,KAAAjhE,KAA8B,CAAEsnI,iBAAiB,WApEJC,gBCA5B2B,eAEnB,SAAAA,EAAY3C,GAAQ,IAAAvlI,EAAAzB,OAAAgtC,EAAA,EAAAhtC,CAAAS,KAAAkpI,GAAA,IACLC,EAA6D5C,EAAlEE,IAA4C2C,GAAsB7C,EAAtC8C,eAAsC9C,EAAtB6C,UAAa1C,EAD/CnnI,OAAAonI,EAAA,EAAApnI,CACwDgnI,EADxD,4CAElBvlI,EAAAzB,OAAAqnI,EAAA,EAAArnI,CAAAS,KAAAT,OAAAsnI,EAAA,EAAAtnI,CAAA2pI,GAAAjoE,KAAAjhE,KAAM0mI,KAEDxxG,SAAW,KAChBl0B,EAAKmoI,sBAAwBA,EAC7BnoI,EAAKooI,SAAWA,EANEpoI,yLAUbhB,KAAKk1B,WACRl1B,KAAKk1B,SAAW,IAAIl1B,KAAKmpI,sBAAsB,CAC7CC,SAASppI,KAAKopI,aAIdppI,KAAKk1B,yCACDl1B,KAAKk1B,SAASyyG,yCACb3nI,KAAKk1B,mRAKPl1B,KAAKk1B,0PAIRl1B,KAAKk1B,gCACPl1B,KAAKk1B,SAAS+zG,0BACPjpI,KAAKk1B,mHA/BkCqyG,KCelD+B,GAMEC,aANFD,kBACAE,GAKED,aALFC,qBACAC,GAIEF,aAJFE,gBACAC,GAGEH,aAHFG,gBACAC,GAEEJ,aAFFI,mBACAC,GACEL,aADFK,gBAGIz5F,GAAMC,8/CAENy5F,GAAgB15F,GAAI25F,gCACpBC,GAAiB55F,GAAI65F,8BACrBX,GAAiB5/H,IAAc2pB,QAAQstB,gBACvCupF,GAAkB95F,GAAI+5F,gCACtBC,GAAeh6F,GAAIi6F,yBACnBC,GAAgBl6F,GAAIm6F,yBAEpBC,GAAuB,GAE7BhrI,OAAO8B,KAAKoI,IAAc2pB,QAAQiD,UAAUsgG,QAAQp1H,QAAQ,SAAC0zC,EAAUpnC,GACrE08H,GAAqBt1F,GAAaxrC,IAAc2pB,QAAQiD,UAAUsgG,OAAO1hF,GAAW9E,GAAIq6F,uBAG1F,IAAMC,GAAW,IAAInB,GAAkB,CACrC9zF,kBAAmB/rC,IAAc2pB,QAAQqjG,kBAGrCiU,GAAS,IAAIlB,GAAqB,CACtCmB,YAAalhI,IAAc2pB,QAAQiD,UAAUsgG,OAAO0S,IAAgBl5F,GAAIq6F,uBAIpEI,GAAS,IAAInB,GAAgB,CACjChD,IAAKoE,IACLN,wBACAlB,kBACAQ,iBACAE,oBAGIe,GAAS,IAAIpB,GAAgB,CACjCa,wBACAlB,oBAGI0B,GAAgB,IAAI7B,GAAuB,CAC/CG,kBACAkB,wBACA9D,IAAK0C,IACLC,SAASj5F,GAAIq6F,qBACbQ,OAAQ,qCAGJC,GAAY,IAAItB,GAAmB,CACvClD,IAAKyE,IACLx8E,OAAQu7E,GACRkB,sBAAsB,IAGlBC,GAAS,IAAIxB,GAAgB,CACjCnD,IAAK4E,IACLC,OAAQnB,GACR/2G,QAASi3G,KAGL5C,GAAY,IAAID,EAAmB,CACvCf,IAAK8E,IACLn4G,QAAS3pB,IAAc2pB,QAAQ29B,kBAAkBs4E,IAAgBlgI,gBAG7D0/H,GAAa,IAAIJ,EAAoB,CACzChC,IAAKiC,IACLI,UAAU,EACVvsE,QAAS8sE,GACTnd,QAASziH,IAAcyiH,QACvByc,UAAW4B,GAAqBlB,IAChCT,WAAY,8CAGRpC,GAAQ,IAAIF,EAAe,CAC/BG,IAAK+E,IACLj2G,WAAW,CACTk2G,SAAU,aACVC,eAAe,EACft4G,QAAS,CACPu4G,KAAMliI,IAAc2pB,QAAQ29B,kBAAkBs4E,IAAgBlgI,cAC9DozD,QAAS8sE,GACT5R,YAAahuH,IAAc2pB,QAAQ29B,kBAAkBs4E,IAAgBlgI,eAEvEyiI,iBAAiB,KAMN1e,GAAA,CACbud,YACAC,UACAK,iBACApd,OANa,IAAIqa,EAAoBC,qBAOrCY,cACAoC,aACAG,UACA3D,aACAjB,SACAoE,UACAE,oFCpFae,oLAzBX,OACE1kH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnc,MAVa,CAClBd,SAAU,QACVvB,OAAQ,EACR1E,KAAM,EACNyE,MAAO,EACPhJ,MAAO,OACPyK,OAAQ,MAIiB/G,gBAAiB,uBAAwB5D,EAAG,GACnE0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK3nB,EAAG,GACN0nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,UAAUD,MAAM,OAAOG,KAAK,QAEzCumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,UACnB0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnmB,WAAY,QAAlB,0CAGAkmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,6BACwBpnB,KAAKC,MAAMmzB,QAAQuO,SAASjhC,KADpD,wDAE8C,IAC5CymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAWzR,MAAO,CAAEI,cAAe,eAChCrL,KAAKC,MAAMmzB,QAAQmiB,QAAQ70C,MACjB,IALf,6DArBqBkrB,IAAM9qB,WCkBxBgrI,oLAfX,OACE3kH,EAAA/mB,EAAAC,cAAA,YAC4C,IAAxCL,KAAKC,MAAMmzB,QAAQ24G,kBAA8B/rI,KAAKC,MAAMiY,KAE1DiP,EAAA/mB,EAAAC,cAAC2rI,GAAD,CACE54G,QAASpzB,KAAKC,MAAMmzB,UAGtB,aAVcxH,IAAM9qB,wECiIjBmrI,8MA/HbC,cAAgB,WACd,OACE/kH,EAAA/mB,EAAAC,cAAC8mB,EAAA/mB,EAAMsnG,SAAP,KACEvgF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ8+G,GAAT,CACEhlI,SAAU,EACVD,WAAY,EACZG,WAAY,UACZmB,GAAI,GAJN,uCASC4pI,KAAWC,iBACVjlH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,GAAV,8GAE6C,IAC3C4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,qBACL0D,MAAM,oBACN7D,OAAO,SAASE,IAAI,gCAHtB,UAHF,IAUI,IACFkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,iCACL0D,MAAM,gBACN7D,OAAO,SAASE,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,+BACL0D,MAAM,kBACN7D,OAAO,SAASE,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BAkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,GAAV,qGAE0C,IACxC4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,8BACL0D,MAAM,yBACN7D,OAAO,SAASE,IAAI,gCAHtB,SAHF,IAUI,IACFkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,2BACL0D,MAAM,2BACN7D,OAAO,SAASE,IAAI,gCAHtB,WAXF,IAkBI,IACFkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,iCACL0D,MAAM,yBACN7D,OAAO,SAASE,IAAI,gCAHtB,SAnBF,OA0BO,IACLkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,iCACL0D,MAAM,0BACN7D,OAAO,SAASE,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCAkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAW2vH,MAAI,GAAf,0BADF,2DAE8C,IAC5CllH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,qBACL0D,MAAM,oBACN7D,OAAO,SAASE,IAAI,gCAHtB,UAHF,IAUI,IACFkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,iCACL0D,MAAM,gBACN7D,OAAO,SAASE,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,+BACL0D,MAAM,kBACN7D,OAAO,SAASE,IAAI,gCAHtB,mBAnBF,gFAmCR,OACEkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAD,CAAWC,UAAWlrB,KAAKC,MAAMsqB,YAC/BpD,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACGzrB,KAAKksI,0BAxHetgH,IAAM9qB,WCiDxBwrI,oLAxCX,OACEnlH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3nB,EAAG,EAAGsxB,SAAU,SACpB5J,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAO0K,KAAR,CACEy6G,UAAQ,EACRtpI,KAAM,QACNxC,MAAO,YACP0J,SAAU,WACVzB,IAAK,EACLC,MAAO,EACPmU,GAAI,EACJ1Z,GAAI,EACJia,QAASrd,KAAKC,MAAMsqB,aAGtBpD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,SAAUC,eAAgB,iBAC7CykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1kB,eAAgB,SAAUH,GAAI,GAClC4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,UAAUD,MAAM,OAAOG,KAAK,QAGzCumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ8+G,GAAT,CAAY3jI,GAAI,GAAhB,uBAEA4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,GAAV,4GAKA4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,4FACLH,OAAO,SAASE,IAAI,gCAEpBkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgB5rI,KAAK,SAArB,qCAjCcgrB,IAAM9qB,WC0CnB2rI,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApBrxH,OAAOwoH,SAChB6I,EAAoD,qBAA/BrxH,OAAOwoH,SAAS8I,WACL,qBAAhBtxH,OAAOnD,OACvBw0H,EAAgE,qBAA3CrxH,OAAOnD,KAAKw9B,gBAAgBi3F,YAA8BtxH,OAAOnD,KAAKw9B,gBAAgBi3F,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhBvxH,OAAOnD,MAA+D,qBAAhCmD,OAAOnD,KAAKw9B,kBACL,qBAAxCr6B,OAAOnD,KAAKw9B,gBAAgBm3F,SAA2BxxH,OAAOnD,KAAKw9B,gBAAgBm3F,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhBzxH,OAAOnD,MAA+D,qBAAhCmD,OAAOnD,KAAKw9B,kBACI,qBAAjDr6B,OAAOnD,KAAKw9B,gBAAgBo3F,kBAAoCzxH,OAAOnD,KAAKw9B,gBAAgBo3F,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1B1xH,OAAO2xH,eAM9B,MAJ+B,qBAApB3xH,OAAOwoH,WAChBkJ,EAAgD,qBAA7B1xH,OAAOwoH,SAASoJ,UAA4B5xH,OAAOwoH,SAASoJ,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAcxd,KAAK2T,UAAUC,YAGtC6J,UAAW,WACT,IAAMA,IAAY,WAAWzd,KAAK2T,UAAUC,WAE5C,OAAO6J,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmB1d,KAAK2T,UAAUC,YAAejoH,OAAOgyH,UAI1D,OAAOD,IC0BIE,8MA7DbpB,cAAgB,WACd,OACE/kH,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACEtE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ8+G,GAAT,CAAY3jI,GAAI,GAAhB,iBACiBvB,EAAKf,MAAMmzB,QAAQuO,SAASjhC,KAD7C,cAC8D,IAC3D+rI,GAAYC,cAAZ,uBAGHvlH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,GAAV,iCACiC,IAC/B4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAWzR,MAAO,CAAEI,cAAe,eAChCrK,EAAKf,MAAMmzB,QAAQuO,SAASjhC,MAClB,IAJf,wCAKmC,IACjCymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAWzR,MAAO,CAAEI,cAAe,eAChC,IACArK,EAAKf,MAAMmzB,QAAQmiB,QAAQ70C,MACjB,IATf,YAaC+rI,GAAYC,gBAAkBa,KAAYnB,iBACzCjlH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKkT,GAAI,UAAW76B,EAAG,EAAG4H,QAAS,CAAC,OAAQ,UAC1C8f,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjd,SAAU,WAAYxK,MAAO,OAChCwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAM,UAGlBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnmB,WAAY,GAAlB,oCACAkmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnmB,WAAY,GAAlB,sCAMJ,KAEJkmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK/f,QAAS,CAAC,QAAS,SACtB8f,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQ/J,QAASrc,EAAKf,MAAMsqB,WAAY5qB,MAAO,GAA/C,iFASN,OACEwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAD,CAAWC,UAAWlrB,KAAKC,MAAMsqB,YAC/BpD,EAAA/mB,EAAAC,cAAC8mB,EAAA/mB,EAAMsnG,SAAP,KACG1nG,KAAKksI,0BAtDctgH,IAAM9qB,kDCiDvB0sI,OA3Df,SAA6BvtI,GAC3B,OACEknB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUO,OAAX,CAAkB5K,MAAO,6CAA8C6sH,SAAU,wDAAyDC,UAAW,0EACrJvmH,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACEtE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,CAAC,SAAU,OAC9BC,eAAgB,gBAChBH,GAAI,CAAC,EAAG,IACR4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjc,KAAM,MAAOxL,MAAO,EAAGmd,GAAI,CAAC,EAAG,GAAIxY,GAAI,CAAC,EAAG,GAAIlB,GAAI,GACtD+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1kB,eAAgB,SAAU4B,GAAI,GAClC6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAK,cACLD,MAAM,UACNG,KAAK,SAGTumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAASlmB,SAAU,EAAGC,UAAW,UAAjC,oBACAgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,EAAGC,UAAW,UAA9B,6FAKFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjc,KAAM,MAAOxL,MAAO,EAAGmd,GAAI,CAAC,EAAG,GAAIxY,GAAI,CAAC,EAAG,GAAIlB,GAAI,GACtD+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1kB,eAAgB,SAAU4B,GAAI,GAClC6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAK,qBACLD,MAAM,UACNG,KAAK,SAGTumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAASlmB,SAAU,EAAGC,UAAW,UAAjC,0BACAgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,EAAGC,UAAW,UAA9B,6DAIFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjc,KAAM,MAAOxL,MAAO,EAAGmd,GAAI,CAAC,EAAG,GAAIxY,GAAI,CAAC,EAAG,GAAIlB,GAAI,GACtD+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1kB,eAAgB,SAAU4B,GAAI,GAClC6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAK,iBACLD,MAAM,UACNG,KAAK,QAEPumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAK,gBACLD,MAAM,UACNG,KAAK,SAGTumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAASlmB,SAAU,EAAGC,UAAW,UAAjC,wBACAgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,EAAGC,UAAW,UAA9B,qGC1CNuY,GAAY,WAAc,QAAA63B,EAAAviC,UAAA1N,OAAVrB,EAAU,IAAAuxC,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVxxC,EAAUwxC,GAAAziC,UAAAyiC,IAEjB,SAASk8F,GAAsB1tI,GAC5C,IAAM2tI,EAAUC,2BAEXD,EAAQ7lC,QAAW6lC,EAAQ/2H,MAErB+2H,EAAQ/2H,MACjB6C,GAAU,gBAAiBk0H,GAE3Bl0H,GAAU,kBAAmBk0H,GAJ7Bl0H,GAAU,kBAAmBk0H,GAO/B,IAAME,EAAY,eAAAjhI,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAG,SAAAqK,EAAOizF,EAAc5pG,GAArB,IAAAqtI,EAAA,OAAAvjH,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,cACfwgI,EAAmC,aAAlBzjC,EAA+B5pG,EAAO4pG,EACvDzvF,eACFA,aAAas9C,QAAQ,iBAAkB41E,GACvClzH,aAAas9C,QAAQ,gBAAiBmyC,IAGpCrqG,EAAM6tI,cAA8C,oBAAvB7tI,EAAM6tI,cACrC7tI,EAAM6tI,aAAaxjC,EAAcyjC,GAIK,oBAA7B9tI,EAAM+tI,oBACf/tI,EAAM+tI,qBAbWz2H,EAAAgB,OAAA,SAgBZ+xF,GAhBY,wBAAA/yF,EAAA1I,SAAAwI,EAAArX,SAAH,gBAAAqY,EAAAC,GAAA,OAAAzL,EAAAkC,MAAA/O,KAAAgP,YAAA,GAoBZi/H,EAAc,eAAA99H,EAAA5Q,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAG,SAAA8K,IAAA,OAAA0S,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,OACrBqgI,EAAQK,iBACJhuI,EAAM6tI,cAA8C,oBAAvB7tI,EAAM6tI,cACrC7tI,EAAM6tI,aAAa,SAAS,UAHT,wBAAA71H,EAAApJ,SAAAiJ,EAAA9X,SAAH,yBAAAmQ,EAAApB,MAAA/O,KAAAgP,YAAA,GAUdk+H,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBmB,EAAazB,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BuB,IAAiBjhB,GAAWS,OAAOz4F,SAASk5G,KAC5CtB,EAAmBL,GAAYK,mBAC/BuB,EAAwBH,GAAchB,GAAWD,GAAYH,GAAoBF,EAEjF0B,EAAoBruI,EAAMquI,kBAC1BC,EAAetuI,EAAMsuI,aAEvBrhB,GAAWke,SACTmD,GACFrhB,GAAWke,OAAOxtH,QAAUsvG,GAAWke,OAAOxtH,SAAW,GACzDsvG,GAAWke,OAAOxtH,QAAQ4wH,uBAAwB,IAElDthB,GAAWke,OAAOxtH,QAAUsvG,GAAWke,OAAOxtH,SAAW,GACzDsvG,GAAWke,OAAOxtH,QAAQ4wH,uBAAwB,IAItD,IAAIC,EAAsBlvI,OAAO8B,KAAK6rH,IAAYz/G,OAAO,SAAA4a,GAAC,MAAU,WAANA,IAO9D,GALIimH,IACFG,EAAsBA,EAAoBhhI,OAAO,SAAAs9B,GAAC,OAA4F,IAAxFujG,EAAkB97H,IAAI,SAAC5L,GAAQ,OAAOA,EAAEuC,gBAAkBqW,QAAQurB,EAAE5hC,kBAIxHglI,EAAa,CACf,IAAMO,EAAgBD,EAAoBjvH,QAAQ,YAElDivH,EAAoBE,OAAOD,EAAc,GAEzC,IAAME,EAAcH,EAAoBjvH,QAAQ,UAChDivH,EAAoBE,OAAOC,EAAY,GAEvCH,EAAoBvpE,QAAQ,cACvB,CACL,IAAM0pE,EAAcH,EAAoBjvH,QAAQ,UAEhDivH,EAAoBE,OAAOC,EAAY,GAGzC,IAAMnoH,EAAUgoH,EAAoBj8H,IAAK,SAAC83F,EAAcz8F,GACtD,OAAQy8F,GACN,IAAK,WACH,GAAI+jC,EAAuB,CACzB,IAAI3tI,EAAO,KACPwtI,EACFxtI,EAAO,WACEwsI,EACTxsI,EAAO,QACEusI,EACTvsI,EAAO,SACEosI,EACTpsI,EAAO,WACEksI,IACTlsI,EAAO,eAGT,IAAMmuI,EAAgBplI,IAAcyjH,WAAWxsH,EAAKyI,eACpD,GAAI0lI,GAAiBA,EAAchkH,QAAQ,CACzC,IAAMikH,EAAaD,EAAc5rI,KAAO4rI,EAAc5rI,KAAnC,GAAA+G,OAA6CtJ,EAAKyI,cAAlD,QACnB,OACEge,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPoE,IAAG,UAAAiG,OAAYtJ,GACfgC,eAAgB,gBAChBuI,MAAO,CACLE,KAAK,UAEP1I,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXI,OAAO,GAETm6B,QAASn5B,EACToC,UAAU,EACVnD,MAAO,CAAC,EAAE,KACVoD,WAAY,CAACpD,MAAM,OAAOC,OAAO,QACjCu6B,SAAQ,qBAAAnwB,OAAuB8kI,GAC/BvuI,YAAWhB,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAG,SAAAC,IAAA,OAAAud,EAAApqB,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBugI,EAAaxjC,EAAc5pG,GAA7C,cAAA2M,EAAAkL,OAAA,SAAAlL,EAAAkD,MAAA,wBAAAlD,EAAAwB,SAAA5B,EAAAjN,SACdqoH,WAAawmB,GAAiBA,EAAcxmB,WAAawmB,EAAcxmB,WAA1D,iBAAAr+G,OAAwFtJ,KAEvGymB,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXI,OAAO,GAEToD,UAAU,EACVnD,MAAO,CAAC,EAAE,KACVk6B,QAAS,gBACTM,SAAQ,wBACRkuF,WAAY,4BACZtlH,WAAY,CAACpD,MAAM,OAAOC,OAAO,QACjCW,YAAc,SAAAiG,GAAC,OAAIvG,EAAM2tD,kBAAiB,OAKlD,OAAO,KAEP,IAAMihF,EAAgBplI,IAAcyjH,WAAW5iB,EAAcnhG,eAC7D,OACEge,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXI,OAAO,GAEToD,UAAU,EACV+2B,QAAS,iBACT91B,IAAG,UAAAiG,OAAYsgG,GACfvnG,WAAY,CAACpD,MAAM,OAAOC,OAAO,QACjCu6B,SAAQ,uCACR55B,YAAWhB,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAG,SAAAoD,IAAA,OAAAoa,EAAApqB,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EAAkBugI,EAAaxjC,GAA/B,cAAAj6F,EAAAkI,OAAA,SAAAlI,EAAAE,MAAA,wBAAAF,EAAAxB,SAAAuB,EAAApQ,SACdqoH,WAAawmB,GAAiBA,EAAcxmB,WAAawmB,EAAcxmB,WAA1D,iCACb0mB,YAAc9uI,EAAM6C,SAAW,CAACJ,eAAe,aAAayI,KAAK,UAAY,CAACzI,eAAe,aAAayI,KAAK,WAIvH,QACE,IAAM0jI,EAAgBplI,IAAcyjH,WAAW5iB,EAAcnhG,eAC7D,GAAI0lI,GAAiBA,EAAchkH,QAAQ,CACzC,IAAMikH,EAAaD,EAAcphB,UAAYohB,EAAcphB,UAAaohB,EAAc5rI,KAAO4rI,EAAc5rI,KAAnC,GAAA+G,OAA6CsgG,EAAcnhG,cAA3D,QAEpE0wB,EAAUg1G,EAAcnuI,KAAOmuI,EAAcnuI,KAAO4pG,EACxD,OACEnjF,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXI,OAAO,GAEToD,UAAU,EACV+2B,QAASA,EACT91B,IAAG,UAAAiG,OAAYsgG,GACfnwE,SAAQ,qBAAAnwB,OAAuB8kI,GAC/B/rI,WAAY,CAACpD,MAAM,OAAOC,OAAO,QACjCW,YAAWhB,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAG,SAAA8L,IAAA,OAAA0R,EAAApqB,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,cAAAyL,EAAAzL,KAAA,EAAkBugI,EAAaxjC,GAA/B,cAAAtxF,EAAAT,OAAA,SAAAS,EAAAzI,MAAA,wBAAAyI,EAAAnK,SAAAiK,EAAA9Y,SACdqoH,WAAawmB,GAAiBA,EAAcxmB,WAAawmB,EAAcxmB,WAA1D,iBAAAr+G,OAAwFsgG,GACrGykC,YAAc9uI,EAAM6C,SAAW,CAACJ,eAAe,aAAayI,KAAK,UAAY,CAACzI,eAAe,aAAayI,KAAK,WAIrH,OAAO,QAIb,OACEgc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKznB,MAAO,CAAC,IACXwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,SAAUD,WAAY,UACxCorI,EAAQ/2H,OACPsQ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK3nB,EAAN,CAAQ0B,UAAU,UAAlB,+DAEEgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlK,KAAK,uBAAuBH,OAAO,SAASE,IAAI,gCAAtD,sBAFF,KAMEkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlK,KAAK,8BAA8BH,OAAO,SAASE,IAAI,gCAA7D,eANF,6OAgBA2wH,EAAQ7lC,QAAW6lC,EAAQ/2H,OAAS+2H,EAAQtjC,gBAA6C,WAA1BsjC,EAAQtjC,eACvEnjF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CACE7sI,MAAO,CAAC,IACRqf,UAAW,CAACC,KAAO8S,QACnBztB,GAAI,CAAC,EAAG,GACR1D,KAAM,QACNmD,IAAK,QACLsZ,QAAO9d,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAE,SAAA4M,IAAA,OAAA4Q,EAAApqB,EAAAgN,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,cAAAwM,EAAAxM,KAAA,EAAkB0gI,IAAlB,cAAAl0H,EAAAxB,OAAA,SAAAwB,EAAAxJ,MAAA,wBAAAwJ,EAAAlL,SAAA+K,EAAA5Z,UAER4tI,EAAQ7lC,OAAS,uBAAyB,UAIjD5gF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE6S,SAAU,OACVx3B,cAAe,MACfC,eAAgB,iBAEf+jB,kBCkVMuoH,8MApiBbxqI,MAAQ,CACNqkH,WAAU,EACVomB,YAAW,EACXphF,cAAc,GACdqhF,eAAe,KACfC,kBAAiB,EACjBC,kBAAiB,EACjBC,mBAAmB,KACnBC,oBAAmB,EACnBC,oBAAoB,QAItBxqI,cAAgB,OAShByqI,iBAAmB,SAAAhpI,GACjBA,EAAEiwB,iBAEFz1B,EAAK4E,SAAS,CACZqpI,YAAajuI,EAAKwD,MAAMyqI,gBAI5BQ,iBAAmB,WACjB,IAAIP,EAAiB,KASrB,OARIr0H,eACFq0H,EAAiBr0H,aAAaC,QAAQ,oBAEpC9Z,EAAK4E,SAAS,CACZspI,mBAICA,KAGThjI,kBAAoB,WAClBlL,EAAKmE,YACLnE,EAAKyuI,sBAGPC,mBAAqB,WACnB1uI,EAAKmE,eAGPuxB,WAAa,SAAAlwB,GACXxF,EAAK4E,SAAS,CACZqpI,YAAY,EACZC,eAAe,KACfE,kBAAiB,EACjBD,kBAAkB,EAClBI,oBAAoB,UAIxBzB,mDAAe,SAAAz2H,EAAOizF,EAAc5pG,GAArB,IAAAqtI,EAAA,OAAAvjH,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,cACTwgI,EAAmC,aAAlBzjC,EAA+B5pG,EAAO4pG,EAG3DtpG,EAAK+D,cAAc4kB,yBAAyB,CAC1CC,cAAc,UACdE,WAAWikH,EACXlkH,YAAY,kBAGV7oB,EAAKf,MAAM6tI,cAAmD,oBAA5B9sI,EAAKf,MAAM6tI,cAC/C9sI,EAAKf,MAAM6tI,aAAaxjC,EAAcyjC,GAIxC/sI,EAAK4E,SAAS,CACZ2pI,oBAAqBjlC,IAGvBtpG,EAAK2uI,iBAnBQp4H,EAAAgB,OAAA,SAqBN+xF,GArBM,wBAAA/yF,EAAA1I,SAAAwI,EAAArX,mEA0Bf2vI,eAAiB,WACf,IAAMN,EAAqBruI,EAAKwD,MAAM6qI,mBAAqBruI,EAAKwD,MAAM6qI,mBAAmB,EAAI,EACxFA,EAGHl1H,WAAW,WAAQnZ,EAAK2uI,kBAAmB,KAF3C3uI,EAAKupB,aAIPvpB,EAAK4E,SAAS,CACZypI,0BAIJO,gBAAkB,SAACppI,EAAEqpI,GACnBrpI,EAAEiwB,iBACFz1B,EAAK4E,SAAS,CACZ2pI,oBAAqBM,OAIzBtlH,WAAa,WAEXvpB,EAAK01B,aAEL11B,EAAKyuI,mBAELzuI,EAAKf,MAAMsqB,gBAGbulH,kBAAoB,SAACtpI,EAAE0oI,GACrB1oI,EAAEiwB,iBACFz1B,EAAK4E,SAAS,CACZspI,mBAGmB,iBAAjBA,IAEFluI,EAAK+D,cAAc4kB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,cACbC,WAAYolH,IAGdluI,EAAK+D,cAAcmW,gBAAgB,iBAAiBg0H,OAIxDa,qBAAuB,WAErB,OADqB/uI,EAAK+D,cAAc0wC,aAAaz0C,EAAKwD,MAAMqpD,gBAE9D7sD,EAAK4sD,kBAAiB,GACtB5sD,EAAK+D,cAAc6oD,iBAAiB5sD,EAAKwD,MAAMqpD,eAC/C7sD,EAAK8sI,aAAa,SAAS,UAC3B3zH,WAAW,WAAQnZ,EAAKupB,cAAe,MAChC,GAEAvpB,EAAK4E,SAAS,CACnB0pI,oBAAmB,OAKzBU,oBAAsB,SAACxpI,GACrB,IACMqnD,EAAgBrnD,EAAEuW,OAAOjW,MACzB+hH,EAAY7nH,EAAK+D,cAAc0wC,aAAaoY,GAClD7sD,EAAK4E,SAAS,CACZijH,YACAh7D,gBACAyhF,oBANyB,OAU7B1hF,iBAAmB,SAACwhF,GAClBpuI,EAAK4E,SAAS,CACZwpI,wBAIJa,mBAAqB,WAEnB,IAAMC,EACJ/oH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMjmB,UAAW,SAAUD,SAAU,EAAGa,GAAI,CAAC,EAAE,IAA/C,kCAAkFolB,EAAA/mB,EAAAC,cAAC8vI,GAAA,EAAD,CAAYp9F,GAAG,oBAAoBtyC,MAAO,UAAWwK,MAAO,CAACxK,MAAMO,EAAKf,MAAMsD,MAAMC,OAAOme,QAAQo8F,eAAe,aAAchhG,OAAQ,SAAUE,IAAI,gCAAtJ,sBAIhFmzH,EAA8C,QAA9BpvI,EAAKwD,MAAM0qI,eAC3BmB,EAAsD,WAA9BrvI,EAAKwD,MAAM0qI,eAGzC,MAFuD,iBAA9BluI,EAAKwD,MAAM0qI,eAIhC/nH,EAAA/mB,EAAAC,cAAC8mB,EAAA/mB,EAAMsnG,SAAP,KACEvgF,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUO,OAAX,CAAkB5K,MAAO,qBAAsB6sH,SAAU,4DACzDtmH,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACEtE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,CAAC,SAAU,OAC1BC,eAAgB,gBAChBH,GAAI,CAAC,EAAG,IAER4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjc,KAAM,MAAOxL,MAAO,EAAGmd,GAAI,CAAC,EAAG,GAAIxY,GAAI,CAAC,EAAG,GAAIlB,GAAI,GACtD+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1kB,eAAgB,SAAU4B,GAAI,GAClC6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAK,SACLD,MAAM,UACNG,KAAK,SAGTumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAASlmB,SAAU,EAAGC,UAAW,UAAjC,4BACAgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,EAAGC,UAAW,UAA9B,4IAMFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjc,KAAM,MAAOxL,MAAO,EAAGmd,GAAI,CAAC,EAAG,GAAIxY,GAAI,CAAC,EAAG,GAAIlB,GAAI,GACtD+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1kB,eAAgB,SAAU4B,GAAI,GAClC6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAK,uBACLD,MAAM,UACNG,KAAK,SAGTumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAASlmB,SAAU,EAAGC,UAAW,UAAjC,4BACAgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,EAAGoD,GAAI,EAAGnD,UAAW,UAArC,kJAG2BgmB,EAAA/mB,EAAAC,cAAA,WACzB8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExG,MAAM,wCACN3f,WAAY,IACZR,MAAO,OACPU,UAAW,SACX6b,WAAY,OACZE,KAAK,IACLG,QAASrc,EAAKwuI,kBAPhB,gCAaJroH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjc,KAAM,MAAOxL,MAAO,EAAGmd,GAAI,CAAC,EAAG,GAAIxY,GAAI,CAAC,EAAG,IAC9C6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1kB,eAAgB,SAAU4B,GAAI,GAClC6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAK,SACLD,MAAM,UACNG,KAAK,SAGTumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAASlmB,SAAU,EAAGC,UAAW,UAAjC,gCACAgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,EAAGC,UAAW,UAA9B,6GAWRH,EAAKwD,MAAM4qI,iBAEXjoH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUO,OAAX,CACE5K,MAAO,qBACP3d,KAAM,uBACNwqI,SAAU,+BAGZtmH,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACEtE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPO,SAAU,CAAC,EAAE,QACbuC,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPkK,MAAO,oBAEPsd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEua,UAAQ,EACRhiC,MAAO,EACPiL,KAAM,OACNoU,UAAWC,KAAOqR,MAClB/nB,YAAa,aACblF,gBAAiB,SACjBooH,QAAS,sBACT3kH,MAAO9F,EAAKwD,MAAMqpD,cAClBjuC,SAAW,SAAApZ,GAAC,OAAIxF,EAAKgvI,oBAAoBxpI,IACzC+zB,YAAa,qCAIfv5B,EAAKwD,MAAM8qI,oBACTnoH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJpD,SAAU,EACVT,MAAO,MACPQ,WAAY,EACZE,UAAW,UALb,mCAWJgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEplB,GAAI,CAAC,EAAE,GACP0pB,GAAI,OACJzqB,WAAY,EACZL,KAAM,SACNM,SAAU,CAAC,EAAE,GACbrB,aAAc,EACduqB,cAAe,UACfpL,UAAW,CAACC,KAAOiR,gBACnB7S,QAAU,SAAA7W,GAAC,OAAIxF,EAAK+uI,yBATtB,YAcF5oH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3O,GAAI,EACJjW,WAAY,SACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpK,WAAY,OACZ7b,UAAW,SACXkc,QAAU,SAAA7W,GAAC,OAAIxF,EAAK4sD,kBAAiB,KAHvC,0BAQAsiF,IAMNG,EAEAlpH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUO,OAAX,CAAkB5K,MAAO,qBAAsB6sH,SAAU,6BAA8BxqI,KAAM,yBAC7FkkB,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACEtE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,EAAGqC,GAAI,CAAC,EAAE,GAAIS,cAAe,SAAUC,eAAgB,UAClEykB,EAAA/mB,EAAAC,cAACstI,GAAD,CACEhuI,MAAO,GACPmD,SAAU9B,EAAKf,MAAM6C,SACrBgrI,aAAc9sI,EAAK8sI,aACnBE,mBAAoBhtI,EAAKupB,WACzB3pB,KAAMI,EAAKf,MAAM6C,SAAW,SAAW,QACvC8qD,iBAAkB5sD,EAAK4sD,iBAAiBj/B,KAAtBpvB,OAAA+wI,GAAA,EAAA/wI,QAAA+wI,GAAA,EAAA/wI,CAAAyB,QAGtBmmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3O,GAAI,EAAGjW,WAAY,SAAUE,eAAgB,UACjDykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMjmB,UAAW,SAAU6b,WAAY,OAAQK,QAAU,SAAA7W,GAAC,OAAIxF,EAAK8uI,kBAAkBtpI,EAAE,SAAvF,0BAEA0pI,IAMNE,EAEAjpH,EAAA/mB,EAAAC,cAAC8mB,EAAA/mB,EAAMsnG,SAAP,KACEvgF,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUO,OAAX,CAAkB5K,MAAO,0CAA4C3d,KAAM,yBAC3EkkB,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KAEKzqB,EAAKwD,MAAM+qI,oBAoCVpoH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,EAAGC,UAAW,SAAUF,WAAY,EAAGG,WAAY,KAAnE,4BAC4BJ,EAAKwD,MAAM+qI,oBADvC,uBAGApoH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJpa,eAAgB,SAChBF,WAAY,SACZrB,UAAW,UACXgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,SALf,IAKyBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1c,GAAI,EAAGjK,MAAO,aAApB,cAA6CO,EAAKwD,MAAM6qI,mBAAxD,iBA5C3BloH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,EAAGqC,GAAI,CAAC,EAAE,GAAIS,cAAe,SAAUC,eAAgB,UAClEykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK9iB,GAAI,GACP6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,CAAC,EAAE,GAAIC,UAAW,SAAUF,WAAY,EAAGG,WAAY,KAAvE,yCAIF+lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,EAAG7B,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAClFykB,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXI,OAAO,GAETm6B,QAAS,aACTM,SAAU,mBACVr3B,SAAU9B,EAAKf,MAAM6C,SACrBulH,WAAY,oBACZ9nH,YAAc,SAAAiG,GAAC,OAAIxF,EAAK8sI,aAAa,SAAS,WAC9C/qI,WAAa/B,EAAKf,MAAM6C,SAAW,CAACnD,MAAM,OAAOC,OAAO,QAAU,CAAC0E,GAAG,MAAM3E,MAAM,OAAOC,OAAO,UAElGunB,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXI,OAAO,GAETm6B,QAAS,mBACT/2B,SAAU9B,EAAKf,MAAM6C,SACrBq3B,SAAU,oBACVkuF,WAAY,uBACZ9nH,YAAc,SAAAiG,GAAC,OAAIxF,EAAK8sI,aAAa,YAAY,cACjD/qI,WAAa/B,EAAKf,MAAM6C,SAAW,CAACnD,MAAM,OAAOC,OAAO,QAAU,CAAC0E,GAAG,MAAM3E,MAAM,OAAOC,OAAO,WAGpGunB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,SAAUE,eAAgB,UAC1CykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMjmB,UAAW,SAAU6b,WAAY,OAAQK,QAAU,SAAA7W,GAAC,OAAIxF,EAAK8uI,kBAAkBtpI,EAAE,YAAvF,6BAkBN0pI,IAOR/oH,EAAA/mB,EAAAC,cAAC8mB,EAAA/mB,EAAMsnG,SAAP,KACEvgF,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUO,OAAX,CAAkB5K,MAAO,kBAAmB3d,KAAM,yBAClDkkB,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KAEItE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPqC,GAAI,CAAC,EAAE,GACPS,cAAe,SACfC,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK9iB,GAAI,GACP6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnmB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbE,WAAY,IACZD,UAAW,UAJb,wCASFgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,CAAC,EAAE,GACP9B,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXI,OAAO,GAETm6B,QAAO,kBACP/2B,SAAU9B,EAAKf,MAAM6C,SACrBulH,WAAY,wBACZluF,SAAU,6BACV55B,YAAc,SAAAiG,GAAC,OAAIxF,EAAK8uI,kBAAkBtpI,EAAE,WAC5CzD,WAAY/B,EAAKf,MAAM6C,SAAW,CAACnD,MAAM,OAAOC,OAAO,QAAU,CAACD,MAAM,OAAOC,OAAO,OAAO2wI,aAAa,SAE5GppH,EAAA/mB,EAAAC,cAACi1G,GAAA,EAAD,CACEh2G,YAAa,CACXI,OAAO,GAETm6B,QAAO,aACP/2B,SAAU9B,EAAKf,MAAM6C,SACrBulH,WAAY,oBACZluF,SAAU,wBACV55B,YAAc,SAAAiG,GAAC,OAAIxF,EAAK8uI,kBAAkBtpI,EAAE,QAC5CzD,WAAY/B,EAAKf,MAAM6C,SAAW,CAACnD,MAAM,OAAOC,OAAO,QAAU,CAACD,MAAM,OAAOC,OAAO,OAAO2wI,aAAa,UAG9GppH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3mB,MAAO,UACPuc,WAAY,UACZK,QAAU,SAAA7W,GAAC,OAAIxF,EAAK4sD,kBAAiB,KAHvC,4BAUJsiF,OAMVM,aAAe,WAEb,OAAIxvI,EAAKwD,MAAM+qI,qBAAwBvuI,EAAKwD,MAAM0qI,gBAAkBluI,EAAKwD,MAAM4qI,iBACtE,KAIPjoH,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAU0P,OAAX,KACK35B,EAAKwD,MAAM0qI,iBAcNluI,EAAKwD,MAAM4qI,kBAAgD,iBAA5BpuI,EAAKwD,MAAM0qI,iBAC9C/nH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpI,UAAW,CAACC,KAAOiR,eAAejR,KAAOkR,OACzC9S,QAASrc,EAAK01B,WACd91B,KAAM,SACNf,aAAc,EACduqB,cAAe,OACfnpB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbwqB,GAAI,OACJ1pB,GAAI,CAAC,EAAE,IATT,QAdAmlB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpI,UAAW,CAACC,KAAOiR,eAAejR,KAAOkR,OACzC9S,QAAU,SAAA7W,GAAC,OAAIxF,EAAK8uI,kBAAkBtpI,EAAE,iBACxC5F,KAAM,SACNf,aAAc,EACduqB,cAAe,OACfnpB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbwqB,GAAI,OACJ1pB,GAAI,CAAC,EAAE,IATT,kGA9dJhC,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,KAAclF,KAAKC,wCA6f9C,OACEknB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAD,CAAWC,UAAWlrB,KAAKuqB,aACE,IAA1BvqB,KAAKwE,MAAMyqI,WACV9nH,EAAA/mB,EAAAC,cAAC8mB,EAAA/mB,EAAMsnG,SAAP,KACG1nG,KAAKiwI,qBACLjwI,KAAKwwI,gBAGRrpH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAACowI,GAAD,MACCzwI,KAAKwwI,yBA5hBU5kH,IAAM9qB,WCkCrB4vI,8MA9CbxE,cAAgB,WACd,OACE/kH,EAAA/mB,EAAAC,cAAC8mB,EAAA/mB,EAAMsnG,SAAP,KACEvgF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ8+G,GAAT,CAAY3jI,GAAI,GAAhB,4BAEA4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,GAAV,kFAEqB,IAClBkqI,GAAYC,cAAZ,2CAHH,KASAvlH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKkT,GAAI,UAAW76B,EAAG,EAAG4H,QAAS,CAAC,OAAQ,UAC1C8f,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjd,SAAU,WAAYxK,MAAO,OAChCwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAM,UAGlBumB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnmB,WAAY,GAAlB,0CAGAkmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnmB,WAAY,GAAlB,mHASV,OACEkmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAD,CAAWC,UAAWlrB,KAAKC,MAAMsqB,YAC/BpD,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACGzrB,KAAKksI,0BAvCmBtgH,IAAM9qB,WCmC5B6vI,8MA1CbC,iBAAmB,SAAAt4B,GACjBt3G,EAAKf,MAAMsqB,aACXvpB,EAAKf,MAAM4wI,iBAGb3E,cAAgB,WACd,OACE/kH,EAAA/mB,EAAAC,cAAC8mB,EAAA/mB,EAAMsnG,SAAP,KACEvgF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ8+G,GAAT,CAAY3jI,GAAI,GAAhB,sDAIA4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,GAAV,8EAKA4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,CAAC,SAAU,OAAQC,eAAgB,WAAYoa,GAAI,GACtEqK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgBnvH,QAASrc,EAAKf,MAAMsqB,WAAYnnB,GAAI,CAAC,EAAG,GAAIkB,GAAI,CAAC,EAAG,IAApE,qBAGA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQ/J,QAASrc,EAAK4vI,kBAAtB,wFASN,OACEzpH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAD,CAAWC,UAAWlrB,KAAKC,MAAMsqB,YAC/BpD,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACGzrB,KAAKksI,0BAnCwBtgH,IAAM9qB,WCiRjCgwI,8MApQbtsI,MAAQ,CACNusI,eAAe,EACf9B,YAAY,KAGd+B,gBAAkB,WAChBhwI,EAAK4E,SAAS,CACZmrI,eAAgB/vI,EAAKwD,MAAMusI,mBAI/BvB,iBAAmB,SAAAhpI,GACjB2rB,QAAQC,IAAI,aAAcpxB,EAAKwD,MAAMyqI,YACrCzoI,EAAEiwB,iBAEFz1B,EAAK4E,SAAS,CACZqpI,YAAajuI,EAAKwD,MAAMyqI,sFAK1B,OACE9nH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpc,GAAI,CAAC,EAAG,GACRs3G,GAAI,CAAC,EAAG,GACR7pG,GAAI,CAAC,OAAQ,GACb0b,GAAI,CAAC,OAAQ,GACbpD,SAAU,QACVC,SAAU,SACV7mB,SAAU,YAEVgd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjd,SAAU,YACbgd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1kB,eAAgB,WAChBU,GAAI,CAAC,GAAI,GACT0Z,GAAI,CAAC,SAAU,GACf3S,SAAU,WACVzB,IAAK,IACLxE,KAAM,IACNyE,MAAO,IACP2xB,GAAI,QACJlwB,OAAQ,KAER+c,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAO0K,KAAR,CACEy6G,UAAQ,EACRtpI,KAAM,QACNxC,MAAO,YACP4c,QAASrd,KAAKC,MAAMsqB,gBAKI,IAA7BvqB,KAAKwE,MAAMusI,gBACc,IAA1B/wI,KAAKwE,MAAMyqI,WACT9nH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CAAE+lB,SAAU,QACnBigH,UAAW,uBAEX9pH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKplB,GAAI,CAAC,EAAG,GAAIyW,GAAI,CAAC,EAAG,GAAI0b,GAAI,CAAC,EAAG,IAGnChN,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK8pH,aAAa,SAASnvI,GAAI,GAC7BolB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ8+G,GAAT,+CAIF/+G,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,GAAV,+KAG8D,IAC5D6iB,EAAA/mB,EAAAC,cAAA,kDAAkD,IAClD8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExG,MAAM,wCACNuwH,GAAI,IACJj0H,KAAK,IACLG,QAASrd,KAAKwvI,kBAJhB,+BAUFroH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,yBAEAh/G,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,UACZkpB,GAAI,EACJpnB,GAAI,CAAC,EAAG,GACRwY,GAAI,CAAC,EAAG,GACRmd,SAAU,CAAC,OAAQ,YAEnB9S,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK3nB,EAAG,CAAC,EAAG,GAAIE,MAAO,CAAC,EAAG,KACzBwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,SACfC,eAAgB,gBAChB9C,OAAQ,QAERunB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQgqH,GAAT,iCACAjqH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAS,KAAf,oKAQFimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgBjqI,GAAI,GAClB4kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,YAAY0C,GAAI,IAD7B,qBAON+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK3nB,EAAG,CAAC,EAAG,GAAIE,MAAO,CAAC,EAAG,KACzBwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,SACfC,eAAgB,gBAChB9C,OAAQ,QAERunB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQgqH,GAAT,sCAGAjqH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAS,KAAf,gIAMFimB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgBjqI,GAAI,EAAG8a,QAASrd,KAAKgxI,iBACnC7pH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,oBAAoB0C,GAAI,IADrC,8BAWZ+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjd,SAAU,WACVvB,OAAQ,IACR1E,KAAM,IACNyE,MAAO,IACP3G,GAAI,CAAC,EAAG,GACRyW,GAAI,EACJ0b,GAAI,EACJmG,GAAI,SAGJnT,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM46F,UAAW,EAAGz5G,YAAa,SACjC4e,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3O,GAAI,EAAG/V,eAAgB,CAAC,SAAU,aACtCykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQ/J,QAASrd,KAAKC,MAAMsqB,WAAY5qB,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEHK,KAAKwE,MAAMusI,cACV5pH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK9iB,GAAI,GACP6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CAAE+lB,SAAU,QACnBigH,UAAW,uBAEX9pH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKplB,GAAI,CAAC,EAAG,GAAIyW,GAAI,CAAC,EAAG,GAAI0b,GAAI,CAAC,EAAG,IAEnChN,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,EAAGG,eAAgB,UAC3BykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAM,IACNkG,MACE9G,KAAKC,MAAMuM,QAAUxM,KAAKC,MAAMuM,QAAU,gBAKhD2a,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAY7kB,GAAI,EAAG2G,QAASlJ,KAAKC,MAAMuM,UACvC2a,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,MAKd6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjd,SAAU,WACVvB,OAAQ,IACR1E,KAAM,IACNyE,MAAO,IACP3G,GAAI,CAAC,EAAG,GACRyW,GAAI,EACJ0b,GAAI,EACJmG,GAAI,SAGJnT,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM46F,UAAW,EAAGz5G,YAAa,SACjC4e,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMtK,GAAI,EAAGpa,eAAgB,CAAC,SAAU,aACtCykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CACE7sI,MAAO,CAAC,EAAG,QACX0d,QAASrd,KAAKgxI,iBAFhB,cAUJ,KAEHhxI,KAAKwE,MAAMyqI,WACV9nH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAK9iB,GAAI,GACP6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CAAE+lB,SAAU,QACnBigH,UAAW,uBAEX9pH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKplB,GAAI,CAAC,EAAG,GAAIyW,GAAI,CAAC,EAAG,GAAI0b,GAAI,CAAC,EAAG,IAEnChN,EAAA/mB,EAAAC,cAACowI,GAAD,QAIJtpH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjd,SAAU,WACVvB,OAAQ,IACR1E,KAAM,IACNyE,MAAO,IACP3G,GAAI,CAAC,EAAG,GACRyW,GAAI,EACJ0b,GAAI,EACJmG,GAAI,SAGJnT,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3O,GAAI,EACJ/V,eAAgB,CAAC,SAAU,YAC3Bs/G,UAAW,EACXz5G,YAAa,QAEb4e,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CACE7sI,MAAO,CAAC,EAAG,QACX0d,QAASrd,KAAKwvI,kBAFhB,cAUJ,cA9Pc5jH,IAAM9qB,WCoDnBuwI,oLAtDX,OACElqH,EAAA/mB,EAAAC,cAAA,WACE8mB,EAAA/mB,EAAAC,cAACixI,GAAD,CACE/mH,WAAYvqB,KAAKC,MAAMkvH,OAAO31F,QAAQ+3G,wBACtCvmH,OAAQhrB,KAAKC,MAAMkvH,OAAOhrH,KAAKqtI,yBAC/B95H,YAAa1X,KAAKC,MAAMyX,cAG1ByP,EAAA/mB,EAAAC,cAACoxI,GAAD,CACElnH,WAAYvqB,KAAKC,MAAMkvH,OAAO31F,QAAQk4G,mBACtC1mH,OAAQhrB,KAAKC,MAAMkvH,OAAOhrH,KAAKwtI,oBAC/Bj6H,YAAa1X,KAAKC,MAAMyX,cAG1ByP,EAAA/mB,EAAAC,cAACuxI,GAAD,CACErnH,WAAYvqB,KAAKC,MAAMkvH,OAAO31F,QAAQq4G,uBACtC7mH,OAAQhrB,KAAKC,MAAMkvH,OAAOhrH,KAAK2tI,wBAC/B1+G,QAASpzB,KAAKC,MAAMmzB,UAGtBjM,EAAA/mB,EAAAC,cAAC0xI,GAADxyI,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6C,SAAU9C,KAAKC,MAAM6C,SACrBgrI,aAAc9tI,KAAKC,MAAM6tI,aACzBn9E,eAAgB3wD,KAAKC,MAAMmzB,QAAQmiB,QACnCy8F,gBAAiBhyI,KAAKC,MAAM+xI,gBAC5BznH,WAAYvqB,KAAKC,MAAMkvH,OAAO31F,QAAQy4G,qBACtCjnH,OAAShrB,KAAKC,MAAMkvH,OAAOhrH,KAAK+tI,wBAA0BlyI,KAAKC,MAAMkyI,oBAGvEhrH,EAAA/mB,EAAAC,cAAC+xI,GAAD,CACE7nH,WAAYvqB,KAAKC,MAAMkvH,OAAO31F,QAAQ64G,4BACtCrnH,OAAQhrB,KAAKC,MAAMkvH,OAAOhrH,KAAKmuI,yBAC/B3hF,eAAgB3wD,KAAKC,MAAMmzB,QAAQmiB,UAErCpuB,EAAA/mB,EAAAC,cAACkyI,GAAD,CACEhoH,WACEvqB,KAAKC,MAAMkvH,OAAO31F,QAAQg5G,iCAE5BxnH,OAAQhrB,KAAKC,MAAMkvH,OAAOhrH,KAAKsuI,oBAC/B5B,YAAa7wI,KAAKC,MAAM4wI,cAG1B1pH,EAAA/mB,EAAAC,cAACqyI,GAAD,CACEnoH,WAAYvqB,KAAKC,MAAMkvH,OAAO31F,QAAQm5G,mBACtC3nH,OAAQhrB,KAAKC,MAAMkvH,OAAOhrH,KAAKyuI,oBAC/BjiF,eAAgB3wD,KAAKC,MAAMmzB,QAAQmiB,QACnC/oC,QAASxM,KAAKC,MAAMuM,kBAjDIof,IAAM9qB,4CC2EzB+xI,8MA1Eb9tI,cAAgB,gFAEV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,KAAclF,KAAKC,oDAK9CD,KAAKmF,wDAILnF,KAAKmF,yDAILnF,KAAKmF,uFAGUqB,sEACfA,EAAEiwB,iBAEGz2B,KAAKC,MAAMuM,+BACdxM,KAAKC,MAAM6tI,aAAa,SAAS,eAC3B9tI,KAAKC,MAAM2tI,QAAQkF,uBAAuB,CAAC,kBAEnD9yI,KAAKC,MAAMkvH,OAAO31F,QAAQu5G,gKAGnB,IAAAttI,EAAAzF,KAED+tI,EAAiB/tI,KAAK+E,cAAcitD,oBACpCghF,EAAYjF,GAAmD,WAAjCA,EAAe5kI,eAAkF,kBAA3CnJ,KAAKC,MAAMkvH,OAAOhrH,KAAK8uI,iBAAgCjzI,KAAKC,MAAMkvH,OAAOhrH,KAAK8uI,gBAAgB9pI,cAAcmf,SAAS,UAE/M,OACEnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAD,CAAWC,UAAY,SAAA1kB,GAAC,OAAIf,EAAK8kB,WAAW/jB,KAC1C2gB,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUO,OAAX,CAAkB5K,MAAQoyH,EAAW,eAAH,mBAAyC/vI,KAAM,uBACjFkkB,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACEtE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,EAAG5C,MAAO,EAAG8C,cAAe,SAAUipB,GAAI,QAClDvE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK3nB,EAAN,CAAQgB,MAAO,YAAaU,UAAW,UAAvC,iEACkE6xI,EAAW,SAAW,UADxF,IACoG7rH,EAAA/mB,EAAAC,cAAA,WAClG8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAWjc,MAAO,MAAOQ,WAAY,GAArC,IAA0CjB,KAAKC,MAAMkvH,OAAOhrH,KAAK8uI,gBAAjE,KAA8F9rH,EAAA/mB,EAAAC,cAAA,WAE5F2yI,EACE7rH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,sCACgCyK,EAAA/mB,EAAAC,cAAA,2BADhC,QAC+D8mB,EAAA/mB,EAAAC,cAAA,0BAD/D,0BAC+G8mB,EAAA/mB,EAAAC,cAAA,+BAD/G,QACkJ8mB,EAAA/mB,EAAAC,cAAA,iCADlJ,uCACsN8mB,EAAA/mB,EAAAC,cAAA,YAGpN,0DAIV8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,EAAG7B,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJmpB,GAAI,CAAC,EAAG,GACR7rB,aAAc,EACdC,UAAW,OACXc,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,SACtCua,QAAO,eAAAxQ,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAG,SAAA8K,EAAOtR,GAAP,OAAAgkB,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cAAA0K,EAAA1K,KAAA,EAAqB9H,EAAK8kB,WAAW/jB,GAArC,wBAAAyR,EAAApJ,SAAAiJ,EAAA9X,SAAH,gBAAAsY,GAAA,OAAAzL,EAAAkC,MAAA/O,KAAAgP,YAAA,IANT,qBA3DqB4c,IAAM9qB,WC2E1BoyI,8MAvEbnuI,cAAgB,gFAEV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,KAAclF,KAAKC,oDAK9CD,KAAKmF,wDAILnF,KAAKmF,yDAILnF,KAAKmF,uFAGUqB,mEACfA,EAAEiwB,iBACFz2B,KAAKC,MAAMkvH,OAAO31F,QAAQ25G,iKAGnB,IAAA1tI,EAAAzF,KAEDozI,EAAmE,kBAA5CpzI,KAAKC,MAAMkvH,OAAOhrH,KAAKkvI,kBAAiCrzI,KAAKC,MAAMkvH,OAAOhrH,KAAKkvI,iBAAiBlqI,cAAcmf,SAAS,UAC9IgrH,EAAmE,kBAA5CtzI,KAAKC,MAAMkvH,OAAOhrH,KAAKkvI,kBAAiCrzI,KAAKC,MAAMkvH,OAAOhrH,KAAKkvI,iBAAiBlqI,cAAcmf,SAAS,8BAEpJ,OACEnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO4D,OAAQhrB,KAAKC,MAAM+qB,QACxB7D,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAD,CAAWC,UAAY,SAAA1kB,GAAC,OAAIf,EAAK8kB,WAAW/jB,KAC1C2gB,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUO,OAAX,CAAkB5K,MAAQ,oBAAsB3d,KAAM,uBACtDkkB,EAAA/mB,EAAAC,cAAC4qB,GAAA,EAAUQ,KAAX,KACEtE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM7kB,GAAI,EAAG5C,MAAO,EAAG8C,cAAe,SAAUipB,GAAI,QAClDvE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK3nB,EAAN,CAAQgB,MAAO,YAAaU,UAAW,UAAvC,kEACiEgmB,EAAA/mB,EAAAC,cAAA,WAC/D8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CAAWjc,MAAO,MAAOQ,WAAY,GAArC,IAA0CjB,KAAKC,MAAMkvH,OAAOhrH,KAAKkvI,iBAAjE,KAA+FlsH,EAAA/mB,EAAAC,cAAA,WAE7F+yI,EACEjsH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAK1K,KAAN,CACExb,SAAU,GAEVimB,EAAA/mB,EAAAC,cAAA,WAHF,iCAGsC8mB,EAAA/mB,EAAAC,cAAA,2BAHtC,QAGqE8mB,EAAA/mB,EAAAC,cAAA,0BAHrE,0BAGqH8mB,EAAA/mB,EAAAC,cAAA,+BAHrH,QAGwJ8mB,EAAA/mB,EAAAC,cAAA,iCAHxJ,uCAG4N8mB,EAAA/mB,EAAAC,cAAA,WAH5N,sEAIqE8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlmB,SAAU,EAAGT,MAAO,OAAQuc,WAAY,OAAQD,OAAQ,SAAUE,IAAK,+BAAgCC,KAAM,iHAAnH,qBAJrE,KAMEo2H,EAAgB,8FAAgG,0DAI1HnsH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM9iB,GAAI,EAAG7B,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJmpB,GAAI,CAAC,EAAG,GACR7rB,aAAc,EACdC,UAAW,OACXc,KAAMZ,KAAKC,MAAM6C,SAAW,QAAU,SACtCua,QAAO,eAAAxQ,EAAAtN,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAG,SAAA8K,EAAOtR,GAAP,OAAAgkB,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,cAAA0K,EAAA1K,KAAA,EAAqB9H,EAAK8kB,WAAW/jB,GAArC,wBAAAyR,EAAApJ,SAAAiJ,EAAA9X,SAAH,gBAAAsY,GAAA,OAAAzL,EAAAkC,MAAA/O,KAAAgP,YAAA,IANT,qBAxDsB4c,IAAM9qB,WCI1CovC,EAAQ,MAAU+d,SAClB,IAAMslF,GAAanjG,mCAEbojG,GAA2B5nH,IAAM6nH,cAAc,CACnDv7H,KAAM,GACN1L,QAAS,GACTkyB,SAAU,GACVyzB,SAAU,GACVhgB,UAAW,GACXuhG,WAAY,GACZ5tI,YAAa,GACbrC,aAAc,GACdkwI,aAAc,GACdC,eAAgB,GAChBC,SAAU,aACV1B,iBAAkB,GAClBtB,YAAa,aACbiD,kBAAmB,GACnBzhF,aAAc,aACd/zB,aAAc,aACdsgC,qBAAsB,GACtBm1E,oBAAqB,GACrBC,eAAgB,aAChBhC,gBAAiB,aACjB5+G,QAAS,CACPmiB,QAAS,GACT5T,SAAU,GACVsyG,aAAc,aACdlI,iBAAkB,MAEpBmI,oBAAoB,EACpB31G,iBAAkB,aAClB41G,iBAAkB,aAClBj+G,kBAAmB,aACnB/I,sBAAsB,EACtBinH,yBAA0B,GAC1BC,oBAAqB,aACrBC,qBAAsB,aACtBC,0BAA0B,EAC1Bz5G,0BAA2B,aAC3Bq0F,OAAQ,CACNhrH,KAAM,CACJ8uI,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBsC,uBAAwB,GACxB1C,wBAAyB,GACzBsC,yBAA0B,GAC1B9B,yBAA0B,GAC1Bd,yBAA0B,GAC1BiD,iCAAkC,IAEpCj7G,QAAS,CACPk7G,kBAAmB,aACnB/B,mBAAoB,aACpBgC,sBAAuB,aACvB9C,uBAAwB,aACxB+C,uBAAwB,aACxBrD,wBAAyB,aACzBsD,yBAA0B,aAC1B9B,0BAA2B,aAC3B+B,0BAA2B,aAC3B3B,2BAA4B,aAC5B4B,2BAA4B,aAC5B1C,4BAA6B,aAC7B2C,gCAAiC,aACjCC,gCAAiC,aACjCzC,iCAAkC,aAClC0C,iCAAkC,eAGtCx9H,YAAa,CACXvT,KAAM,CACJV,aAAc,IAEhB0xI,KAAM,GACN37G,QAAS,MAIT47G,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJtwI,oBAAqB,IAGrBD,cAAgB,OAkChBmH,uCAAoB,SAAAmL,IAAA,OAAAmT,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,OAClBvM,EAAKqxD,eAGLrxD,EAAK6yI,WAEL7yI,EAAKu0I,oBAKLl6H,OAAOm6H,gBAAkB,SAAC/7G,GACxB,IAAM/hB,EAAc1W,EAAKy0I,oBAGzB,OAFA/9H,EAAY+hB,OAASA,EACrBz4B,EAAK00I,eAAeh+H,GACbA,GAGT2D,OAAOklD,kBAAoB,SAAC7oD,EAAY5J,EAAKC,EAAO4kB,GAWlD,OATAjb,EAAY3J,OAASA,EACrB2J,EAAYib,OAASA,EACrBjb,EAAY9M,KAAO,WACnB8M,EAAYu0C,QAAU98C,KAAK+yC,MAC3BxqC,EAAYgb,gBAAkB5kB,EAI9B9M,EAAKu/D,kBAAkB7oD,GAChBA,GA7BS,wBAAAH,EAAA1I,SAAAwI,EAAArX,WAiCpBu1I,kBAAoB,WAElB,GADyBv0I,EAAKf,MAAMitH,WAAWS,OAAOua,WACjC,CACnB,IAAM6F,EAAiB/sI,EAAK+D,cAAcitD,oBACrBhxD,EAAKf,MAAMitH,WAAWS,OAAOua,cAAgBlnI,EAAKf,MAAMitH,WAAWS,OAAOz4F,SAASk5G,KAGtGptI,EAAKf,MAAM6tI,aAAa,SAAS,UACL,WAAnBC,GACT/sI,EAAKf,MAAM6tI,aAAa,SAAS,UAKvC4B,yDAAqB,SAAA53H,EAAOzS,EAAWC,GAAlB,IAAAqwI,EAAAC,EAAA/oH,EAAAgpH,EAAAjI,EAAA,OAAApjH,EAAApqB,EAAAgN,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,UAEnBvM,EAAKmE,aAIqBnE,EAAKwD,MAAMsxI,kBAAoB90I,EAAKf,MAAMitH,WAAWS,OAAOua,YAGpFlnI,EAAK4E,SAAS,CACZkwI,kBAAiB,GACjB,WACA90I,EAAKu0I,sBAILlwI,EAAUilG,gBAAkBtpG,EAAKf,MAAMqqG,eAAiBtpG,EAAKf,MAAMqqG,cACrEtpG,EAAK6yI,WACKxuI,EAAUuoI,UAAY5sI,EAAKf,MAAM2tI,QACvC5sI,EAAKf,MAAM2tI,QAAQ/2H,iBAAiBulD,OAASp7D,EAAKf,MAAM2tI,QAAQ/2H,MAAMoX,QAAQ3sB,QAC1Eq0I,EAAe30I,EAAKf,MAAM2tI,QAAQ/2H,MAAMoX,QACxC2nH,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBP,IAAwCQ,GAE1C50I,EAAKf,MAAM6tI,aAAa,SAAS,MAIjCsH,GAAmB,MAETQ,EAGV50I,EAAK6yI,WAFL7yI,EAAK6zI,yBAAyB,KAAKc,IAK5B30I,EAAKf,MAAM2tI,QAAQ7lC,QAA6C,kBAAnC/mG,EAAKf,MAAM2tI,QAAQtjC,eAA8D,kBAA3BtpG,EAAKf,MAAMqqG,eACvGtpG,EAAK6yI,YAEI7yI,EAAKf,MAAM2tI,QAAQtjC,eAAiBtpG,EAAKf,MAAM2tI,QAAQtjC,gBAAkBtpG,EAAKf,MAAMqqG,eAAkBjlG,EAAUwoD,gBAAkB7sD,EAAKf,MAAM4tD,gBACxJ7sD,EAAK6yI,WAGsBxuI,EAAUwoD,gBAAkB7sD,EAAKf,MAAM4tD,eAElE7sD,EAAK6vI,cAGDhkH,EAAexnB,EAAUE,gBAAkBvE,EAAKf,MAAMsF,cAEtDswI,EAA6BxwI,EAAUupC,qBAAuB5tC,EAAKf,MAAM2uC,qBAAuB7iC,KAAKC,UAAUzM,OAAO8B,KAAKgE,EAAUupC,wBAA0B7iC,KAAKC,UAAUzM,OAAO8B,KAAKL,EAAKf,MAAM2uC,sBAGvM/hB,GACF7rB,EAAK4E,SAAS,CACZqL,cAAe,OAKf5L,EAAUkvI,2BAA6BvzI,EAAKf,MAAMs0I,0BACpDvzI,EAAK4E,SAAS,CACZ2uI,yBAAyBvzI,EAAKf,MAAMs0I,2BAIpC15H,gBACI+yH,EAAU7hI,KAAKgP,MAAMF,aAAaC,QAAQ,cAC/B9Z,EAAKf,MAAM2tI,QAAQ7lC,SAAW6lC,EAAQ7lC,QAAU/mG,EAAKf,MAAM2tI,QAAQtjC,gBAAkBsjC,EAAQtjC,eAC5GtpG,EAAK+D,cAAcmW,gBAAgB,UAAUnP,KAAKC,UAAU,CAAC+7F,OAAO/mG,EAAKf,MAAM2tI,QAAQ7lC,OAAOuC,cAActpG,EAAKf,MAAM2tI,QAAQtjC,mBAI/Hz9E,IAAgBgpH,EA1ED,CAAA59H,EAAA1K,KAAA,gBAAA0K,EAAA1K,KAAA,GA2EXvM,EAAKqzI,sBA3EM,QA8EItoI,KAAKC,UAAU1G,EAAU8tB,WAAarnB,KAAKC,UAAUhL,EAAKwD,MAAM4uB,UAGrFpyB,EAAK4E,SAAS,CACZusC,UAAU,GACVhlB,sBAAqB,GACpB,WACDnsB,EAAK6yI,WACgC,oBAA1B7yI,EAAKf,MAAM81I,YACpB/0I,EAAKf,MAAM81I,WAAW/0I,EAAKwD,MAAM4uB,WAvFpB,yBAAAnb,EAAApJ,SAAAiJ,EAAA9X,mEA8FrB6zI,8BAAW,SAAAzjI,IAAA,IAAAk6F,EAAA0rC,EAAApI,EAAA34F,EAAAy+F,EAAAx7H,EAAA+9H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA15E,EAAAmxE,EAAAwI,EAAA73G,EAAA83G,EAAAxnI,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAO+8F,EAAPksC,EAAAl1I,OAAA,QAAAgrB,IAAAkqH,EAAA,GAAAA,EAAA,GAAqB,KAArBnmI,EAAA9C,KAAA,EAGsBkpI,OAHtB,YAGHT,EAHG3lI,EAAAE,OAIiB8K,OAAOwoH,UAAYxoH,OAAOwoH,WAAamS,IAC/D36H,OAAOwoH,SAAWmS,GAGdpI,EAAU5sI,EAAKf,MAAM2tI,QACrB34F,EAAYj0C,EAAKwD,MAAM4uB,QAAQmiB,QAAQtxC,IAAMjD,EAAKwD,MAAM4uB,QAAQuO,SAAS19B,GATtE,CAAAoM,EAAA9C,KAAA,eAAA8C,EAAAkI,OAAA,UAYA,GAZA,UAiBHm7H,EAAa,IAAIgD,IAAK,IAAIA,IAAKrgH,UAAUsgH,aAAaltI,IAAc2pB,QAAQiD,UAAUsgG,OAAO1hF,GAAWs+F,KAE1Gr7H,EAAO01H,EAAQgJ,QAGdv7H,OAAOsoH,oBAAsBiK,EAAQtjC,gBAAkBjvF,OAAOsoH,mBAAmBr5B,gBACpFjvF,OAAOsoH,mBAAqBiK,GAI1BtjC,EACF8qC,GAAmB,KAEnB9qC,EAAgBtpG,EAAKf,MAAMqqG,cAMzBsjC,GAA6B,WAAlBtjC,GAA8BA,IAAkBsjC,EAAQtjC,gBACjEpyF,GAAgD,oBAAjCA,EAAKw9B,gBAAgBoyF,QACtC5vH,EAAKw9B,gBAAgBoyF,UACZ8F,EAAQhK,WAAkD,oBAA9BgK,EAAQhK,UAAUkE,SACvD8F,EAAQhK,UAAUkE,UAEpB5vH,EAAO,KACPk9H,GAAmB,MAGfa,EAAwBrI,EAAQtjC,eAAiBsjC,EAAQtjC,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkB8qC,GAI9H,eAAlB9qC,EAlDK,CAAAj6F,EAAA9C,KAAA,YAmDFqgI,EAAQ7lC,SAAUkuC,EAnDhB,CAAA5lI,EAAA9C,KAAA,aAqDD+8F,IAAiB2rC,EArDhB,CAAA5lI,EAAA9C,KAAA,YAuDmB,WAAlB+8F,GAA+BtpG,EAAKwD,MAAMsxI,iBAvD3C,CAAAzlI,EAAA9C,KAAA,gBAAA8C,EAAAkI,OAAA,UAwDM,GAxDN,eA4DH68H,GAAmB9qC,EA5DhBj6F,EAAA9C,KAAA,GA6DGqgI,EAAQE,aAAaxjC,GA7DxB,eAAAj6F,EAAAkI,OAAA,SA+DIL,GA/DJ,WAoELg+H,EAAW,KACXC,EAAe,KAEdj+H,EAYHi+H,EAAej+H,EAAKw9B,gBAXhBr6B,OAAOwoH,UACT7iI,EAAK+D,cAAc2U,UAAU,+BAC7By8H,EAAe96H,OAAOwoH,UACbxoH,OAAOnD,MAChBlX,EAAK+D,cAAc2U,UAAU,uCAC7By8H,EAAe96H,OAAOnD,OAEtBlX,EAAK+D,cAAc2U,UAAU,yDAC7Bw8H,EAAWzsI,IAAc2pB,QAAQiD,UAAUsgG,OAAO1hF,GAAWs+F,IAM7D6C,GAAgB,EAEd9rC,GAAmC,WAAlBA,IAA+B6rC,GAA+C,oBAAxBA,EAAaxO,OAxFjF,CAAAt3H,EAAA9C,KAAA,gBAAA8C,EAAA/C,KAAA,GAAA+C,EAAA9C,KAAA,GA0FC4oI,EAAaxO,SA1Fd,QAAAt3H,EAAA9C,KAAA,iBAAA8C,EAAA/C,KAAA,GAAA+C,EAAAmc,GAAAnc,EAAA,UA4FL8lI,EAAe,KACfD,EAAWzsI,IAAc2pB,QAAQiD,UAAUsgG,OAAO1hF,GAAWs+F,GAC7D6C,GAAgB,EA9FX,cAmGa,eAAlB9rC,IACF6rC,EAAe,IAAIU,2BAIjBV,EACFj+H,EAAO,IAAIw+H,IAAKP,GAEPD,IACTh+H,EAAO,IAAIw+H,IAAK,IAAIA,IAAKrgH,UAAUsgH,aAAaT,IAC1B,WAAlB5rC,GACFtpG,EAAKf,MAAM6tI,aAAa,SAAS,OAI/BuI,EAlHG,eAAAn4G,EAAA3+B,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAkHY,SAAAC,IAAA,IAAAyxB,EAAA,OAAAlU,EAAApqB,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEnB8N,OAAOy7H,aAAe91I,EAAKwD,MAAM0T,KAGY,oBAAlClX,EAAKf,MAAM82I,qBACpB/1I,EAAKf,MAAM82I,qBACX/1I,EAAKf,MAAM+2I,sBAAsB,OAPhB3pI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYXvM,EAAKizI,eAZM,WAabjzI,EAAKwD,MAAM4uB,QAAQ24G,iBAbN,CAAA1+H,EAAAE,KAAA,YAeVvM,EAAKwD,MAAM2oB,qBAfD,CAAA9f,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAgBPvM,EAAKqzI,sBAhBE,WAmBXzG,EAAQphI,QAnBG,CAAAa,EAAAE,KAAA,aAqBTvM,EAAKwD,MAAMk6B,SArBF,CAAArxB,EAAAE,KAAA,YAsBLmxB,EAAW19B,EAAKwD,MAAMk6B,UACPj1B,IAAc2pB,QAAQiD,UAAUqI,SACpCy4F,aAAgBz4F,EAASu4G,SAAY5B,GAxB3C,CAAAhoI,EAAAE,KAAA,gBAyBT8nI,IAA0B,EAC1B32G,EAASsoG,MAAM4G,EAAQphI,QAAS,SAACqK,EAAOwtD,GAGtC,GAAIxtD,EACF,OAAO7V,EAAK4E,SAAS,CACnB84B,UAAS,GACT,WACA19B,EAAK6vI,YAAYjD,EAAQphI,WAI7B6oI,IAA0B,EAEtBhxE,EAAS3xC,gBACX1xB,EAAK6vI,YAAYjD,EAAQphI,SACjB63D,EAAS6yE,cACjBl2I,EAAK6vI,YAAYjD,EAAQphI,WA1CpBa,EAAAkL,OAAA,UA6CF,GA7CE,eAAAlL,EAAAE,KAAA,GAiDPvM,EAAK6vI,YAAYjD,EAAQphI,SAjDlB,QAAAa,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAoDPvM,EAAK6vI,cApDE,QAAAxjI,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmf,GAAAnf,EAAA,SA6DjBrM,EAAK6zI,yBAAyB,KAAKxnI,EAAAmf,GAAMyB,SA7DxB,yBAAA5gB,EAAAwB,SAAA5B,EAAAjN,KAAA,aAlHZ,yBAAAk+B,EAAAnvB,MAAA/O,KAAAgP,YAAA,GAoLHsnI,EAAep+H,EACf0kD,EAAenzD,IAAc2pB,QAAQiD,UAAUqI,SAC/CqvG,EAAiB/sI,EAAK+D,cAAcitD,sBAEpB,WAAlBs4C,GAA8B1tC,GAAgBA,EAAa/xC,SAAW+xC,EAAapnB,kBAAkBltB,SAAS2sB,KAAgB84F,GAAmBnxE,EAAaw6D,gBAAgB9uG,SAASylH,EAAe5kI,eAkDpM+O,IAASlX,EAAKwD,MAAM0T,KACtBlX,EAAK4E,SAAS,CACZsS,OACAw7H,cACC2C,IACMzI,EAAQphI,SAAW4pI,IAC5BC,IAtD0B,OAAxBr1I,EAAKwD,MAAMk6B,WACP63G,EAAuBJ,GAA8BD,GAErDx3G,EAAW,IAAIy4G,YAASZ,EAAqB35E,EAAajqC,UAEpB,oBAArB+L,EAAS04G,SAC9Bl/H,EAAO,IAAIw+H,IAAKh4G,GAChBA,EAAS04G,QAAQ14G,EAAS24G,MAAO,WAC/B,GAAIr2I,EAAKgE,qBAA8C,IAAxBhE,EAAKwD,MAAMk6B,UAAsB19B,EAAKwD,MAAMk6B,WAAaA,EACtF,OAAO,EAGT,IAAMi1G,EAAej1G,EAASi1G,aACxB/0E,EAAuBlgC,EAASkgC,qBAEhCl5D,EAAW,CACfwS,OACAwmB,WACAg1G,aACAC,eACA/0E,wBAIE1mD,IAASlX,EAAKwD,MAAM0T,MACtBlX,EAAK4E,SAASF,EAAU2wI,KAEzBe,QAAQ14G,EAAS44G,MAAO,SAACzgI,EAAOoX,GAEjC/V,EAAOo+H,GAEqB,IAAxBt1I,EAAKwD,MAAMk6B,UACb19B,EAAK4E,SAAS,CACZsS,OACAw7H,aACAh1G,UAAS,GACR23G,MAIPr1I,EAAK4E,SAAS,CACZsS,OACAw7H,aACAh1G,UAAS,GACR23G,IAtOAhmI,EAAAkI,OAAA,SAoPFL,GApPE,yBAAA7H,EAAAxB,SAAAuB,EAAApQ,KAAA,gBAuPXs+B,mDAAe,SAAAxlB,EAAOpY,EAAMwI,EAASm1B,GAAtB,IAAAk5G,EAAA/gG,EAAAxnC,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,cAA2BgqI,EAA3B/gG,EAAAl1C,OAAA,QAAAgrB,IAAAkqB,EAAA,IAAAA,EAAA,GACbx1C,EAAK+D,cAAc2U,UAAnB,kBAAA1P,OAA+CtJ,IADlCsY,EAAAzL,KAAA,EAEAvM,EAAKwwD,eAAe9wD,EAAMwI,EAASm1B,EAAKk5G,GAFxC,cAAAv+H,EAAAT,OAAA,SAAAS,EAAAzI,MAAA,wBAAAyI,EAAAnK,SAAAiK,EAAA9Y,qEAKfwxD,qDAAiB,SAAA53C,EAAOlZ,EAAMwI,EAASm1B,GAAtB,IAAAk5G,EAAApB,EAAAjkG,EAAAzE,EAAAz+B,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,UAA2BgqI,EAA3B9pG,EAAAnsC,OAAA,QAAAgrB,IAAAmhB,EAAA,IAAAA,EAAA,GACfzsC,EAAK+D,cAAc2U,UAAnB,qBAAA1P,OAAkDtJ,EAAlD,aAAAsJ,OAAkEd,IAE5DitI,EAAeoB,GAAqBv2I,EAAKwD,MAAMkvI,WAAa1yI,EAAKwD,MAAMkvI,WAAa1yI,EAAKwD,MAAM0T,KAHtF,CAAA6B,EAAAxM,KAAA,eAAAwM,EAAAxB,OAAA,SAMN,MANM,cAAAwB,EAAAzM,KAAA,EAWP4kC,EAAW,IAAIikG,EAAah+H,IAAIy5C,SAASvzB,EAAKn1B,GACpDlI,EAAK4E,SAAS,SAAApB,GAAK,OAAAjF,OAAAsmD,EAAA,EAAAtmD,CAAA,GACdiF,EADc,CAEjB2tC,UAAU5yC,OAAA63C,GAAA,EAAA73C,CAAKiF,EAAM2tC,WAAZnoC,OAAA,CAAuB,CAACtJ,OAAMwxC,kBAd5Bn4B,EAAAxB,OAAA,SAgBN,CAAC7X,OAAMwxC,aAhBD,QAAAn4B,EAAAzM,KAAA,GAAAyM,EAAAyS,GAAAzS,EAAA,SAkBb/Y,EAAK+D,cAAc8sC,eAAe,6BAA6BnxC,EAAKwI,EAApE6Q,EAAAyS,IAlBa,eAAAzS,EAAAxB,OAAA,SAqBR,MArBQ,yBAAAwB,EAAAlL,SAAA+K,EAAA5Z,KAAA,yEAwBjBqyD,aAAe,WAEb,GAAIrxD,EAAKwD,MAAM2tD,SACb,OAAOnxD,EAAKwD,MAAM2tD,SAGpB,IAAMqlF,EAAe/tI,IAAc2pB,QAAQiD,UAAU87B,SACjDA,EAAW,KACTld,EAAYj0C,EAAKwD,MAAM4uB,QAAQmiB,QAAQtxC,IAAMjD,EAAKwD,MAAM4uB,QAAQuO,SAAS19B,GAE/E,GAAIuzI,GAAgBA,EAAa3sH,UAAkE,IAAvD2sH,EAAahiG,kBAAkBh2B,QAAQy1B,GAAmB,CACpG,IAAMwiG,EAAiBD,EAAa7kH,OACpC8kH,EAAerkH,QAAUokH,EAAahgB,WAAWx2H,EAAKwD,MAAM4uB,QAAQmiB,QAAQtxC,GAAGwF,IAAc2pB,QAAQ29B,mBACrGoB,EAAW,IAAIulF,KAASD,GAS1B,OANAp8H,OAAO82C,SAAWA,EAElBnxD,EAAK4E,SAAS,CACZusD,aAGKA,KAGT0+E,iCAAc,SAAAv2H,IAAA,IAAA9N,EAAAqhD,EAAAkgF,EAAA4J,EAAAxlF,EAAA0lE,EAAA+f,EAAAC,EAAAC,EAAA9oI,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAArN,MAAA,UAAOf,EAAPsrI,EAAAx2I,OAAA,QAAAgrB,IAAAwrH,EAAA,IAAAA,EAAA,GAENjqF,EAAgB7sD,EAAKf,MAAM4tD,cAC3BkgF,EAAiB/sI,EAAK+D,cAAcitD,kBAAkB,WAExDnE,EALQ,CAAAjzC,EAAArN,KAAA,eAOVvM,EAAK4E,SAAS,CACZ4G,QAAQqhD,EACRqmF,oBAAmB,IAIrBlzI,EAAKk1B,oBAbKtb,EAAArC,OAAA,UAeH,GAfG,UAAAqC,EAAAtN,KAAA,EAmBLd,EAnBK,CAAAoO,EAAArN,KAAA,gBAAAqN,EAAArN,KAAA,GAoBcoK,QAAQogI,KAAK,CAC/B/2I,EAAKwD,MAAM0T,KAAKC,IAAIyvH,cACpB,IAAIjwH,QAAQ,SAACI,GAAD,OAAaoC,WAAWpC,EAAS,SAtBzC,SAoBF4/H,EApBE/8H,EAAArK,OAwBOonI,EAAQr2I,SACrBkL,EAAUmrI,EAAQ,IAzBZ,WA6BLnrI,GAAWxL,EAAKwD,MAAMgI,UAAYA,EA7B7B,CAAAoO,EAAArN,KAAA,gBAAAqN,EAAArC,OAAA,SA8BDvX,EAAK4E,SAAS,CACnBsuI,oBAAoB,KA/Bd,YAoCN1nI,GAA8B,WAAnBuhI,EApCL,CAAAnzH,EAAArN,KAAA,YAsCe,WAAnBwgI,EAtCI,CAAAnzH,EAAArN,KAAA,gBAuCNvM,EAAK4E,SAAS,CACZsuI,oBAAoB,EACpB1nI,QAAQxL,EAAKf,MAAM4tD,gBAzCfjzC,EAAArC,OAAA,UA2CC,GA3CD,aA+CF45C,EAAWnxD,EAAKqxD,gBA/Cd,CAAAz3C,EAAArN,KAAA,gBAAAqN,EAAArN,KAAA,GAmDsB4kD,EAAS0lE,gBAnD/B,SAmDAA,EAnDAj9G,EAAArK,OAqDesnH,EAAcv2H,QAAU+Z,OAAO28H,SAE9CJ,EAAqB,GACrB/8H,eACF+8H,EAAqB/8H,aAAaC,QAAQ,uBAAyB/O,KAAKgP,MAAMF,aAAaC,QAAQ,uBAAyB/O,KAAKgP,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvL+8G,EAAct2H,QAAQ,SAACwpC,EAAEhiC,GAEvB,IAAMkvI,EAAiBltG,EAAErqC,MAG2B,IAAhDk3I,EAAmBp4H,QAAQy4H,KAC7B58H,OAAO28H,OAAOxuI,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQxI,EAAK+D,cAAcqtC,8BAA8BrH,EAAEmtG,YAGtGN,EAAmBpuI,KAAKyuI,MAKxBp9H,cACF7Z,EAAK+D,cAAcmW,gBAAgB,qBAAqBnP,KAAKC,UAAU4rI,KA3ErE,QAiFR52I,EAAK+D,cAAc4kB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,YACbC,WAAYikH,IAMd/sI,EAAK4E,SAAS,CACZ4G,UAEA0nI,oBAAoB,IAItBlzI,EAAKk1B,oBAjGGtb,EAAArN,KAAA,wBAAAqN,EAAArC,OAAA,SAuGDvX,EAAK4E,SAAS,CACnBsuI,oBAAoB,KAxGd,QAAAt5H,EAAArN,KAAA,oBAAAqN,EAAAtN,KAAA,GAAAsN,EAAA4R,GAAA5R,EAAA,SA6GV5Z,EAAK4E,SAAS,CACZsuI,oBAAoB,IAItBlzI,EAAK+D,cAAc2U,UAAU,yCAA7BkB,EAAA4R,MAKI5R,EAAA4R,IAAS5R,EAAA4R,GAAMyB,SAAWrT,EAAA4R,GAAMyB,QAAQ3F,SAAS,yCAvH3C,CAAA1N,EAAArN,KAAA,gBAAAqN,EAAArC,OAAA,kBA4HJs/H,EAAUj9H,EAAA4R,cAAiB4vC,MAC7Bp7D,EAAK+D,cAAc2qD,kBAAoBmoF,GACzCM,KAAAv9H,EAAA4R,IA9HQ,yBAAA5R,EAAA/L,SAAAyL,EAAAta,KAAA,eAuIds0I,qBAAuB,SAAAz9H,GACrB,IAAIs4G,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKmuI,0BAA2B,EACvCnjB,EAAOhrH,KAAKsuI,qBAAsB,EAClCzxI,EAAK4E,SAAS,CAAEupH,cAGlBj5F,wDAAoB,SAAA/a,EAAOi9H,GAAP,IAAAz9H,EAAAspB,EAAA2vG,EAAAG,EAAA9iI,EAAA,OAAAuZ,EAAApqB,EAAAgN,KAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA7N,MAAA,cAElB6qI,EAAiBA,EAAiBp3I,EAAK+D,cAAc6I,MAAMwqI,GAAkB,KAF3Dh9H,EAAA9N,KAAA,EAAA8N,EAAA7N,KAAA,EAM+CoK,QAAQqD,IAAI,CACzEha,EAAKwD,MAAM0T,KAAKC,IAAIs0B,WAAWzrC,EAAKwD,MAAMgI,SAC1CxL,EAAK2rC,gBAAgB3rC,EAAKwD,MAAMgI,SAChCxL,EAAKu9B,qBATS,OAAA5jB,EAAAS,EAAA7K,KAAA0zB,EAAA1kC,OAAAouC,GAAA,EAAApuC,CAAAob,EAAA,GAMXi5H,EANW3vG,EAAA,GAMI8vG,EANJ9vG,EAAA,GAMwBhzB,EANxBgzB,EAAA,GAYZ2vG,IAGEA,EAAe15H,WAAWoO,SAAS,OACrCsrH,EAAiB5yI,EAAKwD,MAAM0T,KAAKu4B,MAAMK,MAAM8iG,IAI/CA,EAAiB5yI,EAAKwD,MAAM0T,KAAKu4B,MAAMI,QACrC+iG,EACA,SAGFA,EAAiB5yI,EAAK+D,cAAc6I,MAAMgmI,GAAgB15H,WAE1DlZ,EAAK4E,SAAS,CACZguI,mBAGF5yI,EAAK+D,cAAc2U,UAAU,oBAAqBk6H,IAKhDG,GAEFA,EAAsB/yI,EAAK+D,cAAc6I,MAAMmmI,GAG3CqE,GAAkBp3I,EAAKwD,MAAMuvI,qBAAuB/yI,EAAK+D,cAAck4B,qBAAqBj8B,EAAKwD,MAAMuvI,oBAAoB9iI,GAAeiJ,aAAe65H,EAAoB75H,aAC/K65H,EAAsBA,EAAoBzlI,KAAK8pI,IAGjDrE,EAAsB/yI,EAAK+D,cAAcsM,iBAAiB0iI,EAAoB9iI,GAAeiJ,WAK7FlZ,EAAK4E,SAALrG,OAAAkrH,EAAA,EAAAlrH,CAAA,CACEw0I,uBADF,iBAAA/pI,OAEoBhJ,EAAKf,MAAMsF,eAAiBwuI,KAIhD/yI,EAAK+D,cAAc2U,UAAU,kCAAkCq6H,GAxDjD34H,EAAA7N,KAAA,iBAAA6N,EAAA9N,KAAA,GAAA8N,EAAAoR,GAAApR,EAAA,SA2DhBpa,EAAK+D,cAAc8sC,eAAe,iCAAlCz2B,EAAAoR,IA3DgB,yBAAApR,EAAAvM,SAAAsM,EAAAnb,KAAA,qEA+DpBq0I,yCAAsB,SAAAn3F,IAAA,IAAA/K,EAAAlP,EAAA,OAAAzY,EAAApqB,EAAAgN,KAAA,SAAAuwC,GAAA,cAAAA,EAAArwC,KAAAqwC,EAAApwC,MAAA,cAEd4kC,EAAYnxC,EAAK+D,cAAc6M,gBAAgB,CAAC,cAFlC+rC,EAAApwC,KAAA,EAGdvM,EAAK+D,cAAc6H,aAAarN,OAAO8B,KAAK8wC,GAA5C,eAAAhH,EAAA5rC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAuD,SAAA6hC,EAAOtc,GAAP,IAAAsjD,EAAA,OAAArrD,EAAApqB,EAAAgN,KAAA,SAAA6hC,GAAA,cAAAA,EAAA3hC,KAAA2hC,EAAA1hC,MAAA,UAE9B,QADvBsoE,EAAe1jC,EAAU5f,IACdrpB,SAAyC,OAArB2sE,EAAax3C,IAFS,CAAA4Q,EAAA1hC,KAAA,eAGzDvM,EAAK+D,cAAc2U,UAAU,qCAAsC6Y,EAAcsjD,EAAa3sE,SAHrC+lC,EAAA1hC,KAAA,EAInDvM,EAAKs9B,aAAa/L,EAAcsjD,EAAa3sE,QAAS2sE,EAAax3C,KAJhB,wBAAA4Q,EAAApgC,SAAAggC,EAAA7uC,SAAvD,gBAAAs+C,GAAA,OAAAnT,EAAAp8B,MAAA/O,KAAAgP,YAAA,IAHc,cAWdi0B,EAAYjiC,EAAK+D,cAAc6M,gBAAgB,CAAC,cAXlC+rC,EAAApwC,KAAA,EAYdvM,EAAK+D,cAAc6H,aAAarN,OAAO8B,KAAK4hC,GAA5C,eAAAmI,EAAA7rC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAuD,SAAAuhC,EAAO5gC,GAAP,IAAAkgB,EAAA,OAAArD,EAAApqB,EAAAgN,KAAA,SAAAuhC,GAAA,cAAAA,EAAArhC,KAAAqhC,EAAAphC,MAAA,WACrDsgB,EAAiBoV,EAAUt1B,IACbkd,QAFuC,CAAA8jB,EAAAphC,KAAA,eAAAohC,EAAAp2B,OAAA,oBAM/BvX,EAAKwD,MAAM2tC,UAAU3iB,KAAK,SAAAnH,GAAC,OAAIA,EAAE3nB,OAASiN,IANX,CAAAghC,EAAAphC,KAAA,eAQzDvM,EAAK+D,cAAc2U,UAAU,qCAAsC/L,EAAOkgB,EAAe3kB,SARhCylC,EAAAphC,KAAA,EASnDvM,EAAKs9B,aAAa3wB,EAAOkgB,EAAe3kB,QAAS2kB,EAAewQ,KATb,wBAAAsQ,EAAA9/B,SAAA0/B,EAAAvuC,SAAvD,gBAAAu+C,GAAA,OAAAnT,EAAAr8B,MAAA/O,KAAAgP,YAAA,IAZc,WAyBhBhO,EAAKf,MAAM2uC,oBAzBK,CAAA+O,EAAApwC,KAAA,eAAAowC,EAAApwC,KAAA,EA2BZvM,EAAK+D,cAAc6H,aAAarN,OAAO8B,KAAKL,EAAKf,MAAM2uC,qBAAvD,eAAAvD,EAAA9rC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA4E,SAAAguC,EAAO7Q,GAAP,IAAA79B,EAAA,OAAAke,EAAApqB,EAAAgN,KAAA,SAAAgvC,GAAA,cAAAA,EAAA9uC,KAAA8uC,EAAA7uC,MAAA,cAE1EjB,EAAkBtL,EAAKf,MAAM2uC,oBAAoBzE,GAFyBiS,EAAA7uC,KAAA,EAI1EvM,EAAK+D,cAAc6H,aAAarN,OAAO8B,KAAKiL,GAA5C,eAAAg/B,EAAA/rC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA6D,SAAAotC,EAAOzsC,GAAP,IAAA7H,EAAAk3B,EAAAS,EAAA,OAAAjT,EAAApqB,EAAAgN,KAAA,SAAAmtC,GAAA,cAAAA,EAAAjtC,KAAAitC,EAAAhtC,MAAA,UAC3DzH,EAAcwG,EAAgBqB,GAEX3M,EAAKwD,MAAM2tC,UAAU3iB,KAAK,SAAAnH,GAAC,OAAIA,EAAE3nB,OAASiN,IAHF,CAAA4sC,EAAAhtC,KAAA,eAK/DvM,EAAK+D,cAAc2U,UAAU,qCAAqC/L,EAAO7H,EAAYoD,SALtBqxC,EAAAhtC,KAAA,EAMzDvM,EAAKs9B,aAAa3wB,EAAO7H,EAAYoD,QAASpD,EAAYu4B,KAND,UAUpCr9B,EAAKwD,MAAM2tC,UAAU3iB,KAAK,SAAAnH,GAAC,OAAIA,EAAE3nB,OAASoF,EAAYy6B,KAAK5yB,QAVvB,CAAA4sC,EAAAhtC,KAAA,gBAY/DvM,EAAK+D,cAAc2U,UAAU,qCAAqC5T,EAAYy6B,KAAK5yB,MAAO7H,EAAYy6B,KAAKr3B,SAZ5CqxC,EAAAhtC,KAAA,GAazDvM,EAAKs9B,aAAax4B,EAAYy6B,KAAK5yB,MAAO7H,EAAYy6B,KAAKr3B,QAASpD,EAAYy6B,KAAKlC,KAb5B,WAiBjEv4B,EAAY+C,UAAUtH,QAAtB,eAAAmuC,EAAAnwC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA8B,SAAA2iC,EAAOlwC,EAAEsJ,GAAT,OAAAyhB,EAAApqB,EAAAgN,KAAA,SAAA2iC,GAAA,cAAAA,EAAAziC,KAAAyiC,EAAAxiC,MAAA,UACAvM,EAAKwD,MAAM2tC,UAAU3iB,KAAK,SAAAnH,GAAC,OAAIA,EAAE3nB,OAASjB,EAAEkO,QAD5C,CAAAoiC,EAAAxiC,KAAA,eAG1BvM,EAAK+D,cAAc2U,UAAU,6BAA6Bja,EAAEkO,MAAM,YAAYlO,GAHpDswC,EAAAxiC,KAAA,EAIpBvM,EAAKs9B,aAAa7+B,EAAEkO,MAAOlO,EAAEyJ,QAASzJ,EAAE4+B,KAJpB,wBAAA0R,EAAAlhC,SAAA8gC,EAAA3vC,SAA9B,gBAAA6+C,EAAAC,GAAA,OAAApP,EAAA3gC,MAAA/O,KAAAgP,YAAA,KASIlJ,EAAYi3B,UA1BiD,CAAAwd,EAAAhtC,KAAA,aA4B3DzH,EAAYi3B,UAAUC,YA5BqC,CAAAud,EAAAhtC,KAAA,gBA6BvDyvB,EAAcl3B,EAAYi3B,UAAUC,YAC1Ch8B,EAAK+D,cAAc2U,UAAU,6BAA6BsjB,EAAYt8B,KAAK,YAAYs8B,GA9B1Bud,EAAAhtC,KAAA,GA+BvDvM,EAAKs9B,aAAatB,EAAYt8B,KAAMs8B,EAAY9zB,QAAS8zB,EAAYqB,KA/Bd,WAmC3Dv4B,EAAYi3B,UAAU2K,cACxB5hC,EAAYi3B,UAAU2K,aAAanmC,QAAnC,eAAAquC,EAAArwC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA2C,SAAAuiC,EAAO9vC,EAAEsJ,GAAT,OAAAyhB,EAAApqB,EAAAgN,KAAA,SAAAqiC,GAAA,cAAAA,EAAAniC,KAAAmiC,EAAAliC,MAAA,UACbvM,EAAKwD,MAAM2tC,UAAU3iB,KAAK,SAAAnH,GAAC,OAAIA,EAAE3nB,OAASjB,EAAEkO,QAD/B,CAAA8hC,EAAAliC,KAAA,eAGvCvM,EAAK+D,cAAc2U,UAAU,6BAA6Bja,EAAEkO,MAAM,YAAYlO,GAHvCgwC,EAAAliC,KAAA,EAIjCvM,EAAKs9B,aAAa7+B,EAAEkO,MAAOlO,EAAEyJ,QAASzJ,EAAE4+B,KAJP,wBAAAoR,EAAA5gC,SAAA0gC,EAAAvvC,SAA3C,gBAAA++C,EAAAK,GAAA,OAAAxP,EAAA7gC,MAAA/O,KAAAgP,YAAA,KASElJ,EAAYi3B,UAAUU,kBA7CqC,CAAA8c,EAAAhtC,KAAA,gBA8CvDkwB,EAAoB33B,EAAYi3B,UAAUU,kBAChDz8B,EAAK+D,cAAc2U,UAAU,6BAA6B+jB,EAAkB/8B,KAAK,YAAY+8B,GA/ChC8c,EAAAhtC,KAAA,GAgDvDvM,EAAKs9B,aAAab,EAAkB/8B,KAAM+8B,EAAkBv0B,QAASu0B,EAAkBY,KAhDhC,yBAAAkc,EAAA1rC,SAAAurC,EAAAp6C,SAA7D,gBAAAq+C,GAAA,OAAA/S,EAAAv8B,MAAA/O,KAAAgP,YAAA,IAJ0E,wBAAAotC,EAAAvtC,SAAAmsC,EAAAh7C,SAA5E,gBAAAw+C,GAAA,OAAAnT,EAAAt8B,MAAA/O,KAAAgP,YAAA,IA3BY,cAAA2uC,EAAApwC,KAAA,GAsFdvM,EAAK+D,cAAc6H,aAAarN,OAAO8B,KAAKL,EAAKf,MAAMg2C,mBAAvD,eAAApG,EAAAtwC,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAA0E,SAAA6wC,EAAOtxB,GAAP,IAAA6nD,EAAA,OAAA5pD,EAAApqB,EAAAgN,KAAA,SAAA+wC,GAAA,cAAAA,EAAA7wC,KAAA6wC,EAAA5wC,MAAA,cACxE6mE,EAASpzE,EAAKf,MAAMg2C,kBAAkB1pB,GADkC4xB,EAAA5wC,KAAA,EAExEvM,EAAK+D,cAAc6H,aAAarN,OAAO8B,KAAK+yE,GAA5C,eAAAr5B,EAAAx7C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAoD,SAAA2tC,EAAOhtC,GAAP,IAAA7H,EAAA,OAAA0kB,EAAApqB,EAAAgN,KAAA,SAAA0tC,GAAA,cAAAA,EAAAxtC,KAAAwtC,EAAAvtC,MAAA,cAClDzH,EAAcsuE,EAAOzmE,GAD6BmtC,EAAAvtC,KAAA,EAElDoK,QAAQqD,IAAI,CAChBha,EAAKs9B,aAAax4B,EAAYpF,KAAKoF,EAAYoD,QAAQpD,EAAYu4B,KACnEr9B,EAAKs9B,aAAax4B,EAAY2kE,GAAG/pE,KAAKoF,EAAY2kE,GAAGvhE,QAAQpD,EAAY2kE,GAAGpsC,KAC5Er9B,EAAKs9B,aAAax4B,EAAY4kE,GAAGhqE,KAAKoF,EAAY4kE,GAAGxhE,QAAQpD,EAAY4kE,GAAGrsC,KAC5Er9B,EAAKs9B,aAAax4B,EAAYu2C,IAAI37C,KAAKoF,EAAYu2C,IAAInzC,QAAQpD,EAAYu2C,IAAIhe,KAC/Er9B,EAAKs9B,aAAax4B,EAAY2kE,GAAGnuB,WAAW57C,KAAKoF,EAAY2kE,GAAGnuB,WAAWpzC,QAAQpD,EAAY2kE,GAAGnuB,WAAWje,KAC7Gr9B,EAAKs9B,aAAax4B,EAAY4kE,GAAGpuB,WAAW57C,KAAKoF,EAAY4kE,GAAGpuB,WAAWpzC,QAAQpD,EAAY4kE,GAAGpuB,WAAWje,OARvD,wBAAAyc,EAAAjsC,SAAA8rC,EAAA36C,SAApD,gBAAAs/C,GAAA,OAAAvE,EAAAhsC,MAAA/O,KAAAgP,YAAA,IAFwE,wBAAAmvC,EAAAtvC,SAAAgvC,EAAA79C,SAA1E,gBAAAq/C,GAAA,OAAAxP,EAAA9gC,MAAA/O,KAAAgP,YAAA,IAtFc,eAAA2uC,EAAAplC,OAAA,SAqGbvX,EAAK4E,SAAS,CACnBunB,sBAAqB,KAtGH,yBAAAwwB,EAAA9uC,SAAAquC,EAAAl9C,WA0GtB09B,wDAAoB,SAAAihB,EAAOpsB,GAAP,IAAA2f,EAAApsC,EAAA,OAAA0kB,EAAApqB,EAAAgN,KAAA,SAAAwxC,GAAA,cAAAA,EAAAtxC,KAAAsxC,EAAArxC,MAAA,WACd2kC,EAAWlxC,EAAKwD,MAAM2tC,UAAU3iB,KAAK,SAAAnH,GAAC,OAAIA,EAAE3nB,OAAS6xB,OAExCvxB,EAAKf,MAAM6F,YAHV,CAAA84C,EAAArxC,KAAA,eAIVzH,EAAc9E,EAAKf,MAAM6F,YAJf84C,EAAArxC,KAAA,EAKCvM,EAAKs9B,aAAa/L,EAAczsB,EAAYoD,QAASpD,EAAYu4B,KALlE,OAKhB6T,EALgB0M,EAAAruC,KAAA,cAAAquC,EAAArmC,OAAA,SAQX25B,EAAWA,EAASA,SAAW,MARpB,wBAAA0M,EAAA/vC,SAAA8vC,EAAA3+C,iEAWpBu+B,sCAAmB,SAAAihB,IAAA,IAAAvuC,EAAA,OAAAuZ,EAAApqB,EAAAgN,KAAA,SAAAwyC,GAAA,cAAAA,EAAAtyC,KAAAsyC,EAAAryC,MAAA,UACb0D,EAAgB,KAEfjQ,EAAKwD,MAAMyM,cAHC,CAAA2uC,EAAAryC,KAAA,eAAAqyC,EAAAryC,KAAA,EAKOvM,EAAK+D,cAAcw5B,iBAAiBv9B,EAAKf,MAAMsF,eALtD,OAKf0L,EALe2uC,EAAArvC,KAOfvP,EAAK4E,SAAS,CACZqL,kBARa2uC,EAAAryC,KAAA,uBAAAqyC,EAAAryC,KAAA,GAWQ,IAAIoK,QAAJ,eAAAslC,EAAA19C,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAa,SAAAkyC,EAAOnnC,EAASC,GAAhB,OAAAwS,EAAApqB,EAAAgN,KAAA,SAAA+xC,GAAA,cAAAA,EAAA7xC,KAAA6xC,EAAA5xC,MAAA,OAClCwK,EAAQ/W,EAAKwD,MAAMyM,eADe,wBAAAkuC,EAAAtwC,SAAAqwC,EAAAl/C,SAAb,gBAAA8/C,EAAAwD,GAAA,OAAArG,EAAAluC,MAAA/O,KAAAgP,YAAA,IAXR,QAWfiC,EAXe2uC,EAAArvC,KAAA,eAAAqvC,EAAArnC,OAAA,SAgBVtH,GAhBU,yBAAA2uC,EAAA/wC,SAAA2wC,EAAAx/C,WAmBnB2sC,sDAAkB,SAAAqT,EAAOxzC,GAAP,IAAA0lC,EAAA,OAAA1nB,EAAApqB,EAAAgN,KAAA,SAAA+yC,GAAA,cAAAA,EAAA7yC,KAAA6yC,EAAA5yC,MAAA,cAAA4yC,EAAA5yC,KAAA,EACOvM,EAAK08B,kBAAkB18B,EAAKf,MAAMsF,eADzC,UACV2sC,EADUiO,EAAA5vC,KAAA,CAAA4vC,EAAA5yC,KAAA,eAIdvM,EAAK+D,cAAc8sC,eAAe,sBAAuB7wC,EAAKf,MAAMsF,eAJtD46C,EAAA5nC,OAAA,SAKP,MALO,UAQX25B,EAAS1Y,QAAT,UARW,CAAA2mB,EAAA5yC,KAAA,eASdvM,EAAK6wC,eAAe,+BATNsO,EAAA5nC,OAAA,SAUP,MAVO,cAAA4nC,EAAA5yC,KAAA,GAaH2kC,EAAS1Y,QAAQ6+G,UAAU7rI,GAASy0D,OAAO7S,MAAM,SAAAv3C,GAC5D7V,EAAK+D,cAAc2U,UAAnB,iBAAA1P,OAA8ChJ,EAAKf,MAAMsF,cAAzD,YAAkFsR,KAdpE,eAAAspC,EAAA5nC,OAAA,SAAA4nC,EAAA5vC,MAAA,yBAAA4vC,EAAAtxC,SAAAmxC,EAAAhgD,iEAkBlBs4I,2BAA6B,WAE3B,IAAM5hB,EACyB,qBAAtB11H,EAAKf,MAAMguD,QACiC,qBAA5CjtD,EAAKf,MAAMguD,OAAOyoE,sBACrB11H,EAAKf,MAAMguD,OAAOyoE,sBAClB,EAEAod,EACJ9yI,EAAKwD,MAAMovI,eAAiBld,EAE9B11H,EAAK4E,SAAS,CACZkuI,yBAIJh5G,gEAA4B,SAAAulB,EAAO02F,GAAP,OAAAvsH,EAAApqB,EAAAgN,KAAA,SAAAq0C,GAAA,cAAAA,EAAAn0C,KAAAm0C,EAAAl0C,MAAA,OAErBvM,EAAKwD,MAAMgI,UACdxL,EAAKf,MAAM+2I,sBAAsBD,GAEjC/1I,EAAKu3I,uBALmB,wBAAA92F,EAAA5yC,SAAAwxC,EAAArgD,iEAS5Bw4I,mBAAqB,WAEnB,IAAMvjG,EACyB,qBAAtBj0C,EAAKf,MAAMguD,QAC2B,qBAAtCjtD,EAAKf,MAAMguD,OAAOvN,gBACrB1/C,EAAKf,MAAMguD,OAAOvN,gBAClBj3C,IAAc2pB,QAAQstB,gBAIxBA,EAAkB,CACpBhgD,KAHgB+I,IAAc2pB,QAAQ29B,kBAAkB9b,GAAaxrC,IAAc2pB,QAAQ29B,kBAAkB9b,GAAa,UAI1HhxC,GAAIgxC,GAGF7hB,EAAU7zB,OAAOC,OAAO,GAAGwB,EAAKwD,MAAM4uB,SAC1CA,EAAQuO,SAAW+e,EAEnB1/C,EAAK4E,SAAS,CAAEwtB,eAGlBqlH,kCAAe,SAAAt2F,IAAA,OAAA33B,EAAApqB,EAAAgN,KAAA,SAAAi1C,GAAA,cAAAA,EAAA/0C,KAAA+0C,EAAA90C,MAAA,cAAA80C,EAAA/0C,KAAA,EAAA+0C,EAAA9pC,OAAA,SAEJvX,EAAKwD,MAAM0T,KAAKC,IAAI6rD,IAAIC,MAAM,SAACptD,EAAOo+B,GAC3C,IAAIM,EAAOh2C,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM4uB,QAAQmiB,SACtCA,EAAQtxC,GAAKgxC,EACb,IAAI7hB,EAAU7zB,OAAOC,OAAO,GAAGwB,EAAKwD,MAAM4uB,SAC1CA,EAAQmiB,QAAUA,EAClBniB,EAAQ24G,iBAAmBtiI,IAAc2pB,QAAQqjG,gBAAgBnuG,SAAS2sB,GAC1Ej0C,EAAK4E,SAAS,CAAEwtB,eARP,OAAAivB,EAAA/0C,KAAA,EAAA+0C,EAAA71B,GAAA61B,EAAA,SAWXrhD,EAAK+D,cAAc2U,UAAU,6BAA7B2oC,EAAA71B,IAXW,wBAAA61B,EAAAxzC,SAAAszC,EAAAniD,KAAA,cAef04I,oCAAiB,SAAA/1F,IAAA,OAAAn4B,EAAApqB,EAAAgN,KAAA,SAAA21C,GAAA,cAAAA,EAAAz1C,KAAAy1C,EAAAx1C,MAAA,cAAAw1C,EAAAz1C,KAAA,EAAAy1C,EAAAxqC,OAAA,SAENvX,EAAKwD,MAAM0T,KAAKC,IAAI6rD,IAAI20E,eAAe,SAAC9hI,EAAO4gH,GACpD,IAAIliF,EAAOh2C,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM4uB,QAAQmiB,SACtCA,EAAQ70C,KAAO+2H,EACf,IAAIrkG,EAAU7zB,OAAOC,OAAO,GAAGwB,EAAKwD,MAAM4uB,SAC1CA,EAAQmiB,QAAUA,EAClBv0C,EAAK4E,SAAS,CAAEwtB,eAPL,OAAA2vB,EAAAz1C,KAAA,EAAAy1C,EAAAv2B,GAAAu2B,EAAA,SAUb/hD,EAAK+D,cAAc2U,UAAU,+BAA7BqpC,EAAAv2B,IAVa,wBAAAu2B,EAAAl0C,SAAA8zC,EAAA3iD,KAAA,cAcjBi0I,kCAAe,SAAA9wF,IAAA,IAAA/vB,EAAA,OAAA5I,EAAApqB,EAAAgN,KAAA,SAAAi2C,GAAA,cAAAA,EAAA/1C,KAAA+1C,EAAA91C,MAAA,cACbvM,EAAKw3I,qBADQn1F,EAAA91C,KAAA,EAGPoK,QAAQqD,IAAI,CAChBha,EAAKy3I,eACLz3I,EAAK03I,mBALM,QAQTtlH,EAAU7zB,OAAOC,OAAO,GAAGwB,EAAKwD,MAAM4uB,UAClC24G,kBAAoB/qI,EAAKwD,MAAM4uB,QAAQmiB,QAAQtxC,IAAMwF,IAAc2pB,QAAQqjG,gBAAgBnuG,SAAStnB,EAAKwD,MAAM4uB,QAAQmiB,QAAQtxC,IAGvIjD,EAAK4E,SAAS,CAAEwtB,YAZH,wBAAAiwB,EAAAx0C,SAAAs0C,EAAAnjD,WAef+yB,gEAA4B,SAAAywB,EAAOjxB,EAAcqmH,GAArB,IAAAjmH,EAAA7rB,EAAAnB,EAAA01D,EAAAb,EAAAgN,EAAA9vD,EAAAmhI,EAAArsI,EAAA2lC,EAAAD,EAAA4mG,EAAAx+E,EAAAgB,EAAA/hD,EAAAw/H,EAAAC,EAAAC,EAAAC,EAAArB,EAAA7zF,EAAAh1C,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAA62C,GAAA,cAAAA,EAAA32C,KAAA22C,EAAA12C,MAAA,UAAqColB,EAArCqxB,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,GAAAA,EAAA,GAA8C,GAAIl9C,EAAlDk9C,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,GAAAA,EAAA,GAA0D,KAAMr+C,EAAhEq+C,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,GAAAA,EAAA,GAA2E,KAAMqX,EAAjFrX,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,GAAAA,EAAA,GAAoG,KAAMwW,EAA1GxW,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,GAAAA,EAAA,GAAqH,KAAMwjB,EAA3HxjB,EAAA1iD,OAAA,QAAAgrB,IAAA03B,EAAA,GAAAA,EAAA,GAAoI,KAEzJhjD,EAAKwD,MAAM4uB,QAAQ24G,iBAFE,CAAA9nF,EAAA12C,KAAA,eAIxBvM,EAAKwD,MAAM2qH,OAAO31F,QAAQm7G,wBAJF1wF,EAAA1rC,OAAA,UAKjB,GALiB,UASrBvX,EAAKwD,MAAMgI,QATU,CAAAy3C,EAAA12C,KAAA,gBAUxBvM,EAAKu3I,sBACmB,oBAAb5yI,GACTA,EAAS,KAAK,yBAZQs+C,EAAA1rC,OAAA,UAcjB,GAdiB,YAkBtBvX,EAAKwD,MAAMsvI,kBAlBW,CAAA7vF,EAAA12C,KAAA,gBAmBxBvM,EAAK0zI,oBACmB,oBAAb/uI,GACTA,EAAS,KAAK,uBArBQs+C,EAAA1rC,OAAA,UAuBjB,GAvBiB,YA8BtBb,EAAc1W,EAAKy0I,kBAAkBjuE,IAC7B/tC,OAASm/G,EAErB53I,EAAK00I,eAAeh+H,GAGpBA,EAAY9M,KAAO,WACnB8M,EAAY3J,OAAS,UACrB2J,EAAYib,OAASA,EAGrB3xB,EAAKu/D,kBAAkB7oD,GAzCGmhI,EA2CK73I,EAAKwD,MAA5BgI,EA3CkBqsI,EA2ClBrsI,QAAS2lC,EA3CS0mG,EA2CT1mG,UACbD,EAAWC,EAAU3iB,KAAK,SAAAnH,GAAC,OAAIA,EAAE3nB,OAAS6xB,IA5CpB,CAAA0xB,EAAA12C,KAAA,eA8CA,oBAAb5H,GACTA,EAAS,KAAK,sBA/CQs+C,EAAA1rC,OAAA,SAiDjBvX,EAAK+D,cAAc2U,UAAnB,yBAAA1P,OAAsDuoB,KAjDrC,eAoD1B2f,EAAWA,EAASA,SAOhB4mG,EAA8B,KA3DR70F,EAAA32C,KAAA,GA+DnBxG,IACHA,EAAQ9F,EAAK+D,cAAc6I,MAAM,IAGnC5M,EAAK+D,cAAc2U,UAAU,4BAA4B6Y,EAAa2f,EAASwrB,SAASlxD,EAAQosI,EAAejmH,EAAQ7rB,EAAQ,CAAEwB,KAAMkE,EAAS1F,SAAU,CAAEwB,KAAMkE,IAnE1Iy3C,EAAA12C,KAAA,IAsER+sD,EAAApoB,EAAS1Y,SAAQo/G,GAAjB7pI,MAAAurD,EAAA/6D,OAAA63C,GAAA,EAAA73C,CAAoCozB,IACjDmoC,YAAYh0D,EAAQ,CAAEwB,KAAMkE,EAAS1F,SAAU,CAAEwB,KAAMkE,IACvD4hD,MAAM,SAAA5nD,GAAC,OAAI2rB,QAAQtb,MAAMrQ,KAxEJ,eAsEpB+S,EAtEoB0qC,EAAA1zC,QA6EtBgJ,GADAA,EAAMvY,EAAK+D,cAAc6I,MAAM2L,IACrBjL,KAAKiL,EAAIjQ,MAAMtI,EAAK+D,cAAc6I,MAAM,SAG9C4sD,GAAYjhD,EAAI/K,GAAGxN,EAAK+D,cAAc6I,MAAM4sD,MAC9CjhD,EAAMvY,EAAK+D,cAAc6I,MAAM4sD,IAIjCjhD,EAAMvY,EAAKwD,MAAM0T,KAAKu4B,MAAMD,KAAKj3B,EAAI4mB,aAAakR,KAAU6lB,eAGxD6hF,EAAuB,SAACr9E,EAAoBC,GAI5Cm9E,GACFz9H,OAAOC,aAAaw9H,GAKtBphI,EAAYyhI,mBAAqB,EAEjC,IAAM5vC,GAAiB9/F,IAAc2pB,QAAQmjG,UAAgC,oBAAb5wH,GAA2D,IAAhC+R,EAAYyhI,kBAGjGC,EAAsBp4I,EAAKf,MAAMguD,OAAOuoE,uBAAyB,EAEjC,IAAlC9+G,EAAYyhI,kBAEdzhI,EAAY3J,OAAS,YACZ2J,EAAYyhI,kBAInBzhI,EAAYyhI,oBAAsBC,EAGhCz9E,EAAQ5tD,OACV2J,EAAY3J,OAAS,UACX4tD,EAAQ5tD,SAClB2J,EAAY3J,OAAS,SAEd2J,EAAYyhI,kBAKnB5vC,IAEE5tC,IACFjkD,EAAY20C,UAAYsP,GAE1BjkD,EAAY2hI,YAAc,eAC1Br4I,EAAKu/D,kBAAkB7oD,GAEvB/R,EAAS+R,GAET1W,EAAK+D,cAAc2U,UAAU,YAAagiD,EAAoBC,EAASjkD,KAIrEshI,EAAqB,SAArBA,EAAsBtmH,EAAgB4mH,GAC1C,IAAK5mH,EACH,OAAO,EAET1xB,EAAKwD,MAAM0T,KAAKC,IAAIqwC,sBAAsB91B,EAAgB,SAACta,EAAIi0C,GACzDA,GAAaA,EAAUt+C,QACzB/M,EAAK+D,cAAc2U,UAAU,wBAAyB2yC,GACtD0sF,EAAqB,EAAE1sF,IAEvBysF,EAA8Bz9H,OAAOlB,WAAY,kBAAM6+H,EAAmBtmH,EAAgB4mH,IAAWA,MAKrGL,EAAkB,SAAAt9E,GAIlBm9E,GACFz9H,OAAOC,aAAaw9H,GAIlBn9E,IACFjkD,EAAY20C,UAAYsP,GAE1BjkD,EAAY2hI,YAAc,UAGtB5vI,IAAc2pB,QAAQmjG,UACxB7+G,EAAY3J,OAAS,UACG,oBAAbpI,GACTA,EAAS+R,KAGX1W,EAAKu/D,kBAAkB7oD,GAGnBikD,EAAQ5tD,SACV+qI,EAA8Bz9H,OAAOlB,WAAY,kBAAM6+H,EAAmBr9E,EAAQjpC,gBAAgB,MAAO,QAlLvFuxB,EAAA1rC,OAAA,UA0LjB+iD,EAAAppB,EAAS1Y,SAAQo/G,GAAjB7pI,MAAAusD,EAAA/7D,OAAA63C,GAAA,EAAA73C,CAAoCozB,IACxC7N,KAAKhe,EAAQ,CAAEwB,KAAMkE,EAAS1F,QAAOyS,OAAoB,CAAEjR,KAAMkE,EAAS+M,QAC1EiiD,GAAG,kBAAmB,SAAA1tD,GAGrB,GAFA9M,EAAK+D,cAAc2U,UAAU,sBAAuB5L,IAE/CA,EAEH,OADA9M,EAAK+D,cAAc2U,UAAU,yCAA0C5L,IAChE,EAGT4J,EAAYgb,gBAAkB5kB,EAC9B4J,EAAY3J,OAAS,UACrB2J,EAAY2hI,YAAc,kBAC1Br4I,EAAKu/D,kBAAkB7oD,GAEnB2jD,GACFA,EAAiB3jD,GAIf1W,EAAKf,MAAM6C,WACTg2I,GACFz9H,OAAOC,aAAaw9H,GAEtBA,EAA8Bz9H,OAAOlB,WAAY,kBAAM6+H,EAAmBlrI,EAAK,MAAQ,QAG1F0tD,GAAG,UAAWy9E,GACdz9E,GAAG,eAAgBu9E,GACnBv9E,GAAG,QAAS,SAAA3kD,GAEXsb,QAAQC,IAAI,WAAWvb,GAEvB,IAAMqiI,KAAariI,IAASA,EAAMoX,SAA6C,oBAA3BpX,EAAMoX,QAAQ3F,WAA0BzR,EAAMoX,QAAQ3F,SAAS,qCASnH,GANA5Q,EAAY3J,OAAS,QACrB2J,EAAY2hI,YAAc,QAC1Br4I,EAAKu/D,kBAAkB7oD,IAIlBwhI,EAAW,CACd79H,OAAOsa,cAAcC,WAAW,uBAAwB,CACtD3yB,KAAM,QACN8yB,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,iBAGpB,IAAMgiH,EAAUhhI,aAAiBulD,MAEJ,qBAAlBvlD,EAAMoX,QACfjtB,EAAK8zI,0BAA0B,KAAKj+H,EAAMoX,SACjCjtB,EAAK+D,cAAc2qD,kBAAoBmoF,GAChDM,KAAwBthI,GAIJ,oBAAblR,GACTA,EAAS+R,EAAYb,MAxPH,eAAAotC,EAAA32C,KAAA,GAAA22C,EAAAz3B,GAAAy3B,EAAA,UA6PxB9xB,QAAQC,IAAI,iBAAZ6xB,EAAAz3B,IAEA9U,EAAY3J,OAAS,QACrB/M,EAAKu/D,kBAAkB7oD,GAIvB2D,OAAOsa,cAAcC,WAAW,4CAA6C,CAC3E3yB,KAAM,QACN8yB,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,+BAGdqjH,KAAaj1F,EAAAz3B,KAASy3B,EAAAz3B,GAAMyB,UAAUg2B,EAAAz3B,GAAMyB,QAAQ3F,SAAS,qCAE7DuvH,EAAU5zF,EAAAz3B,cAAiB4vC,MAC5Bp7D,EAAK+D,cAAc2qD,kBAAoBmoF,IAAYqB,GACtDf,KAAAl0F,EAAAz3B,IAGsB,oBAAb7mB,GAETA,EAAS+R,EAADusC,EAAAz3B,IAtRcy3B,EAAA1rC,OAAA,UAyRjB,GAzRiB,yBAAA0rC,EAAAp1C,SAAA20C,EAAAxjD,KAAA,wEA8R5By1I,kBAAoB,WAAiB,IAAhBjuE,EAAgBx4D,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KACtB0I,EAAWnY,OAAAsmD,EAAA,EAAAtmD,CAAA,GACVioE,GAUL,OARA9vD,EAAY20C,UAAY,GACxB30C,EAAYu0C,QAAU98C,KAAK+yC,MAC3BxqC,EAAYyhI,kBAAoB,EAChCzhI,EAAY3J,OAAS,cACrB2J,EAAY6hI,YAAcpqI,KAAK+yC,MAC/BxqC,EAAY/J,MAAQ3M,EAAKf,MAAMsF,cAC/BmS,EAAYyyB,SAAWnpC,EAAKf,MAAMiQ,iBAClCwH,EAAYu9B,UAAYj0C,EAAK+D,cAAc6M,gBAAgB,CAAC,UAAU,oBAC/D8F,KAGTg+H,eAAiB,SAAAh+H,GACf,IAAMjU,EAAYlE,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAMf,cACrCA,EAAY,KAAAuG,OAAM0N,EAAYu0C,UAAav0C,EAC3C1W,EAAK4E,SAAS,CAAEnC,oBAIlB88D,kBAAoB,SAAAi5E,GAClB,IAAM/1I,EAAYlE,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAMf,cAC/BiU,EAAWnY,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQi6I,GAezB,OAdA9hI,EAAY6hI,YAAcpqI,KAAK+yC,MAC/Bz+C,EAAY,KAAAuG,OAAMwvI,EAAmBvtF,UAAav0C,EAClD1W,EAAK4E,SAAS,CAAEnC,iBAIZiU,EAAYgb,kBAEd1xB,EAAK+D,cAAc8tE,kBAGnB7xE,EAAK+D,cAAcmhD,qBAAnB,KAAAl8C,OAA6C0N,EAAYu0C,SAAUv0C,IAG9DA,KAITu6H,qBAAuB,SAAAzrI,GACJ,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAK+tI,uBAAwB,EAEpClxI,EAAK4E,SAAS,CAAEupH,cAGlBopB,oBAAsB,SAAA/xI,GACH,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAK+tI,uBAAwB,EACpClxI,EAAK4E,SAAS,CAAEupH,OAAQA,OAG1BkjB,4BAA8B,SAAA7rI,GACX,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKmuI,0BAA2B,EACvCtxI,EAAK4E,SAAS,CAAEupH,cAGlB4lB,2BAA6B,SAAAvuI,GACV,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKmuI,0BAA2B,EACvCnjB,EAAOhrH,KAAKswI,kCAAmC,EAC/CtlB,EAAOhrH,KAAK+tI,uBAAwB,EAEpClxI,EAAK4E,SAAS,CAAEupH,cAGlBgkB,2BAA6B,SAAA3sI,GACV,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKkvI,kBAAmB,EAC/BryI,EAAK4E,SAAS,CAAEupH,cAGlB2lB,0BAA4B,SAACtuI,EAAEqQ,GACZ,qBAANrQ,GAAqBA,GAC9BA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKkvI,iBAAmBx8H,EAE/B7V,EAAK4E,SAAS,CAAEupH,cAGlB4jB,0BAA4B,SAAAvsI,GAM1B,GALiB,qBAANA,GACTA,EAAEiwB,kBAICz1B,EAAKwD,MAAM2qH,OAAOhrH,KAAK8uI,gBAC1B,OAAO,EAGT,IAAI9jB,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAK8uI,iBAAkB,EAC9BjyI,EAAK4E,SAAS,CAAEupH,cAGlB0lB,yBAA2B,SAACruI,EAAEqQ,GACX,qBAANrQ,GAAqBA,GAC9BA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAGjB,oBAARt4G,IACFA,EAAQ,mCAGN7V,EAAKwD,MAAM2qH,OAAOhrH,KAAK8uI,kBAAoBp8H,IAE7Cs4G,EAAOhrH,KAAK8uI,gBAAkBp8H,EAC9B7V,EAAK4E,SAAS,CAAEupH,eAIpBqjB,iCAAmC,SAAAhsI,GAChB,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKsuI,qBAAsB,EAClCzxI,EAAK4E,SAAS,CAAEupH,cAGlB6lB,gCAAkC,SAAAxuI,GACf,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKsuI,qBAAsB,EAClCzxI,EAAK4E,SAAS,CAAEupH,cAGlBoiB,wBAA0B,SAAA/qI,GACP,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKqtI,0BAA2B,EACvCxwI,EAAK4E,SAAS,CAAEupH,cAGlBylB,uBAAyB,SAAApuI,GACN,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKqtI,0BAA2B,EACvCxwI,EAAK4E,SAAS,CAAEupH,cAGlBuiB,mBAAqB,SAAAlrI,GACF,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKwtI,qBAAsB,EAClC3wI,EAAK4E,SAAS,CAAEupH,cAGlBsqB,kBAAoB,SAAAjzI,GACD,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKwtI,qBAAsB,EAClC3wI,EAAK4E,SAAS,CAAEupH,cAGlB0iB,uBAAyB,SAAArrI,GACN,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAK2tI,yBAA0B,EACtC9wI,EAAK4E,SAAS,CAAEupH,cAGlBwlB,sBAAwB,SAAAnuI,GACL,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAK2tI,yBAA0B,EACtC9wI,EAAK4E,SAAS,CAAEupH,cAGlBwjB,mBAAqB,SAAAnsI,GACF,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKyuI,qBAAsB,EAClC5xI,EAAK4E,SAAS,CAAEupH,cAGlBulB,kBAAoB,SAAAluI,GACD,qBAANA,GACTA,EAAEiwB,iBAGJ,IAAI04F,EAAM5vH,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAQyB,EAAKwD,MAAM2qH,QAC7BA,EAAOhrH,KAAKyuI,qBAAsB,EAClC5xI,EAAK4E,SAAS,CAAEupH,cAGlB3qH,MAAQ,CACN0T,KAAM,KACN01H,QAAQ,KACRphI,QAAS,KACT2lC,UAAW,GACXzT,SAAU,KACVyzB,SAAU,KACVuhF,WAAW,KACXjwI,aAAc,GACdi2I,YAAa,KACb/F,aAAa,KACb1iI,cAAc,KACd2iI,eAAgB,KAChBzP,iBAAkB,KAClBgO,iBAAkB,KAClB2D,kBAAiB,EACjB6D,kBAAmB,KACnB9F,SAAU7yI,EAAK6yI,SACfC,kBAAmB,KACnBI,oBAAmB,EACnBt1E,qBAAqB,KACrBg7E,uBAAuB,GACvBzsH,sBAAqB,EACrB0jH,YAAa7vI,EAAK6vI,YAClBuD,yBAA0B,KAC1B/hF,aAAcrxD,EAAKqxD,aACnB/zB,aAAct9B,EAAKs9B,aACnB01G,eAAgBhzI,EAAKgzI,eACrBhC,gBAAiBhxI,EAAKgxI,gBACtBmC,iBAAkBnzI,EAAKmzI,iBACvB51G,iBAAkBv9B,EAAKu9B,iBACvBrI,kBAAmBl1B,EAAKk1B,kBACxBm+G,oBAAqBrzI,EAAKqzI,oBAC1BC,qBAAsBtzI,EAAKszI,qBAC3BvhH,0BAA2B/xB,EAAK+xB,0BAChC+H,0BAA2B95B,EAAK85B,0BAChCy5G,yBAA0BvzI,EAAKf,MAAMs0I,yBACrCnhH,QAAS,CACPmiB,QAAS,GACT5T,SAAU,GACVoqG,iBAAkB,KAClBkI,aAAcjzI,EAAKizI,cAErB9kB,OAAQ,CACNhrH,KAAM,CACJ8uI,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBsC,uBAAwB,KACxB1C,wBAAyB,KACzBQ,yBAA0B,KAC1B8B,yBAA0B,KAC1BK,iCAAkC,KAClC9C,oBAAqB3wI,EAAK2wI,oBAC1BH,yBAA0BxwI,EAAKwwI,0BAEjCh4G,QAAS,CACPk7G,kBAAmB1zI,EAAK0zI,kBACxB+E,kBAAmBz4I,EAAKy4I,kBACxB/H,mBAAoB1wI,EAAK0wI,mBACzBiB,mBAAoB3xI,EAAK2xI,mBACzB4F,oBAAqBv3I,EAAKu3I,oBAC1BtG,qBAAsBjxI,EAAKixI,qBAC3B0C,sBAAuB3zI,EAAK2zI,sBAC5B9C,uBAAwB7wI,EAAK6wI,uBAC7B+C,uBAAwB5zI,EAAK4zI,uBAC7BrD,wBAAyBvwI,EAAKuwI,wBAC9BsD,yBAA0B7zI,EAAK6zI,yBAC/B9B,0BAA2B/xI,EAAK+xI,0BAChC+B,0BAA2B9zI,EAAK8zI,0BAChC3B,2BAA4BnyI,EAAKmyI,2BACjC4B,2BAA4B/zI,EAAK+zI,2BACjC1C,4BAA6BrxI,EAAKqxI,4BAClC4C,gCAAiCj0I,EAAKi0I,gCACtCD,gCAAiCh0I,EAAKg0I,gCACtCE,iCAAkCl0I,EAAKk0I,iCACvC1C,iCAAkCxxI,EAAKwxI,mCAG3C96H,YAAa,CACXvT,KAAM,CACJV,aAAc,MAEhB0xI,KAAM,GACN37G,QAAS,gFA//CX,IAAMv5B,EAAQV,OAAOC,OAAO,GAAGQ,KAAKC,OACpCA,EAAMkyC,UAAYnyC,KAAKwE,MAAM2tC,UACzBnyC,KAAK+E,eACP9E,EAAMuM,QAAUxM,KAAKwE,MAAMgI,QAC3BxM,KAAK+E,cAAcE,SAAShF,KAE5BA,EAAMuM,QAAUxM,KAAKwE,MAAMgI,QAC3BxM,KAAK+E,cAAgB,IAAIG,KAAcjF,mDAKzCD,KAAKgF,oBAAqB,+CAGR,IAAAS,EAAAzF,KAClBA,KAAKmF,YACLnF,KAAKi0I,eAGD54H,OAAOwoH,UACTxoH,OAAOwoH,SAASroE,GAAG,iBAAnB,eAAA/b,EAAAlgD,OAAAmtC,EAAA,EAAAntC,CAAAirB,EAAApqB,EAAA4M,KAAqC,SAAAs7C,EAAOrT,GAAP,OAAAzqB,EAAApqB,EAAAgN,KAAA,SAAAm7C,GAAA,cAAAA,EAAAj7C,KAAAi7C,EAAAh7C,MAAA,cAAAg7C,EAAAh7C,KAAA,EAC7B9H,EAAKxF,MAAM4yE,gBAAgB,WAC/BptE,EAAKwuI,iBAF4B,wBAAA1rF,EAAA15C,SAAAy5C,EAAAtoD,SAArC,gBAAAopD,GAAA,OAAA3J,EAAA1wC,MAAA/O,KAAAgP,YAAA,IAOFqM,OAAOw4H,SAAW7zI,KAAK6zI,0CAw+CvB,IAAMgG,EAA+E,kBAA3C75I,KAAKwE,MAAM2qH,OAAOhrH,KAAK8uI,iBAAgCjzI,KAAKwE,MAAM2qH,OAAOhrH,KAAK8uI,gBAAgB3xI,OAAO,EACzIw4I,EAAiF,kBAA5C95I,KAAKwE,MAAM2qH,OAAOhrH,KAAKkvI,kBAAiCrzI,KAAKwE,MAAM2qH,OAAOhrH,KAAKkvI,iBAAiB/xI,OAAO,EAClJ,OACE6lB,EAAA/mB,EAAAC,cAAA,WACE8mB,EAAA/mB,EAAAC,cAACmzI,GAAyBuG,SAA1Bx6I,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6G,MAAO9G,KAAKwE,SAEd2iB,EAAA/mB,EAAAC,cAAC25I,GAADz6I,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEEkvH,OAAQnvH,KAAKwE,MAAM2qH,OACnB/7F,QAASpzB,KAAKwE,MAAM4uB,QACpB5mB,QAASxM,KAAKwE,MAAMgI,QACpB1J,SAAU9C,KAAKC,MAAM6C,SACrB+tI,YAAa7wI,KAAKwE,MAAMqsI,YACxB/C,aAAc9tI,KAAKC,MAAM6tI,aACzBkE,gBAAiBhyI,KAAKwE,MAAMwtI,gBAC5BG,iBAAkBnyI,KAAKwE,MAAM2tI,iBAC7BG,yBAA0BtyI,KAAKwE,MAAM8tI,yBACrC8B,yBAA0Bp0I,KAAKwE,MAAM4vI,4BAEvCjtH,EAAA/mB,EAAAC,cAAC45I,GAAD,CACE9qB,OAAQnvH,KAAKwE,MAAM2qH,OACnB3iH,QAASxM,KAAKwE,MAAMgI,QACpBohI,QAAS5tI,KAAKC,MAAM2tI,QACpB5iH,OAAQ8uH,IAEV3yH,EAAA/mB,EAAAC,cAAC65I,GAAD,CACE/qB,OAAQnvH,KAAKwE,MAAM2qH,OACnB3iH,QAASxM,KAAKwE,MAAMgI,QACpBohI,QAAS5tI,KAAKC,MAAM2tI,QACpB5iH,OAAQ6uH,EACR/L,aAAc9tI,KAAKC,MAAM6tI,eAE3B3mH,EAAA/mB,EAAAC,cAAC85I,GAAD,CACEjiI,KAAMlY,KAAKwE,MAAM0T,KACjB3U,MAAOvD,KAAKC,MAAMsD,MAClB6vB,QAASpzB,KAAKwE,MAAM4uB,kBAljDExH,IAAM9qB,WAAhCw0I,GACG8E,SAAW5G,GAAyB4G,SAwjD9B9E,6BCp/CA9pH,8MA/JbhnB,MAAQ,KAKRO,cAAgB,gFAEV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,KAAclF,KAAKC,4JAK9CD,KAAKmF,kQAKLnF,KAAKmF,iMAGkBE,EAAWC,sEAElCtF,KAAKmF,aAEDnF,KAAKC,MAAMmzB,SAAYpzB,KAAKC,MAAMmzB,QAAQ24G,2DACrC,yIAIF,IAAAtmI,EAAAzF,KAEDq6I,EAAoBr6I,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa,YAE3E,OACEuV,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnc,MAAO,CACL/G,KAAM,IACNyE,MAAO,IACPyB,OAAQ,GACRD,SAAU,aAGZgd,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3nB,EAAG,EACH+C,WAAY,SACZE,eAAgB,SAChBW,gBAAiB,YACjBZ,cAAe,CAAC,SAAS,QAEzB0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3mB,MAAO,QACPU,UAAW,UAFb,sCAMAgmB,EAAA/mB,EAAAC,cAACsqG,GAAA,EAAD,CACE3/F,GAAI,EACJjJ,GAAI,EACJ+a,GAAI,CAAC,EAAE,GACPpS,GAAI,CAAC,EAAE,GACP43G,GAAI,OACJ7hH,MAAO,QACPwK,MAAO,CACL5D,QAAQ,OACRxH,aAAa,MACb4C,cAAc,MACdD,WAAW,YAEba,gBAAiB,UACjB6Z,KAAM,uEAdR,YAiBEiK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJ9J,KAAM,QACNH,MAAO,QACPC,KAAM,yBAKZymB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3O,GAAI,CAAC,EAAE,GACPiT,GAAI,OACJ4O,GAAI,cACJ36B,MAAO,CAAC,MAAM,QACdoxB,SAAU,CAAC,OAAO,SAClBvuB,WAAY,CAAC,SAAS,eAEtB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,CAAC,EAAG,GACR/K,MAAO,CAAC,GAAK,MAEbwnB,EAAA/mB,EAAAC,cAAC8vI,GAAA,EAAD,CACEp9F,GAAG,KAEH5rB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEjd,SAAU,WACVtH,IAAK,kBACLjD,OAAQ,CAAC,OAAO,YAIpBunB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,CAAC,GAAI,EAAE,IACd6C,WAAY,SACZC,cAAe,MACfC,eAAgB,YAGd23I,GACElzH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhkB,GAAI,EACJlC,SAAU,EACVT,MAAO,QACPuc,WAAY,QACZzV,WAAY,YACZpG,UAAW,CAAC,SAAS,QACrBkc,QAAU,SAAC7W,GAAD,OAAO6U,OAAOo4B,SAAS3lC,KAAK,iBAPxC,eAaD9N,KAAKC,MAAM6C,UACVqkB,EAAA/mB,EAAAC,cAAA8mB,EAAA/mB,EAAAsnG,SAAA,KACEvgF,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhkB,GAAI,EACJlC,SAAU,EACVT,MAAO,QACPuc,WAAY,QACZzV,WAAY,YACZpG,UAAW,CAAC,SAAS,QACrBkc,QAAS,SAAC7W,GAAOf,EAAKV,cAAc+tC,SAAShkB,SAASC,eAAe,YAAYurH,UAAU,OAP7F,cAWAnzH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVT,MAAO,QACPuc,WAAY,QACZzV,WAAY,YACZpG,UAAW,CAAC,SAAS,QACrBkc,QAAS,SAAC7W,GAAOf,EAAKV,cAAc+tC,SAAShkB,SAASC,eAAe,OAAOurH,UAAU,OANxF,mBA7IC1uH,IAAM9qB,qBCNZ,SAASy5I,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACRr/H,OAAOy3B,SAAS,EAAG,IAClB,CAAC0nG,IAEG,+BCwCMG,8MAxCbn2I,MAAQ,2EAGN,OACE2iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAWC,KAAOsR,gBAAiBvuB,GAAI,CAAC,EAAE,GAAIyW,GAAI,CAAC,MAAO,QAC7D0O,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAWC,KAAOuR,iBACvBrJ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKjd,SAAU,WAAYC,OAAQ,IACjC+c,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,SAAUD,WAAY,SAAUuuB,SAAU,CAAC,OAAQ,QAASrF,GAAI,OAAQvqB,UAAW,SAAUsX,GAAI,CAAC,MAAO,QAC5H0O,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQzlB,GAAT,CAAY4F,WAAY,YAAanG,WAAY,QAASkD,GAAI,QAASpD,SAAU,CAAC,QAAQ,GAAIC,UAAW,SAAUV,MAAO,SAA1H,4BAGA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAY5+H,WAAY,YAAanG,WAAY,QAASkD,GAAI,QAASrD,WAAY,EAAGC,SAAU,CAAC,QAAQ,GAAIC,UAAW,SAAUV,MAAO,SAAzI,wDAGA0mB,EAAA/mB,EAAAC,cAAC8vI,GAAA,EAAD,CAAYp9F,GAAG,IAAI9nC,MAAO,CAAC8yG,eAAe,SACxC52F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEpI,UAAW47H,KAAc1qH,eACzBrwB,aAAc,EACde,MAAMZ,KAAKC,MAAM6C,SAAW,UAC5BhD,UAAW,OACXsqB,cAAe,QACfnpB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbwqB,GAAI,OACJ1pB,GAAI,CAAC,EAAE,GACP8a,GAAI,GAVN,sBAkBRqK,EAAA/mB,EAAAC,cAACs6B,EAAA,EAAD,cAnCmB75B,aCyCZ+5I,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAI/5I,EAAKf,MAAMmzB,QACb,OAAQpyB,EAAKf,MAAMmzB,QAAQnvB,IACzB,KAAK,EACH82I,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpBn7I,aAAc,MACdwD,gBAAiBrD,KAAK86I,wBACtBl7I,OAAQ,MACRD,MAAO,OAGT,OACEwnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKnc,MAAO+vI,EAAe53I,GAAI,IAC/B+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMnc,MAAO,CAAEI,cAAe,eAC3BrL,KAAKC,MAAMmzB,QAAQ1yB,cAxCAkrB,IAAM9qB,WCW9Bm6I,GAAkB,SAAAh7I,GAAK,OAC3BknB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKtK,GAAI,EAAGklG,UAAW,EAAGz5G,YAAY,UAAUkQ,GAAI,GAClD0O,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQghF,GAAT,CAAYjnG,UAAW,UAAvB,cACAgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE/J,QAASpd,EAAMkvH,OAAO31F,QAAQm7G,sBAC9B/zI,KAAK,QACLwC,GAAI,EACJkB,GAAI,GAJN,0BASA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE/J,QAASpd,EAAMkvH,OAAO31F,QAAQ++G,oBAC9B33I,KAAK,QACLwC,GAAI,EACJkB,GAAI,GAJN,cAQA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAK,QACLyc,QAASpd,EAAMkvH,OAAO31F,QAAQu7G,2BAC9B3xI,GAAI,EACJkB,GAAI,GAJN,sBAQA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAK,QACLyc,QAASpd,EAAMkvH,OAAO31F,QAAQw7G,gCAC9B5xI,GAAI,EACJkB,GAAI,GAJN,uBAQA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAK,QACLyc,QAAS,SAAAi7F,GACPr4G,EAAMkvH,OAAO31F,QAAQk7G,kBAAkBp8B,IAEzCl1G,GAAI,EACJkB,GAAI,GANN,aAUA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAK,QACLyc,QAASpd,EAAMkvH,OAAO31F,QAAQo7G,uBAC9BxxI,GAAI,EACJkB,GAAI,GAJN,oBAQA6iB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAK,QACLyc,QAASpd,EAAMkvH,OAAO31F,QAAQigH,kBAC9Br2I,GAAI,EACJkB,GAAI,GAJN,eAuOW42I,oLA1NX,OACE/zH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,QAAS+rB,GAAI,OAAQ1pB,GAAI,GACpCmlB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAYhlI,UAAW,UAAvB,iBAEAgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQD,MAAO,QAAS2C,GAAI,IACvC+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,wCAIJD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UACfxC,KAAKC,MAAMiY,KACViP,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQD,MAAO,QAAS2C,GAAI,IAEvC+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQD,MAAO,MAAO2C,GAAI,IAEvC+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,kCAGApnB,KAAKC,MAAMiY,KAgBT,KAfFiP,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1c,GAAI,EAAGlI,WAAY,SAAUE,eAAgB,iBACjDykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,OAAO0C,GAAI,EAAG3C,MAAM,SAC/B0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAM,QAAZ,8BAGF0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElK,KAAK,4FACLH,OAAO,SAASE,IAAI,gCAEpBkK,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgB5rI,KAAK,SAArB,6BAQPZ,KAAKC,MAAMiY,KACViP,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACErlB,GAAI,EACJQ,GAAI,EACJy/G,UAAW,EACXtZ,aAAc,EACdngG,YAAa,UACbpH,UAAW,SACXuB,eAAgB,eAChBF,WAAY,UAEZ2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExmB,KAAK,QACLyc,QAASrd,KAAKC,MAAM66B,0BACpB/6B,UAAWC,KAAKC,MAAMiY,MAHxB,sBAOAiP,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,eACAD,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAQxmB,KAAK,QAAQb,UAAQ,GAA7B,6BAIA,KAEJonB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UACfxC,KAAKC,MAAMmzB,QAAQ24G,iBAClB5kH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQD,MAAO,QAAS2C,GAAI,IAEvC+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQD,MAAO,MAAO2C,GAAI,IAEvC+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,yBAGDpnB,KAAKC,MAAMiY,OAASlY,KAAKC,MAAMmzB,QAAQ24G,iBACtC5kH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1c,GAAI,EAAGlI,WAAY,SAAUE,eAAgB,iBACjDykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,OAAO0C,GAAI,EAAG3C,MAAM,SAC/B0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhkB,GAAI,EACJ3C,MAAM,OACNwK,MAAO,CAAEI,cAAe,eAH1B,oBAOA8b,EAAA/mB,EAAAC,cAAC86I,GAAD,CAAiB/nH,QAASpzB,KAAKC,MAAMmzB,QAAQmiB,WAE/CpuB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEhkB,GAAI,EACJ3C,MAAM,OACNwK,MAAO,CAAEI,cAAe,eAH1B,qBAOA8b,EAAA/mB,EAAAC,cAAC86I,GAAD,CAAiB/nH,QAASpzB,KAAKC,MAAMmzB,QAAQuO,cAKnDxa,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgB5rI,KAAK,QAAQyc,QAASrd,KAAKC,MAAMg0I,cAAjD,kBAIA,KACHj0I,KAAKC,MAAMiY,MAAQlY,KAAKC,MAAM8rI,iBAC7B5kH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1c,GAAI,EAAGlI,WAAY,UACvB2kB,EAAA/mB,EAAAC,cAAC86I,GAAD,CAAiB/nH,QAASpzB,KAAKC,MAAMmzB,QAAQmiB,WAE7C,MAGNpuB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UACfxC,KAAKC,MAAMuM,SAAWxM,KAAKC,MAAMkyI,iBAChChrH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQD,MAAO,QAAS2C,GAAI,IAEvC+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQD,MAAO,MAAO2C,GAAI,IAEvC+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,uCAGApnB,KAAKC,MAAMuM,UACbxM,KAAKC,MAAMiY,MACVlY,KAAKC,MAAMwyI,oBAWR,KAVFtrH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1c,GAAI,EAAGlI,WAAY,SAAUE,eAAgB,iBACjDykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,OAAO0C,GAAI,EAAG3C,MAAM,SAC/B0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAM,QAAZ,gCAGF0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgB5rI,KAAK,QAAQyc,QAASrd,KAAKC,MAAM4wI,aAAjD,YAKH7wI,KAAKC,MAAMuM,SAAWxM,KAAKC,MAAMiY,KAChCiP,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1c,GAAI,EAAGlI,WAAY,UACvB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQD,MAAO,QAAS2C,GAAI,IACvC+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAM,QAAZ,oBAAqCT,KAAKC,MAAMuM,SAChD2a,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAOT,KAAKC,MAAM6zI,kBAAoB,MAAQ,QAApD,mBACmB9zI,KAAKC,MAAM2zI,kBAIhC,KAEH5zI,KAAKC,MAAMwyI,oBACVtrH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1c,GAAI,EAAGhI,eAAgB,iBAC3BykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQ0C,GAAI,EAAG3C,MAAM,QAChC0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAM,OAAZ,kCAGF0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgB5rI,KAAK,QAAQyc,QAASrd,KAAKC,MAAM4wI,aAAjD,YAIA,KAE8B,OAAhC7wI,KAAKC,MAAMkyI,mBACqB,IAAhCnyI,KAAKC,MAAMkyI,mBACbnyI,KAAKC,MAAMiY,KAgBP,KAfFiP,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJnI,GAAI,EACJC,WAAY,SACZE,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,OAAO0C,GAAI,EAAG3C,MAAM,SAC/B0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAM,QAAZ,yBAGF0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgB5rI,KAAK,QAAQyc,QAASrd,KAAKC,MAAM+xI,iBAAjD,cAM6B,IAAhChyI,KAAKC,MAAMkyI,iBACVhrH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1c,GAAI,EACJnI,GAAI,EACJC,WAAY,SACZE,eAAgB,iBAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQ0C,GAAI,EAAG3C,MAAM,QAChC0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAM,OAAZ,yBAGF0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAOolH,QAAR,CAAgB5rI,KAAK,QAAQyc,QAASrd,KAAKC,MAAM+xI,iBAAjD,aAIA,MAEmC,IAAtChyI,KAAKC,MAAMu0I,uBACVrtH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1c,GAAI,GACRyc,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM1mB,KAAK,QAAQ0C,GAAI,EAAG3C,MAAM,QAChC0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3mB,MAAM,OAAZ,yBAEA,MAGN0mB,EAAA/mB,EAAAC,cAAC+6I,GAAoBp7I,KAAKC,OAE1BknB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAa2yH,SAAd,CAAuB7uG,IAAK,SAAAmwG,GAAI,OAAKhgI,OAAOsa,cAAgB0lH,aAtNzCzvH,IAAM9qB,iCCqoClBk5H,GAAA,CAAE9wH,QAptCD,6CAotCUm1B,IAntCd,CACV,CACEi9G,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,OACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,WAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,UACRkK,KAAQ,WAEV,CACElK,KAAQ,SACRkK,KAAQ,YAGZlK,KAAQ,UACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,SAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,wBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,UACRkK,KAAQ,YAGZlK,KAAQ,uBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,cACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,qBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,MACRkK,KAAQ,WAEV,CACElK,KAAQ,MACRkK,KAAQ,WAEV,CACElK,KAAQ,SACRkK,KAAQ,YAGZlK,KAAQ,eACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,SAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,eACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,WACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,QACRkK,KAAQ,YAGZlK,KAAQ,sBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,UACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,iBACRkK,KAAQ,YAGZlK,KAAQ,kBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,eACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,cACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,eACRkK,KAAQ,YAGZlK,KAAQ,kBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,8BACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,qBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,aACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,QACRkK,KAAQ,YAGZlK,KAAQ,YACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,sBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,gBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,SACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,WAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,UACRkK,KAAQ,YAGZlK,KAAQ,sBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,iBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,MACRkK,KAAQ,WAEV,CACElK,KAAQ,SACRkK,KAAQ,YAGZlK,KAAQ,WACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,SAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,cACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,qBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,aACRkK,KAAQ,WAEV,CACElK,KAAQ,WACRkK,KAAQ,WAEV,CACElK,KAAQ,cACRkK,KAAQ,YAGZlK,KAAQ,QACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,kBACRkK,KAAQ,YAGZlK,KAAQ,mBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,sBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,UACRkK,KAAQ,YAGZlK,KAAQ,qBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,WAEV,CACElK,KAAQ,GACRkK,KAAQ,WAEV,CACElK,KAAQ,GACRkK,KAAQ,WAEV,CACElK,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,QACRkK,KAAQ,WAEV,CACElK,KAAQ,UACRkK,KAAQ,YAGZlK,KAAQ,YACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,eACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,uBACRkK,KAAQ,YAGZlK,KAAQ,wBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,oBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,QACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,qBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,2BACRkK,KAAQ,YAGZlK,KAAQ,oBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,GACVvkE,KAAQ,WACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,SAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,OACnB7wI,KAAQ,YAEV,CACEq6D,OAAU,CACR,CACEvkE,KAAQ,cACRkK,KAAQ,WAEV,CACElK,KAAQ,eACRkK,KAAQ,WAEV,CACElK,KAAQ,qBACRkK,KAAQ,WAEV,CACElK,KAAQ,+BACRkK,KAAQ,WAEV,CACElK,KAAQ,QACRkK,KAAQ,UAEV,CACElK,KAAQ,UACRkK,KAAQ,UAEV,CACElK,KAAQ,YACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,cACbu/E,gBAAmB,aACnB7wI,KAAQ,eAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,sBACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,cACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,eACRkK,KAAQ,YAGZlK,KAAQ,iBACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,SACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,aACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,aACRkK,KAAQ,YAGZlK,KAAQ,OACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,WACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,eACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,eACRkK,KAAQ,YAGZlK,KAAQ,SACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,WACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,eACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,iBACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,eACRkK,KAAQ,YAGZlK,KAAQ,SACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,QACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,WACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,cACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,iBACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,eACRkK,KAAQ,YAGZlK,KAAQ,cACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,aACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,WACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,cACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,mBACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,cACRkK,KAAQ,YAGZlK,KAAQ,kBACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,kBACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,kBACRkK,KAAQ,YAGZlK,KAAQ,kBACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,WACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,WACRkK,KAAQ,YAGZlK,KAAQ,WACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,iBACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,iBACRkK,KAAQ,YAGZlK,KAAQ,iBACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,uBACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,uBACRkK,KAAQ,YAGZlK,KAAQ,6BACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,2BACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,2BACRkK,KAAQ,YAGZlK,KAAQ,mBACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,QACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,eACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,mBACRkK,KAAQ,YAGZlK,KAAQ,kBACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,QACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,OACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,SACRkK,KAAQ,YAGZlK,KAAQ,UACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,OACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,KACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,SACRkK,KAAQ,YAGZlK,KAAQ,WACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE8wI,WAAa,EACbz2E,OAAU,CACR,CACE02E,SAAW,EACXj7I,KAAQ,QACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,UACRkK,KAAQ,WAEV,CACE+wI,SAAW,EACXj7I,KAAQ,SACRkK,KAAQ,YAGZlK,KAAQ,WACRw7D,UAAa,qEACbtxD,KAAQ,SAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,aACRkK,KAAQ,YAGZlK,KAAQ,OACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,eACRkK,KAAQ,YAGZlK,KAAQ,SACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,eACRkK,KAAQ,YAGZlK,KAAQ,mBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,eACRkK,KAAQ,YAGZlK,KAAQ,SACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,cACRkK,KAAQ,YAGZlK,KAAQ,cACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,WACRkK,KAAQ,WAEV,CACElK,KAAQ,cACRkK,KAAQ,YAGZlK,KAAQ,oBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,YAEV,CACE0wI,UAAY,EACZr2E,OAAU,CACR,CACEvkE,KAAQ,WACRkK,KAAQ,WAEV,CACElK,KAAQ,cACRkK,KAAQ,WAEV,CACElK,KAAQ,mBACRkK,KAAQ,YAGZlK,KAAQ,kBACR66I,QAAW,CACT,CACE76I,KAAQ,GACRkK,KAAQ,YAGZ4wI,SAAW,EACXt/E,UAAa,aACbu/E,gBAAmB,aACnB7wI,KAAQ,mCC/sCG0tH,GAAA,CAAEpvH,QAFD,6CAEUm1B,IADd,CAAC,CAACi9G,UAAW,EAAKr2E,OAAS,GAAGvkE,KAAO,OAAO66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,GAAGvkE,KAAO,OAAO66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,UAAU66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,SAAS4wI,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,SAASkK,KAAO,YAAYlK,KAAO,WAAW66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAKr2E,OAAS,GAAGvkE,KAAO,cAAc66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,eAAe66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,SAAS4wI,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAKr2E,OAAS,GAAGvkE,KAAO,WAAW66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAO66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAO66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,QAAQkK,KAAO,YAAYlK,KAAO,UAAU66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAKr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,YAAY66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAKr2E,OAAS,GAAGvkE,KAAO,UAAU66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,SAAS4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,aAAakK,KAAO,YAAYlK,KAAO,eAAe66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAKr2E,OAAS,GAAGvkE,KAAO,QAAQ66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAKr2E,OAAS,GAAGvkE,KAAO,SAAS66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAO66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAO66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,WAAW66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,SAAS4wI,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAO66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAO66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,GAAGvkE,KAAO,QAAQ66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAKr2E,OAAS,GAAGvkE,KAAO,YAAY66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,UAAU66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,SAAS4wI,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAKr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,YAAY66I,QAAU,CAAC,CAAC76I,KAAO,GAAGkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,OAAO7wI,KAAO,YAAY,CAAC0wI,UAAW,EAAMr2E,OAAS,CAAC,CAACvkE,KAAO,MAAMkK,KAAO,WAAW,CAAClK,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAO66I,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,YAAY,CAACq6D,OAAS,CAAC,CAACvkE,KAAO,UAAUkK,KAAO,YAAY4wI,SAAU,EAAMC,gBAAkB,aAAa7wI,KAAO,eAAe,CAAC8wI,WAAY,EAAMz2E,OAAS,CAAC,CAAC02E,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAMj7I,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAOkK,KAAO,SAAS,CAAC8wI,WAAY,EAAMz2E,OAAS,CAAC,CAAC02E,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAMj7I,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,OAAOkK,KAAO,SAAS,CAAC8wI,WAAY,EAAMz2E,OAAS,CAAC,CAAC02E,SAAU,EAAKj7I,KAAO,YAAYkK,KAAO,YAAYlK,KAAO,kBAAkBkK,KAAO,SAAS,CAAC8wI,WAAY,EAAMz2E,OAAS,CAAC,CAAC02E,SAAU,EAAKj7I,KAAO,QAAQkK,KAAO,YAAYlK,KAAO,cAAckK,KAAO,SAAS,CAAC8wI,WAAY,EAAKz2E,OAAS,CAAC,CAAC02E,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,UAAU,CAAC+wI,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAMj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAMj7I,KAAO,MAAMkK,KAAO,UAAUlK,KAAO,UAAUkK,KAAO,SAAS,CAAC8wI,WAAY,EAAMz2E,OAAS,CAAC,CAAC02E,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAMj7I,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,WAAWkK,KAAO,SAAS,CAAC8wI,WAAY,EAAMz2E,OAAS,CAAC,CAAC02E,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAKj7I,KAAO,MAAMkK,KAAO,WAAW,CAAC+wI,SAAU,EAAMj7I,KAAO,MAAMkK,KAAO,YAAYlK,KAAO,WAAWkK,KAAO,0FCkuElkL0B,GAptES,CACtB+pH,GAAG,CACDzD,KAAK,CACH9B,IAAI,CACFzyF,IAAIyyF,GACJnjH,MAAM,MACNrD,SAAS,GACTugB,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZ8Z,UAAU,CACRluI,MAAM,OAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEVL,UAAU,CACR,CACEyB,SAAS,GACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACX39B,KAAK,WACLwI,QAAQ,6CACRw3B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,QAMjBo+F,KAAK,CACH1yF,IAAI0yF,GACJpjH,MAAM,OACNrD,SAAS,EACTugB,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZ8Z,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEVL,UAAU,CACR,CACEyB,SAAS,GACTugB,SAAQ,EACRld,MAAM,QACN0wB,IAAIy9G,GAAOz9G,IACX39B,KAAK,WACLwI,QAAQ,6CACRw3B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,SAOnBogG,KAAK,IAIPuD,KAAK,CACH1D,KAAK,CACH9B,IAAI,CACFzyF,IAAIyyF,GACJnjH,MAAM,MACNrD,SAAS,GACTugB,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZ8Z,UAAU,CACRluI,MAAM,OAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,gHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,UACNjN,KAAK,iBACLwI,QAAQ,8CAEVw+B,aAAa,CACX,CACEhnC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,WACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,OAKf8K,kBAAkB,CAChB9vB,MAAM,UACN0wB,IAAIw7F,GACJn5H,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEgiB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACX39B,KAAK,WACLwI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACE0L,IAAI29G,GACJnxH,SAAQ,EACRnqB,KAAK,UACLwI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACE0L,IAAI8yF,GACJzwH,KAAK,OACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJzwH,KAAK,SACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,SACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI49G,GACJv7I,KAAK,MACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI09G,GACJr7I,KAAK,OACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,QAMjBo+F,KAAK,CACH1yF,IAAI0yF,GACJzmH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVw+B,aAAa,CACX,CACErJ,IAAI09G,GACJr7I,KAAK,OACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,YACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,OAKf8K,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJ7mH,SAAS,GACTugB,SAAQ,EACRnqB,KAAK,SACLiN,MAAM,UACNzE,QAAQ,6CACRw3B,UAAU,IAIZ,CACEhgC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,SACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,QAMjBmhG,KAAK,CACHxpH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJ7mH,SAAS,GACT5J,KAAK,SACLmqB,SAAQ,EACRld,MAAM,UACNzE,QAAQ,6CACRw3B,UAAU,MAMhBszF,KAAK,CACH1pH,SAAS,GACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBx7G,oBAAmB,EACnB3/B,MAAM,qBAENyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACEhgC,KAAK,SACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,UACNrD,SAAS,GACTo2B,UAAU,MAMhBqzF,KAAK,CACHzpH,SAAS,GACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBx7G,oBAAmB,EACnB3/B,MAAM,sBACNyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJtmG,SAAQ,EACRnqB,KAAK,SACLiN,MAAM,UACNzE,QAAQ,6CACRoB,SAAS,GACTo2B,UAAU,MAMhBwzF,KAAK,CACH71F,IAAI61F,GACJvmH,MAAM,OACNrD,SAAS,GACTugB,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZ8Z,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEVL,UAAU,CACR,CACEgiB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACX39B,KAAK,WACLwI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACE0L,IAAI8yF,GACJzwH,KAAK,SACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,MAMhBuzF,KAAK,CACH3pH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEgiB,SAAQ,EACRld,MAAM,QACN0wB,IAAIy9G,GAAOz9G,IACX39B,KAAK,WACLwI,QAAQ,6CACRoB,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACE0L,IAAI29G,GACJ1xI,SAAS,GACTqD,MAAM,QACNkd,SAAQ,EACRnqB,KAAK,UACLwI,QAAQ,6CACRw3B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACE0L,IAAI8yF,GACJzwH,KAAK,OACLmqB,SAAQ,EACRld,MAAM,QACNzE,QAAQ,6CACRoB,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJtmG,SAAQ,EACRnqB,KAAK,SACLiN,MAAM,UACNzE,QAAQ,6CACRoB,SAAS,GACTo2B,UAAU,MAMhByzF,IAAI,CACFhwG,QAAQ,GACRxW,MAAM,MACNrD,SAAS,GACTugB,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACV69G,YAAY,GACZN,mBAAkB,EAClBn7I,MAAM,mBACNwC,KAAK,wBACLiG,QAAQ,6CACRq3B,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEVL,UAAU,CACR,CACEw1B,IAAI89G,GACJ7xI,SAAS,GACTugB,SAAQ,EACRnqB,KAAK,QACLiN,MAAM,QACN+yB,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,KAGXzpB,QAAQ,8CAEV,CACEm1B,IAAI+9G,GACJ9xI,SAAS,GACT5J,KAAK,OACLiN,MAAM,OACNkd,SAAQ,EACR6V,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,KAGXzpB,QAAQ,gDAIdmrH,IAAI,CACFlwG,QAAQ,GACRxW,MAAM,MACNrD,SAAS,GACTugB,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACV69G,YAAY,GACZN,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACRq3B,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEVL,UAAU,CACR,CACEw1B,IAAI89G,GACJ7xI,SAAS,GACTugB,SAAQ,EACRnqB,KAAK,QACLiN,MAAM,QACN+yB,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,KAGXzpB,QAAQ,8CAEV,CACEm1B,IAAI+9G,GACJ9xI,SAAS,GACT5J,KAAK,OACLiN,MAAM,OACNkd,SAAQ,EACR6V,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,KAGXzpB,QAAQ,iDAKhB6pH,KAAK,CACHjC,IAAI,CACFzyF,IAAIyyF,GACJxmH,SAAS,GACTqD,MAAM,MACNkd,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZ8Z,UAAU,CACRluI,MAAM,OAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,cACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRmS,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,UACNjN,KAAK,gBACLwI,QAAQ,8CAEVw+B,aAAa,CACX,CACEhnC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,WACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,OAKf8K,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,UACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACEhgC,KAAK,MACLmqB,SAAQ,EACRwT,IAAI49G,GACJ/yI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACEhgC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,QAMjBo+F,KAAK,CACHzmH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRmS,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,iBACLwI,QAAQ,8CAEVw+B,aAAa,CACX,CACEhnC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,YACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,OAKf8K,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACEhgC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,SACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,QAMjBmhG,KAAK,CACHxpH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRmS,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,iBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,UACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,QAQpBs5E,EAAE,CACA4Y,KAAK,CACH9B,IAAI,CACFzyF,IAAIyyF,GACJnjH,MAAM,MACNrD,SAAS,GACTugB,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZ8Z,UAAU,CACRluI,MAAM,OAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,gHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,UACNjN,KAAK,iBACLwI,QAAQ,8CAEVw+B,aAAa,CACX,CACEhnC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,WACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,OAKf8K,kBAAkB,CAChB9vB,MAAM,UACN0wB,IAAIw7F,GACJn5H,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEgiB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACX39B,KAAK,WACLwI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACE0L,IAAI29G,GACJnxH,SAAQ,EACRnqB,KAAK,UACLwI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACE0L,IAAI8yF,GACJzwH,KAAK,OACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJzwH,KAAK,SACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,SACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI49G,GACJv7I,KAAK,MACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI09G,GACJr7I,KAAK,OACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,QAMjBo+F,KAAK,CACH1yF,IAAI0yF,GACJzmH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVw+B,aAAa,CACX,CACErJ,IAAI09G,GACJr7I,KAAK,OACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,YACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,OAKf8K,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJ7mH,SAAS,GACTugB,SAAQ,EACRnqB,KAAK,SACLiN,MAAM,UACNzE,QAAQ,6CACRw3B,UAAU,IAIZ,CACEhgC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,SACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,QAMjBmhG,KAAK,CACHxpH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJ7mH,SAAS,GACT5J,KAAK,SACLmqB,SAAQ,EACRld,MAAM,UACNzE,QAAQ,6CACRw3B,UAAU,MAMhBszF,KAAK,CACH1pH,SAAS,GACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBx7G,oBAAmB,EACnB3/B,MAAM,qBAENyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACEhgC,KAAK,SACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,UACNrD,SAAS,GACTo2B,UAAU,MAMhBqzF,KAAK,CACHzpH,SAAS,GACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBx7G,oBAAmB,EACnB3/B,MAAM,sBACNyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJtmG,SAAQ,EACRnqB,KAAK,SACLiN,MAAM,UACNzE,QAAQ,6CACRoB,SAAS,GACTo2B,UAAU,MAMhBwzF,KAAK,CACH71F,IAAI61F,GACJvmH,MAAM,OACNrD,SAAS,GACTugB,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZ8Z,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEVL,UAAU,CACR,CACEgiB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACX39B,KAAK,WACLwI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACE0L,IAAI8yF,GACJzwH,KAAK,SACLmqB,SAAQ,EACR3hB,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,MAMhBuzF,KAAK,CACH3pH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,gBACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRoD,QAAQ,iHACR+O,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEgiB,SAAQ,EACRld,MAAM,QACN0wB,IAAIy9G,GAAOz9G,IACX39B,KAAK,WACLwI,QAAQ,6CACRoB,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACE0L,IAAI29G,GACJ1xI,SAAS,GACTqD,MAAM,QACNkd,SAAQ,EACRnqB,KAAK,UACLwI,QAAQ,6CACRw3B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACE0L,IAAI8yF,GACJzwH,KAAK,OACLmqB,SAAQ,EACRld,MAAM,QACNzE,QAAQ,6CACRoB,SAAS,GACTo2B,UAAU,IAIZ,CACErC,IAAI8yF,GACJtmG,SAAQ,EACRnqB,KAAK,SACLiN,MAAM,UACNzE,QAAQ,6CACRoB,SAAS,GACTo2B,UAAU,MAMhByzF,IAAI,CACFhwG,QAAQ,GACRxW,MAAM,MACNrD,SAAS,GACTugB,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACV69G,YAAY,GACZN,mBAAkB,EAClBn7I,MAAM,mBACNwC,KAAK,wBACLiG,QAAQ,6CACRq3B,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEVL,UAAU,CACR,CACEw1B,IAAI89G,GACJ7xI,SAAS,GACTugB,SAAQ,EACRnqB,KAAK,QACLiN,MAAM,QACN+yB,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,KAGXzpB,QAAQ,8CAEV,CACEm1B,IAAI+9G,GACJ9xI,SAAS,GACT5J,KAAK,OACLiN,MAAM,OACNkd,SAAQ,EACR6V,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,KAGXzpB,QAAQ,8CAEV,CACEm1B,IAAI8yF,GACJ7mH,SAAS,GACTqD,MAAM,OACNkd,SAAQ,EACRnqB,KAAK,SACLggC,UAAU,GAEVx3B,QAAQ,gDAIdmrH,IAAI,CACFlwG,QAAQ,GACRxW,MAAM,MACNrD,SAAS,GACTugB,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACV69G,YAAY,CAAC,QACbN,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACRq3B,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEVL,UAAU,CACR,CACEw1B,IAAI89G,GACJ7xI,SAAS,GACTugB,SAAQ,EACRnqB,KAAK,QACLiN,MAAM,QACN+yB,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,KAGXzpB,QAAQ,8CAEV,CACEm1B,IAAI+9G,GACJ9xI,SAAS,GACT5J,KAAK,OACLiN,MAAM,OACNkd,SAAQ,EACR6V,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,KAGXzpB,QAAQ,iDAKhB6pH,KAAK,CACHjC,IAAI,CACFzyF,IAAIyyF,GACJxmH,SAAS,GACTqD,MAAM,MACNkd,SAAQ,EACR+wH,mBAAkB,EAClBn7I,MAAM,oBACNyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZ8Z,UAAU,CACRluI,MAAM,OAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,cACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRmS,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,UACNjN,KAAK,gBACLwI,QAAQ,8CAEVw+B,aAAa,CACX,CACEhnC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,WACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,OAKf8K,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,UACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACEhgC,KAAK,MACLmqB,SAAQ,EACRwT,IAAI49G,GACJ/yI,QAAQ,6CACRyE,MAAM,OACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACEhgC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,QAMjBo+F,KAAK,CACHzmH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACRib,QAAQ,CACNkxG,iBAAiB,KAEnBuL,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRmS,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,iBACLwI,QAAQ,8CAEVw+B,aAAa,CACX,CACEhnC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,YACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,OAKf8K,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,WACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,IAIZ,CACEhgC,KAAK,OACLmqB,SAAQ,EACRwT,IAAI09G,GACJ7yI,QAAQ,6CACRyE,MAAM,SACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,QACLiyB,OAAO,QAMjBmhG,KAAK,CACHxpH,SAAS,EACTqD,MAAM,OACNkd,SAAQ,EACRwT,IAAIi6F,GAAMj6F,IACVu9G,mBAAkB,EAClBn7I,MAAM,qBACNyI,QAAQ,6CACR03H,KAAK,CACHO,aAAa,QAEf0a,UAAU,CACRluI,MAAM,QAER4yB,KAAK,CACHlC,IAAIg6F,GACJ1qH,MAAM,eACNzE,QAAQ,8CAEV6zB,UAAU,CACRlS,SAAQ,EACRmS,YAAY,CACVqB,IAAI+6F,GACJzrH,MAAM,WACNjN,KAAK,iBACLwI,QAAQ,8CAEVu0B,kBAAkB,CAChBY,IAAIw7F,GACJlsH,MAAM,UACNjN,KAAK,kBACLwI,QAAQ,6CACRgrC,aAAa,GACbxT,UAAU,CACR,CACE72B,MAAM,UACNnJ,KAAK,wBAKbmI,UAAU,CACR,CACEnI,KAAK,WACLmqB,SAAQ,EACRwT,IAAIy9G,GAAOz9G,IACXn1B,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,qBACLiyB,OAAO,MAIb,CACEjyB,KAAK,UACLmqB,SAAQ,EACRwT,IAAI29G,GACJ9yI,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,CACRg1B,aAAa,CACXh1D,KAAK,aACLiyB,OAAO,MAIb,CACEjyB,KAAK,OACLmqB,SAAQ,EACRwT,IAAI8yF,GACJjoH,QAAQ,6CACRyE,MAAM,QACNrD,SAAS,GACTo2B,UAAU,oDCxoEPuV,GA7EW,CACxB1V,KAAK,CACHuwF,IAAI,CACFnjH,MAAM,MACNrD,SAAS,GACTiiB,SAAS,OACTvS,YAAY,SACZ9Q,QAAQ,6CACRmzC,IAAI,CACFhe,IAAIg+G,GACJ/xI,SAAS,GACT5J,KAAK,uBACLwI,QAAQ,8CAEVshE,SAAS,CACPnsC,IAAIi+G,GACJ57I,KAAK,6BAEP+pE,GAAG,CACDpsC,IAAIi6F,GACJhuH,SAAS,GACToiB,QAAQ,KACRgU,UAAU,CACR0xF,MAAM,QACNC,QAAQ,UACRluG,QAAQ,YACRmB,SAAS,cAEXg3B,WAAW,CACThyC,SAAS,GACT+zB,IAAIk+G,GACJ77I,KAAK,wCACLwI,QAAQ,8CAEVW,MAAM,aACNmQ,YAAY,SACZtZ,KAAK,0BACLiN,MAAM,0BACNzE,QAAQ,8CAEVwhE,GAAG,CACDrsC,IAAIi6F,GACJhuH,SAAS,GACToiB,QAAQ,KACRgU,UAAU,CACR0xF,MAAM,QACNC,QAAQ,UACRluG,QAAQ,YACRmB,SAAS,cAEXg3B,WAAW,CACThyC,SAAS,GACT+zB,IAAIk+G,GACJ77I,KAAK,wCACLwI,QAAQ,8CAEVW,MAAM,aACNmQ,YAAY,SACZtZ,KAAK,0BACLiN,MAAM,0BACNzE,QAAQ,iDChBCszI,GAhDgB,CAC7BtlI,YAAa,CACX+W,QAAS,+BACT4H,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACThzB,KAAM,eAERw5I,QAAS,CACPxuH,QAAS,6BACT4H,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACThzB,KAAM,eAERyiB,QAAS,CACPuI,QAAS,iCACT4H,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACThzB,KAAM,eAERy5I,UAAW,CACTzuH,QAAS,wBACT4H,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACThzB,KAAM,eAERijB,QAAS,CACP+H,QAAS,6BACTgI,QAAS,UACThzB,KAAM,eAER4T,MAAO,CACLoX,QAAS,0BACT4H,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACThzB,KAAM,UCoJG05I,8MA1LbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACPt9I,OAAO8B,KAAKw7I,GAAgBv7I,SAC1B/B,OAAO8B,KAAKy7I,GAAmBx7I,UAKrCy7I,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAYz9I,OAAO8B,KAAKy7I,GAAmBrvI,OAAO,SAAA1J,GACtD,OAAQxE,OAAO8B,KAAKw7I,GAAgBv0H,SAASvkB,KAE/C,OAAO+4I,EAAkBE,GAEzB,OAAOz9I,OAAO8B,KAAKy7I,GAAmBtqI,IAAI,SAAAzO,GACxC,OAAO+4I,EAAkB/4I,QAM/Bk5I,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2Bv9I,OAAO8B,KAAKw7I,GACpCrqI,IAAI,SAAAzO,GACH,OACE84I,EAAe94I,GAAKw1I,cAAgBuD,EAAkB/4I,GAAKw1I,YAEpDuD,EAAkB/4I,GAElB,OAGV0J,OAAO,SAAAyvI,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAArzI,OAAMozI,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAIpvI,EAAK,KACL6vI,EAAY,GACZC,EAAS,GAEb,GAAIx8I,EAAK47I,uBAAuBC,EAAgBC,GAC9CpvI,EAAK1M,EAAK+7I,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAYv8I,EAAKi8I,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAASx8I,EAAKm8I,6BACZI,EAAUtxF,QACV4wF,GAMAU,EAAUxvI,SAAWyvI,EAAOzvI,SAC9BL,EAAK6vI,GAGT,OAAO7vI,KAIT+vI,0BAA4B,SAAAp4I,GAC1B,IAAIqI,EAAK,KACLnO,OAAO8B,KAAKL,EAAKf,MAAMwD,cAAcnC,SACvCoM,EAAK1M,EAAKs8I,sBACRj4I,EAAU5B,aACVzC,EAAKf,MAAMwD,eAIXiK,GACF1M,EAAK08I,qBAAqBhwI,MAI9BgwI,qBAAuB,SAAAhmI,GAGrB,IAAIimI,EAAY38I,EAAK48I,wBAAwBlmI,GAC7CimI,EAAU7nH,WAAa90B,EAAKf,MAAMoM,UAClCsxI,EAAUE,WAAY,EAItBxiI,OAAOsa,cAAcC,WAAW,IAAK+nH,MAGvCC,wBAA0B,SAAAlmI,GACxB,IAAIomI,EAAuB,GAG3B,OAFapmI,EAAY3J,QAGvB,IAAK,cACH+vI,EAAuBtB,GAAyBtlI,YAChD,MACF,IAAK,UACH4mI,EAAuBtB,GAAyBC,QAChD,MACF,IAAK,UACHqB,EAAuBtB,GAAyB92H,QAChD,MACF,IAAK,YACHo4H,EAAuBtB,GAAyBE,UAChD,MACF,IAAK,UACHoB,EAAuBtB,GAAyBt2H,QAChD,MACF,IAAK,QACH43H,EAAuBtB,GAAyB3lI,MAOpD,IAAIknI,EAAoB,GACxB,OAAQrmI,EAAY+hB,QAClB,IAAK,kBACHskH,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoBrmI,EAAY+hB,OAAOukH,OAAO,GAAGhrI,cAAgB0E,EAAY+hB,OAAOzd,OAAO,GAM/F,IAAIiiI,GAFJH,EAAuB/xI,KAAKgP,MAAMhP,KAAKC,UAAU8xI,KAEX7vH,QAAQokB,QAAQ,WAAW0rG,GAMjE,OALAE,EAAaA,EAAWD,OAAO,GAAGhrI,cAAgBirI,EAAWjoI,MAAM,GACnE8nI,EAAqB7vH,QAAUgwH,EAC/BH,EAAqBD,WAAY,EACjCC,EAAqBhoH,WAAa90B,EAAKf,MAAMoM,UAEtCyxI,qFAGUz4I,EAAWC,GAC5BtF,KAAKy9I,0BAA0Bp4I,oCAI/B,OACE8hB,EAAA/mB,EAAAC,cAAA,WACE8mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAa2yH,SAAd,CAAuB7uG,IAAK,SAAAmwG,GAAI,OAAKhgI,OAAOsa,cAAgB0lH,aAtLjCzvH,IAAM9qB,WCsBnCo9I,GAAUtyH,IAAMuyH,KAAK,kBAAM99H,EAAA7Z,EAAA,GAAAqoG,KAAAxuF,EAAAsO,KAAA,cAC3ByvH,GAAYxyH,IAAMuyH,KAAK,kBAAMxmI,QAAAqD,IAAA,CAAAqF,EAAA7Z,EAAA,GAAA6Z,EAAA7Z,EAAA,GAAA6Z,EAAA7Z,EAAA,KAAAqoG,KAAAxuF,EAAAsO,KAAA,cAC7B0vH,GAAazyH,IAAMuyH,KAAK,kBAAMxmI,QAAAqD,IAAA,CAAAqF,EAAA7Z,EAAA,GAAA6Z,EAAA7Z,EAAA,KAAAqoG,KAAAxuF,EAAAsO,KAAA,cAi+BrB2vH,8MA99Bb95I,MAAQ,CACN4uB,QAAQ,KACRzD,WAAW,GACXqF,SAAU,KACVupH,WAAW,KACXC,YAAa,IACbp8G,MAAO,UACP/1B,UAAU,QACVoyI,YAAY,EACZ34I,YAAa,KACb44I,aAAc,KACd7wF,cAAe,KACfy8C,cAAe,KACf/kG,cAAe,KACfo5I,cAAcp7I,IACd2rI,eAAe,KACfnB,eAAgB,KAChBzhI,gBAAiB,KACjBsyI,gBAAgB,EAChB1uI,iBAAkB,KAClB2uI,kBAAmB,KACnB9H,mBAAoB,KACpBp3I,MAAO0b,OAAO4O,WACd2kB,oBAAqB,KACrBhvC,OAAQyb,OAAOkQ,YACfuzH,uBAAwB,KACxBvK,0BAA0B,KAI5BxvI,cAAgB,OAShBg6I,kBAAoB,SAACv4I,GACfA,GACFA,EAAEiwB,iBAEJz1B,EAAK4E,SAAS,CACZi5I,kBAAkB,UAItBG,iBAAmB,SAAC/+I,GAClBe,EAAK4E,SAAS,CACZi5I,kBAAkB5+I,OAItBg/I,mBAAqB,SAACh/I,EAAMoF,OAyB5BwtE,qCAAkB,SAAAx7D,IAAA,IAAA1R,EAAAgqB,EAAAuvH,EAAA7yH,EAAArd,UAAA,OAAAwb,EAAApqB,EAAAgN,KAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,cAAO5H,EAAP0mB,EAAA/qB,OAAA,QAAAgrB,IAAAD,EAAA,GAAAA,EAAA,GAAgB,KAE1BsD,EAFUpwB,OAAAsmD,EAAA,EAAAtmD,CAAA,GAEOyB,EAAKwD,MAAMmrB,YAClCpwB,OAAO8B,KAAKsuB,GAAYpuB,QAAS,SAAAwC,GAEH,OADf4rB,EAAW5rB,GACfgvE,uBACApjD,EAAW5rB,KAKlBm7I,EAAmBl+I,EAAK+D,cAAcyhD,cAAc,cACxDjnD,OAAO8B,KAAK69I,GAAkB39I,QAAS,SAAAwC,GAEH,OADfm7I,EAAiBn7I,GACrBgvE,uBACNmsE,EAAiBn7I,KAI5B/C,EAAK+D,cAAcmW,gBAAgB,aAAagkI,GAAiB,GAnBjD3nI,EAAAhK,KAAA,EAqBVvM,EAAK4E,SAAS,CAClB+pB,cACA,WACwB,oBAAbhqB,GACTA,MAzBY,cAAA4R,EAAAgB,OAAA,UA4BT,GA5BS,wBAAAhB,EAAA1I,SAAAwI,EAAArX,WA+BlB4vB,cAAgB,SAAC7rB,EAAII,GAAwC,IAAnCgxC,EAAmCnmC,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAA/B,KAAK8jE,EAA0B9jE,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,IAAAA,UAAA,GAE3DjL,EAAMA,EAAIoF,cACV,IAAMg2I,EAAiBn+I,EAAKwD,MAAMmrB,WAAW5rB,GACvCmvC,EAAchlC,SAASiB,KAAK+yC,MAAM,KAIpC91B,GAAS,EAEb,IAJoB+yH,GAAuD,OAAlCA,EAAepsE,gBAA2BosE,EAAepsE,gBAAgB7/B,GAAgBnnC,KAAKC,UAAUmzI,EAAeh7I,QAAU4H,KAAKC,UAAU7H,GAI1K,CACb,IAAM4uE,EAAiB59B,EAAMjC,EAAaiC,EAAO,KAGjD,GAAI29B,EAAgB,CAClB,IAAIosE,EAAmBl+I,EAAK+D,cAAcyhD,cAAc,cACnD04F,IACHA,EAAmB,IAKrBA,EAAgB3/I,OAAAsmD,EAAA,EAAAtmD,CAAA,GACX2/I,EADW3/I,OAAAkrH,EAAA,EAAAlrH,CAAA,GAEbwE,EAAK,CACJI,OACA4uE,oBAIJ/xE,EAAK+D,cAAcmW,gBAAgB,aAAagkI,GAAiB,GAInEl+I,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5BqqB,WAAWpwB,OAAAsmD,EAAA,EAAAtmD,CAAA,GACN+F,EAAUqqB,WADLpwB,OAAAkrH,EAAA,EAAAlrH,CAAA,GAEPwE,EAAK,CACJI,OACA4uE,sBAGH,WACD13D,OAAOsU,WAAa3uB,EAAKwD,MAAMmrB,aAGjCvD,GAAS,EAGX,OAAOA,KAGT4qH,sBAAwB,SAACD,GACvB/1I,EAAK4E,SAAS,CACZmxI,0BAIJnpF,iBAAmB,SAACC,GAEdA,IAAkBA,EAAc1kD,cAAckgC,MAAM,gBACtDwkB,EAAgB,MAGdA,IAAkB7sD,EAAKwD,MAAMqpD,eAC/B7sD,EAAK4E,SAAS,CACZioD,gBACA0mF,0BAAyB,OAqP/B7lH,uBAAyB,WACvB,IAAMhpB,EAAW,CACf/F,MAAMqB,EAAKwD,MAAM7E,MACjBC,OAAOoB,EAAKwD,MAAM5E,QAGdw/I,EAAe/jI,OAAO4O,aAAejpB,EAAKwD,MAAM7E,MAChD0/I,EAAgBhkI,OAAOkQ,cAAgBvqB,EAAKwD,MAAM5E,OAExD,OAAIw/I,GAAgBC,GACdD,IACF15I,EAAS/F,MAAQ0b,OAAO4O,YAEtBo1H,IACF35I,EAAS9F,OAASyb,OAAOkQ,aAEpBvqB,EAAK4E,SAASF,IAGhB,QAITuoD,OAASxkD,IAAc2pB,mFA7ZjBpzB,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,KAAclF,KAAKC,iFAmJhCuG,EAAG84I,4FACVt/I,KAAK4F,SAAS,SAAApB,GAAK,OAAAjF,OAAAsmD,EAAA,EAAAtmD,CAAA,GAASiF,EAAT,CAAgBg6I,YAAac,8RAIjD55I,EAAW,GACXkpC,EAAsB,GACtB8R,EAAkB1gD,KAAKwE,MAAM4uB,SAAWpzB,KAAKwE,MAAM4uB,QAAQ24G,iBAAoB/rI,KAAKwE,MAAM4uB,QAAQmiB,QAAQtxC,IAAMjE,KAAKwE,MAAM4uB,QAAQuO,SAAS19B,GAAMwF,IAAc2pB,QAAQstB,gBAK9KnhD,OAAO8B,KAAKiL,GAAgBo0C,IAAkBn/C,QAAQ,SAAC4oC,GACrDyE,EAAoBzE,GAAY5qC,OAAO8B,KAAKiL,GAAgBo0C,GAAiBvW,IAAWqQ,OAAQ,SAACvuC,EAAc0B,GAC7G,IAAM7H,EAAcwG,GAAgBo0C,GAAiBvW,GAAUx8B,GACzD4xI,GAAcz5I,EAAYo2I,cAAgBp2I,EAAYo2I,YAAY56I,QAAUwE,EAAYo2I,YAAY5zH,SAAS7iB,EAAKjB,MAAM+5I,YAI9H,OAHIz4I,EAAY+kB,SAAW00H,IACzBtzI,EAAc0B,GAAS7H,GAElBmG,GACP,MAGJvG,EAASkpC,oBAAsBA,GAGzB1+B,EAAmBlQ,KAAKwE,MAAM0L,mBACZ0+B,EAAoB1+B,KAC1CxK,EAAS4G,gBAAkBsiC,EAAoB1+B,IAGzC3K,EAAgBvF,KAAKwE,MAAMe,gBACZG,EAAS4G,gBAAgB/G,KAC5CG,EAASI,YAAcJ,EAAS4G,gBAAgB/G,cAM9CvF,KAAK4F,SAASF,sLAGCwK,EAAiB3K,yFAEhCI,EAAW,WACfc,EAAK+4I,uBAGD95I,EAAW,CACfI,YAAaP,EAAuBvF,KAAKwE,MAAMsB,YAAlB,KAC7BwG,gBAAiB/G,EAAuBvF,KAAKwE,MAAM8H,gBAAlB,KACjC/G,cAAeA,EAA+BvF,KAAKwE,MAAMe,cAA1BA,EAC/B2K,iBAAkBA,EAAqClQ,KAAKwE,MAAM0L,iBAA7BA,GAGnCA,GAAoBlQ,KAAKwE,MAAMoqC,qBAAuB1+B,IAAqBlQ,KAAKwE,MAAM0L,kBAAoB3Q,OAAO8B,KAAKrB,KAAKwE,MAAMoqC,qBAAqBtmB,SAASpY,EAAiB/G,iBAClLzD,EAASwK,iBAAmBA,EAAiB/G,eAG3C5D,GAAiBA,IAAkBvF,KAAKwE,MAAMe,gBAC3CvF,KAAKwE,MAAM8H,iBAAmB/M,OAAO8B,KAAKrB,KAAKwE,MAAM8H,iBAAiBgc,SAAS/iB,EAAcyN,gBAChGtN,EAASH,cAAgBA,EAAcyN,cACvCtN,EAASI,YAAc9F,KAAKwE,MAAM8H,gBAAgB/G,IACzCvF,KAAKwE,MAAMoqC,qBAAuBrvC,OAAO8B,KAAKrB,KAAKwE,MAAMoqC,oBAAoB1+B,IAAmBoY,SAAS/iB,EAAcyN,iBAChItN,EAASH,cAAgBA,EAAcyN,cACvCtN,EAASI,YAAc9F,KAAKwE,MAAMoqC,oBAAoB1+B,GAAkBxK,EAASH,eACjFG,EAAS4G,gBAAkBtM,KAAKwE,MAAMoqC,oBAAoB1+B,cAMxDlQ,KAAK4F,SAASF,EAASC,oLAGbuK,mFAEVvK,EAAW,WACfi0B,EAAK4lH,wBAGHtvI,GAAoBA,IAAqBlQ,KAAKwE,MAAM0L,mBAAoB3Q,OAAO8B,KAAKrB,KAAKwE,MAAMoqC,qBAAqBtmB,SAASpY,EAAiB/G,sCAChJ+G,EAAmBA,EAAiB/G,uBAC9BnJ,KAAK4F,SAAS,CAClBsK,oBACAvK,oCACQuK,oCACJlQ,KAAK4F,SAAS,CAClBsK,oBACAvK,gLAISJ,qFAEPI,EAAW,WACfiqG,EAAK4vC,wBAGHj6I,GAAiBA,IAAkBvF,KAAKwE,MAAMe,gBAAiBhG,OAAO8B,KAAKrB,KAAKwE,MAAM8H,iBAAiBgc,SAAS/iB,EAAcyN,sCAChIzN,EAAgBA,EAAcyN,eACxBtN,EAAW,CACfH,kBAEOO,YAAc9F,KAAKwE,MAAM8H,gBAAgB/G,YAC5CvF,KAAK4F,SAASF,EAASC,oCACpBJ,oCACHvF,KAAK4F,SAAS,CAClBL,gBACAO,YAAY,MACZH,kQAMJ0V,OAAOw3D,gBAAkB7yE,KAAK6yE,gBAE9B7yE,KAAKmF,YAELkW,OAAOzN,MAAQ5N,KAAK+E,cAAc6I,MAGbyN,OAAOo4B,SAASuG,OAAO7wC,cAAcmf,SAAS7e,IAAckmD,QAAQxmD,iBAEvFkS,OAAO8W,QAAQtb,MAAQ,aACvBwE,OAAO8W,QAAQstH,KAAO,cAGxBpkI,OAAOitB,OAASA,IAEZjtB,OAAOR,eACT7a,KAAK+E,cAAckzD,iBAAiB,WAGpBj4D,KAAK+E,cAAcyhD,cAAc,WAAU,KAC3C/8C,IAAcy4D,UAC5BliE,KAAK+E,cAAc6yD,gBAAgB,CAAC,iBAAiB,gBAAgB,cACrE53D,KAAK+E,cAAcmW,gBAAgB,UAAUzR,IAAcy4D,YAIzD71D,EAAYrM,KAAK+E,cAAcyhD,cAAc,aAAY,KAE7DxmD,KAAK0/I,aAAarzI,GAGpBgP,OAAOskI,YAAc,SAAC31H,GAEpB,IADA,IAAM41H,EAAU9wH,SAAS+wH,qBAAqB,UACrC92I,EAAE,EAAEA,EAAE62I,EAAQt+I,OAAOyH,IAAI,CAChC,IAAM+2I,EAASF,EAAQ72I,GACnB+2I,EAAOC,gBAAkB/1H,GAC3B3O,OAAOitB,OAAOw3G,GAAQE,QAAQ,qBAAqB,GAAGxb,WAK5DnpH,OAAOoT,iBAAiB,SAAUzuB,KAAK0uB,wBAEvC1uB,KAAKigJ,oBACLjgJ,KAAKkgJ,6KAGiB,IAAAtrC,EAAA50G,KAEhBu+I,EADSv+I,KAAK+E,cAAc2qD,iBACN,OAAS,OACrC1vD,KAAK4F,SAAS,CACZ24I,cACA,WACA3pC,EAAK4qC,oEAKP,IAAKx/I,KAAKwE,MAAMqpD,eAES,WADA7tD,KAAK+E,cAAcitD,kBAAkB,UAC5B,CAC9B,IAAMnE,EAAgB7tD,KAAK+E,cAAc4oD,mBACrCE,GAAiBA,IAAkB7tD,KAAKwE,MAAMqpD,eAChD7tD,KAAK4F,SAAS,CACZioD,kEAQRxyC,OAAOuT,oBAAoB,SAAU5uB,KAAK0uB,mEAGzBrpB,EAAUC,GAI3B,GAHAtF,KAAKmF,YAEyBG,EAAU4pI,iBAAmBlvI,KAAKwE,MAAM0qI,eAEpE,GAAkC,YAA9BlvI,KAAKwE,MAAM0qI,eACblvI,KAAK0/I,aAAa,SAAQ,OACrB,CAEL,IAAMrzI,EAAYrM,KAAK+E,cAAcyhD,cAAc,aAAY,IAAUxmD,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY,QAAQ,SACjI5R,KAAK0/I,aAAarzI,GAItB,IAAMwgB,EAAevnB,EAAUC,gBAAkBvF,KAAKwE,MAAMe,cACtD46I,EAAkB76I,EAAU4K,mBAAqBlQ,KAAKwE,MAAM0L,iBAC5DkwI,EAAiBr0I,KAAKC,UAAU1G,EAAU8tB,WAAarnB,KAAKC,UAAUhM,KAAKwE,MAAM4uB,UAEnFvG,GAAgBszH,GAAmBC,IACrCpgJ,KAAKw/I,kEAcP,GAHAnkI,OAAO2jI,iBAAmBh/I,KAAKg/I,iBAC/B3jI,OAAO0jI,kBAAoB/+I,KAAK++I,kBAE5BlkI,aAAa,CACf,IAAIyvF,EAAgBzvF,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChGizH,EAAiBlzH,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAGlFO,OAAOo4B,SAASv2B,KAAKoL,SAAS,mBAEjDgiF,EAAgB,aAChByjC,EAAiB,UAInB/tI,KAAK8tI,aAAaxjC,EAAcyjC,sCA6B1B3rG,GACR,OAAOpiC,KAAK4F,SAAS,CAAEw8B,gDAGX57B,GAIZ,OAHIA,GACFA,EAAEiwB,iBAEGz2B,KAAK4F,SAAS,CACnBovB,SAAS,KACT4pH,gBAAe,yCAINp4I,EAAEwuB,GAGb,OAFAxuB,EAAEiwB,iBAEKz2B,KAAK4F,SAAS,CACnBovB,WACA4pH,gBAAe,wJAMjB5+I,KAAK4F,SAAS,CACZioD,cAAc,OAGhB7tD,KAAK6yE,gBAAgB,WAEnBiiC,EAAK/vG,cAAc6yD,gBAAgB,CAAC,UAAU,YAAY,YAAY,sJAI/DxkC,GACTpzB,KAAK4F,SAAS,CACZwtB,iDAISk3E,EAAcyjC,GAAe,IAAA50B,EAAAn5G,KAEpC6uI,EAAgBplI,IAAcyjH,WAAW5iB,EAAcnhG,eAO3D,IANK0lI,GAAiBd,IACpBc,EAAgBplI,IAAcyjH,WAAW6gB,EAAe5kI,gBAKpD0lI,IAAkBA,EAAchkH,SAA+B,aAAlBy/E,IAAiC/qG,OAAO8B,KAAKoI,IAAcyjH,YAAY5kG,SAASgiF,EAAcnhG,gBAAoB4kI,IAAmBxuI,OAAO8B,KAAKoI,IAAcyjH,YAAY5kG,SAASylH,EAAe5kI,eACpPmhG,EAAgB,SAChByjC,EAAiB,cACZ,GAAuB,aAAlBzjC,EAA8B,CACxC,IAAM+1C,EAAc5T,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQgB,GACN,IAAK,YACEsS,GAAetT,IAClBgB,EAAiB,UAErB,MACA,IAAK,UACEhB,GAAasT,IAChBtS,EAAiB,aAazB,OAHA/tI,KAAK+E,cAAcmW,gBAAgB,gBAAiBovF,GACpDtqG,KAAK+E,cAAcmW,gBAAgB,iBAAkB6yH,GAE9C/tI,KAAK4F,SAAS,CACnB0kG,gBACAyjC,kBACA,WACA50B,EAAK8mC,2DAII5zI,GAAqB,IAAXi0I,IAAWtxI,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,KAAAA,UAAA,GAC5B2vI,EAAgB,KAGdvyB,EAAkBpsH,KAAK+E,cAAc6M,gBAAgB,CAAC,YAAY,QAAQ,oBAKhF,OAJkB,SAAdvF,GAAyB+/G,IAC3B//G,EAAY,SAGNA,GACN,QACA,IAAK,QACHsyI,EAAgBp7I,IAClB,MACA,IAAK,OACHo7I,EAAgB4B,EAIhBD,GACFtgJ,KAAK+E,cAAcmW,gBAAgB,YAAY7O,GAGjDrM,KAAK4F,SAAS,CACZyG,YACAsyI,4DAIczP,GAChBlvI,KAAK4F,SAAS,CACZspI,oDAIK,IAAAsR,EAAAxgJ,KACD8C,EAAW9C,KAAKwE,MAAM7E,OAAS,IAC/B06I,EAAoBr6I,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa,YAIrE6uI,EACJt5H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP0vB,UAAW,QACX7sB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBW,gBAAiB,YAEjB8jB,EAAA/mB,EAAAC,cAAC0iC,GAAA,EAAD,CACEn/B,UAAW,CACT4sG,SAAS,EACTvvG,WAAW,GAEbob,YAAa,CACX/X,GAAG,EACH1D,KAAK,OACLH,MAAM,WAER8b,UAAW,CACTha,GAAG,EACHE,cAAc,UAEhBoB,KAAM,MAKZ,OACEsjB,EAAA/mB,EAAAC,cAAC8vI,GAAA,EAAD,KACEhpH,EAAA/mB,EAAAC,cAACk6I,GAAD,MACApzH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7jB,MAAOvD,KAAKwE,MAAMm6I,eAElBx3H,EAAA/mB,EAAAC,cAACqgJ,EAAAtgJ,EAAD,CACEugJ,QAASjK,IACTxpB,WAAYA,GACZ0zB,YAAa,WAEbz5H,EAAA/mB,EAAAC,cAACwgJ,EAAA,aAAD,KACG,SAAAjT,GACC,OACEzmH,EAAA/mB,EAAAC,cAACygJ,GAAD,CACElT,QAASA,EACT9qI,SAAUA,EACVmrD,OAAQuyF,EAAKvyF,OACbi/D,WAAYA,GACZ3pH,MAAOi9I,EAAKh8I,MAAMm6I,cAClBhvH,WAAY6wH,EAAKh8I,MAAMmrB,WACvBsmB,kBAAmBA,GACnBnwC,YAAa06I,EAAKh8I,MAAMsB,YACxBiwI,WAAYyK,EAAKzK,WAAWpnH,KAAK6xH,GACjC3yF,cAAe2yF,EAAKh8I,MAAMqpD,cAC1BtoD,cAAei7I,EAAKh8I,MAAMe,cAC1B+kG,cAAek2C,EAAKh8I,MAAM8lG,cAC1ByjC,eAAgByS,EAAKh8I,MAAMupI,eAC3BD,aAAc0S,EAAK1S,aAAan/G,KAAK6xH,GACrCl0I,gBAAiBk0I,EAAKh8I,MAAM8H,gBAC5BsjB,cAAe4wH,EAAK5wH,cAAcjB,KAAK6xH,GACvC3tE,gBAAiB2tE,EAAK3tE,gBAAgBlkD,KAAK6xH,GAC3CzJ,mBAAoByJ,EAAKh8I,MAAMuyI,mBAC/BnoG,oBAAqB4xG,EAAKh8I,MAAMoqC,oBAChCooG,sBAAuBwJ,EAAKxJ,sBAAsBroH,KAAK6xH,GACvDjM,yBAA0BiM,EAAKh8I,MAAM+vI,0BAErCptH,EAAA/mB,EAAAC,cAACygJ,GAAW1G,SAAZ,KACG,SAAAjqI,GAmCK,IAlCJ+H,EAkCI/H,EAlCJ+H,KACAi3G,EAiCIh/G,EAjCJg/G,OACA/7F,EAgCIjjB,EAhCJijB,QACA5mB,EA+BI2D,EA/BJ3D,QACAqnI,EA8BI1jI,EA9BJ0jI,SACA1hF,EA6BIhiD,EA7BJgiD,SACAzzB,EA4BIvuB,EA5BJuuB,SACAyT,EA2BIhiC,EA3BJgiC,UACAz6B,EA0BIvH,EA1BJuH,YACAm5H,EAyBI1gI,EAzBJ0gI,YACAvyG,EAwBInuB,EAxBJmuB,aACA76B,EAuBI0M,EAvBJ1M,aACA4uD,EAsBIliD,EAtBJkiD,aACAshF,EAqBIxjI,EArBJwjI,aAEAC,GAmBIzjI,EApBJc,cAoBId,EAnBJyjI,gBAEA5B,GAiBI7hI,EAlBJ4wI,eAkBI5wI,EAjBJ6hI,iBACAmC,EAgBIhkI,EAhBJgkI,iBACAhC,EAeIhiI,EAfJgiI,iBACA5zG,EAcIpuB,EAdJouB,iBACArI,EAaI/lB,EAbJ+lB,kBACA49G,EAYI3jI,EAZJ2jI,kBACAI,EAWI/jI,EAXJ+jI,mBACAH,EAUI5jI,EAVJ4jI,oBACAtB,EASItiI,EATJsiI,oBACA4B,EAQIlkI,EARJkkI,oBACAz1E,EAOIzuD,EAPJyuD,qBACA01E,EAMInkI,EANJmkI,qBACAnnH,EAKIhd,EALJgd,qBACAqnH,EAIIrkI,EAJJqkI,uBACAJ,EAGIjkI,EAHJikI,yBACAt5G,EAEI3qB,EAFJ2qB,0BACA/H,EACI5iB,EADJ4iB,0BAEA,OACA5L,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,KACED,EAAA/mB,EAAAC,cAAC2gJ,GAAA,EAAD,KACE75H,EAAA/mB,EAAAC,cAAC2gJ,GAAA,EAAD,CACE93H,KAAK,kDACLqN,OACE,SAACt2B,GAAD,OACEknB,EAAA/mB,EAAAC,cAAC4gJ,EAAA,SAAD,CACEC,SAAUT,GAEVt5H,EAAA/mB,EAAAC,cAAC+9I,GAAD7+I,OAAAC,OAAA,GACMS,EADN,CAEEiY,KAAMA,EACNi3G,OAAQA,EACR/7F,QAASA,EACTw6G,QAASA,EACTphI,QAASA,EACT20I,aAAa,EACbtN,SAAUA,EACVn1G,SAAUA,EACV57B,SAAUA,EACVqvD,SAAUA,EACVhgB,UAAWA,EACX0+F,YAAaA,EACb8C,aAAcA,EACdthF,aAAcA,EACd/zB,aAAcA,EACd76B,aAAcA,EACduxB,SAAUwrH,EAAKh8I,MAAMwwB,SACrBqyG,OAAQmZ,EAAKnZ,OAAO14G,KAAK6xH,GACzB5M,eAAgBA,EAChBvnI,UAAWm0I,EAAKh8I,MAAM6H,UACtB9I,MAAOi9I,EAAKh8I,MAAMm6I,cAClB3M,gBAAiBA,EACjByM,WAAY+B,EAAKh8I,MAAMi6I,WACvB9uH,WAAY6wH,EAAKh8I,MAAMmrB,WACvByxH,SAAUZ,EAAKY,SAASzyH,KAAK6xH,GAC7BrO,iBAAkBA,EAClB5zG,iBAAkBA,EAClB41G,iBAAkBA,EAClBruI,YAAa06I,EAAKh8I,MAAMsB,YACxBmwC,kBAAmBA,GACnB/f,kBAAmBA,EACnB49G,kBAAmBA,EACnBI,mBAAoBA,EACpB3uI,cAAei7I,EAAKh8I,MAAMe,cAC1B+kG,cAAek2C,EAAKh8I,MAAM8lG,cAC1B+2C,YAAab,EAAKa,YAAY1yH,KAAK6xH,GACnC/N,oBAAqBA,EACrBsB,oBAAqBA,EACrBM,oBAAqBA,EACrBtG,eAAgByS,EAAKh8I,MAAMupI,eAC3B6Q,eAAgB4B,EAAKh8I,MAAMo6I,eAC3BhgF,qBAAsBA,EACtBzxC,qBAAsBA,EACtBm0H,aAAcd,EAAKc,aAAa3yH,KAAK6xH,GACrClM,qBAAsBA,EACtBiN,gBAAiBf,EAAKgB,UAAU7yH,KAAK6xH,GACrC1S,aAAc0S,EAAK1S,aAAan/G,KAAK6xH,GACrCd,aAAcc,EAAKd,aAAa/wH,KAAK6xH,GACrCl0I,gBAAiBk0I,EAAKh8I,MAAM8H,gBAC5Bm1I,cAAejB,EAAKiB,cAAc9yH,KAAK6xH,GACvC5wH,cAAe4wH,EAAK5wH,cAAcjB,KAAK6xH,GACvCtwI,iBAAkBswI,EAAKh8I,MAAM0L,iBAC7BskI,uBAAwBA,EACxB3hE,gBAAiB2tE,EAAK3tE,gBAAgBlkD,KAAK6xH,GAC3Cj7B,iBAAkBi7B,EAAKj7B,iBAAiB52F,KAAK6xH,GAC7CpM,yBAA0BA,EAC1BxlG,oBAAqB4xG,EAAKh8I,MAAMoqC,oBAChCkhG,kBAAmB0Q,EAAK1Q,kBAAkBnhH,KAAK6xH,GAC/C1lH,0BAA2BA,EAC3B/H,0BAA2BA,EAC3BikH,sBAAuBwJ,EAAKxJ,sBAAsBroH,KAAK6xH,UAQ/DnG,GACElzH,EAAA/mB,EAAAC,cAAC2gJ,GAAA,EAAD,CACE93H,KAAK,kCACLqN,OACE,SAACt2B,GAAD,OACEknB,EAAA/mB,EAAAC,cAAC4gJ,EAAA,SAAD,CACEC,SAAUT,GAEVt5H,EAAA/mB,EAAAC,cAACg+I,GAAD9+I,OAAAC,OAAA,GACMS,EADN,CAEEiY,KAAMA,EACNi3G,OAAQA,EACR/7F,QAASA,EACTw6G,QAASA,EACTphI,QAASA,EACTqnI,SAAUA,EACVn1G,SAAUA,EACV57B,SAAUA,EACVqvD,SAAUA,EACVuvF,cAAc,EACdvvG,UAAWA,EACX0+F,YAAaA,EACbx+E,aAAcA,EACd/zB,aAAcA,EACd76B,aAAcA,EACduxB,SAAUwrH,EAAKh8I,MAAMwwB,SACrBqyG,OAAQmZ,EAAKnZ,OAAO14G,KAAK6xH,GACzB5M,eAAgBA,EAChBvnI,UAAWm0I,EAAKh8I,MAAM6H,UACtB9I,MAAOi9I,EAAKh8I,MAAMm6I,cAClB3M,gBAAiBA,EACjByM,WAAY+B,EAAKh8I,MAAMi6I,WACvB9uH,WAAY6wH,EAAKh8I,MAAMmrB,WACvByxH,SAAUZ,EAAKY,SAASzyH,KAAK6xH,GAC7BrO,iBAAkBA,EAClB5zG,iBAAkBA,EAClB41G,iBAAkBA,EAClBruI,YAAa06I,EAAKh8I,MAAMsB,YACxBowB,kBAAmBA,EACnB49G,kBAAmBA,EACnBI,mBAAoBA,EACpB3uI,cAAei7I,EAAKh8I,MAAMe,cAC1B+kG,cAAek2C,EAAKh8I,MAAM8lG,cAC1B+2C,YAAab,EAAKa,YAAY1yH,KAAK6xH,GACnC/N,oBAAqBA,EACrBsB,oBAAqBA,EACrBM,oBAAqBA,EACrBtG,eAAgByS,EAAKh8I,MAAMupI,eAC3B6Q,eAAgB4B,EAAKh8I,MAAMo6I,eAC3BzxH,qBAAsBA,EACtBm0H,aAAcd,EAAKc,aAAa3yH,KAAK6xH,GACrClM,qBAAsBA,EACtBiN,gBAAiBf,EAAKgB,UAAU7yH,KAAK6xH,GACrC1S,aAAc0S,EAAK1S,aAAan/G,KAAK6xH,GACrCd,aAAcc,EAAKd,aAAa/wH,KAAK6xH,GACrCl0I,gBAAiBk0I,EAAKh8I,MAAM8H,gBAC5Bm1I,cAAejB,EAAKiB,cAAc9yH,KAAK6xH,GACvC5wH,cAAe4wH,EAAK5wH,cAAcjB,KAAK6xH,GACvCtwI,iBAAkBswI,EAAKh8I,MAAM0L,iBAC7BskI,uBAAwBA,EACxB3hE,gBAAiB2tE,EAAK3tE,gBAAgBlkD,KAAK6xH,GAC3Cj7B,iBAAkBi7B,EAAKj7B,iBAAiB52F,KAAK6xH,GAC7CpM,yBAA0BA,EAC1BxlG,oBAAqB4xG,EAAKh8I,MAAMoqC,oBAChCkhG,kBAAmB0Q,EAAK1Q,kBAAkBnhH,KAAK6xH,GAC/C1lH,0BAA2BA,EAC3B/H,0BAA2BA,EAC3BikH,sBAAuBwJ,EAAKxJ,sBAAsBroH,KAAK6xH,UAOrEr5H,EAAA/mB,EAAAC,cAAC2gJ,GAAA,EAAD,KACE75H,EAAA/mB,EAAAC,cAACshJ,GAAD,CACExyB,OAAQA,EACR/7F,QAASA,EACTw6G,QAASA,EACTphI,QAASA,EACTqnI,SAAUA,EACV/wI,SAAUA,EACVqvC,UAAWA,EACX0+F,YAAaA,EACbvyG,aAAcA,EACdtJ,SAAUwrH,EAAKh8I,MAAMwwB,SACrB4+G,eAAgBA,EAChBvM,OAAQmZ,EAAKnZ,OAAO14G,KAAK6xH,GACzBxO,gBAAiBA,EACjByM,WAAY+B,EAAKh8I,MAAMi6I,WACvBtM,iBAAkBA,EAClB5zG,iBAAkBA,EAClB41G,iBAAkBA,EAClBruI,YAAa06I,EAAKh8I,MAAMsB,YACxBowB,kBAAmBA,EACnB49G,kBAAmBA,EACnBvuI,cAAei7I,EAAKh8I,MAAMe,cAC1B+kG,cAAek2C,EAAKh8I,MAAM8lG,cAC1BmoC,oBAAqBA,EACrBsB,oBAAqBA,EACrBhG,eAAgByS,EAAKh8I,MAAMupI,eAC3B6Q,eAAgB4B,EAAKh8I,MAAMo6I,eAC3BzxH,qBAAsBA,EACtBm0H,aAAcd,EAAKc,aAAa3yH,KAAK6xH,GACrClM,qBAAsBA,EACtBiN,gBAAiBf,EAAKgB,UAAU7yH,KAAK6xH,GACrC1S,aAAc0S,EAAK1S,aAAan/G,KAAK6xH,GACrCl0I,gBAAiBk0I,EAAKh8I,MAAM8H,gBAC5Bm1I,cAAejB,EAAKiB,cAAc9yH,KAAK6xH,GACvChM,uBAAwBA,EACxBJ,yBAA0BA,EAC1Bt5G,0BAA2BA,EAC3BsmH,SAAW,SAAA56I,GAAOg6I,EAAKY,SAAS56I,MAGZ,eAArBg6I,EAAKh8I,MAAM49B,MACVjb,EAAA/mB,EAAAC,cAACuhJ,GAAD,CACE1pI,KAAMA,EACN1L,QAASA,EACTonI,eAAgBA,EAChBG,oBAAqBA,EACrBD,kBAAmBA,EACnBjD,YAAaA,EACbyD,qBAAsBA,EACtB7B,oBAAqBA,EACrBN,iBAAkBA,EAClBiC,yBAA0BA,EAC1BD,iBAAkBA,EAClBK,uBAAwBA,EACxBxC,gBAAiBA,EACjBl3G,0BAA2BA,EAC3Bq0F,OAAQA,EACR/7F,QAASA,EACT1b,YAAaA,IAEb,KAEkB,YAArB8oI,EAAKh8I,MAAM49B,MACVjb,EAAA/mB,EAAAC,cAAC2gJ,GAAA,EAAD,KACE75H,EAAA/mB,EAAAC,cAAC2gJ,GAAA,EAAD,CAAOa,OAAK,EAAC34H,KAAK,IAChBqN,OAAS,SAACt2B,GAAD,OACPknB,EAAA/mB,EAAAC,cAAC4gJ,EAAA,SAAD,CACEC,SAAUT,GAEVt5H,EAAA/mB,EAAAC,cAAC69I,GAAD3+I,OAAAC,OAAA,GACMS,EADN,CAEEiY,KAAMA,EACNkb,QAASA,EACT5mB,QAASA,EACT1J,SAAUA,EACVqvD,SAAUA,EACVhgB,UAAWA,EACX7T,aAAcA,EACdrU,WAAYu2H,EAAKh8I,MAAM7E,MACvB0nI,OAAQmZ,EAAKnZ,OAAO14G,KAAK6xH,GACzBj1H,YAAai1H,EAAKh8I,MAAM5E,OACxBg0I,eAAgBA,EAChBvnI,UAAWm0I,EAAKh8I,MAAM6H,UACtB9I,MAAOi9I,EAAKh8I,MAAMm6I,cAClBhvH,WAAY6wH,EAAKh8I,MAAMmrB,WACvB8uH,WAAY+B,EAAKh8I,MAAMi6I,WACvBD,YAAagC,EAAKh8I,MAAMg6I,YACxB14I,YAAa06I,EAAKh8I,MAAMsB,YACxBguI,kBAAmBA,EACnB59G,kBAAmBA,EACnB+f,kBAAmBA,GACnB4X,cAAe2yF,EAAKh8I,MAAMqpD,cAC1BtoD,cAAei7I,EAAKh8I,MAAMe,cAC1BwuI,oBAAqBA,EACrBgL,kBAAmByB,EAAKzB,kBACxB5xH,qBAAsBA,EACtBm0H,aAAcd,EAAKc,aAAa3yH,KAAK6xH,GACrCd,aAAcc,EAAKd,aAAa/wH,KAAK6xH,GACrCvB,mBAAoBuB,EAAKvB,mBACzB3yI,gBAAiBk0I,EAAKh8I,MAAM8H,gBAC5BsjB,cAAe4wH,EAAK5wH,cAAcjB,KAAK6xH,GACvCsB,kBAAmBtB,EAAKgB,UAAU7yH,KAAK6xH,GACvC3B,kBAAmB2B,EAAKh8I,MAAMq6I,kBAC9BhsE,gBAAiB2tE,EAAK3tE,gBAAgBlkD,KAAK6xH,GAC3C5xG,oBAAqB4xG,EAAKh8I,MAAMoqC,oBAChCkhG,kBAAmB0Q,EAAK1Q,kBAAkBnhH,KAAK6xH,GAC/C1lH,0BAA2BA,EAC3BsmH,SAAW,SAAA56I,GAAOg6I,EAAKY,SAAS56I,OAElC2gB,EAAA/mB,EAAAC,cAAC0tG,GAAA3tG,EAAD,CACE2hJ,QAAS,IACTxjC,WAAY,KACZ9qE,SAAU,SACVuuG,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1Bj3I,MAAO,CAAC9D,WAAY,yBAAyBiD,OAAO,WACpD2kI,YAAa,CAAC1nI,QAASvE,EAAW,QAAU,OAAQO,gBAAgB,UAAW5C,MAAO,QAAS0hJ,UAAWr/I,EAAW,MAAQ,SAE7HqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,MAAOD,WAAY,CAAC,aAAa,UAAWE,eAAgB,aAAcuuI,UAAW,CAAC,QAAQ,WAAYhmI,MAAQnI,EAAW,CAACs/I,UAAU,UAAY,MACvKj7H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAO/f,QAAS,CAAC,OAAO,SAAUxE,IAAK,oBAAqBlD,MAAO,OAAQC,OAAQ,SACnFunB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMk7F,GAAI,CAAC,EAAE,GAAI7hH,MAAO,YAAaS,SAAU,EAAGC,UAAW,WAA7D,4RAC2RgmB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMlK,KAAM,gEAAiEH,OAAQ,SAAUE,IAAI,+BAA+BD,WAAY,QAA9I,iBAD3R,+LASVmK,EAAA/mB,EAAAC,cAAC2gJ,GAAA,EAAD,CAAOa,OAAK,EAAC34H,KAAK,qBAChB/B,EAAA/mB,EAAAC,cAACgiJ,EAAD,OAEFl7H,EAAA/mB,EAAAC,cAAC2gJ,GAAA,EAAD,KACE75H,EAAA/mB,EAAAC,cAACiiJ,GAAD,QAGF,OAGRn7H,EAAA/mB,EAAAC,cAACkiJ,GAAD,CACE9+I,aAAcA,EACd4I,UAAWm0I,EAAKh8I,MAAM6H,4BA/8BhCvL,aClBE0hJ,QACW,cAA7BnnI,OAAOo4B,SAASgvG,UAEe,UAA7BpnI,OAAOo4B,SAASgvG,UAEhBpnI,OAAOo4B,SAASgvG,SAASp5G,MACvB,2DCX2B,cAA7BhuB,OAAOo4B,SAASgvG,UAClBtK,IAAY,CACVuK,IAAK,6DACLC,WAFU,SAECrqC,EAAOsqC,GAChB,IAAIx2H,EAASksF,EACPzhG,EAAQ+rI,EAAKC,kBAMnB,OALIhsI,GAASA,EAAMoX,SACbpX,EAAMoX,QAAQob,MAAM,iDACtBjd,GAAS,GAGNA,KAKb02H,IAASvsH,OAAOpP,EAAA/mB,EAAAC,cAAC0iJ,GAAD,MAASj0H,SAASC,eAAe,SD0G3C,kBAAmBs0G,WACrBA,UAAU2f,cAAcl3H,MAAM+iF,KAAK,SAAAo0C,GACjCA,EAAaC,gPEiJJC,6MA3Qb3+I,MAAQ,CACNusB,SAAS,GACT7wB,SAAS,IACT+wI,UAAU,IACVmS,UAAS,EACTC,cAAc,CACZt1I,OAAO,KACPu1I,OAAO,KACP36B,QAAQ,SAIZ46B,UAAY,SAAC91I,EAAO3G,GAClB9F,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B+9I,cAAc9jJ,OAAAsmD,EAAA,EAAAtmD,CAAA,GACT+F,EAAU+9I,cADF9jJ,OAAAkrH,EAAA,EAAAlrH,CAAA,GAEVkO,EAAQ3G,UAKf08I,aAAe,WAAiB,IAAhBC,IAAgBz0I,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,KAAAA,UAAA,GACS,oBAA5BhO,EAAKf,MAAMujJ,cACpBxiJ,EAAKf,MAAMujJ,aAAaxiJ,EAAKwD,MAAM6+I,eAEjCI,GACFziJ,EAAK0iJ,kBAITC,YAAc,SAACl2I,GACbzM,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B+9I,cAAc9jJ,OAAAsmD,EAAA,EAAAtmD,CAAA,GACT+F,EAAU+9I,cADF9jJ,OAAAkrH,EAAA,EAAAlrH,CAAA,GAEVkO,EAAQ,SAEV,WACDzM,EAAKwiJ,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgBz0I,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,KAAAA,UAAA,GAC9BhO,EAAK4E,SAAS,CACZy9I,cAAc,CACZt1I,OAAO,KACPu1I,OAAO,KACP36B,QAAQ,OAEV,WACuC,oBAA5B3nH,EAAKf,MAAM2jJ,cACpB5iJ,EAAKf,MAAM2jJ,eAETH,GACFziJ,EAAK0iJ,oBAKXA,aAAe,WACb1iJ,EAAK4E,SAAS,SAACN,GAAD,MAAgB,CAC5B89I,UAAW99I,EAAU89I,qFAIhB,IAAA39I,EAAAzF,KACP,OACEmnB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE9iB,GAAI,EACJoE,IAAK,EACL/I,MAAO,EACPyK,OAAQ,EACR3H,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChByH,SAAU,CAAC,WAAW,aAEtBgd,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHrC,MAAM,CAAC,EAAGK,KAAKwE,MAAM4+I,SAAWpjJ,KAAKwE,MAAMusB,SAAW/wB,KAAKwE,MAAMtE,UACjE+K,MAAM,CACJ44I,WAAW,2BAGf1hJ,eAAiBnC,KAAKwE,MAAM4+I,SAC5B7iJ,YAAeP,KAAKwE,MAAM4+I,SAA+B,KAApBpjJ,KAAK0jJ,cAE1Cv8H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPsL,MAAO,CACLmT,OAAO,WAET5b,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB2a,QAAUrd,KAAKwE,MAAM4+I,SAAWpjJ,KAAK0jJ,aAAe,MAEpDv8H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,IACZR,MAAO,aAHT,WAOA0mB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3mB,MAAO,YACPG,KAAOZ,KAAKC,MAAM6C,SAAW,QAAU,QACvCpC,KAAOV,KAAKwE,MAAM4+I,SAAW,QAAU,UAG3Cj8H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,SACfwI,MAAO,CACL+lB,SAAS,SACT6yH,WAAW,8BACX5S,UAAUjxI,KAAKwE,MAAM4+I,SAAWpjJ,KAAKwE,MAAMysI,UAAY,IAGzD9pH,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJ/a,GAAI,EACJpC,MAAO,EACP8C,cAAe,MACfu/G,UAAS,aAAAh4G,OAAezG,IAAMC,OAAOygB,UAGnC1kB,OAAO8B,KAAKrB,KAAKC,MAAM6jJ,SAAStxI,IAAI,SAACuxI,GACnC,IAAMC,EAAev+I,EAAKxF,MAAM6jJ,QAAQC,GACxC,OACE58H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,SACfsB,IAAG,UAAAiG,OAAY+5I,GACf94I,MAAO,CACLC,UAAU,IACVC,KAAK,YAGPgc,EAAA/mB,EAAAC,cAAC4jJ,EAAA,EAAD,CACE9vH,GAAI,EACJlzB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbT,MAAO,YAENsjJ,EAAe/wI,eAGhBzT,OAAO8B,KAAK2iJ,GAAcxxI,IAAI,SAAC0xI,GAC7B,IAAMC,EAAcH,EAAaE,GAC3BE,EAAY3+I,EAAKjB,MAAM6+I,cAAcU,KAAkBG,EAC7D,OACE/8H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE7kB,GAAI,EACJrB,SAAU,CAAC,EAAE,GACb2I,MAAOs6I,EACPviH,QAASwiH,EACTplI,UAAWC,IAAO0oF,SAClB5jG,IAAG,UAAAiG,OAAY+5I,EAAZ,KAAA/5I,OAA8Bk6I,GACjCtkI,SAAW,SAAApZ,GAAC,OAAIf,EAAK89I,UAAUQ,EAAeG,YAUhE/8H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE3kB,cAAe,OAEf0kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAO0K,KAAR,CACE7wB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbpB,UAAW,YACXud,QAASrd,KAAKwjJ,cAJhB,iBAQAr8H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAO0K,KAAR,CACEpnB,GAAI,EACJzJ,WAAY,EACZC,SAAU,CAAC,EAAE,GACbpB,UAAW,YACXud,QAASrd,KAAK4jJ,cALhB,aAaH5jJ,KAAKwE,MAAM4+I,UAAYpjJ,KAAKC,MAAMojJ,eAAiB9jJ,OAAOiO,OAAOxN,KAAKC,MAAMojJ,eAAe51I,OAAQ,SAAA7G,GAAC,OAAW,OAANA,IAActF,OAAO,GAC7H6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,EACJnd,MAAO,EACP8C,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BnD,OAAO8B,KAAKrB,KAAKC,MAAMojJ,eAAe7wI,IAAI,SAAC6xI,GACzC,IAAMH,EAAcz+I,EAAKxF,MAAMojJ,cAAcgB,GAC7C,GAAoB,OAAhBH,EAAqB,CACvB,IAAMC,EAAc1+I,EAAKxF,MAAM6jJ,QAAQO,GAAYH,GACnD,OACE/8H,EAAA/mB,EAAAC,cAACunG,EAAA,EAAD,CACE9lG,UAAW,CACTC,GAAG,EACHC,GAAG,EACHsC,GAAG,CAAC,EAAE,GACNlB,GAAG,CAAC,EAAE,GACNzD,MAAM,CAAC,EAAE8F,EAAKjB,MAAMtE,WAEtBiC,eAAe,EACf4B,IAAG,UAAAiG,OAAYq6I,IAEfl9H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPsL,MAAO,CACLmT,OAAO,WAET5b,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB2a,QAAS,SAAA7W,GAAC,OAAIf,EAAKk+I,YAAYU,KAE/Bl9H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,IACZR,MAAO,WACPwK,MAAO,CACLI,cAAc,eAGf84I,GAEHh9H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,QACND,MAAO,WACPG,KAAO6E,EAAKxF,MAAM6C,SAAW,QAAU,YAMjD,OAAO,OAGXqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEtK,GAAI,CAAC,EAAE,GACP5b,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,GACbR,MAAO,YACPuc,WAAY,YACZ7b,UAAW,CAAC,SAAS,QACrBkc,QAAU,SAAA7W,GAAC,OAAIf,EAAKm+I,cAAa,KAPnC,8BA3PuB9iJ,aCG/B2rG,6MAEJjoG,MAAQ,CACNwrD,KAAK,EACLs0F,QAAQ,GACRC,WAAW,EACXryH,SAAQ,EACRsyH,SAAS,KACTC,WAAW,KACXpB,cAAc,CACZt1I,OAAO,KACPu1I,OAAO,KACP36B,QAAQ,MAEVm7B,QAAQ,CACNn7B,QAAQ,CACNxkG,QAAQ,UACRxgB,OAAO,SACPmhB,KAAK,OACLK,QAAQ,UACRf,QAAQ,UACRW,KAAK,UACLE,QAAQ,WACRK,SAAS,YAMXvX,OAAO,CACL0X,UAAU,YACVC,QAAQ,UACRC,OAAO,UAET29H,OAAO,IAEToB,YAAY,KACZpsG,aAAa,KACbqsG,gBAAgB,QAIlB5/I,cAAgB,OAmChBy+I,aAAe,SAAAH,GACbriJ,EAAK4E,SAAS,CACZy9I,iBACA,WACAriJ,EAAKyiD,kBAITmgG,aAAe,WACb5iJ,EAAK4E,SAAS,CACZy9I,cAAc,CACZt1I,OAAO,KACPu1I,OAAO,KACP36B,QAAQ,OAEV,WACA3nH,EAAKyiD,kBAmGTA,WAAa,WAAe,IAAduM,EAAchhD,UAAA1N,OAAA,QAAAgrB,IAAAtd,UAAA,GAAAA,UAAA,GAAT,KAEjBghD,EAAOA,GAAchvD,EAAKwD,MAAMwrD,KAEhC,IAAM28C,EAAmBptG,OAAO8B,KAAKL,EAAKwD,MAAMs/I,QAAQn7B,SAASn2G,IAAK,SAAAnE,GAAM,OAAKA,EAAOlF,gBAGlFy7I,EAAarlJ,OAAOiO,OAAOxM,EAAKwD,MAAM8/I,SACvB72I,OAAO,SAAAC,GAAE,QAAOrE,WAAWqE,EAAG5G,SAC9B2G,OAAO,SAAAC,GAAE,OAC6B,OAApC1M,EAAKwD,MAAM6+I,cAAct1I,QAAoBL,EAAGK,QAAUL,EAAGK,OAAO5E,gBAAkBnI,EAAKwD,MAAM6+I,cAAct1I,OAAO5E,iBAClF,OAApCnI,EAAKwD,MAAM6+I,cAAcC,QAAoB51I,EAAGC,OAASD,EAAGC,MAAMxE,gBAAkBnI,EAAKwD,MAAM6+I,cAAcC,OAAOn6I,gBACnHuE,EAAGW,QAAUs+F,EAAiBrkF,SAAS5a,EAAGW,OAAOlF,iBAAwD,OAArCnI,EAAKwD,MAAM6+I,cAAc16B,SAAqBj7G,EAAGW,OAAOlF,gBAAkBnI,EAAKwD,MAAM6+I,cAAc16B,QAAQx/G,iBAElL85C,KAAK,SAAC7iD,EAAEizC,GAAH,OAAUjzC,EAAE+N,UAAYklC,EAAEllC,WAAc,EAAI,IAGhEq2I,EAAWI,EAAWtjJ,OACtBmjJ,EAAaz2I,KAAKuF,KAAKixI,EAASxjJ,EAAKwD,MAAM+/I,YAE3CjsG,EAAe,GAIrBssG,EAAWrjJ,QAAQ,SAACmM,EAAI3E,GACtB,IAAMxD,EAAgBmI,EAAGC,MACnB7H,EAAc9E,EAAKf,MAAMqM,iBAAmBtL,EAAKf,MAAMqM,gBAAgB/G,GAAiBvE,EAAKf,MAAMqM,gBAAgB/G,GAAiBvE,EAAK+D,cAAc6M,gBAAgB,CAAC,QAAQ,SAASrM,IACzL+E,EAAW0D,KAAKC,IAAInI,EAAYwE,SAAS,GAEzCmI,EAAO,IAAItD,KAAkB,IAAbzB,EAAGS,WACnBE,EAASX,EAAGW,OAASX,EAAGW,OAASrN,EAAK+D,cAAc+uC,YAAYpmC,EAAG5H,GAEnE++I,EAAcx7I,WAAWqE,EAAGU,aAE5BijB,EAASwzH,EAAe7jJ,EAAKf,MAAM6C,SAAW+hJ,EAAYt7I,QAAQ,GAAKs7I,EAAYt7I,QAAQe,GAAa,IACxGyH,EAAa/Q,EAAK+D,cAAcmK,YAAYuD,GAGlD/E,EAAGW,OAASA,EACZX,EAAG2jB,OAASA,EACZ3jB,EAAGqE,WAAaA,EAChBrE,EAAGK,OAASL,EAAGK,OAASL,EAAGK,OAAS,YAEhChF,IAAKinD,EAAK,GAAGhvD,EAAKwD,MAAM+/I,YAAex7I,GAAIinD,EAAK,GAAGhvD,EAAKwD,MAAM+/I,WAAYvjJ,EAAKwD,MAAM+/I,YACvFjsG,EAAa9uC,KAAKkE,KAQtB1M,EAAK4E,SAAS,CACZssB,SAHc,EAIdsyH,WACAC,aACAnsG,6FA3MEt4C,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,wCAIvCuG,GACHA,GACFA,EAAEiwB,iBAEJ,IAAMu5B,EAAOhiD,KAAKoE,IAAI,EAAEpS,KAAKwE,MAAMwrD,KAAK,GACxChwD,KAAK4F,SAAS,CACZoqD,0CAIKxpD,GACHA,GACFA,EAAEiwB,iBAEJ,IAAMu5B,EAAOhiD,KAAKC,IAAIjO,KAAKwE,MAAMigJ,WAAWzkJ,KAAKwE,MAAMwrD,KAAK,GAAGhwD,KAAKyjD,WAAWuM,GAC/EhwD,KAAK4F,SAAS,CACZoqD,6JAKFhwD,KAAKmF,YACLnF,KAAK8kJ,+LAuBkBz/I,EAAWC,mFAClCtF,KAAKmF,YACCioB,EAAsBrhB,KAAKC,UAAU3G,EAAU5B,gBAAkBsI,KAAKC,UAAUhM,KAAKC,MAAMwD,gBAC5EsI,KAAKC,UAAU3G,EAAU4G,iBAAmBF,KAAKC,UAAUhM,KAAKC,MAAMgM,kBAEvEmhB,yBAClBptB,KAAK4F,SAAS,CACZoqD,KAAK,EACLs0F,QAAQ,IACR,WACA7+I,EAAKq/I,+BAEA,UAEWx/I,EAAU0qD,OAAShwD,KAAKwE,MAAMwrD,MAEhDhwD,KAAKyjD,0LAIKwgD,8IAAqB,SAC5BjkG,KAAKC,MAAMuM,kDACP,aAGTy3F,EAAQA,GAAgB,EAExBjkG,KAAK4F,SAAS,CACZssB,SAAQ,IAGJouB,EAAmBtgD,KAAK+E,cAAc6M,gBAAgB,CAAC,UAAU,qBAGnE0yI,iBAActkJ,KAAKwE,MAAM8/I,SACzBK,EAAkB32I,KAAKoE,IAAIkuC,EAAiBtgD,KAAKwE,MAAMmgJ,kBAEvD14I,EAAgBjM,KAAKC,MAAMgM,gBACRA,EAAc3K,SACnC2K,EAAgB1M,OAAO8B,KAAKrB,KAAKC,MAAMqM,kBAGnCg3I,iBAAatjJ,KAAKwE,MAAMs/I,QAAQR,QAEtCr3I,EAAc1K,QAAQ,SAACoM,GACrB21I,EAAO31I,GAASA,IAGdg7G,EAAU3oH,KAAKC,MAAM0sG,kBAAXptG,OAAAsmD,EAAA,EAAAtmD,CAAA,GAAmCS,KAAKwE,MAAMs/I,QAAQn7B,UAE9Do8B,EAAsD,qBAA9B/kJ,KAAKC,MAAM8kJ,eAAiC/kJ,KAAKC,MAAM8kJ,eAAiB,IAEnFzjJ,SACjBqnH,EAAU,GACVo8B,EAAexjJ,QAAS,SAAA8M,GACtBs6G,EAAQt6G,EAAOlF,eAAiBkF,UAIfrO,KAAKC,MAAMysG,wDAA0B1sG,KAAK+E,cAAcwH,gBAAgBvM,KAAKC,MAAMuM,QAAQm4I,EAAgB,SAAS14I,sCAAnIQ,SAKcA,EAAanL,QAC/BmL,EAAalL,QAAQ,SAACmM,GAChBA,EAAGwwC,QACLomG,EAAQ52I,EAAGwwC,SAAWxwC,EAEtB42I,EAAO,IAAAt6I,OAAK0D,EAAGS,YAAeT,KAK9B6D,EAAShS,OAAOiO,OAAO82I,GAASxzI,QAGxBS,EAAOyI,eAAiBha,KAAKwE,MAAMmgJ,iBAAmBpzI,EAAOyI,YAAYha,KAAKwE,MAAMmgJ,mBAChGA,EAAkBz2I,SAASqD,EAAOyI,aAAa,qBAG1Cha,KAAK4F,SAAU,SAAAN,GAAS,MAAK,CAClCg/I,UACApyH,SAAQ,EACRyyH,kBACAb,QAAQvkJ,OAAAsmD,EAAA,EAAAtmD,CAAA,GACH+F,EAAUw+I,QADR,CAELR,SACA36B,cAEA,WACFliH,EAAKg9C,qJAgEA,IAAA7pB,EAAA55B,KAEDglJ,EAAmBzlJ,OAAOiO,OAAOxN,KAAKwE,MAAM6+I,eAAe51I,OAAQ,SAAA7G,GAAC,OAAW,OAANA,IAActF,OAAO,EAG9Fg3C,EAAet4C,KAAKwE,MAAM8zC,aAAe/4C,OAAOiO,OAAOxN,KAAKwE,MAAM8zC,cAAgB,KAExF,OACEnxB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,SAAU9C,MAAO,EAAGslJ,EAAG,UAExCjlJ,KAAKwE,MAAM0tB,QACT/K,EAAA/mB,EAAAC,cAAC0iC,EAAA,EAAD,CACExmB,UAAW,CACT9Z,cAAc,MACd4sB,UAAUrvB,KAAKC,MAAML,QAEvByc,YAAa,CACXzb,KAAK,QAEPgD,UAAW,CACT8G,GAAG,GAEL7G,KAAM,4BAGRsjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACPwK,SAAU,WACV1H,cAAe,SACfwB,GAAI,8BACJwU,GAAI,CAAC,EAAGusI,EAAmB,QAAU,IAErC79H,EAAA/mB,EAAAC,cAAC6kJ,EAAD3lJ,OAAAC,OAAA,GACMQ,KAAKC,MADX,CAEE6jJ,QAAS9jJ,KAAKwE,MAAMs/I,QACpBT,cAAerjJ,KAAKwE,MAAM6+I,cAC1BO,aAAc5jJ,KAAK4jJ,aAAaj1H,KAAK3uB,MACrCwjJ,aAAcxjJ,KAAKwjJ,aAAa70H,KAAK3uB,SAGrCs4C,GAAgBA,EAAah3C,OAC3B6lB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEznB,MAAO,EACP8C,cAAe,UAEf0kB,EAAA/mB,EAAAC,cAACgnB,EAAA,EAAD,CACEC,KAAMtnB,KAAKC,MAAMqnB,KACjBxkB,SAAU9C,KAAKC,MAAM6C,WAEvBqkB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACEnjB,GAAI,oBACJxB,cAAe,UAGb61C,EAAa9lC,IAAK,SAAC9E,EAAGG,GACpB,IAAM2M,EAAS9M,EAAGI,KACZq3I,EAAYz3I,EAAGwwC,QAKrB,OACE/2B,EAAA/mB,EAAAC,cAACqnB,EAAA,EAADnoB,OAAAC,OAAA,GACMo6B,EAAK35B,MADX,CAEE4zB,SAAU,CACR1xB,eAAc,GAEhB2L,KAAM0M,EACN9C,YAAahK,EACb3J,IAAG,MAAAiG,OAAQ6D,GACXtN,YAbgB,SAACiG,GACnB,OAAQgU,EAASa,OAAO6O,KAAK0P,EAAK70B,cAAcoY,2BAA2B3C,IAAW,MAapFqN,MAAK,UAAA7d,OAAYm7I,GACjBr9H,OAAM,WAAA9d,OAAam7I,GACnBx9H,eAAgBiJ,UAM1BzJ,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACExnB,OAAQ,OACR4C,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChBuB,GAAI,gCAEJkjB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMhkB,GAAI,GACR+jB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMhkB,GAAI,EAAGia,QAAU,SAAA7W,GAAC,OAAIozB,EAAKwrH,SAAS5+I,KACxC2gB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,oBACNE,KAAM,MACNH,MAAQT,KAAKwE,MAAMwrD,KAAK,EAAI,cAAgB,mBAGhD7oC,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM/J,QAAU,SAAA7W,GAAC,OAAIozB,EAAKyrH,SAAS7+I,KACjC2gB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE1mB,KAAM,qBACNE,KAAM,MACNH,MAAQT,KAAKwE,MAAMwrD,KAAKhwD,KAAKwE,MAAMigJ,WAAa,cAAgB,oBAItEt9H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM5kB,WAAY,UAChB2kB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACElmB,SAAU,EACVD,WAAY,EACZR,MAAO,YAHT,QAKQT,KAAKwE,MAAMwrD,KALnB,OAK6BhwD,KAAKwE,MAAMigJ,eAM9Ct9H,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAQ++G,GAAT,CAAYhlI,UAAW,SAAUoG,WAAY,YAAatG,WAAY,EAAGC,SAAU,CAAC,GAAIT,MAAO,aAA/F,sCA9WaK,aA2XhB2rG,w/DCpYfz8E,EAAAC,QAAA,CAAkBq1H,OAAA,uBAAAphI,KAAA,uDCDlB7D,EAAA/Z,EAAAia,EAAA,sBAAAqB,IAAAvB,EAAA/Z,EAAAia,EAAA,sBAAA4F,IAAA9F,EAAA/Z,EAAAia,EAAA,sBAAA8F,IAAAhG,EAAA/Z,EAAAia,EAAA,sBAAAgG,IAAA,IAAAg/H,EAAAllI,EAAA,KAGMmC,EAAa,CACjBD,MAAO,UACPY,MAAO,OACPvB,KAAM,UACN4jI,SAAU,UACVr/H,MAAO,UACPE,OAAQ,UACRE,IAAK,UACLk/H,QAAS,UACTC,cAAe,WAIXliJ,EAAS,CACbiiJ,QAAS,CACP5jI,KAAMW,EAAWijI,QACjB5hJ,KAAM8hJ,YAAcnjI,EAAWijI,SAC/BzjI,MAAO,CAAC,KAAMiE,YAAK,GAAKzD,EAAWijI,UACnCtmI,KAAM,CAAC,KAAM6G,YAAM,GAAKxD,EAAWijI,WAErC7jI,KAAM,CACJC,KAAMW,EAAWZ,KACjB/d,KAAM8hJ,YAAcnjI,EAAWZ,MAC/BI,MAAO,CAAC,KAAMiE,YAAK,GAAKzD,EAAWZ,OACnCzC,KAAM,CAAC,KAAM6G,YAAM,GAAKxD,EAAWZ,QAErCuE,MAAO,CACLtE,KAAMW,EAAW2D,MACjBtiB,KAAM2e,EAAWW,MACjBnB,MAAO,CAAC,KAAMiE,YAAK,GAAKzD,EAAW2D,QACnChH,KAAM,CAAC,KAAM6G,YAAM,GAAKxD,EAAW2D,SAErCE,OAAQ,CACNxE,KAAMW,EAAW6D,OACjBxiB,KAAM8hJ,YAAcnjI,EAAW6D,QAC/BrE,MAAO,CAAC,KAAMiE,YAAK,GAAKzD,EAAW6D,SACnClH,KAAM,CAAC,KAAM6G,YAAM,GAAKxD,EAAW6D,UAErCE,IAAK,CACH1E,KAAMW,EAAW+D,IACjB1iB,KAAM8hJ,YAAcnjI,EAAW+D,KAC/BvE,MAAO,CAAC,KAAMiE,YAAK,GAAKzD,EAAW+D,MACnCpH,KAAM,CAAC,KAAM6G,YAAM,GAAKxD,EAAW+D,QAKjC3E,EAAOpe,EAAOoe,KACduE,EAAQ3iB,EAAO2iB,MACfE,EAAS7iB,EAAO6iB,OAChBE,EAAM/iB,EAAO+iB,IAOJ/D,uGCzDTojI,mLAEK,IAAA5kJ,EAAAhB,KAED6lJ,EAAgB,kBACpB1lJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,MAAiC,OAAzBO,EAAKf,MAAMwrC,UAAsB,UAAY,UACrD/qC,KAAgC,OAAzBM,EAAKf,MAAMwrC,UAAsB,cAAgB,gBACxD7qC,KAAOI,EAAKf,MAAMY,SAAWG,EAAKf,MAAMY,SAAaG,EAAKf,MAAM6C,SAAW,QAAU,SAIzF,OACE3C,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEgC,WAAY,SACZC,cAAe,MACf9C,MAAQK,KAAKC,MAAMN,MAAQK,KAAKC,MAAMN,MAAQ,EAC9C+C,eAAgB1C,KAAKC,MAAMyC,eAAiB1C,KAAKC,MAAMyC,eAAiB,YAGpE1C,KAAKC,MAAM6lJ,SAAgC,SAArB9lJ,KAAKC,MAAM6lJ,UACjC3lJ,EAAAC,EAAAC,cAACwlJ,EAAD,MAEH7lJ,KAAKC,MAAM2B,SAEW,UAArB5B,KAAKC,MAAM6lJ,SACT3lJ,EAAAC,EAAAC,cAACwlJ,EAAD,cA1BkB/kJ,aAiCf8kJ,6yECnCf51H,EAAAC,QAAA,CAAkB/Q,YAAA,qCAAAO,gBAAA,yCAAAN,KAAA,8BAAAC,kBAAA,iECAlB4Q,EAAAC,QAAA,CAAkB81H,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,4/VCGZh7H,EAAY,SAAApe,GAAA,IAAEjL,EAAFiL,EAAEjL,SAAUspB,EAAZre,EAAYqe,UAAcjrB,EAA1BV,OAAA2mJ,EAAA,EAAA3mJ,CAAAsN,EAAA,iCAChBs5I,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD,CACE3mJ,EAAG,EACHC,OAAQ,EACRgsB,GAAI,OACJnpB,GAAI,OACJ3C,OAAQ,OACRC,aAAc,EACdmxB,SAAU,OACVrxB,MAAQM,EAAMN,MAAQM,EAAMN,MAAQ,OACpCO,SAAWD,EAAMC,SAAWD,EAAMC,SAAW,OAC7C6wB,SAAW9wB,EAAM8wB,SAAW9wB,EAAM8wB,SAAW,SAE7Co1H,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD,CACE19I,IAAK,IACL0B,OAAQ,EACRzB,MAAO,IACPwB,SAAU,YAEVg8I,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAOt0H,KAAR,CACEy6G,UAAQ,EACRtpI,KAAM,QACNrC,KAAM,QACNyc,QAAS6N,EACTprB,UAAYG,EAAMH,UAAYG,EAAMH,UAAa,eAGrDqmJ,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD,CACExmJ,OAAQ,OACRuL,KAAM,WACN1I,cAAe,SACfuc,UAAW,CAAE/e,EAAMomJ,QAAUpnI,IAAOqb,GAAK,MACzCrvB,MAAO,CACL+lB,SAAU,OACVs1H,iBAAiB,YACjBC,mBAAmB,eACnBC,eAAiBvmJ,EAAMkH,WAAqB,KAAR,MACpCs/I,gBAAgB,mCAChBt/I,WAAYlH,EAAMkH,WAAalH,EAAMkH,WAAa,MAEpD9D,gBAAiB,UAEhBzB,KAKPqpB,EAAUO,OAAS,SAACvrB,GAAD,OACjBkmJ,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD,CACEzmJ,MAAO,EACP2E,GAAI,CAAC,EAAE,GACP6vB,GAAI,CAAC,EAAE,GACP1b,GAAKxY,EAAMwY,GAAKxY,EAAMwY,GAAMxY,EAAMgD,KAAO,EAAI,CAAC,EAAE,GAChDylG,aAAezoG,EAAMyoG,aAAezoG,EAAMyoG,aAAe,kBAEzDy9C,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD,CACEpkJ,GAAI,CAAC,EAAE,GACPQ,WAAY,SACZC,cAAe,UAEbxC,EAAMgD,MAAQkjJ,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD,CAAOzmJ,MAAQM,EAAMymJ,WAAazmJ,EAAMymJ,WAAa,OAAS7jJ,IAAK5C,EAAMgD,OACzFkjJ,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAQjgB,GAAT5mI,OAAAC,OAAA,CACE8E,GAAI,EACJpD,SAAU,CAAC,EAAE,GACbT,MAAO,YACPU,UAAW,SACX2b,GAAI7c,EAAMgD,KAAO,EAAI,EACrBsE,WAAY,aACRtH,EAAM4oB,YAET5oB,EAAM2gB,OAGP3gB,EAAMwtI,UACN0Y,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAQh+C,GAAT7oG,OAAAC,OAAA,CACEiZ,GAAI,CAAC,EAAE,GACPxX,WAAY,EACZC,SAAU,CAAC,EAAE,GACbE,WAAY,IACZX,MAAO,YACPU,UAAW,UACPlB,EAAM0mJ,eAET1mJ,EAAMwtI,UAITxtI,EAAMytI,WACNyY,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAQh+C,GAAT,CAAY3vF,GAAI,EAAGvX,SAAU,CAAC,EAAE,GAAIC,UAAW,SAAUF,WAAY,EAAGG,WAAY,IAAKX,MAAO,aAC7FR,EAAMytI,cAOjBziH,EAAUQ,KAAO,SAAAtb,GAAA,IAAEvO,EAAFuO,EAAEvO,SAAa3B,EAAfV,OAAA2mJ,EAAA,EAAA3mJ,CAAA4Q,EAAA,qBACfg2I,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD7mJ,OAAAC,OAAA,CACEG,MAAO,EACPqC,GAAI,CAAC,EAAE,IACH/B,GAEH2B,IAaLqpB,EAAU0P,OAAS,SAAA/iB,GAAA,IAAEhW,EAAFgW,EAAEhW,SAAFrC,OAAA2mJ,EAAA,EAAA3mJ,CAAAqY,EAAA,qBACjBuuI,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD,CACEj7I,KAAM,WACNzI,eAAgB,SAChBs/G,UAAW,EACXz5G,YAAa,aACbvG,GAAI,CAAC,EAAE,GACPD,GAAI,GAEHH,IAKLqpB,EAAU27H,WAAa,SAAA1oH,GAAA,IAAE7gB,EAAF6gB,EAAE7gB,QAAF9d,OAAA2mJ,EAAA,EAAA3mJ,CAAA2+B,EAAA,oBACrBioH,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAD,CACEj8I,SAAU,WACVzB,IAAK,IACLxE,KAAM,IACN+gJ,EAAG,EACH3qH,GAAI,SAEJ6rH,EAAA/lJ,EAAAC,cAAC+lJ,EAAA,EAAO5Z,QAAR,CACEnvH,QAASA,EACTkvH,UAAQ,EACRtpI,KAAM,YACNrC,KAAM,YAKGqqB,yKC7IT0P,6MAGJ51B,cAAgB,gFAEV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,+IAIL,IAAM0hJ,GAAW,IAAI13I,MAAO23I,cACtBzM,EAAoBr6I,KAAK+E,cAAc6M,gBAAgB,CAAC,aAAa,YACrEm1I,EAAc1M,EAAoB,IAAM,EAAE,EAChD,OACEpnH,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CACE+0F,GAAI,EACJr+G,GAAI,SACJzB,WAAY,SACZC,cAAe,SACfuc,UAAWC,IAAOqmI,OAClBjiJ,gBAAiB,QACjBX,eAAgB,cAEhBuwB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CACE5tB,MAAO,EACPqC,GAAI,CAAC,EAAE,GACPU,eAAgB,UAEhBuwB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CACE5tB,MAAO,EACPC,OAAQ,CAAC,OAAO,QAChB4C,WAAY,aACZuuB,SAAU,CAAC,OAAO,QAClBruB,eAAgB,aAChBD,cAAe,CAAC,SAAS,QAEzBwwB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM5tB,MAAO,CAAC,EAAEonJ,GAActkJ,cAAe,SAAU7C,OAAQ,CAAC,OAAO,SACrEqzB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAQ44G,GAAT,CAAYhlI,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAIqB,GAAI,EAAG9B,MAAO,aAAlG,aAGAwyB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM5tB,MAAO,EAAG8C,cAAe,UAC7BwwB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CACE7yH,GAAI,CAAC,EAAE,GACP1zB,MAAO,OACPS,SAAU,CAAC,EAAE,GACb8b,WAAY,OACZzV,WAAY,YACZpG,UAAW,CAAC,SAAS,QACrB+b,KAAM,mCAEN+V,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,iBAA5B,gBATF,kBAWAj0H,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CACE7yH,GAAI,CAAC,EAAE,GACP1zB,MAAO,OACPS,SAAU,CAAC,EAAE,GACb8b,WAAY,OACZzV,WAAY,YACZpG,UAAW,CAAC,SAAS,QACrB+b,KAAM,6FAEN+V,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,gBAA5B,gBATF,iBAWAj0H,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM4G,GAAI,CAAC,EAAE,GAAIx0B,MAAO,EAAG+C,eAAgB,CAAC,SAAS,eACnDuwB,EAAA7yB,EAAAC,cAAC8mJ,EAAA,EAAD,CACE1mJ,MAAO,OACPsyC,GAAG,oBACH/zB,UAAWC,IAAOiF,MAElB+O,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CACEtsB,WAAY,EACZR,MAAO,OACPS,SAAU,CAAC,EAAE,GACb8b,WAAY,OACZzV,WAAY,YACZpG,UAAW,CAAC,SAAS,SAErB8xB,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,oBAA5B,gBARF,uBAYJj0H,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CACE7yH,GAAI,CAAC,EAAE,GACP1zB,MAAO,OACPS,SAAU,CAAC,EAAE,GACb8b,WAAY,OACZzV,WAAY,YACZpG,UAAW,CAAC,SAAS,QACrB+b,KAAM,mDAEN+V,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,kBAA5B,wCATF,mBAWAj0H,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CACE7yH,GAAI,CAAC,EAAE,GACP1zB,MAAO,OACPS,SAAU,CAAC,EAAE,GACb8b,WAAY,OACZzV,WAAY,YACZpG,UAAW,CAAC,SAAS,QACrB+b,KAAM,iEAEN+V,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,iBAA5B,gBATF,oBAcF7M,GACEpnH,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM5tB,MAAO,CAAC,EAAEonJ,GAActkJ,cAAe,SAAU7C,OAAQ,CAAC,OAAO,SACrEqzB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAQ44G,GAAT,CAAYhlI,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAIqB,GAAI,EAAG9B,MAAO,aAAlG,cAGAwyB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM5tB,MAAO,EAAG8C,cAAe,UAC7BwwB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM4G,GAAI,CAAC,EAAE,GAAIx0B,MAAO,EAAG+C,eAAgB,CAAC,SAAS,eACnDuwB,EAAA7yB,EAAAC,cAAC8mJ,EAAA,EAAD,CACE1mJ,MAAO,OACPsyC,GAAI,cACJ/zB,UAAWC,IAAOiF,MAElB+O,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAMpsB,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGR,MAAO,OAAQuc,WAAY,QACtHiW,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,uBAA5B,gBADF,eAKJj0H,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM4G,GAAI,CAAC,EAAE,GAAIx0B,MAAO,EAAG+C,eAAgB,CAAC,SAAS,eACnDuwB,EAAA7yB,EAAAC,cAAC8mJ,EAAA,EAAD,CACE1mJ,MAAO,OACPue,UAAWC,IAAOiF,KAClB6uB,GAAI,yBAEJ9f,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAMpsB,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGR,MAAO,OAAQuc,WAAY,QACtHiW,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,wBAA5B,gBADF,gBAKJj0H,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM4G,GAAI,CAAC,EAAE,GAAIx0B,MAAO,EAAG+C,eAAgB,CAAC,SAAS,eACnDuwB,EAAA7yB,EAAAC,cAAC8mJ,EAAA,EAAD,CACE1mJ,MAAO,OACPue,UAAWC,IAAOiF,KAClB6uB,GAAI,2BAEJ9f,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAMpsB,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGR,MAAO,OAAQuc,WAAY,QACtHiW,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,0BAA5B,gBADF,kBAKJj0H,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM4G,GAAI,CAAC,EAAE,GAAIx0B,MAAO,EAAG+C,eAAgB,CAAC,SAAS,eACnDuwB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,6BACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAMpsB,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGR,MAAO,OAAQuc,WAAY,QACtHiW,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,oBAA5B,gBADF,YAKJj0H,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM4G,GAAI,CAAC,EAAE,GAAIx0B,MAAO,EAAG+C,eAAgB,CAAC,SAAS,eACnDuwB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,sGACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAMpsB,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGR,MAAO,OAAQuc,WAAY,QACtHiW,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,oBAA5B,gBADF,aAQZj0H,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM5tB,MAAO,CAAC,EAAEonJ,GAActkJ,cAAe,SAAU7C,OAAQ,CAAC,OAAO,SACrEqzB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAQ44G,GAAT,CAAYhlI,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAIqB,GAAI,EAAG9B,MAAO,aAAlG,wBAGAwyB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAMpsB,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAIT,MAAO,OAAQuc,WAAY,QACvGiW,EAAA7yB,EAAAC,cAAA,QAAM4mJ,KAAK,MAAMC,aAAW,SAA5B,gBADF,uBAIFj0H,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM5tB,MAAO,CAAC,EAAEonJ,GAActkJ,cAAe,UAC3CwwB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAQ44G,GAAT,CAAYhlI,UAAW,CAAC,SAAS,QAASoG,WAAY,YAAarG,SAAU,CAAC,EAAE,GAAIqB,GAAI,EAAG9B,MAAO,aAAlG,WAGAwyB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAM9qB,cAAe,MAAOC,eAAgB,CAAC,eAAe,eAC1DuwB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,mCACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAO1qB,IAAI,4BAA4BjD,OAAQ,QAASwD,GAAI,CAAC,OAAO,GAAIb,GAAI,CAAC,EAAE,GAAI+b,UAAW,EAAGze,aAAc,SAEjHozB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,4BACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAO1qB,IAAI,6BAA6BjD,OAAQ,QAASwD,GAAI,CAAC,OAAO,GAAIb,GAAI,CAAC,EAAE,GAAI+b,UAAW,EAAGze,aAAc,SAElHozB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,8BACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAO1qB,IAAI,4BAA4BjD,OAAQ,QAASwD,GAAI,CAAC,OAAO,GAAIb,GAAI,CAAC,EAAE,GAAI+b,UAAW,EAAGze,aAAc,SAEjHozB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,mCACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAO1qB,IAAI,2BAA2BjD,OAAQ,QAASwD,GAAI,CAAC,OAAO,GAAIb,GAAI,CAAC,EAAE,GAAI+b,UAAW,EAAGze,aAAc,SAEhHozB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,iCACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAO1qB,IAAI,2BAA2BjD,OAAQ,QAASwD,GAAI,CAAC,OAAO,GAAIb,GAAI,CAAC,EAAE,GAAI+b,UAAW,EAAGze,aAAc,SAEhHozB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,gDACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAO1qB,IAAI,6BAA6BjD,OAAQ,QAASwD,GAAI,CAAC,OAAO,GAAIb,GAAI,CAAC,EAAE,GAAI+b,UAAW,EAAGze,aAAc,SAElHozB,EAAA7yB,EAAAC,cAAC2mJ,EAAA,EAAD,CAAS9pI,KAAK,mCACZ+V,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CAAO1qB,IAAI,+BAA+BjD,OAAQ,QAASwD,GAAI,CAAC,OAAO,GAAIb,GAAI,CAAC,EAAE,GAAI+b,UAAW,EAAGze,aAAc,aAM5HozB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CACE5tB,MAAO,EACPC,OAAQ,CAAC,OAAO,QAChB6C,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBE,eAAgB,CAAC,SAAS,aAE1BuwB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CACE9tB,EAAG,EACHE,MAAO,EACP6C,WAAY,SACZE,eAAgB,SAChBW,gBAAiB,YACjBZ,cAAe,CAAC,SAAS,QAEzBwwB,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CACE9sB,MAAO,QACPU,UAAW,CAAC,SAAS,aAFvB,QAIU0lJ,EAJV,qBAMA5zH,EAAA7yB,EAAAC,cAAC8mJ,EAAA,EAAD,CACE1mJ,MAAO,OACPsyC,GAAI,oBACJ9nC,MAAO,CAAC8yG,eAAe,SAEvB9qF,EAAA7yB,EAAAC,cAACktB,EAAA,EAAD,CACE+0F,GAAI,EACJ7hH,MAAO,OACPU,UAAW,CAAC,SAAS,aAHvB,+BAzOOL,aAwPN65B,0HC7PTspH,mLACK,IAAAjjJ,EAAAhB,KAEDonJ,EAAW,SAACnnJ,GAAD,OACfgC,EAAA7B,EAAAC,cAACovB,EAAA,EAAQ24E,GAAT7oG,OAAAC,OAAA,CACEyB,WAAY,CAAC,EAAE,GACfR,MAAO,YACPwK,MAAO,CACLtL,MAAM,OACNyL,WAAW,UAEblK,SAAU,CAAC,OAAO,GAClBE,WAAY,WACRnB,GAEHA,EAAM2B,WAIX,OACEK,EAAA7B,EAAAC,cAACovB,EAAA,EAAD,CACE9vB,MAAOK,KAAKC,MAAMN,OAGfK,KAAKC,MAAMo0B,MAAQr0B,KAAKC,MAAMo0B,KAAK/yB,OAAO,EACzCW,EAAA7B,EAAAC,cAACovB,EAAA,EAAD,CACEjtB,WAAY,UAEZP,EAAA7B,EAAAC,cAAC+mJ,EACKpnJ,KAAKC,OAEXgC,EAAA7B,EAAAC,cAACovB,EAAA,EAAD,CACExkB,MAAO,CACLmT,OAAO,WAETf,QAAU,SAAA7W,GAAC,OAAIxF,EAAKf,MAAM4lH,iBAAiB7kH,EAAKf,MAAM2gB,MAAM5f,EAAKf,MAAMo0B,QAEvEpyB,EAAA7B,EAAAC,cAACovB,EAAA,EAAD,CACEua,UAAW,MACX/b,QAAS,iCAEThsB,EAAA7B,EAAAC,cAACovB,EAAA,EAAD,CACE/kB,GAAI,EACJhK,KAAM,OACND,MAAO,YACPue,UAAWC,IAAOjY,QAClBpG,KAAOZ,KAAKC,MAAM6C,SAAW,MAAQ,aAM7Cb,EAAA7B,EAAAC,cAAC+mJ,EACKpnJ,KAAKC,eArDOa,aA8DfmjJ,sIC9DT91C,qdAMqB9oG,EAAUC,kMAKjC,OACE2E,EAAA7J,EAAAC,cAACgnJ,EAAA,EAAD,CACEtjJ,IAAK/D,KAAKC,MAAM+D,MAAMC,GACtBnC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHrC,MAAM,EACNuE,KAAMlE,KAAKC,MAAM+D,MAAMG,KAAKC,SAAWpE,KAAKC,MAAM+D,MAAMG,KAAKC,QAAQ,GAAK,QAAU,MAGtF6F,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CACE9vB,MAAO,EACP8C,cAAe,UAGbzC,KAAKC,MAAM+D,MAAMG,KAAKE,YACpB4F,EAAA7J,EAAAC,cAACovB,EAAA,EAAD,CACEnrB,GAAI,EACJpD,SAAU,EACVD,WAAY,EACZR,MAAO,WACPU,UAAW,QAEVnB,KAAKC,MAAM+D,MAAMG,KAAKE,YAG5BrE,KAAKC,MAAM2B,kBArCWd,aA4ClBqtG,+qTC3CTvmF,6MAEJpjB,MAAQ,KAGRO,cAAgB,OAChBC,oBAAqB,6EAGfhF,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,8JAK9CD,KAAKgF,oBAAqB,yPAI1BhF,KAAKmF,gbAOkBE,EAAWC,mEAClCtF,KAAKmF,kJAGC,IAAAM,EAAAzF,KACAisB,EAAYjsB,KAAKC,MAAMgsB,UAEvBC,EAAa,CACjBjrB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZT,MAAM,YAIJwrB,EAAUhsB,OAASV,OAAO8B,KAAK4qB,EAAUhsB,OAAOqB,QAClD/B,OAAO8B,KAAK4qB,EAAUhsB,OAAOsB,QAAQ,SAAA9B,GACnCysB,EAAWzsB,GAAKwsB,EAAUhsB,MAAMR,KAKhCwsB,EAAU5C,WAAa9pB,OAAO8B,KAAK4qB,EAAU5C,WAAW/nB,QAC1D/B,OAAO8B,KAAK4qB,EAAU5C,WAAW9nB,QAAQ,SAAA9B,GACH,oBAAzBwsB,EAAU5C,UAAU5pB,KAC7BysB,EAAWzsB,GAAKwsB,EAAU5C,UAAU5pB,GAAGgG,EAAKxF,UAKlD,IAAIuxB,EAAkB,KAClB81H,GAAuB,EACrB97B,EAAYv/F,EAAUrhB,KACtB28I,EAAYt7H,EAAU/C,KACxBuI,EAAc81H,EAAYvnJ,KAAK+E,cAAc2sB,aAAa61H,EAAUvnJ,KAAKC,MAAMunB,KAAO,KAE1F,OAAQgkG,GACN,IAAK,QACHh6F,EAAkBI,IAClB1F,EAAWrpB,IAAM4uB,EACnB,MACA,IAAK,SACHA,EAAczxB,KAAK+E,cAAc6I,MAAM6jB,GAAavX,WACpDsX,EAAkBG,IAClBzF,EAAW1hB,OAASinB,EACtB,MACA,IAAK,OACHD,EAAkBK,IAClB3F,EAAWxrB,KAAO+wB,EACpB,MACA,IAAK,SACHD,EAAkBooF,IAClB0tC,GAAuB,EACvB71H,EAAcxF,EAAUpiB,OAASqiB,EAAWriB,MAC5CqiB,EAAW7O,QAAQ,kBAAM6O,EAAW3rB,YAAYkF,EAAKxF,QACvD,MACA,QACEuxB,EAAkBM,IAClBw1H,GAAuB,EAI3B,IAAK71H,EACH,OAAO,KAIT,GAAI81H,EAAU,CACZ,IAAMn7G,EAAkB7sC,OAAOiO,OAAO+5I,GAAWz2I,MACjD,GAAI9Q,KAAKC,MAAMunB,IAAX,GAAAxd,OAAkBoiC,EAAlB,UAA0C,CAC5C,IAAMC,EAAmBrsC,KAAKC,MAAMunB,IAAX,GAAAxd,OAAkBoiC,EAAlB,UAErBC,GAAoB9sC,OAAO8B,KAAKgrC,GAAkB/qC,QACpD/B,OAAO8B,KAAKgrC,GAAkB9qC,QAAQ,SAAA9B,GACpCysB,EAAWzsB,GAAK4sC,EAAiB5sC,MAMzC,OAAO+xB,EAAmB81H,EAAwBxhB,EAAA1lI,EAAAC,cAACmxB,EAAoBtF,EAAauF,GAAmCq0G,EAAA1lI,EAAAC,cAACmxB,EAAoBtF,GAAoB,YA3G1IprB,aA+GX8mB,k/MCjHT0tF,mLAIF,IAAMxyG,EAA0C,qBAAxB9C,KAAKC,MAAM6C,UAA2B9C,KAAKC,MAAM6C,SACnEH,EAAQ3C,KAAKC,MAAMk6B,SAAYl4B,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CAAOG,MAAO,OAAQkD,IAAK7C,KAAKC,MAAMk6B,UAAcn6B,KAAKC,MAAM8C,aAAoB/C,KAAKC,MAAMU,SAAYsB,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CAAMkB,KAAMV,KAAKC,MAAMU,UAAcX,KAAKC,MAAMkD,YAAiB,KAC1M02B,EAAW53B,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CAAMnB,UAAY2B,EAAW,OAAS,SAAU5B,SAAU,EAAGD,WAAY,EAAGR,MAAO,aAAcT,KAAKC,MAAM45B,SAE7H,OACI53B,EAAA7B,EAAAC,cAACiC,EAAA,EAAD/C,OAAAC,OAAA,CACEiB,MAAO,QACPZ,aAAc,EACdmC,GAAKc,EAAW,CAAC,EAAE,GAAK,EACxBf,GAAKe,EAAW,EAAI,CAAC,EAAE,GACvBP,GAAKO,EAAW,EAAI,CAAC,EAAE,GACvB4oB,GAAK5oB,EAAW,EAAI,CAAC,EAAE,GACvBua,QAAUrd,KAAKC,MAAMM,YACrBX,OAASkD,EAAW,OAAS,CAAC,QAAQ,SACtChD,UAAWE,KAAKC,MAAMmC,SAAW,cAAgB,SACjDgoB,cAAepqB,KAAKC,MAAMmC,SAAW,cAAgB,SACrDzC,MAAOK,KAAKC,MAAMN,MAAQK,KAAKC,MAAMN,MAASmD,EAAW,OAAS,CAAC,QAAQ,SAC3EmI,MAAOjL,KAAKC,MAAM8uI,YAAc/uI,KAAKC,MAAM8uI,YAAejsI,EAAW,CAACJ,eAAe,cAAgB,MACjG1C,KAAKC,MAAMX,aAEf2C,EAAA7B,EAAAC,cAAA4B,EAAA7B,EAAAsnG,SAAA,KAEI1nG,KAAKC,MAAMyhI,OACTz/H,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACE6H,SAAU,WACVtK,aAAc,OACdwD,gBAAkBrD,KAAKC,MAAMyhI,MAAM5wG,QAAU9wB,KAAKC,MAAMyhI,MAAM5wG,QAAU,OACxE7lB,MAAQnI,EAAW,CAAC6F,MAAM,QAAQD,IAAI,SAAW,CAACC,MAAM,QAAQD,IAAI,SACpE1G,GAAI,CAAC,MAAM,OACXD,GAAI,CAAC,MAAM,QAEXE,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACErB,WAAY,EACZC,SAAU,OACVT,MAAQT,KAAKC,MAAMyhI,MAAMjhI,MAAQT,KAAKC,MAAMyhI,MAAMjhI,MAAQ,QAE3DT,KAAKC,MAAMyhI,MAAM79H,OAKxB5B,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CAAMG,cAAgBK,EAAW,MAAQ,SAAUJ,eAAiBI,EAAW,aAAe,SAAUN,WAAY,UAClHP,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CAAM3C,MAAQmD,EAAW,OAAS,EAAIM,GAAKN,EAAW,EAAI,EAAIJ,eAAiBI,EAAW,aAAe,UACrG9C,KAAKC,MAAM4gI,YAAwC,QAA1B7gI,KAAKC,MAAM4gI,WAAuBhnG,EAAUl3B,GAEzEV,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CAAM3C,MAAQmD,EAAW,OAAS,EAAIL,cAAe,SAAUC,eAAiBI,EAAW,aAAe,UACtG9C,KAAKC,MAAM4gI,YAAwC,QAA1B7gI,KAAKC,MAAM4gI,WAAuBl+H,EAAQk3B,EAEnE75B,KAAKC,MAAMooH,YAAcroH,KAAKC,MAAMooH,WAAW1vF,MAAM,MAAMnmB,IAAI,SAAC5L,EAAEmC,GAKhE,OAHIA,IACFnC,EAAK3E,EAAA7B,EAAAC,cAAA,aAAQuG,IAGb3E,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CAAMyB,IAAG,cAAAiG,OAAgBjB,GAAK3H,WAAY,MAAOD,UAAY2B,EAAW,OAAS,SAAUrC,MAAO,WAAYQ,WAAY,EAAGC,SAAU,GAAI0F,gBA1DvI9F,aAqEXw0G,+z3BCrET3K,mLAGF,OACExqG,EAAAC,EAAAC,cAACG,EAAA,EAADjB,OAAAC,OAAA,CACEud,OAAQ,SACRE,IAAK,gCACDjd,KAAKC,OAERD,KAAKC,MAAM2B,iBATEd,aAeP6pG,6KCdTh5E,6MAGJ5sB,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,+IAGE,IAAAM,EAAAzF,KACHwnJ,EAAkB,IAChBh9I,EAAsC,qBAAtBxK,KAAKC,MAAMuK,QAA2BoE,MAAM5O,KAAKC,MAAMuK,UAAiC,IAAtBxK,KAAKC,MAAMuK,QAA0C,OAAtBxK,KAAKC,MAAMuK,OAAsC,KAApBxK,KAAKC,MAAMuK,OAE/J,GAAIA,EACF,OAAQxK,KAAKC,MAAM2K,MACjB,IAAK,QACH48I,EAAkBxnJ,KAAK+E,cAAc8O,YAAYrJ,EAAOxK,KAAKC,MAAMwnJ,WACrE,MACA,QACED,EAAkBxnJ,KAAK+E,cAAc2P,iBAAiBlK,EAAOxK,KAAKC,MAAMqK,SAAStK,KAAKC,MAAMsK,aAAavK,KAAKC,MAAM6pC,mBAIxH09G,EAAkB,IAGpB,IAAMjrI,EAAY,CAChB5c,MAAM,EACN6C,WAAW,SACXC,cAAc,MACdC,eAAe,UAIb1C,KAAKC,MAAMsc,WAAahd,OAAO8B,KAAKrB,KAAKC,MAAMsc,WAAWjb,QAC5D/B,OAAO8B,KAAKrB,KAAKC,MAAMsc,WAAWhb,QAAQ,SAAA9B,GACxC8c,EAAU9c,GAAKgG,EAAKxF,MAAMsc,UAAU9c,KAIxC,IAAMioJ,EAA+B,MAApBF,EACXG,EAAU3nJ,KAAKC,MAAM0nJ,QAAU3nJ,KAAKC,MAAM0nJ,QAAU,QAE1D,OACE19I,EAAA7J,EAAAC,cAACovB,EAAA,EACKlT,EAGFvc,KAAKC,MAAMguG,MAAoB,SAAZ05C,GAAsBD,GACvCz9I,EAAA7J,EAAAC,cAACovB,EAAA,EAASzvB,KAAKC,MAAMwK,UAAYzK,KAAKC,MAAMguG,MAEhDhkG,EAAA7J,EAAAC,cAACovB,EAAA,EAASzvB,KAAKC,MAAQunJ,GAErBxnJ,KAAKC,MAAMguG,MAAoB,UAAZ05C,GAAuBD,GACxCz9I,EAAA7J,EAAAC,cAACovB,EAAA,EAASzvB,KAAKC,MAAMwK,UAAYzK,KAAKC,MAAMguG,cA9D9BntG,aAqEX6wB,sGCtETm5E,mLAEF,IAAMxrG,EAAcC,OAAOC,OAAO,CAChCG,MAAM,EACNuB,SAAS,EACTD,WAAW,EACXrB,OAAO,OACP0e,UAAU,KACVze,aAAa,EACbC,UAAU,QACVE,KAAKC,MAAMX,aAEb,OACGa,EAAAC,EAAAC,cAACG,EAAA,EAADjB,OAAAC,OAAA,GACKF,EADL,CAEC+d,QAASrd,KAAKC,MAAMM,cAEnBP,KAAKC,MAAM2B,iBAjBMd,aAuBXgqG,mm0lICtBTgF,mLACK,IAAA9uG,EAAAhB,KAED4nJ,IAAmB5nJ,KAAKC,MAAM2nJ,eAEpC,OACE3lJ,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACE3C,MAAO,EACPsE,GAAI,aACJzB,WAAY,UAGVxC,KAAKC,MAAMM,aACV0B,EAAA7B,EAAAC,cAACwnJ,EAAA,EAAD,CACEvoJ,YAAa,CACXI,OAAO,EACPC,MAAM,OACNC,OAAO,QAETiB,SAAU,QACVF,SAAU,YACVJ,YAAaP,KAAKC,MAAMM,cAI3BP,KAAKC,MAAM4D,MAAQ7D,KAAKC,MAAM4D,KAAKvC,OAAO,GACzCW,EAAA7B,EAAAC,cAACiC,EAAA,EAAD,CACEoI,GAAI,CAAC,EAAE,GACPxJ,SAAU,CAAC,EAAE,GACbD,WAAY,EACZR,MAAO,WACPuc,WAAY,YACZK,QAASrd,KAAKC,MAAMM,aAEpBP,KAAKC,MAAM4D,QAIZ7D,KAAKC,MAAM6C,UAAY8kJ,IAAmB5nJ,KAAKC,MAAMipB,MAAQlpB,KAAKC,MAAMipB,KAAK5nB,OAAO,GACpFtB,KAAKC,MAAMipB,KAAK1W,IAAI,SAAC0W,EAAKrb,GACxB,IAAMqW,EAAOljB,EAAKf,MAAM6nJ,UAAY9mJ,EAAKf,MAAM6nJ,SAASj6I,IAAkB,KACpE/M,EAAYojB,EAAO6jI,IAAOj2H,IAChC,OACE7vB,EAAA7B,EAAAC,cAACS,EAAD,CACEwhH,GAAI,CAAC,EAAE,GACP53G,GAAI,CAAC,EAAE,GACPzJ,WAAY,EACZC,SAAU,CAAC,EAAE,GACb8b,WAAY,YACZ/R,MAASjK,EAAKf,MAAM6C,SAMhB,KAN2B,CAC7BiuB,SAAS,MACTC,SAAU,SACV5lB,WAAY,SACZ6lB,aAAc,WACd+2H,WAAU,aAAAh+I,OAAehJ,EAAKf,MAAMsD,MAAMC,OAAOygB,UAEnDlgB,IAAG,mBAAAiG,OAAqB6D,GACxBpN,MAAOyjB,EAAO,WAAa,YAC3B7G,QAAS6G,EAAO,SAAA1d,GAAC,OAAIxF,EAAKf,MAAMivG,YAAYhrF,IAAQ,MAEnDgF,aA5DMpoB,aAsEVgvG,sICtETm4C,6MAEJzjJ,MAAQ,CACNX,KAAK,QAIPkB,cAAgB,gFAGV/E,KAAK+E,cACP/E,KAAK+E,cAAcE,SAASjF,KAAKC,OAEjCD,KAAK+E,cAAgB,IAAIG,IAAclF,KAAKC,4JAK9CD,KAAKmF,YACLnF,KAAKoF,gMAGkBC,EAAUC,mEACjCtF,KAAKmF,yQAICgsB,GAA+C,IAA9BnxB,KAAKC,MAAMkxB,eAC9BttB,EAAO7D,KAAK+E,cAAc6vC,YAAY50C,KAAKC,MAAM6N,OACrCqjB,kCAAuBnxB,KAAK+E,cAAciwC,WAAWh1C,KAAKC,MAAM6N,oDAAQ,aAAlFunC,UAGJxxC,EAAOwxC,GAETr1C,KAAK4F,SAAS,CACZ/B,6IAKF,IAAMypB,EAAUw4G,EAAA1lI,EAAAC,cAAC6yB,EAAA,EAAD,CAAQtyB,KAAK,SAC7B,OAAOZ,KAAKwE,MAAMX,KAAOiiI,EAAA1lI,EAAAC,cAAC6yB,EAAA,EAAD3zB,OAAAC,OAAA,CAAM6H,QAAS,UAAcrH,KAAKC,OAAQD,KAAKwE,MAAMX,MAAeypB,SAzCzExsB,aA6CTmnJ,yHC1BAC,mLAfX,OACE/gI,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CACE5kB,WAAY,SACZE,eAAgB,UAEhBykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAW,CAACC,IAAO,kBACtBkI,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAW,CAACC,IAAO,sBAAuByM,GAAI,CAAC,EAAE,KACtDvE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAW,CAACC,IAAO,sBAAuByM,GAAI,CAAC,EAAE,KACtDvE,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAKpI,UAAW,CAACC,IAAO,sBAAuByM,GAAI,CAAC,EAAE,cAVnC5qB,aCCvBw9G,mLAEF,OACGn3F,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD7nB,OAAAC,OAAA,CACC6d,QAASrd,KAAKC,MAAMM,aACfP,KAAKC,MAAMX,aAEhB6nB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAM3kB,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UACnEykB,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,EAAG0H,QAAUrH,KAAKC,MAAMu+G,UAAY,OAAS,QACxDr3F,EAAA/mB,EAAAC,cAAC8nJ,EAAD,OAEFhhI,EAAA/mB,EAAAC,cAAC+mB,EAAA,EAAD,CAAMznB,MAAO,EAAG0H,QAAUrH,KAAKC,MAAMu+G,UAAY,OAAS,QACvDx+G,KAAKC,MAAMs+G,qBAZGz9G,aAoBZw9G","file":"static/js/main.c6762566.chunk.js","sourcesContent":["import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// import { Line } from '@nivo/line';\n// import CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    // console.log('TrancheField - loadField',fieldName,this.componentUnmounted,this.props.protocol,this.props.token,this.props.tokenConfig);\n\n    const fieldProps = fieldInfo.props;\n    // const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    // const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const tranchePrice = await this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheField('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const previousHarvest = transfers.length>1 ? transfers[transfers.length-2] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const previousBlock = previousHarvest ? previousHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(previousBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n\n          const elapsedBlocks = latestHarvest.blockNumber-previousBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n          const transferAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const tokensPerBlock = transferAmount.div(elapsedBlocks);\n          const tokensPerSecond = transferAmount.div(elapsedSeconds);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.token,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLEDistribution':\n        const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n          // console.log('trancheIDLEDistribution',rewardsTokensInfo.IDLE,output);\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' ? rewardsTokens.filter( rewardTokenAddr => !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest',TTL=null) => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,TTL);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    const tokenConfig = this.props.tokenConfig || this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n    return (\n      <DashboardCard\n        cardProps={{\n          py:3,\n          px:3,\n          border:null,\n          style:{\n            // border:`1px solid ${trancheDetails.color.hex}`\n          }\n        }}\n      >\n        <Flex\n          pb={2}\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Icon\n              mr={2}\n              size={'2.2em'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,6]}\n              color={trancheDetails.color.hex}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            alignItems={'flex-end'}\n            flexDirection={'column'}\n          >\n            <TrancheField\n              fieldInfo={{\n                name:`${trancheDetails.baseName}Apy`,\n                showTooltip:false,\n                props:{\n                  decimals:2,\n                  fontWeight:4,\n                  fontSize:[3,6],\n                  textAlign:'center',\n                  flexProps:{\n                    justifyContent:'center'\n                  },\n                  color:this.props.trancheDetails.color.hex\n                },\n              }}\n              {...this.props}\n              tokenConfig={tokenConfig}\n              token={strategyInfo.token}\n              tranche={strategyInfo.tranche}\n              protocol={strategyInfo.protocol}\n            />\n            {\n              /*\n              <TrancheField\n                fieldInfo={{\n                  showLoader:false,\n                  name:'trancheIDLEDistribution',\n                  props:{\n                    decimals:2,\n                    fontWeight:2,\n                    fontSize:[0,1],\n                    color:'cellText',\n                    textAlign:'center',\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  },\n                }}\n                {...this.props}\n                tokenConfig={tokenConfig}\n                token={strategyInfo.token}\n                trancheConfig={tokenConfig.AA}\n                tranche={strategyInfo.tranche}\n                protocol={strategyInfo.protocol}\n              />\n              */\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          <Text\n            mb={3}\n            fontWeight={3}\n            color={'copyColor'}\n          >\n            {trancheDetails.description.long}\n          </Text>\n          {\n            trancheDetails.features.map( (feature,index) => (\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                key={`feature_${index}`}\n              >\n                <Icon\n                  mr={2}\n                  name={'Done'}\n                  color={trancheDetails.color.hex}\n                />\n                <Text\n                  fontSize={3}\n                  fontWeight={3}\n                  color={trancheDetails.color.hex}\n                >\n                  {feature}\n                </Text>\n              </Flex>\n            ))\n          }\n          <Button\n            mt={3}\n            width={1}\n            contrastColor={'cardBg'}\n            icon={trancheDetails.icon}\n            mainColor={trancheDetails.color.hex}\n            onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n          >\n            {\n              this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n            }\n          </Button>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TrancheBox from '../TrancheBox/TrancheBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    return (\n      <Box\n        mb={3}\n        width={1}\n      >\n        {\n          !this.props.tokenConfig && (\n            <Title\n              mb={3}\n            >\n              Welcome to Tranches\n            </Title>\n          )\n        }\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          {\n            Object.keys(tranchesDetails).map( trancheType => (\n              <Flex\n                mb={[3,0]}\n                flexDirection={'column'}\n                key={`tranche_${trancheType}`}\n                width={[1,(1/Object.keys(tranchesDetails).length)-0.02]}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <TrancheBox\n                    {...this.props}\n                    tokenConfig={this.props.tokenConfig}\n                    trancheDetails={tranchesDetails[trancheType]}\n                  />\n                </Flex>\n              </Flex>\n            ))\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          >\n            <Icon\n              mr={2}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          {\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n          }\n          {\n            this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      icon={'LightbulbOutline'}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        fontSize:'15px',\n                        textAlign:'center',\n                        color:'flashColor'\n                      }}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\nimport TransactionsList from '../TransactionsList/TransactionsList';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadTransactions();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() ) : [];\n    this.setState({\n      transactions\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n            <Flex\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,Math.min(0.5,(1/filteredTranchesTypes.length)-0.02)]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n\n        // console.log(timeStamp,token,filteredBalances,foundBalances);\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadPortfolio().then( () => {\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol,\n          });\n        }\n      }\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && !this.state.userHasFunds){\n      this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={3}\n              >\n                {this.state.useTrancheType ? this.functionsUtil.capitalize(this.state.trancheDetails.baseName) : null} Tranches\n              </Title>\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.27,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:!!this.state.useTrancheType\n                    },\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      props:{\n                        width:[0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                      visible:!this.state.useTrancheType || this.state.useTrancheType === 'AA'\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      props:{\n                        width:[0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                      visible:!this.state.useTrancheType || this.state.useTrancheType === 'BB'\n                    },\n                    {\n                      mobile:false,\n                      title:'GOVERNANCE TOKENS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:this.props.account === null,\n                      props:{\n                        width:[ this.props.account === null ? 0.29 : 0 ,0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    AA:{\n      color:{\n        // hex:'#00ff06',\n        hex:'#00a9fe',\n        rgb:[0, 169, 254],\n        hsl:['200', '100%', '50%']\n      },\n      type:'AA',\n      route:'senior',\n      icon:'Security',\n      baseName:'senior',\n      name:'Senior Tranche',\n      features:[\n        'Funds covered by Junior tranches TVL',\n        'Minimized risk exposure',\n        'Withdraw your funds at any time',\n        'Auto-Reinvest accrued tokens',\n      ],\n      description:{\n        long:'The Senior Tranche offers the safest way to access the lending market and enjoy its returns thanks to the built-in funds coverage.',\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    BB:{\n      color:{\n        hex:'#ff9900',\n        rgb:[255, 153, 0],\n        hsl:['36', '100%', '50%']\n      },\n      type:'BB',\n      route:'junior',\n      icon:'TrendingUp',\n      baseName:'junior',\n      name:'Junior Tranche',\n      features:[\n        'Leverage yield using Senior tranches TVL',\n        'Higher risk exposure by protecting senior tranches',\n        'Withdraw your funds at any time',\n        'Auto-Reinvest accrued tokens',\n      ],\n      description:{\n        long:'The Junior Tranche offers the maximum performance in terms of interests for your assets but expose your funds to an higher risk.',\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B'\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'IdleCDO_AA_idleDAIYield',\n        token:'IdleCDO_AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d'\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'IdleCDO_BB_idleDAIYield',\n        token:'IdleCDO_BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n"],"sourceRoot":""}