{"version":3,"sources":["CardIconButton/CardIconButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","my","alignItems","flexDirection","justifyContent","useIconOnly","align","name","icon","size","isMobile","color","iconColor","mr","p","borderRadius","backgroundColor","iconBgColor","theme","colors","transactions","actionBg","redeem","fontWeight","fontSize","textProps","text","Component"],"mappings":"8KAIMA,mLAEF,IAAMC,EAAYC,OAAOC,OAAO,CAC9BC,GAAG,EACHC,MAAM,OACNC,GAAG,CAAC,OAAO,IACXC,KAAKC,MAAMP,WAEb,OACGQ,EAAAC,EAAAC,cAACC,EAAA,QAAD,CACEX,UAAWA,EACXY,eAAe,EACfC,SAAUP,KAAKC,MAAMM,SACrBC,YAAaR,KAAKC,MAAMO,aAExBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAGfb,KAAKC,MAAMa,YACTZ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEM,MAAO,SACPC,KAAMhB,KAAKC,MAAMgB,KACjBC,KAAOlB,KAAKC,MAAMkB,SAAW,QAAU,QACvCC,MAAQpB,KAAKC,MAAMoB,UAAYrB,KAAKC,MAAMoB,UAAY,WAGzDnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEa,GAAI,EACJC,EAAG,CAAC,MAAM,OACVC,aAAc,MACdb,WAAY,SACZE,eAAgB,SAChBY,gBAAkBzB,KAAKC,MAAMyB,YAAc1B,KAAKC,MAAMyB,YAAc1B,KAAKC,MAAM0B,MAAMC,OAAOC,aAAaC,SAASC,QAElH7B,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEM,MAAO,SACPC,KAAMhB,KAAKC,MAAMgB,KACjBC,KAAOlB,KAAKC,MAAMkB,SAAW,QAAU,QACvCC,MAAQpB,KAAKC,MAAMoB,UAAYrB,KAAKC,MAAMoB,UAAY,YAK5DnB,EAAAC,EAAAC,cAACK,EAAA,EAADd,OAAAC,OAAA,CACEoC,WAAY,EACZC,SAAU,CAAC,EAAE,IACTjC,KAAKC,MAAMiC,WAEdlC,KAAKC,MAAMkC,eApDIC,aA4Dd3C","file":"static/js/36.5ab7fcfe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;"],"sourceRoot":""}