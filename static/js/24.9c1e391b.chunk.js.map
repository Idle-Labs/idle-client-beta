{"version":3,"sources":["Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js"],"names":["DelegateField","state","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","prevProps","prevState","output","fieldInfo","delegate","Object","assign","fieldProps","fontWeight","fontSize","color","style","maxWidth","overflow","textOverflow","flexProps","justifyContent","keys","length","forEach","p","name","react_default","a","createElement","index_es","alignItems","opts","size","bgcolor","spotcolor","seed","value","formatMoney","BNify","toFixed","Component","DelegatesList","page","filters","loading","rowsPerPage","totalRows","totalPages","activeFilters","processedRows","lastBlockNumber","applyFilters","_this","setState","processList","resetFilters","status","arguments","undefined","delegates","values","sort","b","timestamp","maxRows","splice","Math","ceil","i","push","e","preventDefault","max","min","pageChanged","delegatesChanged","JSON","stringify","_this2","flexDirection","width","m","FlexLoader","minHeight","loaderProps","textProps","ml","text","position","id","TableHeader","cols","isMobile","map","index","delegateId","TableRow","rowProps","isInteractive","key","concat","handleClick","goToSection","fieldComponent","rowId","cardId","height","mr","onClick","prevPage","nextPage","h3","textAlign","fontFamily","Overview","proposals","totalSupply","dataLoaded","votesDelegated","governanceUtil","GovernanceUtil","loadData","Promise","all","getDelegates","getProposals","getTotalSupply","reduce","d","parseFloat","votes","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","mb","pr","_StatsCard_StatsCard__WEBPACK_IMPORTED_MODULE_11__","label","labelTooltip","title","titleMinHeight","pl","mt","_ProposalsList_ProposalsList__WEBPACK_IMPORTED_MODULE_14__","filtersEnabled","fields","mobile","parentProps","_DelegatesList_DelegatesList__WEBPACK_IMPORTED_MODULE_15__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_12__"],"mappings":"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","file":"static/js/24.9c1e391b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n"],"sourceRoot":""}