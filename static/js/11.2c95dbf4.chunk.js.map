{"version":3,"sources":["DashboardMenu/DashboardMenu.js","Governance/Governance.js"],"names":["DashboardMenu","state","buyModalOpened","functionsUtil","this","setProps","props","FunctionsUtil","setState","loadUtils","prevProps","prevState","_this2","menu","length","visibleLinks","filter","menuLink","showMobile","undefined","mobile","isMobile","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","p","flexDirection","mb","alignItems","justifyContent","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","position","height","src","map","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","my","key","concat","width","route","href","style","textDecoration","borderRadius","backgroundColor","selected","boxShadow","image","mr","ml","align","imageInactive","icon","name","size","color","bgColor","fontWeight","textAlign","fontSize","whiteSpace","label","Component","Overview","React","lazy","Promise","all","__webpack_require__","e","then","bind","Delegate","Proposals","Leaderboard","RoundButton","resolve","DashboardCard","TooltipModal","DashboardHeader","Dashboard","votes","balance","baseRoute","modalTitle","activeModal","blockNumber","currentRoute","modalContent","pageComponent","timelockDelay","currentSection","selectedSection","currentDelegate","proposalThreshold","selectedSubsection","proposalMaxOperations","timeoutId","governanceUtil","resetModal","_this","openTooltipModal","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","setActiveModal","logout","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","wrap","_context","prev","next","setConnector","initWeb3","stop","GovernanceUtil","window","getGlobalConfig","push","submenu","component","theme","colors","primary","params","match","location","hash","substr","forEach","m","sectionRoute","section","toLowerCase","subm","goToSection","clearTimeout","loadMenu","loadParams","setTimeout","accountInizialized","contractsInitialized","showResetButton","loadData","prevParams","JSON","stringify","_this3","accountChanged","account","isGovernance","arguments","replace","newRoute","scrollTo","getBlockNumber","getTimelockDelay","getProposalParams","getCurrentVotes","getTokensBalance","getCurrentDelegate","SuspenseLoader","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","minHeight","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_8__","textProps","textSize","loaderProps","flexProps","text","PageComponent","innerHeight","bottom","zIndex","_DashboardMenu_DashboardMenu__WEBPACK_IMPORTED_MODULE_12__","Object","assign","py","px","overflowY","overflowX","react__WEBPACK_IMPORTED_MODULE_10__","fallback","urlParams","loadUserData","cardProps","mt","buttonProps","handleClick","closeModal","title","content","isOpen"],"mappings":"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","file":"static/js/11.2c95dbf4.chunk.js","sourcesContent":["import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport React, { Component, Suspense } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nconst Overview =  React.lazy(() => import('./Overview'));\nconst Delegate =  React.lazy(() => import('./Delegate'));\nconst Proposals =  React.lazy(() => import('./Proposals'));\nconst Leaderboard =  React.lazy(() => import('./Leaderboard'));\nconst RoundButton =  React.lazy(() => import('../RoundButton/RoundButton'));\nconst DashboardCard =  React.lazy(() => import('../DashboardCard/DashboardCard'));\nconst TooltipModal =  React.lazy(() => import('../utilities/components/TooltipModal'));\nconst DashboardHeader =  React.lazy(() => import('../DashboardHeader/DashboardHeader'));\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    blockNumber:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    timelockDelay:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add Forum\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:this.functionsUtil.getGlobalConfig(['forumURL'])\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        blockNumber,\n        timelockDelay,\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.functionsUtil.getBlockNumber(),\n        this.governanceUtil.getTimelockDelay(),\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        blockNumber,\n        timelockDelay,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={'Loading Governance...'}\n        />\n      </Flex>\n    );\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          <Suspense\n            fallback={SuspenseLoader}\n          >\n            {\n              !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n                <Flex\n                  width={1}\n                  minHeight={'50vh'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  {\n                    !this.state.showResetButton ? (\n                      <FlexLoader\n                        textProps={{\n                          textSize:4,\n                          fontWeight:2\n                        }}\n                        loaderProps={{\n                          mb:3,\n                          size:'40px'\n                        }}\n                        flexProps={{\n                          my:3,\n                          flexDirection:'column'\n                        }}\n                        text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                      />\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3,\n                          width:[1,0.35]\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Warning'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.logout.bind(this)}\n                          >\n                            Logout\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <DashboardHeader\n                    goToSection={this.goToSection.bind(this)}\n                    {...this.props}\n                  />\n                  {\n                    PageComponent &&\n                      <PageComponent\n                        {...this.props}\n                        votes={this.state.votes}\n                        balance={this.state.balance}\n                        urlParams={this.state.params}\n                        blockNumber={this.state.blockNumber}\n                        loadUserData={this.loadData.bind(this)}\n                        timelockDelay={this.state.timelockDelay}\n                        goToSection={this.goToSection.bind(this)}\n                        currentDelegate={this.state.currentDelegate}\n                        selectedSection={this.state.selectedSection}\n                        proposalThreshold={this.state.proposalThreshold}\n                        selectedSubsection={this.state.selectedSubsection}\n                        openTooltipModal={this.openTooltipModal.bind(this)}\n                        proposalMaxOperations={this.state.proposalMaxOperations}\n                        />\n                  }\n                </Flex>\n              )\n            }\n          </Suspense>\n        </Flex>\n        <Suspense\n          fallback={null}\n        >\n          <TooltipModal\n            closeModal={this.resetModal}\n            title={this.state.modalTitle}\n            content={this.state.modalContent}\n            isOpen={this.state.activeModal === 'tooltip'}\n          >\n          </TooltipModal>\n        </Suspense>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;"],"sourceRoot":""}