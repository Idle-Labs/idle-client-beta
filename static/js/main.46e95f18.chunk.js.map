{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","IconBox/IconBox.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","RoundIconButton/RoundIconButton.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AllocationChart/AllocationChart.js","PortfolioEquity/PortfolioEquity.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TooltipText/TooltipText.js","TransactionField/TransactionField.js","utilities/components/Header.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","Faquestion/Faquestion.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","utilities/components/GenericModal.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","ScrollToTop/ScrollToTop.js","Footer/Footer.js","PageNotFound/PageNotFound.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","theme-dark.js","utilities/components/ModalCard.module.scss","Footer/Footer.module.scss","Title/Title.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","AssetsUnderManagement/AssetsUnderManagement.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","FlexLoader/FlexLoader.js","colors.js","TrancheField/TrancheField.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","justifyContent","this","props","textProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isActive","color","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_8__","isInteractive","backgroundColor","isDisabled","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","my","alignItems","flexDirection","align","mx","margin","iconBgColor","useIconOnly","borderRadius","mr","isSidebar","p","theme","colors","transactions","actionBg","redeem","image","src","height","isMobile","imageProps","name","icon","size","iconColor","iconProps","fontWeight","fontSize","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","unitProps","IconBox","react__WEBPACK_IMPORTED_MODULE_5___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isVisible","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mt","textAlign","dangerouslySetInnerHTML","__html","children","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","fontFamily","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","RoundIconButton","mainColor","disabled","contrastColor","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","CustomIndicatorSeparator","CustomMenu","zIndex","boxShadow","position","outerColor","selectProps","value","label","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","fonts","sansSerif","cardBg","className","styles","searchInput","themeMode","dark","menuIsOpen","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","tx","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","status","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","account","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","action","waitText","capitalize","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","protocolIcon","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_callee","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","twitterIcon","radioBtn","button","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","mouseOver","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","gradientButton","empty","select","selectDark","input","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","initContract","abi","contractInfo","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args7","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","_ref4","protocol","protocolConfig","_ref5","protocolToken","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","cdo","CDO","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","tokensToMigrate","totalBalanceConverted","_ref15","_ref17$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_x9","_ref19","_ref20","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","_x10","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args11","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_callee13","_args13","_context13","idleTokensBalance","getFirstDepositTx","_callee14","deposits","_args14","_context14","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee15","firstDepositTxs","_args15","_context15","reduce","acc","getTrancheUserTransactionsEvents","_ref26","_callee16","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref27","_ref28","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","trancheToken_received","trancheToken_sent","_context16","getContractEvents","_x11","_x12","_x13","_ref29","_callee17","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args17","_context17","endpoints","makeEtherscanApiRequest","result","some","getTrancheGaugeConfig","trancheTokenAddresses","trancheType","cdoRewardsContractAddresses","addr","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","stakingContractAddresses","isTrancheReceived","isTrancheSent","returnValues","_x14","getEtherscanTokenTransfers","_ref30","_callee18","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args18","_context18","_x15","_x16","getTrancheStakingRewardsDistributions","_ref31","_callee20","stakingDistributions","_context20","_ref32","_callee19","transfers","_context19","_x19","_x17","_x18","getTrancheHarvests","_ref33","_callee22","_ref34","_ref35","stakingRewardsDistributions","autoFarming","harvestsList","_context22","_ref36","_callee21","_context21","_x22","_x20","_x21","loadTrancheStrategyContract","_ref37","_callee23","strategyConfig","idleStrategyAddress","_context23","Strategy","genericContractCallCachedTTL","_x23","getTrancheLastHarvest","_ref38","_callee24","harvestEnabled","startBlock","latestHarvestBlock","totalAmount","_context24","_x24","_x25","getGovTokenApr","_ref39","_callee25","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref40","_ref41","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context25","getTokenConfig","_address","apr2apy","apr","apy","_x26","_x27","_x28","_x29","getTrancheRewardTokensInfo","_ref42","_callee27","tokensDistribution","_context27","_ref43","_callee26","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref44","_ref45","prevHarvest","_latestHarvest","firstBlock","_ref46","_ref47","poolSize","elapsedBlocks","elapsedSeconds","_context26","rewardsRate","now","genericContractCallCached","getBlockInfo","_x32","_x30","_x31","_ref48","_callee29","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args29","_context29","_ref49","_callee28","trancheTokenTransferEvent","_ref50","_ref51","blockInfo","tokenConversionRate","_context28","_x35","tokenTransferEvent","trancheTokenAmount","hashKey","trancheTokens","_x33","_x34","getTrancheUserTransactions","_ref52","_callee30","_context30","_x36","_x37","_x38","getTrancheFirstDepositTx","_ref53","_callee31","_context31","_x39","_x40","_x41","getAmountDepositedTranche","_ref54","_callee32","_context32","_x42","_x43","_x44","_ref55","_callee33","_ref56","_ref57","userAvgPrice","_context33","_x45","_x46","getAmountLent","_callee34","amountLents","_args34","_context34","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee40","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref60","_ref61","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args40","_context40","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref62","_callee35","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context35","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x47","_ref63","_callee36","_context36","_x48","match","_ref64","_callee37","_context37","_x49","_ref65","_callee38","_context38","_x50","items","to_address","_ref66","_callee39","polygonTx","erc20RootToken","_context39","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x51","getPolygonBaseTxs","_callee41","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args41","_context41","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee42","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args42","_context42","filterEthereumTxs","_callee43","_args43","_context43","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee44","resultData","allAvailableTokens","_args44","_context44","processStoredTxs","_callee45","contractInstance","_context45","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","t1","checkPolygonTransactionIncluded","_ref72","_callee46","_ref73","_ref74","_context46","getTransactionReceipt","_x52","_ref75","_callee47","_args47","_context47","_x53","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref76","_callee48","processTransactions","idleTokensAddresses","_args48","_context48","mappedTx","_x54","_x55","filterEtherscanTxs","_ref77","_callee49","processTxs","_args49","_context49","_x56","_ref78","_callee50","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args50","_context50","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x57","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref79","_callee55","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args55","_context55","baseTokenConfig","baseTokenAddress","_ref80","_callee54","minedTxs","_context54","_ref81","_callee53","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context53","getCurveTokenPrice","_ref82","_callee51","_context51","_x62","_x63","baseTokensConfig","t2","_ref83","_callee52","_context52","_x64","_x65","_x60","_x61","_x59","_x58","_ref84","_callee61","txsToProcess","_args61","_context61","_ref85","_callee60","_context60","_ref86","_callee59","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context59","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref87","_callee56","_context56","_x70","_x71","_ref88","_callee57","_context57","_x72","_x73","oldContract","events","raw","_ref89","_callee58","_context58","_x74","_x75","decodeLog","_token","_x68","_x69","_x67","_x66","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref90","_callee62","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args62","_context62","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x76","getBestTranche","_callee63","maxApy","trancheStrategyConfig","_args63","_context63","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref92","_callee64","error_callback","config","_args64","_context64","post","catch","_x77","_ref93","_callee65","_args65","_context65","_x78","_ref94","_callee66","apiKeyIndex","apiKey","_args66","_context66","_x79","_ref95","_callee67","return_data","_args67","_context67","_x80","makeCachedPostRequest","_ref96","_callee68","_args68","_context68","_x81","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee69","page","googlePageviewInfo","isOrigin","_args69","_context69","ga","_ref98","_callee71","googleEventsInfo","debugEnabled","originOk","_args71","_context71","analytics","google","addPostfixForTestnet","_ref99","_callee70","_context70","hitCallback","hitCallbackFail","_x83","_x84","_x82","createContract","_ref100","_callee72","_context72","_x85","_x86","_x87","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee75","activeOnly","whitelist","proposals","validProposals","_args75","_context75","_ref102","_callee74","checkedStrategies","_context74","end","author","snapshot","strategies","_ref103","_callee73","tokenContract","_context73","_x89","_x88","getAprsFromApi","_callee76","endpointInfo","aprs","_args76","_context76","_ref105","_callee77","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args77","_context77","_x90","getTokenExchangeRate","_ref106","_callee78","exchangeRateParams","exchangeRate","_context78","_x91","_x92","getTokenDecimals","_ref107","_callee79","_context79","_x93","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee80","idleTokenConfig","feeDistributorConfig","_context80","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee81","contractPaused","_args81","_context81","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref110","_callee83","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context83","lastAllocationsPromise","_ref111","_callee82","lastAllocations","_context82","_x95","_x96","alloc","_x94","_ref112","_callee84","oldContractBalance","oldContractTokenDecimals","oldContractName","_context84","_x97","_x98","_ref113","_callee85","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args85","_context85","getBlockNumber","getContractPastEvents","callEvents","_x99","_x100","_ref114","_callee86","_args86","_context86","getPastEvents","_x101","_x102","estimateMethodGasUsage","_ref115","_callee87","methodParams","_contract$methods","functionCall","gasLimit","_ref116","_ref117","_args87","_context87","getGasPrice","estimateGas","_x103","_x104","_ref118","_callee88","userAddress","signedParameters","callback_receipt","_contract$methods2","_context88","on","once","confirmationNumber","receipt","_x105","_x106","_x107","_x108","_x109","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref119","_callee89","biconomyInfo","res","_context89","limits","apiId","headers","x-api-key","_x110","sendTxWithPermit","_ref120","_callee90","_contract$methods3","messageToSign","_this$getSignaturePar","_context90","encodeABI","personal","sign","_x111","_x112","_x113","_x114","_x115","_x116","buildBiconomyErc20ForwarderTx","_ref121","_callee91","permitType","callData","buildParams","_context91","txGas","erc20ForwarderClient","buildTx","_x117","_x118","_x119","_x120","_x121","_ref122","_callee93","_context93","_ref123","_callee92","_context92","_x123","_x124","_x122","sendBiconomyTxWithErc20Forwarder","_ref124","_callee94","req","metaInfo","txResponse","fetchReceiptIntervalId","_context94","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x125","_x126","_x127","_x128","sendBiconomyTxWithPersonalSign","_ref125","_callee95","_this$getSignaturePar2","_context95","getNonce","_x129","_x130","_x131","_x132","signPermitEIP2612","_ref126","_callee96","erc20Name","owner","spender","deadline","domain","permit","domainData","_context96","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x133","_x134","_x135","_x136","_x137","_x138","_x139","_x140","signPermit","_ref127","_callee97","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args97","_context97","net","getId","nonceMethod","round","pow","allowed","response","_x141","_x142","_x143","_ref128","_callee98","permitParams","methodAbi","useNonce","_args98","_context98","_jsonInterface","f","unshift","_x144","_x145","_x146","_x147","_x148","_x149","_x150","sendSignedTx","_ref129","_callee99","MetaTransaction","dataToSign","_context99","_x151","_x152","_x153","_x154","_x155","checkTokenApproved","_ref130","_callee100","contractAddr","_ref131","_ref132","allowance","_context100","getAllowance","gte","_x156","_x157","_x158","_ref133","_callee101","_context101","_x159","_x160","_x161","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee103","highestValue","_args103","_context103","lendRates","aprInfo","tokenAPR","_ref135","_callee102","_context102","_x162","_ref136","_callee104","_args104","_context104","_x163","_x164","calculateGaugeBoost","_ref137","_callee105","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args105","_context105","workingBalance","getTokenTotalSupply","workingSupply","_x165","_x166","availableGauges","getGaugeWeight","_ref138","_callee106","lastGaugeTimestamp","gaugeWeight","_context106","_x167","getGaugeAbsoluteWeight","_ref139","_callee107","_ref140","_ref141","totalWeight","_context107","_x168","getGaugeNextWeight","_ref142","_callee108","nextGaugeTimestamp","_context108","_x169","getGaugeRewardsTokens","_ref143","_callee109","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndex","rewardTokenAddress","_ref144","_ref145","rewardData","rewardTokenBalance","cdoConfig","_ref146","_ref147","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_args109","_context109","rate","maxRewards","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x170","_ref148","_callee111","_args111","_context111","_ref149","_callee110","tokenGlobalConfig","stakingRewardsContract","_context110","_x173","_x171","_x172","_ref150","_callee112","field","addGovTokens","_args112","_context112","loadTrancheField","_x174","_x175","_x176","_x177","_x178","_x179","_x180","_x181","_ref151","_callee113","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref152","_ref153","totalSupply","virtualPrice","_ref154","_ref155","gaugeBalance","lastPrice1","staked1","totalStaked","_ref156","_ref157","deposited1","lastPrice","_ref158","_ref159","redeemable1","staked2","_ref160","_ref161","earningsStart","trancheApy2","deposited3","earningsEnd","_ref162","_ref163","trancheFee","earningsCounter","feesEnd","feesStart","_ref164","_ref165","deposited4","redeemable3","_ref166","_ref167","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref168","_ref169","_ref170","_ref171","earningsPerc","secondsFromFirstTx","_ref172","_ref173","seniorPool","juniorPool","coverage","strategyApr","_ref174","_ref175","_ref176","_ref177","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args113","_context113","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x182","_x183","_x184","_x185","_x186","_x187","_x188","loadAssetField","_ref178","_callee114","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref179","_ref180","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref181","_ref182","amountLentCurve1","redeemableBalanceCurve","_ref183","_ref184","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref185","_ref186","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref187","_ref188","tokenPriceFirstDeposit","_ref189","_ref190","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref191","_ref192","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref193","_ref194","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref195","_ref196","amountLentCurve2","redeemableBalanceCurve1","_ref197","_ref198","redeemableBalance2","_args114","_context114","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x189","_x190","_x191","_x192","getIdleTokenSupply","_ref199","_callee115","idleTokenSupply","_args115","_context115","_x193","getIdleTokenPriceWithFee","_ref200","_callee116","_ref201","_ref202","fee","priceWFee","_args116","_context116","eq","_x194","_x195","_ref203","_callee117","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args117","_context117","_x196","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref204","_callee118","_ref205","_ref206","idleTokensTotalSupply","userShare","_context118","_x197","_x198","openWindow","open","getActiveCoverages","_callee120","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args120","_context120","coverages","_ref208","_callee119","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context119","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x199","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref209","_callee122","incidentsInfo","_ref210","_ref211","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context122","directProps","buyer","_ref212","_callee121","cover","coverId","claimSubmittedEvent","_ref213","_ref214","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref215","_ref216","_context121","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x201","_x200","getBatchedDepositExecutions","_ref217","_callee123","_context123","_x202","getBatchedDeposits","_callee125","filter_by_status","batchDepositConfig","batchedDeposits","_args125","_context125","_ref219","_callee124","currBatchIndex","batchIndex","_ref220","_ref221","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context124","_x203","getETHBalance","_ref222","_callee126","fixDecimals","_args126","_context126","_x204","_ref223","_callee127","_ref224","_ref225","_args127","_context127","ERC20","_x205","_x206","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref226","_callee128","_args128","_context128","_x207","_ref227","_callee129","_args129","_context129","_x208","_ref228","_callee130","_args130","_context130","_x209","_x210","getProtocolBalance","_ref229","_callee131","_context131","_x211","_x212","getAprs","_ref230","_callee132","_context132","addresses","_x213","genericIdleCall","_ref231","_callee133","callParams","_args133","_context133","_x214","_ref232","_callee134","_contract$methods4","_args134","_context134","_x215","_x216","_ref233","_callee136","_args136","_context136","_ref234","_callee135","_context135","_x218","_x219","_x217","getTxDecodedLogs","_ref235","_callee138","logAddr","decodeLogs","internalTransfers","_context138","_ref236","_callee137","_context137","_x224","_x225","_x220","_x221","_x222","_x223","blocksToSeconds","blocks","blocksPerSeconds","_callee139","_context139","_callee140","blockInfoToSave","_args140","_context140","getBlock","genericContractCallCachedTTLNoMulticall","_ref239","_callee141","_args141","_context141","_x226","_x227","_ref240","_callee142","useMultiCall","_args142","_context142","_x228","_x229","_ref241","_callee143","_args143","_context143","_x230","_x231","_ref242","_callee144","_args144","_context144","_x232","_x233","cachedContractCall","_ref243","_callee145","_args145","_context145","_x234","_x235","prepareMulticallData","strip0x","_ref244","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref245","_callee146","decodedParams","_args146","_context146","decodeParameters","returnFields","_x236","_ref246","_callee147","inputTypes","callHash","_args147","_context147","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x237","_x238","_ref247","_callee148","_contract$methods5","_args148","_context148","_x239","_x240","_ref248","_callee149","async","_args149","_context149","_x241","_x242","getUnlentBalance","_ref249","_callee150","unlentBalance","_context150","_x243","_ref250","_callee151","_args151","_context151","_x244","getLastAllocations","_ref251","_callee153","tokenAllocations","_context153","_ref252","_callee152","_context152","_x246","_x247","_x245","_ref253","_callee154","protocolsAprs","_ref254","_ref255","govTokensBalances","_args154","_context154","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","total","_x248","getPoolTokenPrice","_ref256","_callee155","protocolContract","_ref257","_ref258","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref259","_ref260","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_args155","_context155","_x249","getSushiswapPoolTokenPrice","_ref261","_callee156","_ref262","_ref263","_ref264","_ref265","_context156","getSushiswapConversionRate","_x250","getSushiswapConversionRate_old","_ref266","_callee157","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context157","_x251","_x252","getCustomProtocolConversionRate","_ref267","_callee158","useWETH","forceTokenConfig","invertTokens","routerMethod","underlyingTokenConfig","unires","_args158","_context158","addressForPrice","conversionRateForceToken","conversionRateDirectConversion","conversionRateInvertTokens","conversionRouterMethod","_x253","_x254","getQuickswapConversionRate","_ref268","_callee159","_args159","_context159","_x255","_x256","_ref269","_callee160","_args160","_context160","_x257","_x258","_ref270","_callee161","_args161","_context161","_x259","_x260","getCurveDepositedTokens","_ref271","_callee162","idleTokensBalances","remainingCurveTokens","_args162","_context162","_x261","getCurveUnevenTokenAmounts","_ref272","_callee163","amounts","max_burn_amount","unevenAmounts","_context163","getCurveDepositContract","_x262","_x263","_callee164","curveRatesInfo","_args164","_context164","_callee165","_context165","strategyTokens","getCurveAPYContract","_callee166","blocksForPrevTokenPrice","_ref276","_ref277","prevTokenPrice","blocksMultiplier","curveAPR","_context166","getCurveTokenSupply","_callee167","_context167","getCurvePoolContract","_callee168","_args168","_context168","_callee169","_args169","_context169","_ref281","_callee170","_ref282","_ref283","_context170","_x264","_callee171","depositContractInfo","_context171","getCurveZapContract","_callee172","zapContractInfo","_context172","_callee173","poolContractInfo","_context173","getCurveSwapContract","_callee174","migrationContractInfo","_context174","getCurveIdleTokensAmounts","_callee176","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args176","_context176","_ref289","_callee175","coinIndex","curveIdleTokens","_context175","migrationParams","_x265","getCurveTokensAmounts","_callee178","useCoinIndex","_args178","_context178","_ref291","_callee177","_ref292","_ref293","idleTokenPrice","totalTokenSupply","_context177","_x266","getCurveAmounts","_ref294","_callee180","_args180","_context180","_ref295","_callee179","_context179","_x269","_x267","_x268","getCurveTokenAmount","_ref296","_callee181","_args181","_context181","_x270","getCurveSlippage","_ref297","_callee182","uneven_amounts","depositContract","_ref298","_ref299","Sv","_args182","_context182","_x271","_x272","_ref300","_callee183","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref301","_ref302","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args183","_context183","IAaveIncentivesController","emissionPerSecond","_x273","_callee185","_args185","_context185","_ref304","_callee184","_ref305","_ref306","_context184","_x274","getWMaticApr","_ref307","_callee186","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args186","_context186","_x275","_x276","getStkAaveApr","_ref308","_callee187","aaveConversionRate","stkAaveAPR","stkAaveValue","_args187","_context187","_x277","_x278","getCompAPR","_ref309","_callee188","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args188","_context188","_x279","_x280","getCompSpeed","_ref310","_callee189","cTokenAddress","compSpeed","_context189","_x281","_ref311","_callee190","cTokenInfo","compoundAllocationPerc","_ref312","_ref313","cTokenTotalSupply","compoundPoolShare","_args190","_context190","_x282","_callee192","_args192","_context192","_ref315","_callee191","_ref316","_ref317","_context191","_x283","_callee194","_args194","_context194","_ref319","_callee193","_ref320","_ref321","compApr","_context193","_x284","getTokensCsv","_callee197","csv","_context197","prototype","sum","pv","cv","avg","_ref323","_callee196","_context196","_ref324","_callee195","rates","header","rows","aprAvg","scoreAvg","lastRow","_context195","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x286","_x285","_callee199","convertToken","_args199","_context199","_ref326","_callee198","compTokenBalance","_context198","_x287","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref327","_callee201","govTokensUserDistribution","_args201","_context201","_ref328","_callee200","_context200","_x289","_x288","getGovTokensDistributionSpeed","_ref329","_callee203","govTokensDistribution","_args203","_context203","_ref330","_callee202","govSpeed","_context202","_x291","_x290","getGovTokensAprs","_ref331","_callee205","govTokensAprs","_args205","_context205","_ref332","_callee204","_ref333","_ref334","_ref335","_ref336","cTokenConfig","_context204","aprTooltipMode","_x294","_x292","_x293","_callee207","_args207","_context207","_ref338","_callee206","govTokenBalance","fromTokenConfig","_context206","_x295","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee208","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args208","_context208","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref340","_callee210","govTokensAmounts","_context210","getGovTokensUserAmounts","_ref341","_callee209","govTokenIndex","govTokenAddress","_context209","getGovTokenAddessByIndex","_x298","_x299","_x296","_x297","_ref342","_callee211","_context211","_x300","_x301","_ref343","_callee212","_context212","_x302","_x303","_callee215","govTokenConfigForced","_args215","_context215","_ref345","_callee214","_context214","_ref346","_callee213","_context213","_x305","_x306","_x304","getTokenFees","_callee216","_args216","_context216","_callee217","_ref349","_ref350","feePercentage","gain","fees","_args217","_context217","_ref351","_callee218","_args218","_context218","_x307","getTotalTVL","_callee219","tokensTVL","_context219","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee223","_context223","_ref354","_callee222","_context222","_ref355","_callee221","oldTokenTVL","idleTokenName","_ref356","_ref357","oldTokenConfig","_ref361","_ref362","oldTokenPrice","oldTotalSupply","_context221","showAUM","_ref358","_callee220","_ref359","_ref360","govTokenConversionRate","govTokenBalanceConverted","_context220","_x310","oldProtocols","oldProtocol","protocolPos","_x309","_x308","getSubstackLatestFeed","_callee224","idleSubstackFeed","latestFeed","_context224","getTrancheAggregatedStats","_callee228","totalAUM","_args228","_context228","_ref365","_callee227","_context227","_ref366","_callee226","_context226","_ref367","_callee225","_ref368","_ref369","_context225","_x313","_x312","_x311","getAggregatedStats","_callee230","allNetworks","networkIds","callsFailed","tvls","_args230","_context230","_ref371","_callee229","_context229","_x314","getAggregatedStats_chain","_callee235","avgAPR","_args235","_context235","availableStrategiesNetworks","_ref373","_callee234","_context234","_ref374","_callee233","_context233","_ref375","_callee232","tokenAUM","_context232","_ref376","_callee231","_ref377","_ref378","_context231","_x318","_x317","_x316","_x315","getTokenApy","_ref379","_callee236","_context236","_x319","getTokensToMigrate","_callee239","_args239","_context239","_ref381","_callee238","_context238","_ref382","_callee237","_ref383","_context237","_x321","_x320","getProtocolsTokensBalances","_callee241","tokenBalances","minTokenBalance","protocolsTokens","_args241","_context241","_ref385","_callee240","_context240","_x322","getTokenConversionRateField","getTrancheTokenConversionRate","_ref386","_callee242","trancheTokenConfig","trancheTokenConversionRate","_args242","_context242","isPoolToken","conversionRateProtocolContract","_x323","_ref387","_callee243","_args243","_context243","_x324","_x325","_ref388","_callee244","_args244","_context244","_x326","_x327","_x328","getAvgAPYStats","_ref389","_callee245","apiResults","_args245","_context245","_x329","_x330","_ref390","_callee246","statsTokenConfig","ToTokenConfig","_args246","_context246","addressForPriceFrom","conversionRateUseWETH","_x331","_ref391","_callee247","count","_conversionRate","_args247","_context247","_x332","_x333","getTokenScore","_ref392","_callee248","_ref393","_ref394","tokenScore","_context248","protocolScore","getTokenScoreApi","_x334","_x335","_ref395","_callee249","scores","_context249","_x336","_x337","_ref396","_callee250","idleGovTokenShowAPR","idleAPR","_args250","_context250","_x338","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","defaultOpacity","hidden","clickable","rainbow","DashboardCardContext","React","createContext","DashboardCard","isClickable","isRainbow","active","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","as","lineHeight","titleProps","description","Provider","Consumer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","bg","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","TableRow","FieldComponent","fieldComponent","hasClickFunction","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","getPermitTransactionParams","getTransactionParams_async","eventValue","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","checkPermit","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","voteUserSlope","claimableRewards","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","_this8","votingWeight","depositedAmount","withdrawnAmount","_this9","votingPowerPercentage","gaugeAddress","_this10","setSelectedAction","setStakeAction","setClaimToken","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","Title","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","Faquestion","isShowingAnswer","isOpened","h4","question","answer","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","src_Faquestion_Faquestion","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","flexBasis","TrancheField","showSelectButton","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","GenericModal","buttonText","modalApy","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","modalAction","selectedTrancheOption","selectedStakeAction","penaltyFee","Pool","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","checkModal","selectedActionChanged","selectedStakeActionChanged","modal","isStake","isDeposit","isWithdraw","showReferral","modalEnabled","option","selectTranche","borderTop","ImageButton","unstakeWithBalance","unstake","contractApprovedCallback","messages","buyInstructions","components_GenericModal","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","param3","tranchesTvls","tvl","tranchesOrdering","loadQueryParams","then","defineProperty","depositedCdos","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","isDashboard","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","aysShort","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","themeTogglerEnabled","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","hex","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","CPOOL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","TRU","AGEUR","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","quickswap","convex","mstable","euler","wintermute","clearpool","truefi","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","orderedTranches","protocolTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","Web3Connectors","setNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","h2","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyEnabled","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args9","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","defaultWeb3","_args22","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","ScrollToTop","pathname","useLocation","useEffect","currYear","getFullYear","governanceEnabled","columnWidth","footer","role","aria-label","PageNotFound","h1","Header_styles","src_Footer_Footer","IdleCDOPolygon","IdleStrategy","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","adaptiveYieldSplitEnabled","levUSDC","TruefiPool","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","node","Dashboard","lazy","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","web3Connectors","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","getConnectors","dist_default","web3Api","libraryName","dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","buttonState","ctaType","ctas","ButtonComponent","Button","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","titles","ctaPrimaryText","hover","secondary","dropdownBg","flashBg","cardBgActive","exit","bg-bottom-right","bg-noise","titleType","HeadingComponent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_19__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","formattedValue","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_16__","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_isBigNumber","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_18__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_21__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_22__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_19__","earningsCurve","tooltipMode","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"static/js/main.46e95f18.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3],\n        justifyContent:'center'\n      },\n      this.props.cardProps\n    );\n\n    const textProps = {...this.props.textProps};\n    if (this.props.isActive){\n      textProps.color = 'primary';\n    }\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        backgroundColor={\"blue\"}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align || \"center\"}\n          mx={this.props.margin ? this.props.margin : 0}\n        >\n          {\n            this.props.iconBgColor && !this.props.useIconOnly ? (\n              <Flex\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                backgroundColor={this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem}\n              >\n                {\n                  this.props.image ? (\n                    <Image\n                      align={\"center\"}\n                      src={this.props.image}\n                      height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      {...this.props.imageProps}\n                    />\n                  ) : (\n                    <Icon\n                      align={\"center\"}\n                      name={this.props.icon}\n                      size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                      {...this.props.iconProps}\n                    />\n                  )\n                }\n              </Flex>\n            ) : this.props.image ? (\n              <Image\n                mr={1}\n                align={\"center\"}\n                src={this.props.image}\n                height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                {...this.props.imageProps}\n              />\n            ) : this.props.icon && (\n              <Icon\n                mr={1}\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                {...this.props.iconProps}\n              />\n            )\n          }\n          <Text\n            fontWeight={3}\n            fontSize={[1, 2]}\n            {...textProps}\n          >\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__AZvaE\",\"mobile\":\"TrancheWelcome_mobile__8mpVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__2_KWY\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__KcFts\",\"bgContainer\":\"PageNotFound_bgContainer__31oWs\",\"list\":\"PageNotFound_list__lpaEt\",\"textContainer\":\"PageNotFound_textContainer__IPqbe\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'primary'}\n             fontFamily={'titles'}\n             hoverColor={'primary'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  fontFamily={'titles'}\n                  hoverColor={'primary'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'primary' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      justifyContent:'center',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled,\n      contrastColor:'ctaPrimaryText'\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n        type={'primary'}\n        buttonProps={buttonProps}\n        handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'ctaPrimaryText'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      // if (props.menuIsOpen) {\n      //   cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      // }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"dropdownBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    // console.log(this.props.eventData,{\n    //   eventCategory: 'Transaction',\n    //   eventLabel: this.props.methodName,\n    //   eventAction: this.props.contractName,\n    //   ...this.props.eventData\n    // });\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName,\n        ...this.props.eventData\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.svg`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__FSkvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__XFIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__3gfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__22U7L\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__XwnoZ\",\"empty\":\"Header_empty__sl23U\",\"select\":\"Header_select__3MUn8\",\"selectDark\":\"Header_selectDark__2UhPg\",\"input\":\"Header_input__33yby\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    // console.log('setProps',props.contracts);\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  initContract = async (contractName,address,abi) => {\n    const contractInfo = await this.props.initContract(contractName, address, abi);\n    const contractFound = this.getContractByName(contractName);\n    if (!contractFound && contractInfo){\n      this.props.contracts.push(contractInfo);\n    }\n    return contractInfo;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (protocolToken) => {\n        const tokenConfig = protocolConfig[protocolToken];\n        const token = tokenConfig.token;\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  cdo:tokenConfig.CDO.name,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,'trancheStakedBalance',trancheStakedBalance.toFixed(),'amountDeposited',amountDeposited.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheEarnings',trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits,\n      trancheToken_received,\n      trancheToken_sent\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserTransactionsEvents',account,tokenConfig.token,trancheToken_transfers_in,trancheToken_transfers_out);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    if (trancheToken_received){\n      trancheToken_received.forEach( tx => {\n        tx.type = 'trancheReceived';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_received = [];\n    }\n\n    if (trancheToken_sent){\n      trancheToken_sent.forEach( tx => {\n        tx.type = 'trancheSent';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_sent = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n\n          const gaugeConfig = this.getTrancheGaugeConfig(tokenConfig.protocol,tokenConfig.token);\n\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n          const cdoRewardsContractAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].CDORewards.address.toLowerCase()) ).filter( addr => addr !== '0x0000000000000000000000000000000000000000' );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          const stakingContractAddresses = cdoRewardsContractAddresses;\n          if (gaugeConfig){\n            stakingContractAddresses.push(gaugeConfig.address.toLowerCase());\n          }\n\n          const isTrancheReceived = tx.from.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.from.toLowerCase()) && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheSent = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.to.toLowerCase());\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          } else if (isTrancheReceived){\n            type = 'trancheReceived';\n          } else if (isTrancheSent){\n            type = 'trancheSent';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          // if (type){\n          //   console.log('tx',tokenConfig.token,tx.hash,tx.from,tx.to,stakingContractAddresses,type);\n          // }\n\n          return type;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    if (limit && parseInt(limit)>0){\n      endpoint = endpoint+`&limit=${limit}`;\n    }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  loadTrancheStrategyContract = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = strategyConfig.address || await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress){\n      await this.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      return idleStrategyAddress;\n    }\n    return false;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.loadTrancheStrategyContract(tokenConfig);\n\n    if (idleStrategyAddress) {\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n\n      if (!latestHarvestBlock || !parseInt(latestHarvestBlock)){\n        return null;\n      }\n\n      startBlock = latestHarvestBlock;\n      latestHarvestBlock++;\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      // let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length >= 2) {\n          const prevHarvest = transfers[transfers.length - 2];\n          const latestHarvest = transfers[transfers.length - 1];\n          \n          const firstBlock = prevHarvest.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            // firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            // this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = lastBlockPoolSize;\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            // totalAmount = transfers.reduce((total, t) => {\n            //   total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            //   return total;\n            // }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              prevHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, prevHarvest.hash, latestHarvest.hash, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem','trancheReceived','trancheSent'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      // const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n      const [\n        blockInfo,\n        tokenConversionRate,\n        tranchePrice\n      ] = await Promise.all([\n        this.getBlockInfo(trancheTokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,trancheTokenTransferEvent.blockNumber),\n        this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address], {}, trancheTokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[trancheTokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tranchePrice,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n\n      const tranchePrice = this.fixTokenDecimals(blocksInfo[trancheTokenTransferEvent.blockNumber].tranchePrice, tokenConfig.decimals);\n\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n      const tokenAmount = tokenTransferEvent ? this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals) : trancheTokenAmount.times(tranchePrice);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      // const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[trancheTokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${trancheTokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        cdo: tokenConfig.CDO.name,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: trancheTokenTransferEvent.transactionHash,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n        blockNumber: trancheTokenTransferEvent.blockNumber,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[trancheTokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      // if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      if (['trancheDeposit','trancheReceived'].includes(trancheTokenTransferEvent.type)) {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      // } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      } else if (['trancheRedeem','trancheSent'].includes(trancheTokenTransferEvent.type)) {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        \n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = totalAmountDeposited.gt(0) ? avgBuyPrice.div(totalAmountDeposited) : this.BNify(0);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    if (!permitConfig.nonceMethod || !baseContract.methods[permitConfig.nonceMethod]){\n      return false;\n    }\n\n    // console.log('signPermit',baseContractName,baseContract,baseContract.methods,permitConfig.nonceMethod);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = await baseContract.methods[permitConfig.nonceMethod](holder).call();\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    // console.log('checkTokenApproved', contractName, contractAddr, walletAddr, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim,\n      workingSupply:working_supply\n    };\n  }\n  getTrancheGaugeConfig = (protocol, token) => {\n    const availableGauges = this.getGlobalConfig(['tools','gauges','props','availableGauges'])\n    const gaugeToken = Object.keys(availableGauges).find( gaugeToken => availableGauges[gaugeToken].protocol.toLowerCase() === protocol.toLowerCase() && gaugeToken.toLowerCase() === token.toLowerCase() );\n    if (gaugeToken){\n      return availableGauges[gaugeToken];\n    }\n    return null;\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    const currTimestamp = parseInt(Date.now()/1000);\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = currTimestamp;\n    }\n\n    const params = [gaugeConfig.address];\n\n    if (lastGaugeTimestamp<currTimestamp){\n      params.push(lastGaugeTimestamp);\n    }\n\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',params);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      for (let tokenIndex=0; tokenIndex<multiRewardsConfig.maxRewards; tokenIndex++){\n      // await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      };\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getTokenConfig(tokenConfig.token).label || this.capitalize(tokenConfig.token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    await this.loadTrancheStrategyContract(tokenConfig);\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = '$ '+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n\n      case 'seniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.fixTokenDecimals(output, 5);\n        }\n\n        if (this.BNify(output).isNaN()) {\n          output = this.BNify(0);\n        }\n\n        if (formatValue){\n          output = output.times(100)+'%';\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'seniorCoverage':\n        const [\n          seniorPool,\n          juniorPool\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = '0%';\n        if (this.BNify(seniorPool).gt(0) && this.BNify(juniorPool).gt(0)){\n          // output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          // output = '$'+this.abbreviateNumber(juniorPool, decimals, maxPrecision, minPrecision)\n          let coverage = juniorPool.div(seniorPool);\n          \n          if (this.BNify(coverage).isNaN()){\n            coverage = this.BNify(0);\n          }\n\n          if (formatValue){\n            output = '$1 is covered by $'+this.abbreviateNumber(coverage, decimals, maxPrecision, minPrecision)\n          } else {\n            output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          }\n        }\n      break;\n      case 'strategyApr':\n        output = await this.genericContractCallCached(tokenConfig.Strategy.name,'getApr');\n        if (!output){\n          output = 0;\n        }\n        output = this.fixTokenDecimals(output,18);\n        if (formatValue){\n          output = output.toFixed(decimals) + '%';\n        }\n      break;\n      case 'apyBoost':\n        let strategyApr = 0;\n        [\n          trancheApy,\n          strategyApr\n        ] =  await Promise.all([\n          this.loadTrancheFieldRaw('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('strategyApr', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n        ]);\n\n        // console.log('trancheApy' ,this.BNify(trancheApy).toString(), 'strategyApr', this.BNify(strategyApr).toString());\n\n        output = this.BNify(strategyApr).gt(0) ? this.BNify(trancheApy).div(this.BNify(strategyApr)) : this.BNify(0);\n\n        if (formatValue){\n          output = `${output.toFixed(1)}x`;// (${strategyApr.toFixed(2)}%)`;\n        }\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toFixed(0)+\"/\"+(100-output).toFixed(0);\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getTokenConfig(govToken);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getPoolTokenPrice = async (contractName, protocolContract=null) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getOnChainTokenConversionRate(token0_config, 'latest', protocolContract),\n        this.getOnChainTokenConversionRate(token1_config, 'latest', protocolContract)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log('getPoolTokenPrice',contractName,protocolContract,token0_address,token1_address,token0_price.toFixed(),token1_price.toFixed(),poolTokenPrice.toFixed());\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Force token from - in case DAI doesn't exist\n    if (tokenConfigDest.conversionRateForceToken){\n      const forceTokenConfig = this.getTokenConfig(tokenConfigDest.conversionRateForceToken);\n      if (forceTokenConfig){\n        tokenConfigFrom = forceTokenConfig;\n      }\n    }\n\n    // Check if has to convert without passing through WETH\n    if (typeof tokenConfigDest.conversionRateDirectConversion !== 'undefined'){\n      useWETH = useWETH && !tokenConfigDest.conversionRateDirectConversion;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals || 18;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getCustomProtocolConversionRate',protocolContract, routerMethod, [one.toFixed(), path], unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (/*tokenConfig.enabled && */tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getTokenConfig(convertToken);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  getTrancheTokenConversionRate = async (trancheTokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    let trancheTokenConversionRate = this.BNify(1);\n\n    // Get pool token price\n    const tokenConfig = this.getTokenConfig(trancheTokenConfig.token);\n    if (!!tokenConfig.isPoolToken){\n      // Get custom protocol for conversion rate\n      const protocolContract = tokenConfig.conversionRateProtocolContract;\n      trancheTokenConversionRate = await this.getPoolTokenPrice(trancheTokenConfig.token, protocolContract);\n    // Convert underlying token\n    } else {\n      const conversionRateField = this.getTokenConversionRateField(trancheTokenConfig.token);\n      if (conversionRateField) {\n        trancheTokenConversionRate = await this.getOnChainTokenConversionRate(trancheTokenConfig,blockNumber);\n      }\n    }\n\n    if (!trancheTokenConversionRate || this.BNify(trancheTokenConversionRate).isNaN()){\n      trancheTokenConversionRate = this.BNify(1);\n    }\n\n    return trancheTokenConversionRate;\n  }\n  convertTrancheTokenBalance = async (tokenBalance, trancheTokenConfig, blockNumber='latest') => {\n    const trancheTokenConversionRate = await this.getTrancheTokenConversionRate(trancheTokenConfig, blockNumber);\n    return tokenBalance = this.BNify(tokenBalance).times(trancheTokenConversionRate);\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    if (statsTokenConfig){\n      // Replace from token address\n      if (statsTokenConfig.addressForPriceFrom){\n        DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n      }\n\n      // Set custom protocol (uniswap, sushiswap, quickswap)\n      if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n        protocolContract = statsTokenConfig.conversionRateProtocolContract;\n      }\n\n      // Override useWETH based on token config\n      if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n        useWETH = statsTokenConfig.conversionRateUseWETH;\n      } else {\n        // Don't use WETH in the path\n        useWETH = !statsTokenConfig.addressForPriceFrom;\n      }\n    }\n\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__3Ly5d\",\"hidden\":\"DashboardCard_hidden__1_j_O\",\"clickable\":\"DashboardCard_clickable__3ibwM\",\"rainbow\":\"DashboardCard_rainbow__25Ce5\",\"disabled\":\"DashboardCard_disabled__g_nwH\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Card, Tooltip } from \"rimble-ui\";\n\nconst DashboardCardContext = React.createContext();\n\nclass DashboardCard extends Component {\n\n  static Consumer = DashboardCardContext.Consumer;\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isClickable = typeof this.props.handleClick === 'function';\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border:0,\n      display:'flex',\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      flexDirection:'column',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (!this.props.cardProps || !this.props.cardProps.backgroundColor){\n      if (isInteractive && this.state.mouseOver) {\n        cardProps.backgroundColor = 'cardBgHover';\n      }\n      if (isActive){\n        cardProps.backgroundColor = 'cardBgActive';\n      }\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isClickable ? styles.clickable : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    // const childrenWithProps = React.Children.map(this.props.children, child => {\n    //   if (React.isValidElement(child)) {\n    //     return React.cloneElement(child, { mouseOver:this.state.mouseOver });\n    //   }\n    //   return child;\n    // });\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {/*{this.props.children}*/}\n        <DashboardCardContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const hasClickFunction = typeof this.props.handleClick === 'function';\n    const isInteractive = hasClickFunction || !!this.props.isInteractive;\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={hasClickFunction ? e => this.props.handleClick(this.props) : null}\n      >\n        <DashboardCard.Consumer>\n          {({\n            mouseOver\n          }) => {\n            return (\n              <Flex\n                flexDirection={'row'}\n                id={this.props.rowId}\n              >\n                {\n                  this.props.cols.map((colInfo,colIndex) => {\n                    const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n                    if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                      return null;\n                    }\n                    return (\n                      <Flex\n                        key={`col-${colIndex}`}\n                        {...colInfo.props}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          {...colInfo.parentProps}\n                        >\n                          {\n                            colInfo.fields.map((fieldInfo,fieldIndex) => {\n                              if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                                return null;\n                              }\n                              const CustomComponent = fieldInfo.fieldComponent;\n\n                              let fieldProps = fieldInfo.props;\n\n                              // Merge with funcProps\n                              if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                                fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                              }\n\n                              return (\n                                <Flex\n                                  height={'100%'}\n                                  flexDirection={'column'}\n                                  alignItems={'flex-start'}\n                                  justifyContent={'center'}\n                                  {...fieldInfo.parentProps}\n                                  style={fieldInfo.style || {\n                                    overflow:'hidden'\n                                  }}\n                                  width={colInfo.fields.length>1 ? 'auto' : 1}\n                                  id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                  key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                >\n                                  {\n                                    CustomComponent ? (\n                                      <CustomComponent\n                                        {...this.props}\n                                        {...fieldProps}\n                                        mouseOver={mouseOver}\n                                      />\n                                    ) : (\n                                      <FieldComponent\n                                        {...this.props}\n                                        mouseOver={mouseOver}\n                                        fieldInfo={fieldInfo}\n                                        colProps={colInfo.props}\n                                        parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    )\n                  })\n                }\n              </Flex>\n            );\n          }}\n          </DashboardCard.Consumer>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'primary' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        handleClick={this.props.handleClick}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Approve',\n          eventLabel: tx ? tx.status : null,\n          eventAction: this.props.tokenConfig.token\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log(this.props.eventData,{\n      //   eventCategory: methodName,\n      //   eventValue: inputValue.toFixed(),\n      //   eventAction: this.props.tokenConfig.token,\n      //   ...this.props.eventData\n      // });\n\n      const callback = (tx,error) => {\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        // Send Google Analytics event\n        if (tx){\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: methodName,\n            eventValue: inputValue.toFixed(),\n            eventAction: this.props.tokenConfig.token,\n            ...this.props.eventData\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n        }\n\n        this.setState({\n          txSucceeded,\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n\n        if (txSucceeded){\n          // Reset input\n          this.changeInputValue({\n            target:{\n              value:0\n            }\n          },false);\n          this.setState({\n            showPermitBox:false\n          });\n          // Call upper component callback\n          if (typeof this.props.callback === 'function'){\n            this.props.callback(tx,_amount,params);\n          }\n        }\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    let contractApproved = false;\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      contractApproved = true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      contractApproved = true;\n    }\n      \n    if (!contractApproved){\n      contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    }\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        border={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              handleClick={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    eventData:{},\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n      // const protocolConfig = this.functionsUtil.getGlobalConfig(['stats','protocols',gaugeConfig.protocol]);\n\n      const tokenConfig = {};\n      tokenConfig.token = gaugeConfig.underlyingToken;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let eventData = {\n      eventAction:trancheTokenConfig.token\n    };\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Gauge_Vote';\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Deposit';\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Claim';\n\n            switch (this.state.claimToken){\n              case 'additional':\n                eventData.eventLabel = (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? Object.keys(this.state.claimableRewardsTokens).join('_') : 'multi_rewards';\n              break;\n              default:\n              case 'default':\n                eventData.eventLabel = this.props.toolProps.veToken.rewardToken;\n              break;\n            }\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Redeem';\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('eventData',eventData);\n\n    this.setState({\n      canVote,\n      eventData,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'primary'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                          iconBgColor={this.state.stakeAction === 'deposit' ? '#ffffff' : '#ced6ff'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                          iconBgColor={this.state.stakeAction === 'claim' ? '#ffffff' : '#ffd979'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                          iconBgColor={this.state.stakeAction === 'withdraw' ? '#ffffff' : '#ceeff6'}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                eventData={this.state.eventData}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                eventData={this.state.eventData}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                isInteractive={true}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    // const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    // const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          /*\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n          */\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[3,4]}\n            >\n              {trancheDetails.name}\n            </Title>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    minPrecision:2,\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                text={'APY'}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'APY Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  },\n                  name:'trancheAPRRatio'\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                {\n                  this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                }\n              </Text>\n              <Flex\n                mt={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    props:{\n                      decimals:2,\n                      minPrecision:2,\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    },\n                    name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <RoundButton\n                  type={'primary'}\n                  buttonProps={{\n                    mt:3,\n                    icon:trancheDetails.icon,\n                    contrastColor:'ctaPrimaryText',\n                  }}\n                  handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </RoundButton>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass GenericModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.functionsUtil.setLocalStorage(this.props.id,true);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            icon={this.props.icon}\n            title={this.props.title}\n            iconHeight={this.props.iconHeight || '40px'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{\n                  __html: this.props.text\n                }}\n              />\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                {this.props.buttonText}\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GenericModal;","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericModal from '../utilities/components/GenericModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    eventData:{},\n    infoText:null,\n    modalApy:null,\n    trancheFee:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    lastHarvest:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    contractPaused:false,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    modalAction:'deposited',\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    balanceSelectorInfo:null,\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.checkModal();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  checkModal(){\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n    if (modalEnabled){\n      const modalAlreadyOpened = this.functionsUtil.getStoredItem(this.props.tokenConfig.modal.id);\n      if (!modalAlreadyOpened){\n        this.setState({\n          activeModal:this.props.tokenConfig.modal.id\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      contractPaused,\n      lastHarvest,\n      gaugeStakedBalance,\n      stakedBalance,\n      trancheFee,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name,'paused'),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      this.props.gaugeConfig ? this.functionsUtil.getTokenBalance(this.props.gaugeConfig.name,this.props.account) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheField('trancheFee',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest',lastHarvest);\n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      trancheFee,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      contractPaused,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      gaugeStakedBalance,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData = async () => {\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n    let balanceSelectorInfo = null;\n    let eventData = {\n      eventAction:this.props.trancheConfig.token\n    };\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Deposit';\n\n        if (this.state.trancheFee){\n          balanceSelectorInfo = {\n            text:`Performance fee: ${this.state.trancheFee}`,\n            tooltip:this.functionsUtil.getGlobalConfig(['messages', 'performanceFee'])\n          }\n        }\n        \n        if (this.props.gaugeConfig && this.props.gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your tranche tokens (${this.props.gaugeConfig.trancheToken.token}) in the Liquidity Gauge and get additional rewards.`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n\n        // Set data for ga custom event\n        eventData.eventCategory = this.functionsUtil.capitalize(this.state.selectedStakeAction);\n\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (this.props.gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Redeem';\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        } else {\n          // Overwrite default action message\n          if (this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0)){\n            infoText = `To withdraw your ${this.props.selectedToken} make sure to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    this.setState({\n      infoBox,\n      infoText,\n      eventData,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    })\n  }\n\n  changeInputCallback = async (inputValue) => {\n\n    // Calculate exit fee for TrueFi - USDC\n    if (this.state.selectedAction === 'withdraw' && this.props.trancheConfig.functions.penaltyFee && this.props.tokenConfig.Pool && this.functionsUtil.BNify(inputValue).gt(0)){\n      await this.functionsUtil.initContract(this.props.tokenConfig.Pool.name, this.props.tokenConfig.Pool.address, this.props.tokenConfig.Pool.abi);\n\n      const amount = this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals);\n      let penaltyFee = await this.functionsUtil.genericContractCall(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.penaltyFee, [amount])\n\n      if (penaltyFee){\n        penaltyFee = this.functionsUtil.BNify(10000).minus(penaltyFee).div(100)\n        const balanceSelectorInfo = {\n          text:`Penalty fee: <span style=\"color:${this.props.theme.colors.alert}\">${penaltyFee.toFixed(2)}%</span>`\n        }\n        \n        this.setState({\n          balanceSelectorInfo\n        });\n      }\n    }\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams = (amount,selectedPercentage) => {\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice, this.props.tokenConfig.decimals));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = !this.state.contractPaused && this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              minPrecision:2,\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:'trancheAPRRatio'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        {\n                          this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                        }\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              decimals:2,\n                              minPrecision:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'primary'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                  dangerouslySetInnerHTML={{__html:this.props.tokenConfig.description}}\n                                >\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                /*\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) :*/\n                /*\n                !this.props.tokenConfig.adaptiveYieldSplitEnabled && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To improve the capital efficiency of tranches, the apy ratio will be updated to the new Adaptive Yield Split on Wed July 20th. No action required. Read more in the <a href=\"https://gov.idle.finance/t/adaptive-yield-split-implementation-for-existing-pyts/1019\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">Forum Proposal</a>.`}\n                  />\n                )\n                */\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0,\n                      disabled:!this.state.stakingEnabled && !this.props.gaugeConfig\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/stake.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '45px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && !this.state.contractPaused && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'primary'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  this.state.contractPaused ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits/Withdraws for this tranche are temporarily suspended due to Smart-Contract maintenance.`}\n                    />\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.props.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      {\n                        this.state.stakedBalance.gt(0) ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MonetizationOn'}\n                            />\n                            <Text\n                              mt={1}\n                              mb={3}\n                              fontSize={[2,3]}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                            </Text>\n                            <ExecuteTransaction\n                              params={[]}\n                              {...this.props}\n                              Component={RoundButton}\n                              parentProps={{\n                                width:1,\n                                alignItems:'center',\n                                justifyContent:'center'\n                              }}\n                              componentProps={{\n                                value:'Unstake',\n                                buttonProps:{\n                                  size:'medium',\n                                  width:[1,1/3],\n                                }\n                              }}\n                              action={'Unstake'}\n                              eventData={this.state.eventData}\n                              contractName={this.state.contractInfo.name}\n                              callback={this.transactionSucceeded.bind(this)}\n                              methodName={this.props.trancheConfig.functions.unstake}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MoneyOff'}\n                            />\n                            <Text\n                              mt={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any <strong>{this.state.tokenConfig.label}</strong> to unstake.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`+(this.props.gaugeConfig ? `<br />Stake your tranche tokens in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a> to get additional rewards!` : ``)}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n              {\n                modalEnabled && (\n                  <GenericModal\n                    {...this.props.tokenConfig.modal}\n                    closeModal={this.resetModal}\n                    isOpen={this.state.activeModal === this.props.tokenConfig.modal.id}\n                  />\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n              // Reset amountLent if below zero\n              if (amountLent.lt(0)){\n                amountLent = this.functionsUtil.BNify(0);\n              }\n            break;\n            default:\n            break;\n          }\n\n          // console.log(tx.action,tx.protocol,tx.token,tokenAmount.toString(),amountLent.toString());\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTrancheTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTrancheTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n         // console.log(token,conversionRateBlocksCalls);\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = tokenConfig ? tokenConfig.decimals : 18;\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n\n                  // console.log(token,trancheTokens.toString(),tranchePrice.toString(),newBalance.toString());\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n\n          // console.log(token,trancheTokenBalance[token][tranche].toString(),lastTx.tranchePrice.toString(),lastTxBalance.toString());\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:RoundButton,\n                      componentProps:{\n                        value:'Claim',\n                        buttonProps:{\n                          style:{\n                            width:'100%'\n                          },\n                          size:this.props.isMobile ? 'small' : 'medium'\n                        }\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('userHasFunds', userHasFunds, this.props.portfolio.tranchesBalance, this.props.tokenConfig.CDO.name)\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex\n                mt={2}\n                mb={3}\n                alignItems={\"center\"}\n              >\n                <Image\n                  ml={3}\n                  mr={2}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex\n                  mx={1}\n                >\n                  <Title\n                    as={'h2'}\n                    ml={[2, 0]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Title>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        color: 'primary',\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        }\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={2}\n                    fontSize={1}\n                    fontWeight={3}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for <strong>{this.state.token}</strong>\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mb={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                }}\n                handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n              >\n                {this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Title\n              textAlign={'left'}\n            >\n              {flashData.subtitle}\n            </Title>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"primary\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"AA\",\"bubble\"])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"BB\",\"bubble\"])}\n            />\n            <Text\n              mx={2}\n              mt={[0, 2]}\n              mb={[2, 1]}\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                as={'h1'}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      unitProps={{\n                        color:'primary'\n                      }}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      color={'primary'}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.primary,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    gaugeConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    selectedTranche:null,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  loadQueryParams(){\n    const trancheRoute = this.props.urlParams.param1;\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n    if (trancheDetails !== undefined) {\n      const trancheType = trancheDetails.type;\n      const selectedTranche = this.props.urlParams.param3;\n      const selectedProtocol = this.props.urlParams.param2;\n      const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null) : null;\n      const selectedToken = tokenConfig ? tokenConfig.token : null;\n      const gaugeConfig = this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche);\n\n      this.setState({\n        trancheType,\n        tokenConfig,\n        gaugeConfig,\n        trancheRoute,\n        selectedToken,\n        trancheDetails,\n        selectedTranche,\n        selectedProtocol\n      });\n    } else {\n      const selectedTranche = this.props.urlParams.param2;\n      const selectedProtocol = this.props.urlParams.param1;\n      const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null;\n      if (tokenConfig){\n        const selectedToken = tokenConfig.token;\n        const gaugeConfig = this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche);\n        this.setState({\n          tokenConfig,\n          gaugeConfig,\n          selectedToken,\n          selectedTranche,\n          selectedProtocol\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    const tranchesTvls = [];\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches[protocol]), async (token) => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        const trancheConfig = tokenConfig.AA;\n        tranchesTvls.push({\n          token,\n          protocol,\n          tvl:parseFloat(await this.functionsUtil.loadTrancheFieldRaw('tranchePoolConverted', {decimals:2,maxPrecision:999,minPrecision:0}, protocol, token, null, tokenConfig, trancheConfig))\n        });\n      });\n    });\n\n    const tranchesOrdering = tranchesTvls.sort((a, b) => (parseInt(a.tvl) < parseInt(b.tvl) ? 1 : -1));\n\n    this.setState({\n      tranchesOrdering\n    });\n\n    this.loadQueryParams();\n\n    this.loadPortfolio().then( () => {\n\n      if (!!this.state.trancheDetails) {\n\n        if (this.state.userHasFunds && !this.state.tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        const useTrancheType = !this.state.userHasFunds;\n        this.setState({\n          useTrancheType\n        });\n      }\n\n      this.setState({\n        componentLoaded:true\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    let availableTranches = {...this.props.availableTranches};\n    if (this.state.selectedProtocol && this.state.selectedTranche){\n      availableTranches = {\n        [this.state.selectedProtocol]:{\n          [this.state.selectedTranche]:availableTranches[this.state.selectedProtocol][this.state.selectedTranche]\n        }\n      }\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(availableTranches,this.props.account);\n\n    // console.log('portfolio', this.state.selectedProtocol, this.state.selectedTranche, portfolio);\n\n    if (portfolio){\n      const depositedCdos = [];\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n\n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n\n        // Push deposited CDO instead of token\n        depositedCdos.push(trancheInfo.cdo);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(availableTranches).forEach( protocol => {\n        Object.keys(availableTranches[protocol]).forEach( token => {\n          const tokenConfig = availableTranches[protocol][token];\n          if(depositedCdos.includes(tokenConfig.CDO.name)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][token]={}\n              depositedTranches[protocol][token]=availableTranches[protocol][token];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][token]={};\n            remainingTranches[protocol][token]=availableTranches[protocol][token];\n          }\n        })\n      })\n\n      // console.log('tranchesTokens', tranchesTokens)\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4],\n              color:'primary'\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4],\n                color:'primary'\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedTranche}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedTranche){\n      breadcrumbPath.push(this.state.selectedTranche);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              gaugeConfig={this.state.gaugeConfig}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:16,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:70,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Deposited Tranches\n                      </Title>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.13],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      tranchesOrdering={this.state.tranchesOrdering}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Title\n                      as={'h4'}\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Title>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    tranchesOrdering={this.state.tranchesOrdering}\n                    availableTranches={this.props.account ? this.state.remainingTranches : this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'copyColor'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={RoundButton}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  buttonProps:{\n                    size:'small',\n                    width:'auto',\n                    style:{\n                      fontSize:'14px',\n                    }\n                  },\n                  value:'Reduce allowance'\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Input } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    eventData:{},\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n\n        let eventData = {};\n        switch (this.state.increaseAction){\n          case 'time':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseTime',\n              eventValue:this.state.lockPeriodInput\n            };\n          break;\n          case 'amount':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseAmount'\n            };\n          break;\n          default:\n          break;\n        }\n\n        // console.log('eventData',eventData);\n\n        this.setState({\n          eventData,\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let eventData = {};\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_Lock',\n          eventLabel:_unlock_time\n        };\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_IncreaseAmount'\n        };\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      eventData\n    });\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // if (newState.increaseAction !== this.state.increaseAction){\n    //   this.setIncreaseAction(newState.increaseAction);\n    // }\n\n    // Select Withdraw if the lock has expired\n    if (['Increase Lock','Lock'].includes(selectedAction) && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                ) : this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={RoundButton}\n                                          componentProps={{\n                                            buttonProps:{\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              disabled:this.state.buttonDisabled\n                                            },\n                                            value:'Increase Time',\n                                          }}\n                                          action={'Increase Time'}\n                                          eventData={this.state.eventData}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        eventData={this.state.eventData}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',  \n                                    width:[1,1/2],\n                                  },\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                eventData={{\n                                  eventCategory:'Staking_Withdraw',\n                                  eventAction:this.props.selectedToken\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={RoundButton}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    value:'Claim',\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/3],\n                                    }\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  eventData={{\n                                    eventCategory:'Staking_Claim',\n                                    eventValue:this.state.claimable.toFixed(8),\n                                    eventAction:this.props.contractInfo.rewardToken\n                                  }}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={RoundButton}\n                                  componentProps={{\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/2],\n                                    },\n                                    value:'Approve',\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={RoundButton}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    disabled:this.state.buttonDisabled\n                                  },\n                                  value:'Buy Coverage',\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.claimableAmount) ? this.state.selectedCoverToClaim.claimableAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Title\n              as={'h4'}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Title>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1,\n                                  border:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Tools\n                      </Title>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Assets to migrate\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Deposited assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Available assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={RoundButton}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      buttonProps:{\n                                                        width:[1,1/3],\n                                                        size:'medium',\n                                                        height:'45px',\n                                                      },\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={RoundButton}\n                                        componentProps={{\n                                          buttonProps:{\n                                            size:'medium',\n                                          },\n                                          value:'Claim',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Input } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n        const gaugeWorkingSupply = userBoostInfo.workingSupply;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(this.functionsUtil.BNify(gaugeWorkingSupply).plus(userWorkingBalance));\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        // console.log(gaugeToken,gaugeWeight.toFixed(),userBoostInfo,this.functionsUtil.BNify(userWorkingBalance).toFixed(),this.functionsUtil.BNify(gaugeWorkingSupply).toFixed(),userBoostedShare.toFixed());\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={isActive ? 'primary' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v7.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://app.idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://app.idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    aysShort: \"This strategy automatically adjusts the yield split between the Senior and the Junior tranche\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"\",\n    theme: {\n      mode: \"dark\",\n      darkModeEnabled: true,\n      themeTogglerEnabled: false\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: false,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#2272C8\",\n        rgb: [34, 114, 200],\n        hsl: [\"211\", \"71%\", \"46%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FFD15C\",\n        rgb: [255, 209, 92],\n        hsl: [\"43\", \"100%\", \"68%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        isPoolToken: true, // Get Pool Token price for conversion rate\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        // addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      CPOOL: {\n        decimals: 18,\n        enabled: true,\n        label: 'CPOOL',\n        token: 'CPOOL',\n        color: {\n          hex: '#5F73F4',\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        },\n        address: '0x66761fa41377003622aee3c7675fc7b5c1c2fac5'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: false,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      TRU: {\n        token: 'TRU',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#195bff',\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        },\n        disabledCharts: ['score'],\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x4c19596f5aaff459fa38b0f7ed92f11ae6543784',\n      },\n      AGEUR: {\n        decimals: 18,\n        enabled: true,\n        token: 'AGEUR',\n        color: {\n          hex: '#fbcea9',\n          rgb: [251, 206, 169],\n          hsl: ['27', '91%', '82%']\n        },\n        // conversionRateForceToken: 'USDC',\n        // conversionRateInvertTokens: true,\n        // conversionRateField: 'ageurDAIPrice',\n        // conversionRateDirectConversion: true,\n        // conversionRouterMethod: 'getAmountsOut',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        endTimestamp:\"2022-05-22 23:59:59\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: false,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: false,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      wintermute: {\n        legend: false,\n        enabled: true,\n        label: \"Wintermute\",\n        color: {\n          rgb: [163, 236, 38],\n          hsl: [\"82\", \"84%\", \"54%\"]\n        }\n      },\n      clearpool: {\n        legend: false,\n        enabled: true,\n        label: \"Clearpool\",\n        color: {\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        }\n      },\n      truefi: {\n        legend: false,\n        enabled: true,\n        label: \"TrueFi\",\n        color: {\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: false,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 5: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 137: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 80001: 'https://polygon-mainnet.g.alchemyapi.io/v2/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          AGEUR:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'AGEUR',\n            name: \"LiquidityGauge_aa_euler_ageur\",\n            token: \"LiquidityGauge_aa_euler_ageur\",\n            address:'0x8f195979f7af6c500b4688e492d07036c730c1b2',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_AGEUR',\n              token: 'AA_euler_AGEUR',\n              address: '0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n            }\n          },\n          USDC:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDC',\n            name: \"LiquidityGauge_aa_euler_usdc\",\n            token: \"LiquidityGauge_aa_euler_usdc\",\n            address:'0x1cd24f833af78ae877f90569eaec3174d6769995',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDC',\n              token: 'AA_euler_USDC',\n              address: '0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n            }\n          },\n          DAI:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'DAI',\n            name: \"LiquidityGauge_aa_euler_dai\",\n            token: \"LiquidityGauge_aa_euler_dai\",\n            address:'0x57d59d4bbb0e2432f1698f33d4a47b3c7a9754f3',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_DAI',\n              token: 'AA_euler_DAI',\n              address: '0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n            }\n          },\n          USDT:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDT',\n            name: \"LiquidityGauge_aa_euler_usdt\",\n            token: \"LiquidityGauge_aa_euler_usdt\",\n            address:'0x0c3310b0b57b86d376040b755f94a925f39c4320',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDT',\n              token: 'AA_euler_USDT',\n              address: '0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    let orderedTranches = [];\n    if (this.props.tranchesOrdering){\n      this.props.tranchesOrdering.forEach( t => {\n        if (enabledProtocols.includes(t.protocol)){\n          const token = t.token;\n          const protocol = t.protocol;\n          if (this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token]){\n            const tokenConfig = this.props.availableTranches[protocol][token];\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n        }\n      });\n    } else {\n      enabledProtocols.forEach(protocol => {\n        const protocolTranches = this.props.availableTranches[protocol];\n        if (!protocolTranches){\n          return null;\n        }\n        Object.keys(protocolTranches).forEach( token => {\n          const tokenConfig = protocolTranches[token];\n          if (tokenConfig){\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n         })\n      })\n    }\n\n    const depositedTokens = this.props.depositedTokens;\n    if (depositedTokens){\n      orderedTranches = orderedTranches.filter( t => {\n        return depositedTokens.find( d => d.token === t.token && d.protocol === t.protocol )\n      });\n    }\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n        id={\"tranches-list-container\"}\n      >\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        {\n          orderedTranches && orderedTranches.length>0 && (\n            <Flex\n              id={\"tranches-list\"}\n              flexDirection={'column'}\n            >\n              {\n                orderedTranches.map( p => {\n                  const token = p.token;\n                  const protocol = p.protocol;\n                  const tokenConfig = p.tokenConfig;\n                  const tranche = this.props.trancheType || null;\n                  return (\n                    <TableRow\n                      {...this.props}\n                      token={token}\n                      tranche={tranche}\n                      protocol={protocol}\n                      tokenConfig={tokenConfig}\n                      rowId={`tranche-col-${protocol}`}\n                      cardId={`tranche-card-${protocol}`}\n                      key={`tranche-${protocol}-${token}`}\n                      fieldComponent={this.props.fieldComponent || TrancheField}\n                    />\n                  )\n                })\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider && this.walletLink){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, rpc, ...rest } = kwargs;\n    super(rest);\n\n    this.rpc = rpc;\n    this.provider = null;\n    this.infuraId = infuraId;\n    this.WalletConnectProvider = WalletConnectProvider;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      const params = {\n        infuraId:this.infuraId\n      };\n      if (this.rpc){\n        params.rpc = this.rpc;\n      }\n      this.provider = new this.WalletConnectProvider(params);\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nexport default class Web3Connectors {\n\n  defaultNetwork = globalConfigs.network.requiredNetwork;\n\n  constructor(networkId=null){\n    this.setNetwork(networkId);\n  }\n\n  setNetwork(networkId){\n    if (networkId && globalConfigs.network.enabledNetworks.includes(networkId)){\n      this.defaultNetwork = networkId;\n    }\n  }\n\n  getConnectors(){\n\n    const {\n      InjectedConnector,\n      NetworkOnlyConnector,\n      TrezorConnector,\n      LedgerConnector,\n      FortmaticConnector,\n      PortisConnector\n    } = Connectors;\n\n    const env = process.env;\n\n    const defaultNetwork = this.defaultNetwork;\n    const portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\n    const portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n    const manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\n    const manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\n    const fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\n\n    const supportedNetworkURLs = {};\n\n    globalConfigs.network.enabledNetworks.forEach((networkId,index) => {\n      networkId = parseInt(networkId);\n      const provider = globalConfigs.network.availableNetworks[networkId].provider;\n      const providerConfig = globalConfigs.network.providers[provider];\n      supportedNetworkURLs[networkId] = providerConfig.rpc[networkId]+providerConfig.key;\n    });\n\n    // console.log('supportedNetworkURLs',defaultNetwork,supportedNetworkURLs);\n\n    const Injected = new InjectedConnector({\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Infura = new NetworkOnlyConnector({\n      providerURL: supportedNetworkURLs[defaultNetwork]\n    });\n\n\n    const Trezor = new TrezorConnector({\n      api: TrezorApi,\n      supportedNetworkURLs,\n      defaultNetwork,\n      manifestEmail,\n      manifestAppUrl\n    });\n\n    const Ledger = new LedgerConnector({\n      supportedNetworkURLs,\n      defaultNetwork\n    });\n\n    const WalletConnect = new WalletConnectConnector({\n      defaultNetwork,\n      rpc:supportedNetworkURLs,\n      api: WalletConnectProvider,\n      infuraId: env.REACT_APP_INFURA_KEY,\n      bridge: \"https://bridge.walletconnect.org\",\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Fortmatic = new FortmaticConnector({\n      api: FortmaticApi,\n      apiKey: fortmaticApiKey,\n      logoutOnDeactivation: false\n    });\n\n    const Portis = new PortisConnector({\n      api: PortisApi,\n      dAppId: portisDAppId,\n      network: portisNetwork\n    });\n\n    const Authereum = new AuthereumConnector({\n      api: AuthereumApi,\n      network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n    });\n\n    const walletLink = new WalletLinkConnector({\n      api: WalletLink,\n      darkMode: false,\n      chainId: defaultNetwork,\n      appName: globalConfigs.appName,\n      infuraUrl: supportedNetworkURLs[defaultNetwork],\n      appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n    });\n\n    const Torus = new TorusConnector({\n      api: TorusApi,\n      initParams:{\n        buildEnv: 'production', // default: production\n        enableLogging: false, // default: false\n        network: {\n          host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n          chainId: defaultNetwork, // default: 1\n          networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n        },\n        showTorusButton: false // default: true\n      }\n    });\n\n    const gnosis = new GnosisSafeConnector(SafeAppConnector);\n\n    return {\n      Injected,\n      Infura,\n      WalletConnect,\n      gnosis,\n      walletLink,\n      Fortmatic,\n      Portis,\n      Authereum,\n      Torus,\n      Trezor,\n      Ledger,\n    };\n  }\n\n}","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const isGnosisSafe = !!props.connectors.gnosis.provider.safe;\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (props.connectors.Portis) {\n    if (registerPage) {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(props.connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    href={\"#\"}\n                    color={'blue'}\n                    fontWeight={'0'}\n                    textAlign={'center'}\n                    onClick={this.toggleShowTxFees}\n                    title={\"Learn about Ethereum transaction fees\"}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark-white.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectors={this.props.connectors}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <RoundButton\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={ e => this.setCurrentSection(e,'instructions') }\n            >\n              READ INSTRUCTIONS\n            </RoundButton>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <RoundButton\n              className={[styles.gradientButton,styles.empty]}\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={this.resetModal}\n            >\n              BACK\n            </RoundButton>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n\n      window.ethereum.on('accountsChanged', async (accounts) => {\n        this.initAccount(accounts[0]);\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('connectorNameChanged',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.checkNetwork(null,this.initWeb3);\n    } else if ( prevProps.context.active !== this.props.context.active || prevProps.context.connectorName !== this.props.context.connectorName || JSON.stringify(prevProps.context.error) !== JSON.stringify(this.props.context.error) ) {\n      // console.log('contextChanged',this.props.connectorName,this.props.context.connectorName,this.props.context.active,this.props.context.error);\n\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.checkNetwork(null,this.initWeb3);\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.checkNetwork(null,this.initWeb3);\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName && setConnectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('connectorNameChanged_2',this.props.context.connectorName,this.props.context.connectorName,this.props.connectorName);\n      setConnectorName = this.props.connectorName;\n      this.checkNetwork(null,this.initWeb3);\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n      // this.initWeb3();\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n\n    // console.log('initWeb3','networkInitialized',this.state.networkInitialized);\n\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    let useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n    // let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      useWeb3Provider = false; // Disable web3 provider for Infura\n      context.unsetConnector();\n      // setConnectorName = null;\n    } else if (connectorName !== 'Infura') {\n      const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n      // console.log('initWeb3 connectorNameChanged',connectorName,context.connectorName,setConnectorName,!context.active,connectorNameChanged);\n\n      // Set the connector\n      if (connectorName !== 'ledgerLive'){\n        if (!context.active || connectorNameChanged) {\n          // Select preferred web3 provider\n          if (connectorName && connectorNameChanged){\n\n            if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n              return false;\n            }\n\n            // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n            setConnectorName = connectorName;\n            await context.setConnector(connectorName);\n            // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n            // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n            // return this.initWeb3();\n            return web3;\n          }\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    // Forse enable provider\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    const web3Callback = async (initWeb3Index=null) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index && initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',initWeb3Index,this.state.network.current.id,this.state.network.required.id,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const biconomyEnabled = biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()));\n\n    // console.log('initWeb3',initWeb3Index,biconomyEnabled,connectorName,web3,context,web3Provider,'UPDATE',web3 !== this.state.web3);\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyEnabled){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            // if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n            //   console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n            //   return false;\n            // }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          biconomy:false\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = (this.state.network.isCorrectNetwork ? this.state.web3 : (networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : this.state.web3Providers[this.state.network.required.id]));\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      await this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=null) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (!account && this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      let wallets = null;\n\n      if (!account){\n        wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n      \n      // console.log('initAccount',wallets,this.props.context.account,this.state.account,account);\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks,this.state.web3);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n\n              const strategyConfig = tokenConfig.Strategy;\n              if (strategyConfig.address){\n                contracts.push(this.initContractWithoutSet(tokenConfig.Strategy.name,strategyConfig.address,strategyConfig.abi));\n              }\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null,defaultWeb3=null) => {\n     const currentWeb3 = defaultWeb3 || this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null,callback=null) => {\n    const network = {...this.state.network};\n\n    // Get selected web3 provider\n    const defaultWeb3 = this.props.context && this.props.context.active && this.props.context.library ? this.props.context.library : null;\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId,defaultWeb3);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','defaultWeb3:',defaultWeb3,'networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,'networkInitialized: '+networkInitialized,', update: '+updateNetwork);\n\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      },()=>{\n        if (typeof callback === 'function'){\n          callback();\n        }\n      });\n    } else {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          connectors={this.props.connectors}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import DAI from '../abis/tokens/DAI.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport TruefiPool from '../abis/truefi/TruefiPool.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nimport QuickswapLiquidityPool from \"../abis/quickswap/QuickswapLiquidityPool.json\";\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        abi:QuickswapLiquidityPool,\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13054628,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield',\n          address:'0x48a48c6694168093A3dEE02E9e8AC5a14169a652'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13575397,\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield',\n          address:'0x73A44027bDAF5D71296d2C73cfb13e561c76a916'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH',\n          address:'0x0cac674ebD77bBD899f6079932768f6d59Da089A'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        curveApyPath:['apy','day','frax'],\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv',\n          address:'0xBc1707D16541108b7035E52e1DAeb27ca4B6B79F'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        curveApyPath:['apy','day','mim'],\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv',\n          address:'0x35168324dC1981aDDc3bC915788e200BeDF77865'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        curveApyPath:['apy','day','steth'],\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV',\n          address:'0x3bCbA0AfD36C9B350f46c570f89ab70817D122CB'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv',\n          address:'0xDb7306Ddba67DD9d5aF08204E314F4DE6c29e20d'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur',\n          address:'0x4Ae60BC9A3eFc160AE2EbA70947a9b47Ad2b9094'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv',\n          address:'0x271cE5dED4cCbD28833bddF8a8093517299920f0'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv',\n          address:'0x0198792f2849397908C092b6B57654e1a57a4CDC'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14785127,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC',\n          address:'0x5DaD2eEF80a8cdFD930aB8f0353cA13Bd48c4346'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      },\n      levUSDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:15445762,\n        enabledEnvs: ['beta'],\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_levUSDC',\n          address:'0x29d094110c7a89f1cb6c975df0a38cae80f24b21'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_levUSDC',\n          address:'0x37De1D299C93743472343699c58Ec95000870Dc5'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_levUSDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC AA',\n          name:'AA_euler_levUSDC',\n          token:'AA_euler_levUSDC',\n          address:'0xb43B101F1261784E3c4AF931dBD6082e08BB3317'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_levUSDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC BB',\n          name:'BB_euler_levUSDC',\n          token:'BB_euler_levUSDC',\n          address:'0x19ef72c89e0B28406B7EbAcf2556CAb7Cc623eF9'\n        }\n      },\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961854,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_DAI',\n          address:'0x46c1f702a6aad1fd810216a5ff15aab1c62ca826'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_DAI',\n          address:'0xc7F1B9C72B8230E470420A4b69af7c50781A3f44'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_DAI_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_DAI',\n          blockNumber:14961854,\n          token:'AA_euler_DAI',\n          label:'euler DAI AA',\n          address:'0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_DAI_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14961854,\n          name:'BB_euler_DAI',\n          token:'BB_euler_DAI',\n          label:'euler DAI BB',\n          address:'0x6629baA8C7c6a84290Bf9a885825E3540875219D'\n        }\n      },\n      USDT:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDT',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961973,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDT',\n          address:'0xD5469DF8CA36E7EaeDB35D428F28E13380eC8ede'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDT',\n          address:'0x3d1775dA27Dd9c6d936795Ac21b94CDeD8baBD69'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDT_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDT',\n          blockNumber:14961973,\n          token:'AA_euler_USDT',\n          label:'euler USDT AA',\n          address:'0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDT_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'BB_euler_USDT',\n          blockNumber:14961973,\n          token:'BB_euler_USDT',\n          label:'euler USDT BB',\n          address:'0xb1EC065abF6783BCCe003B8d6B9f947129504854'\n        }\n      },\n      AGEUR:{\n        abi:ERC20,\n        decimals:18,\n        token:'AGEUR',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:15055915,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_AGEUR',\n          address:'0x2398Bc075fa62Ee88d7fAb6A18Cd30bFf869bDa4'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_AGEUR',\n          address:'0x8468B8Efe7eeA52978Ccfe3C0248Ca6F6895e166'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_AGEUR_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_AGEUR',\n          blockNumber:15055915,\n          token:'AA_euler_AGEUR',\n          label:'euler AGEUR AA',\n          address:'0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_AGEUR_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15055915,\n          name:'BB_euler_AGEUR',\n          token:'BB_euler_AGEUR',\n          label:'euler AGEUR BB',\n          address:'0xcf5FD05F72cA777d71FB3e38F296AAD7cE735cB7'\n        }\n      }\n    },\n    clearpool:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabledEnvs:[],\n        blockNumber:15044679,\n        protocol:'clearpool',\n        autoFarming:['CPOOL'],\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_clearpool_USDC',\n          address:'0xDBCEE5AE2E9DAf0F5d93473e08780C9f45DfEb93'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_clearpool_USDC',\n          address:'0x54ae90be2dee0a960953c724839541e75bb1f471'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.clearpool.finance/pool/0xCb288b6d30738db7E3998159d192615769794B5b\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Clearpool Wintermute USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_clearpool_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_clearpool_USDC',\n          token:'AA_clearpool_USDC',\n          label:'clearpool USDC AA',\n          address:'0xb86264c21418aA75F7c337B1821CcB4Ff4d57673'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_clearpool_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_clearpool_USDC',\n          token:'BB_clearpool_USDC',\n          label:'clearpool USDC BB',\n          address:'0x4D9d9AA17c3fcEA05F20a87fc1991A045561167d'\n        }\n      }\n    },\n    truefi:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabledEnvs:[],\n        protocol:'truefi',\n        autoFarming:['TRU'],\n        blockNumber:15326147,\n        multiCallDisabled:true,\n        // adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_truefi_USDC',\n          address:'0x1f5A97fB665e295303D2F7215bA2160cc5313c8E'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_truefi_USDC',\n          address:'0x62B17c9083Db5941197E83BD385985B8878B58Fb'\n        },\n        Pool:{\n          abi:TruefiPool,\n          name:'Pool_truefi_USDC',\n          address:'0xA991356d261fbaF194463aF6DF8f0464F8f1c742'\n        },\n        modal:{\n          enabled:true,\n          buttonText:'Continue',\n          title:'Truefi exit fee',\n          icon:'images/warning-2.png',\n          id:'modal_truefi_usdc_exit_fee',\n          text:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool, in addition to the performance fee. Read more at <a href=\"https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit</a>'\n        },\n        messages:{\n          withdraw:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool.',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.truefi.io/pools/0xA991356d261fbaF194463aF6DF8f0464F8f1c742\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Truefi USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_truefi_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_truefi_USDC',\n          token:'AA_truefi_USDC',\n          label:'truefi USDC AA',\n          address:'0x868bb78fb045576162B510ba33358C9f93e7959e'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_truefi_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_truefi_USDC',\n          token:'BB_truefi_USDC',\n          label:'truefi USDC BB',\n          address:'0x6EdE2522347E6a5A0420F41f42e021246e97B540'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport themeDark from \"../theme-dark\";\nimport Web3Provider from \"web3-react\";\nimport Web3Connectors from \"./connectors\"\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport { ThemeProvider, Box, Flex } from \"rimble-ui\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Lazy Loading\n// const Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  web3Connectors = null;\n\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (!this.web3Connectors){\n      this.web3Connectors = new Web3Connectors();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n      this.web3Connectors.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        // const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        const themeMode = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    const connectors = this.web3Connectors.getConnectors();\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route\n                                        path=\"/:section?/:param1?/:param2?/:param3?\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              web3Infura={web3Infura}\n                                              web3Polygon={web3Polygon}\n                                              initAccount={initAccount}\n                                              multiCall={this.multiCall}\n                                              permitClient={permitClient}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              maticPOSClient={maticPOSClient}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              validateAccount={validateAccount}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              contractsNetworks={contractsNetworks}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              networkInitialized={networkInitialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              erc20ForwarderClient={erc20ForwarderClient}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              selectedProtocol={this.state.selectedProtocol}\n                                              userRejectedValidation={userRejectedValidation}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              initContractCustomProvider={initContractCustomProvider}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Button } from \"rimble-ui\";\nimport theme from \"../theme-dark\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  state = {\n    buttonState:'default'\n  };\n\n  render() {\n    const ctaType = this.props.type || 'primary';\n\n    const buttonProps = Object.assign({\n      fontSize:2,\n      width:'auto',\n      fontWeight:4,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:1,\n      fontFamily:'ctas',\n      border:theme.colors.ctas[ctaType][this.state.buttonState].border,\n      contrastColor:theme.colors.ctas[ctaType][this.state.buttonState].text,\n      mainColor:theme.colors.ctas[ctaType][this.state.buttonState].background\n    },this.props.buttonProps);\n\n    const ButtonComponent = ctaType === 'secondary' ? Button.Outline : Button;\n\n    return (\n       <ButtonComponent\n        {...buttonProps}\n        onMouseEnter={(data, e) => {\n          this.setState({\n            buttonState:'hover'\n          });\n        }}\n        onMouseLeave={(data, e) => {\n          this.setState({\n            buttonState:'default'\n          });\n        }}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </ButtonComponent>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [14, 16, 16, 20, 20, 28, 36, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    ctas: '\"Open Sans\"',\n    labels: '\"Open Sans\"',\n    titles: '\"Open Sans\"',\n    sansSerif: '\"Source Sans Pro\"',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '5px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #C6CBD2', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#FFFFFF',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#CDD0D6',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#FFFFFF',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#CDD0D6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    CTAs\n    */\n    ctaPrimaryText:'#1B1E27',\n    ctas:{\n      primary:{\n        default:{\n          border:'none',\n          text:'#1B1E27',\n          background:'#FFFFFF'\n        },\n        hover:{\n          border:'none',\n          text:'#FFFFFF',\n          background:'#2272C8'\n        }\n      },\n      secondary:{\n        default:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        },\n        hover:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        }\n      }\n    },\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2272C8\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#293243',\n    selectBg: '#293243',\n    backButtonBg: '#FFFFFF',\n    lineChartStroke: '#CDD0D6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#1B1E27',\n    statValue: '#FFFFFF',\n    boxBorder: '#eeeeee',\n    cellTitle: '#CDD0D6',\n    cellText: '#CDD0D6',\n    divider: '#CDD0D6',\n    counter: '#CDD0D6',\n    redeem: '#00a9fe',\n    link: '#FFFFFF',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#C6CBD2',\n    cardBg: '#293243',\n    menuBg: '#293243',\n    menuHover: '#293243',\n    dropdownBg: '#4C5976',\n    flashBg: '#04117B',\n    flashColor: '#eeeeee',\n    cardBgHover: '#4b5a76',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    // cardBgActive: \"#04117B\",\n    // cardBgActive: \"#0c48a4\",\n    cardBgActive: \"#2272C8\",\n    cardBgContrast: \"#293243\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n  },\n  buttons: {\n    primary: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      // use css custom props\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    normal: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__dKXq3\",\"bg-bottom-right\":\"ModalCard_bg-bottom-right__32tBy\",\"bg-noise\":\"ModalCard_bg-noise__1pVkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sgMk\",\"link\":\"Footer_link__1VFp9\"};","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      color:'primary',\n      textAlign:'center',\n      fontFamily:'titles',\n      lineHeight:'initial',\n    };\n\n    // Get title height\n    const as = this.props.as && Heading[this.props.as] ? this.props.as : 'h1';\n    const titleType = parseInt(as.substr(1));\n\n    // Set font size for h1\n    if (titleType === 1){\n      props.fontSize = [5,6];\n    } else if (titleType>=3){ // Reduce weight for h3...h6\n      props.fontWeight = 3;\n    }\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent =  this.props.component ? this.props.component : Heading[as];\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      right={'0'}\n      zIndex={999}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'dashboardBg'}\n    >\n      <Flex\n        zIndex={1}\n        width={'100%'}\n        height={'100%'}\n        position={'absolute'}\n      >\n        <Flex\n          className={[styles.bg,styles['bg-bottom-right']]}\n        />\n        <Flex\n          className={[styles.bg,styles['bg-noise']]}\n        />\n      </Flex>\n      <Flex\n        zIndex={2}\n        height={'100%'}\n        flex={'1 1 auto'}\n        style={{\n          overflow: 'auto',\n        }}\n        position={'relative'}\n        flexDirection={'column'}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    mb={2}\n    width={1}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '40px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'primary'}\n        textAlign={'center'}\n        fontFamily={'titles'}\n        mt={props.icon ? 2 : 0}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    py={3}\n    px={[0,3]}\n    borderTop={0}\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderColor={'light-gray'}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                whiteSpace:'nowrap',\n                color:this.props.theme.colors.primary,\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontSize={2}\n              fontWeight={3}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__E1F2u\",\"genericSelector\":\"GenericSelector_genericSelector__3epuw\",\"dark\":\"GenericSelector_dark__3Fh8V\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__1c1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2H7IC\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__1TQOS\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1cH4G\"};","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton.js\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <RoundButton\n        handleClick={this.props.handleClick}\n        buttonProps={{width:'auto',...this.props.buttonProps}}\n      >\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          {\n            this.props.isLoading ? (\n              <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n                <LoadingSpinner />\n              </Flex>\n            ) : this.props.buttonText\n          }\n        </Flex>\n      </RoundButton>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    const textProps = Object.assign({\n      color:'primary',\n      fontFamily:'ctas'\n    },this.props.textProps);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    let formattedValue = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // console.log('mouseOver',fieldInfo.name,this.props.mouseOver);\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.functionsUtil.BNify(this.state.experimentalBadge).gt(0) && this.functionsUtil.BNify(this.state.experimentalBadge).lte(5000000)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0) && this.functionsUtil.BNify(this.state.statusBadge).lte(5000000)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getTokenConfig(this.props.tokenConfig.token);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.tokenConfig.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n            mouseOver={this.props.mouseOver}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheAPRSplitRatio':\n        output = this.state[fieldInfo.name];\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n            {\n              (typeof this.props.tokenConfig.adaptiveYieldSplitEnabled === 'undefined' || this.props.tokenConfig.adaptiveYieldSplitEnabled) && (\n                <Tooltip\n                  placement={'top'}\n                  message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n                >\n                  <Image ml={2} src={`images/ays.svg`} height={['1.4em','1.8em']} {...fieldProps} />\n                </Tooltip>\n              )\n            }\n          </Flex>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n      case 'trancheAYS':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n          >\n            <Image src={`images/ays.svg`} height={['1.4em','2em']} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Text, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Text\n        fontWeight={4}\n        color={'cellTitle'}\n        fontSize={['12px',0]}\n        fontFamily={'titles'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Text>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        componentHasChildren = true;\n        CustomComponent = RoundButton;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n        fieldProps.buttonProps = fieldProps;\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    if (fieldInfo.name !== 'button'){\n      fieldProps.fontWeight = 3;\n      fieldProps.fontSize = [0,2];\n    }\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}