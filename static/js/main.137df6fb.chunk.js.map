{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","RoundButton/RoundButton.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","IconBox/IconBox.js","BatchDeposit/BatchDeposit.js","SendTxWithBalance/SendTxWithBalance.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","ExecuteTransaction/ExecuteTransaction.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","utilities/GovernanceUtil.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","refreshIdleSpeed","_callee4","_context4","getUnclaimedTokens","_callee5","rewards","_context5","fixTokenDecimals","decimals","getAPR","_ref6","_callee6","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref7","_ref8","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","_context6","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref9","_callee7","idleTokenAddress","cachedData","idleSpeeds","_context7","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","_callee8","blocksPerYear","distribution","_context8","address","_x6","getUserDistribution","_callee10","availableTokens","fixByFrequency","totalSpeed","_args10","_context10","selectedStrategy","availableStrategies","asyncForEach","keys","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","output","totalAllocation","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","tokenPrice","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","getCachedData","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","strategyIcon","strategy","strategyName","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","style","ref","_ref15","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","CustomComponent","customValue","Icon","Text","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","pop","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","curvezapin","curvezapout","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getBatchedDeposits","getTokensToMigrate","getAccountPortfolio","reduce","batchInfo","statusIcon","deposited","batchDeposits","redeemable","batchRedeems","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","src_AssetsList_AssetsList","goToSection","route","borderBottom","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","image","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","RoundButton","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","nonce","approve","usePermit","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","migrationEnabledCallback","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","callbackMigrate","callbackReceiptMigrate","callbackPermit","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","permitContract","functionInfo","nonceMethod","expiry","migrationCallback","showBalanceSelector","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","functions","f","call","signPermit","permitName","biconomyChanged","usePermitChanged","actionChanged","fastBalanceSelectorChanged","contractApproved","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","src_TxProgressBar_TxProgressBar","src_FastBalanceSelector_FastBalanceSelector","functionName","src_RoundButton_RoundButton","migrationImage","migrationIcon","migrationText","migrationTextProps","approveText","IconBox","BatchDeposit","canClaim","batchTotals","canDeposit","claim","permitEnabled","hasDeposited","permitSigned","batchCompleted","claimSucceeded","migrationSucceeded","batchDepositEnabled","checkBatchs","loadStrategies","urlParams","param2","contractApprovedChanged","currBatchIndex","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","_this5","callbackReceiptClaim","_this6","strategyDefaultValue","s","src_IconBox_IconBox","togglePermitEnabled","connectAndValidateAccount","src_Migrate_Migrate","SendTxWithBalance","getFastBalanceSelector","checkContractApproved","contractInfo","executeTx","_amount","params","methodName","methodParams","contractName","getTransactionParams","approveCallback","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","infoBox","balanceSelectorInfo","approveDescription","CoverProtocol","swapInfo","selectedAction","successMessage","activeCoverages","defaultCoverage","selectedCoverage","transactionSucceeded","collaterals","swapInfoChanged","collateralAmount","contract","tokens","balancerPool","tokenAmountOut","balancerTokenConfig","swapFee","covTokens","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","fixedAmount","mintedClaimLog","receipt","logs","log","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","getEtherscanTransactionUrl","claimTokenConfig","claimTokensLog","receivedClaimAmount","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","currTime","coverages","c","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","src_SendTxWithBalance_SendTxWithBalance","components_BuyModal","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","aprTooltipMode","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","coverProtocol","subComponent","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args5","idleTokensBalance","getDepositTimestamp","deposits","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_args8","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args9","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","allAvailableTokens","_args11","processStoredTxs","_callee13","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args13","_context13","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee18","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args18","_context18","baseTokenAddress","_callee17","minedTxs","_context17","_ref19","_callee16","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context16","getCurveTokenPrice","_ref20","_callee14","_context14","getTransactionReceipt","_x10","_x11","topics","baseTokensConfig","t2","_ref21","_callee15","_context15","_x12","_x13","_x9","_ref22","_callee24","txsToProcess","_args24","_context24","_ref23","_callee23","_context23","_ref24","_callee22","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context22","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref25","_callee19","_context19","txReceipt","_x18","_x19","_ref26","_callee20","_context20","_x20","_x21","raw","_ref27","_callee21","_context21","_x22","_x23","decodeLog","_token","_x16","_x17","_x15","_x14","alias","cachedRequests","_ref28","_callee25","error_callback","config","_args25","_context25","catch","_x24","_ref29","_callee26","return_data","_args26","_context26","_x25","code","errorCode","array","prop","shift","configs","checkUrlOrigin","_ref30","_callee28","googleEventsInfo","originOk","currentNetwork","_args28","_context28","ga","_ref31","_callee27","_context27","hitCallback","hitCallbackFail","_x27","_x28","_x26","createContract","_ref32","_callee29","_context29","Contract","_x29","_x30","_x31","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref33","_callee30","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args30","_context30","_x32","_ref34","_callee31","_context31","_x33","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee32","contractPaused","_args32","_context32","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref36","_callee35","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context35","allocationPromise","_ref37","_callee33","_context33","lastAmounts","_x35","_x36","availableTokenPromise","_ref38","_callee34","_context34","_x37","_x38","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x34","_ref39","_callee36","_context36","_x39","_x40","_ref40","_callee37","signedParameters","callback_receipt","_contract$methods","_context37","getGasPrice","once","confirmationNumber","_x41","_x42","_x43","_x44","_x45","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","soliditySHA3","toBuffer","_ref41","_callee38","biconomyInfo","res","_context38","headers","x-api-key","_x46","sendTxWithPermit","_ref42","_callee39","_contract$methods2","messageToSign","_this$getSignaturePar","_context39","_address","personal","sign","_x47","_x48","_x49","_x50","_x51","_x52","_ref43","_callee40","_this$getSignaturePar2","_context40","getNonce","_x53","_x54","_x55","_x56","signPermitEIP2612","_ref44","_callee41","erc20Name","owner","spender","deadline","domain","domainData","_context41","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","now","substring","_x57","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_ref45","_callee42","baseContractName","holder","spenderContractName","callback_permit","baseContract","spenderContract","permitConfig","_args42","_context42","net","getId","response","permitParams","methodAbi","_jsonInterface","useNonce","inputs","unshift","_x65","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_x73","sendSignedTx","_ref46","_callee43","MetaTransaction","dataToSign","_context43","_x74","_x75","_x76","_x77","_x78","_ref47","_callee44","contractAddr","walletAddr","allowance","_context44","getAllowance","_x79","_x80","_x81","_ref48","_callee45","_context45","_x82","_x83","_x84","txData","toTwosComplement","_ref49","_callee46","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref50","_ref51","curveAvgBuyPrice","curveTokenBalance","_ref52","_ref53","amountLentCurve1","redeemableBalanceCurve","_ref54","_ref55","earningPerYear","_ref56","_ref57","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref58","_ref59","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref60","_ref61","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref62","_ref63","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref64","_ref65","amountLentCurve2","redeemableBalanceCurve1","_ref66","_ref67","redeemableBalance2","_args46","_context46","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x85","_x86","_x87","_x88","_ref68","_callee47","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args47","_context47","_x89","clearCachedData","useLocalStorage","_ref69","_callee48","_ref70","_ref71","idleTokensTotalSupply","userShare","_context48","_x90","_x91","_callee50","_args50","_context50","_ref73","_callee49","_ref74","_ref75","_context49","_x92","_ref76","_callee51","fixDecimals","_ref77","_ref78","_args51","_context51","_x93","_x94","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref79","_callee52","_context52","getProtocolBalance","_x95","_x96","_ref80","_callee53","_context53","_x97","_x98","getAprs","_ref81","_callee54","_context54","_x99","genericIdleCall","_ref82","_callee55","callParams","_args55","_context55","_x100","estimateGas","_ref83","_callee56","_contract$methods3","_args56","_context56","_x101","_x102","getTxDecodedLogs","_ref84","_callee58","logAddr","decodeLogs","internalTransfers","_context58","_ref85","_callee57","_context57","_x107","_x108","_x103","_x104","_x105","_x106","getBlockNumber","_callee59","_context59","getContractPastEvents","_ref87","_callee60","_args60","_context60","getPastEvents","_x109","_x110","_ref88","_callee61","_contract$methods4","_args61","_context61","_x111","_x112","_ref89","_callee62","_args62","_context62","_x113","_x114","apr2apy","getUnlentBalance","_ref90","_callee63","unlentBalance","_context63","_x115","_ref91","_callee64","_args64","_context64","_x116","_ref92","_callee66","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args66","_context66","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref93","_callee65","_ref94","_ref95","protocolBalance","_context65","_x118","_x119","getGovTokensBalances","total","getTokenConversionRate","_x117","getUniswapConversionRate_path","_ref96","_callee67","unires","_context67","_x120","_ref97","_callee68","tokenConfigFrom","tokenConfigDest","_context68","_x121","_x122","getCurveDepositedTokens","_ref98","_callee69","idleTokensBalances","remainingCurveTokens","_args69","_context69","_x123","getCurveUnevenTokenAmounts","_ref99","_callee70","amounts","max_burn_amount","unevenAmounts","_context70","getCurveDepositContract","_x124","_x125","_callee71","curveRatesInfo","_context71","strategyTokens","getCurveAPYContract","_callee72","blocksForPrevTokenPrice","_ref102","_ref103","prevTokenPrice","blocksMultiplier","curveAPR","_context72","getCurveTokenSupply","_callee73","_context73","getCurvePoolContract","_callee74","_args74","_context74","_callee75","_args75","_context75","_ref107","_callee76","_ref108","_ref109","_context76","_x126","_callee77","depositContractInfo","_context77","getCurveZapContract","_callee78","zapContractInfo","_context78","_callee79","poolContractInfo","_context79","getCurveSwapContract","_callee80","_context80","getCurveIdleTokensAmounts","_callee82","max_slippage","curveTokenSupply","curveTokenShare","_args82","_context82","_ref115","_callee81","curveIdleTokens","_context81","_x127","getCurveTokensAmounts","_callee84","useCoinIndex","_args84","_context84","_ref117","_callee83","_ref118","_ref119","totalTokenSupply","_context83","_x128","getCurveAmounts","_ref120","_callee86","_args86","_context86","_ref121","_callee85","_context85","_x131","_x129","_x130","getCurveTokenAmount","_ref122","_callee87","_args87","_context87","_x132","getCurveSlippage","_ref123","_callee88","uneven_amounts","_ref124","_ref125","virtualPrice","Sv","_args88","_context88","_x133","_x134","getCompAPR","_ref126","_callee89","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args89","_context89","_x135","_x136","getCompSpeed","_ref127","_callee90","cTokenAddress","compSpeed","_context90","_x137","_ref128","_callee91","annualize","cTokenInfo","compoundAllocationPerc","_ref129","_ref130","cTokenTotalSupply","compoundPoolShare","_args91","_context91","_x138","_callee93","_args93","_context93","_ref132","_callee92","_ref133","_ref134","_context92","_x139","_callee95","_args95","_context95","_ref136","_callee94","_ref137","_ref138","compApr","_context94","_x140","getTokensCsv","_callee98","csv","_context98","prototype","sum","pv","cv","avg","_ref140","_callee97","_context97","_ref141","_callee96","header","rows","aprAvg","scoreAvg","lastRow","_context96","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x142","_x141","_callee100","_args100","_context100","_ref143","_callee99","compTokenBalance","_context99","_x143","speed","getGovTokensUserDistributionSpeed","_ref144","_callee102","govTokensUserDistribution","_args102","_context102","_ref145","_callee101","_context101","_x145","_x144","_ref146","_callee104","govTokensDistribution","_args104","_context104","_ref147","_callee103","govSpeed","_context103","_x147","_x146","_ref148","_callee106","_args106","_context106","_ref149","_callee105","_ref150","_ref151","compoundInfo","_context105","_x150","_x148","_x149","_callee108","_args108","_context108","_ref153","_callee107","tokenConversionRate","fromTokenConfig","_context107","_x151","getGovTokenConfigByAddress","_callee109","checkShowBalance","govTokensEarnings","_args109","_context109","acc","govTokenAmount","_callee112","govTokenConfigForced","_args112","_context112","_ref156","_callee111","govTokensAmounts","_context111","_ref157","_callee110","govTokenAddress","_context110","_x153","_x154","_x152","_callee113","_args113","_context113","_callee114","_ref160","_ref161","gain","fees","_args114","_context114","_ref162","_callee115","_args115","_context115","_x155","getAggregatedStats","_callee119","avgAPR","totalAUM","_args119","_context119","_ref164","_callee118","_context118","_ref165","_callee117","oldTokenAllocation","oldTokenTotalAllocation","_context117","_ref166","_callee116","_ref167","_ref168","tokenBalanceConverted","_context116","_x158","_x157","_x156","getTokenApy","_ref169","_callee120","_context120","_x159","_callee123","_args123","_context123","_ref171","_callee122","_context122","_ref172","_callee121","_ref173","_context121","_x161","_x160","getProtocolsTokensBalances","_callee125","tokenBalances","minTokenBalance","protocolsTokens","_args125","_context125","_ref175","_callee124","tokenContract","_context124","_x162","_ref176","_callee126","_args126","_context126","_x163","_x164","_x165","_ref177","_callee127","_args127","_context127","_x166","_x167","_ref178","_callee128","_ref179","_ref180","_context128","protocolScore","getTokenScoreApi","_x168","_x169","_ref181","_callee129","_context129","_x170","_x171","_ref182","_callee131","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args131","_context131","_ref183","_callee130","addrIndex","protocolApr","protocolApy","_context130","_x173","_x174","_x172","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","src_ExtLink_ExtLink","react_router_dom","link","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","ExecuteTransaction","txStatus","ExecuteComponent","execute","componentProps","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","showRefreshIdleSpeed","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","idleTokenEnabled","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","src_ExecuteTransaction_ExecuteTransaction","Button","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","redeemUnderlying","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","setMaxSlippage","initToken","normalizedAmount","withdrawSlippage","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","calculateSlippage","loadSelectedTokenConfig","curveConfig","min_amounts","coin_index","min_amount","showSlippage","curveTokenName","selectDestinationToken","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","batchDepositDepositEnabled","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_ShareModal","CardIconButton","useIconOnly","iconColor","iconBgColor","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","showAPYDisclaimer","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","getMigrationParams","idleTokenBalanceChanged","underlyingBalanceToDeposit","normalizeIdleTokenBalance","hasCurveTokens","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","claimCallback","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","getCurrentDelegate","getCurrentVotes","votes","_args7","getTimelockDelay","queueProposal","proposalId","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","_args14","getDelegatesChanges","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","getDelegatesVotesChanges","getDelegates","all_votes","delegateAccounts","_args17","getVotes","_e$returnValues","returnValues","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args21","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","governanceUtil","delegatesChanges","lastDelegateTx","delegator","toDelegate","revoke","changeDelegate","setDelegateDifferentWallet","DashboardHeader","govModalOpened","isDashboard","isGovernance","governanceRoute","dashboardRoute","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","checkNewDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","constant","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","timelockDelay","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.137df6fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__PMcBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__KvbCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"active\":\"DashboardCard_active__2XLas\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  fieldComponent={AssetField}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        curvein:'CurveIn',\n        curveout:'CurveOut',\n        curvezapin:'CurveZapIn',\n        curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Flex, Box, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n              break;\n              case 'claimable':\n                tokenConfig.statusIcon = 'Done';\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n            tokenEarnings\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account),\n            this.functionsUtil.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          // console.log(token,tokenEarningsPerc.toFixed(5),amountLentToken.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings;\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <CountUp\n                    delay={0}\n                    decimals={8}\n                    decimal={'.'}\n                    separator={''}\n                    useEasing={false}\n                    duration={31536000}\n                    end={parseFloat(earningsEnd)}\n                    start={parseFloat(earningsStart)}\n                    formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,10,8) }\n                  >\n                    {({ countUpRef, start }) => (\n                      <span\n                        ref={countUpRef}\n                        style={{\n                          lineHeight:1,\n                          color:this.props.theme.colors.copyColor,\n                          fontFamily:this.props.theme.fonts.counter,\n                          fontWeight: this.props.isMobile ? 600 : 700,\n                          fontSize:this.props.isMobile ? '21px' : '1.7em',\n                        }}\n                      />\n                    )}\n                  </CountUp>\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    mb={4}\n                    width={1}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        handleClick={(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`) }\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'STRATEGY',\n                            props:{\n                              width:[0.3,0.17]\n                            },\n                            fields:[\n                              {\n                                name:'strategyIcon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2em']\n                                }\n                              },\n                              {\n                                name:'strategyName'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: this.props.isMobile ? 6 : 8\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.35,0.21],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: this.props.isMobile ? 6 : 8\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.35,0.21],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? '#f7f8ff' : 'white'}\n          contrastColor={this.props.isActive ? '#f7f8ff' : 'white'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    const newState = {\n      loading,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    // If use Permit don't ask for Approve\n    if (this.props.usePermit){\n      newState.migrationContractApproved = true;\n    }\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.state.oldIdleTokens && (\n                                <Box\n                                  mb={1}\n                                  width={1}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                </Box>\n                              )\n                            }\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n            dangerouslySetInnerHTML={{\n              __html:this.props.text\n            }}\n            {...this.props.textProps}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Box, Text, Icon, Link, Checkbox } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged || contractApprovedChanged){\n      this.checkBatchs();\n    }\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.batchCompleted = batchCompleted;\n    newState.canDeposit = batchDepositEnabled;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    let selectedStrategy = availableStrategies[0].value;\n    let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n      selectedToken = selectedTokenConfig.baseToken;\n      selectedStrategy = selectedTokenConfig.strategy;\n    }\n\n    this.setState({\n      availableStrategies\n    },() => {\n      this.selectStrategy(selectedStrategy,selectedToken);\n    });\n\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved) || this.state.hasDeposited;\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <IconBox\n                  cardProps={{\n                    mt:3\n                  }}\n                  text={'You will start earning gov tokens after the batch is migrated'}\n                />\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Permit for gas-less transaction' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                        color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for the batch to be deposited\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Claim your {this.state.tokenConfig.idle.token}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded  &&\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} contract supports Permit Signature, please disable it if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Deposit with Permit Signature`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n          {\n            this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && this.state.canClaim && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            my:3\n                          }}\n                        >\n                          {\n                            batchId ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={'HourglassEmpty'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.batchCompleted ? (\n                                      <Text.span\n                                        color={'cellText'}\n                                      >The batch has been deposited, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                    ) : (\n                                      <Text.span\n                                        color={'cellText'}\n                                      >\n                                        You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your tokens.\n                                        {\n                                          typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                          <Text.span\n                                            fontWeight={500}\n                                            display={'block'}\n                                            color={'copyColor'}\n                                            textAlign={'center'}\n                                          >\n                                            Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                          </Text.span>\n                                        }\n                                      </Text.span>\n                                    )\n                                  }\n                                </Text>\n                              </Flex>\n                            ) : this.state.migrationSucceeded ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'DoneAll'}\n                                  color={this.props.theme.colors.transactions.status.completed}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You have successfully deposited your {this.state.selectedToken} into the batch!\n                                </Text>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have any {this.state.selectedToken} in your wallet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been deposited!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    fontWeight={500}\n                                    display={'block'}\n                                    color={'copyColor'}\n                                    textAlign={'center'}\n                                  >\n                                    Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, null, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    // if (!this.props.tokenConfig.token){\n    //   return null;\n    // }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            <Text\n                              ml={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'left'}\n                            >\n                              {step.description}\n                            </Text>\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collaterals[0];\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo);\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || swapInfoChanged || contractApprovedChanged){\n      const steps = [];\n      let infoBox = null;\n      let tokenAmount = null;\n      let contractInfo = null;\n      let collateralAmount = null;\n      let approveDescription = null;\n      switch (this.state.selectedAction){\n        case 'Mint':\n          contractInfo = this.props.toolProps.contract;\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            text:`Stake ${this.state.selectedToken} to mint both Claim and No-Claim tokens in a 1:1 ratio`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:false,\n            description:`Mint Claim and No-Claim tokens`\n          });\n        break;\n        case 'NoClaim':\n          contractInfo = this.state.selectedCoverage.tokens[this.state.selectedAction].balancerPool;\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your No-Claim tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.<br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`\n            };\n          } else {\n            infoBox = {\n              text:`No-Claim tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.<br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`\n            };\n          }\n\n          // Add Approve Step\n          approveDescription = `Approve the Claim Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:false,\n            description:`Buy No-Claim tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          contractInfo = this.state.selectedCoverage.tokens[this.state.selectedAction].balancerPool;\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your Claim tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.<br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`\n            };\n          } else {\n            infoBox = {\n              text:`Claim tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.<br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`\n            };\n          }\n\n          // Add Approve Step\n          approveDescription = `Approve the No-Claim Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:false,\n            description:`Buy Claim tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n      if (contractInfo){\n        const transactionSucceeded = false;\n        this.setState({\n          steps,\n          infoBox,\n          contractInfo,\n          approveDescription,\n          transactionSucceeded\n        });\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n      let [\n        swapFee,\n        covTokens,\n        tokenPrice,\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.contractInfo.name,'getSwapFee'),\n        this.functionsUtil.genericContractCall(this.state.contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n        this.functionsUtil.genericContractCall(this.state.contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address]),\n      ]);\n\n      // console.log('getSwapInfo',this.state.contractInfo.name,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (tokenPrice && swapFee && covTokens){\n        swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n        return {\n          amount,\n          swapFee,\n          covTokens,\n          tokenPrice,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} Claim and No-Claim`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(swapInfo.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo,\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(swapInfo.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.receipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address );\n        const mintedNoClaimLog = tx.receipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address );\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} Claim</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} No-Claim</strong> tokens<br /><small><a href=\"${this.functionsUtil.getEtherscanTransactionUrl(tx.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">View in Etherscan</a></small>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.receipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address );\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><small><a href=\"${this.functionsUtil.getEtherscanTransactionUrl(tx.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">View in Etherscan</a></small>`\n        }\n      break;\n      case 'NoClaim':\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.receipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address );\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><small><a href=\"${this.functionsUtil.getEtherscanTransactionUrl(tx.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">View in Etherscan</a></small>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async loadData(){\n    const currTime = parseInt(new Date().getTime()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).format('YYYY-MM-DD HH:mm:ss');\n        output.push({\n          data:c,\n          value:expirationDate,\n          label:expirationDate\n        });\n      }\n      return output;\n    },[]);\n\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                              buttonStyle={{\n                                boxShadow:isMint ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy Claim'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                              buttonStyle={{\n                                boxShadow:isBuyClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy No-Claim'}\n                              imageSrc={'images/noclaim.svg'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                              buttonStyle={{\n                                boxShadow:isBuyNoClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.4',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in earnings\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    coverProtocol:{\n      enabled:false,\n      route:'cover-protocol',\n      label:'Cover Protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.png',\n      desc:'Buy Coverage for your Idle portfolio or provide liquidity to Cover Protocol',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collaterals:['DAI'],\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                },\n              },\n              NoClaim:{\n                abi:CovToken,\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until it is executed to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDeposit'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until it is converted to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(new Date().getTime()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        const value = this.integerValue(methodParams[0]);\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    // const contract = this.getContractByName(contractName);\n    // this.customLog('enableERC20',contractName,contract,address);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      cachedData = this.props.cachedData[key.toLowerCase()];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key.toLowerCase()]){\n        cachedData = cachedData[key.toLowerCase()];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  getBatchedDeposits = async (account=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'claimable' : 'pending';\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits\n            };\n          }\n        }\n      }\n    });\n    return batchedDeposits;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    /*\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    */\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      if (!this.BNify(tokenBalance).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(totalAllocation.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Protocol'}\n                  date={'December 10th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Governance'}\n                  date={'November 26th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport { Flex, Text, Heading, Box, Icon, Button, Link } from 'rimble-ui';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setState({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:apyLong,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            showLoader:false,\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n          {\n            idleTokenEnabled && !this.state.showRefreshIdleSpeed ? (\n              <Flex\n                width={1}\n                my={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Link\n                  hoverColor={'primary'}\n                  onClick={this.showRefreshIdleSpeed.bind(this)}\n                >\n                  Refresh Idle Speed\n                </Link>\n              </Flex>\n            ) : idleTokenEnabled && this.state.showRefreshIdleSpeed &&\n              <Flex\n                p={2}\n                width={1}\n                my={[2,3]}\n                borderRadius={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                backgroundColor={'#f3f6ff'}\n                boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  textAlign={'center'}\n                  fontSize={[1,'15px']}\n                >\n                  By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                </Text>\n                <ExecuteTransaction\n                  action={'Refresh'}\n                  Component={Button}\n                  parentProps={{\n                    mt:1\n                  }}\n                  componentProps={{\n                    size:'small',\n                    value:'REFRESH IDLE SPEED'\n                  }}\n                  params={[]}\n                  contractName={'IdleController'}\n                  methodName={'refreshIdleSpeeds'}\n                  {...this.props}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={1}\n                      name={'Done'}\n                      size={'1.4em'}\n                      color={this.props.theme.colors.transactions.status.completed}\n                    />\n                    <Text\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'copyColor'}\n                      textAlign={'center'}\n                    >\n                      Idle Speed Refreshed\n                    </Text>\n                  </Flex>\n                </ExecuteTransaction>\n              </Flex>\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Icon, Text, Box, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      {\n                        tool.image ? (\n                          <Image\n                            my={[0,2]}\n                            height={'2.2em'}\n                            src={tool.image}\n                          />\n                        ) : tool.icon && (\n                          <Icon\n                            my={[0,2]}\n                            size={'3em'}\n                            name={tool.icon}\n                          />\n                        )\n                      }\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    redeemUnderlying:true,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage(){\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    let withdrawSlippage = null;\n    let curveTokensAmounts = null;\n    let curveIdleTokensAmounts = null;\n    if (this.state.redeemUnevenAmounts){\n      [\n        curveTokensAmounts,\n        curveIdleTokensAmounts\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n        this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n      ]);\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,curveIdleTokensAmounts);\n    } else {\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false);\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const redeemableBalance = inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.times(100).plus(this.state.maxSlippage || this.functionsUtil.BNify(0)).div(100)));\n      curveTokensAmounts = {};\n      curveTokensAmounts[this.state.selectedToken] = redeemableBalance;\n    }\n\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    const tokenConfigChanged = JSON.stringify(prevState.tokenConfig) !== JSON.stringify(this.state.tokenConfig);\n    if (inputChanged || tokenConfigChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.loadSelectedTokenConfig();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    // if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    // } else {\n      // buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    // }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    // if (this.state.redeemUnevenAmounts){\n    inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    // } else {\n      // inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    // }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  selectDestinationToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async loadSelectedTokenConfig(){\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const tokenConfig = this.state.availableTokens[this.state.selectedToken];\n    const curveTokenConfig = curveConfig.availableTokens[tokenConfig.idle.token];\n    this.setState({\n      tokenConfig,\n      curveTokenConfig\n    });\n  }\n\n  async initToken(){\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const unevenAmounts = [];\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();;\n    const selectedToken = Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  async redeem(){\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    // const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = this.state.redeemUnderlying ? await this.functionsUtil.getCurveTokensAmounts(this.props.account,_amount,false,true) : await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.div(100))),this.state.tokenConfig.decimals);\n      // const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      // let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      // _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount, coin_index, min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_amount, coin_index, min_amount, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts/* && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage))*/ && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      {\n                        this.state.tokenConfig && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                              onChange={this.selectDestinationToken.bind(this)}\n                            />\n                          </Box>\n                      }\n                    </Box>\n                  )\n                }\n                {\n                  this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    width={'auto'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      ml={1}\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.showMaxSlippage && showSlippage && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Text>\n                          Choose max slippage:\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`Max additional slippage on top of the one shown below`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'cellTitle'}\n                            name={\"InfoOutline\"}\n                          />\n                        </Tooltip>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [0.2,0.5,1,5].map( slippage => (\n                            <FastBalanceSelector\n                              cardProps={{\n                                p:1\n                              }}\n                              textProps={{\n                                fontSize:1\n                              }}\n                              percentage={slippage}\n                              key={`selector_${slippage}`}\n                              onMouseDown={()=>this.setMaxSlippage(slippage)}\n                              isActive={this.state.maxSlippage === parseFloat(slippage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                    </Box>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'40%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ parseFloat(this.state.withdrawSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(3)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(3)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage.bind(this)}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'60%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {curveTokenName}\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem.bind(this)}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.enabled && typeof batchDepositInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchDepositDepositEnabled = batchDepositInfo.depositEnabled;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        {\n                                          (batchDepositEnabled && batchDepositDepositEnabled && !this.props.isMigrationTool) &&\n                                            <Flex\n                                              p={2}\n                                              my={2}\n                                              width={1}\n                                              borderRadius={2}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                              justifyContent={'center'}\n                                              backgroundColor={'white'}\n                                              border={`1px solid ${this.props.theme.colors.primary}`}\n                                            >\n                                              <Link\n                                                textAlign={'center'}\n                                                hoverColor={'primary'}\n                                                href={`/#/dashboard/tools/${batchDepositInfo.route}/${this.props.tokenConfig.idle.token}`}\n                                              >\n                                                Gas fees too high? Save gas with our Batch Deposit!\n                                              </Link>\n                                              <Icon\n                                                ml={1}\n                                                size={'1em'}\n                                                color={'primary'}\n                                                name={'LocalGasStation'}\n                                              />\n                                            </Flex>\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','performanceFee'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async getTokenApy(){\n    const tokenApy = this.state.tokenApy || await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (this.state.tokenApy !== tokenApy){\n      this.setState({\n        tokenApy\n      });\n    }\n    return tokenApy;\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.getTokenApy();\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.30,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.25],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.35,0.30],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.35,0.30],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  */\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Tooltip, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    depositSlippage:null,\n    redeemableBalance:null,\n    migrationContract:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    fastBalanceSelector:null,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.initToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = this.state.inputValue !== prevState.inputValue;\n    if (inputValueChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.idleTokenBalance ? this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage) : null;\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    const buttonDisabled = !amount || amount.gt(this.state.idleTokenBalance);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    const migrationContract = this.state.migrationContract;\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventAction: 'approve',\n            eventCategory: 'CurveDeposit',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              txHash:null,\n              loading:false\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              txHash\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.selectedToken,migrationContract.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:true\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  deposit = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const callbackDeposit = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventAction: this.props.selectedToken,\n        eventValue: inputValue.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackDeposit === 'function' && txSucceeded){\n        this.props.callbackDeposit(tx);\n      }\n    };\n\n    const callbackReceiptDeposit = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.migrationContract.name;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const depositParams = await this.getMigrationParams(_amount);\n\n    this.props.contractMethodSendWrapper(contractName, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.selectedToken]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.selectedToken,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n    }\n\n    return migrationParams;\n  }\n\n  async calculateSlippage(){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (inputValue){\n      let underlyingBalanceToDeposit = inputValue;\n      if (underlyingBalanceToDeposit){\n        const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n        if (idleTokenPrice){\n          underlyingBalanceToDeposit = underlyingBalanceToDeposit.times(idleTokenPrice);\n        }\n      } else {\n        underlyingBalanceToDeposit = this.functionsUtil.BNify(0);\n      }\n\n      const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(underlyingBalanceToDeposit,this.props.tokenConfig.decimals);\n      let depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n      if (depositSlippage){\n        depositSlippage = depositSlippage.times(100);\n      }\n\n      this.setState({\n        depositSlippage\n      });\n    }\n  }\n\n  async checkMigrationContractApproved(){\n    const migrationContract = this.state.migrationContract || await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      return await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n    return false;\n  }\n\n  async initToken(){\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    const migrationContractApproved = await this.checkMigrationContractApproved();\n\n    this.setState({\n      migrationContract,\n      migrationContractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken){\n      return null;\n    }\n\n    // const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    !this.state.migrationContractApproved ?\n                      this.state.processing.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            waitText={`Approve estimated in`}\n                            hash={this.state.processing.txHash}\n                            endMessage={`Finalizing approve request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                          />\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              To deposit your {this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approve.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    : this.state.processing.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Deposit estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing deposit request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={this.state.depositSlippage ? 'space-between' : 'flex-end'}\n                          >\n                            {\n                              this.state.depositSlippage && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    textAlign={'right'}\n                                    style={{\n                                      whiteSpace:'nowrap'\n                                    }}\n                                    color={ parseFloat(this.state.depositSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                  >\n                                    {\n                                      parseFloat(this.state.depositSlippage.toFixed(3)) === 0 ?\n                                        'No Slippage'\n                                      : `${ this.state.depositSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositSlippage.abs().toFixed(3)}%`\n                                    }\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.state.depositSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              )\n                            }\n                            {\n                              this.props.idleTokenBalance && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'flex-end'}\n                                >\n                                  <Link\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'right'}\n                                    hoverColor={'copyColor'}\n                                    onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    style={{\n                                      maxWidth:'100%',\n                                      overflow:'hidden',\n                                      whiteSpace:'nowrap',\n                                      textOverflow:'ellipsis'\n                                    }}\n                                  >\n                                    {this.props.idleTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.selectedToken}\n                                  </Link>\n                                </Flex>\n                              )\n                            }\n                          </Flex>\n                          <Input\n                            min={0}\n                            type={\"number\"}\n                            required={true}\n                            height={'3.4em'}\n                            borderRadius={2}\n                            fontWeight={500}\n                            boxShadow={'none !important'}\n                            placeholder={`Insert amount`}\n                            onChange={this.changeInputValue.bind(this)}\n                            border={`1px solid ${this.props.theme.colors.divider}`}\n                            value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                          />\n                          <Flex\n                            mt={2}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              [25,50,75,100].map( percentage => (\n                                <FastBalanceSelector\n                                  percentage={percentage}\n                                  key={`selector_${percentage}`}\n                                  onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                  isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                                />\n                              ))\n                            }\n                          </Flex>\n                          <Flex\n                            mt={2}\n                            justifyContent={'center'}\n                          >\n                            <RoundButton\n                              buttonProps={{\n                                mt:2,\n                                width:[1,1/2],\n                                disabled:this.state.buttonDisabled\n                              }}\n                              handleClick={this.deposit.bind(this)}\n                            >\n                              Deposit\n                            </RoundButton>\n                          </Flex>\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            /*\n            this.state.tokenConfig && this.state.redeemableBalance ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  isMigrationTool={true}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  showBalanceSelector={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n            */\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                if (tokenInfo){\n                  const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                  const color = tokenInfo.color.hex;\n                  const balance = point.data.balances[token];\n                  let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                  if (parseFloat(balance)>=0.01){\n                    return (\n                      <ChartCustomTooltipRow\n                        label={tokenName}\n                        color={color}\n                        key={`row_${token}`}\n                        value={`${formattedBalance}`}\n                      />\n                    );\n                  }\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        // this.loadTokensInfo();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account),\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'#3f4e9a'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = parseInt(this.props.proposal.id);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.functionsUtil.BNify(this.props.votes).lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                <Text\n                  mb={2}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Make sure you have been delegated before this proposal has been submitted\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.functionsUtil.BNify(this.props.balance).gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued' && parseInt(new Date().getTime()/1000)-parseInt(proposal.states[proposal.states.length-1].start_time)>=parseInt(this.props.timelockDelay);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && \n            <CastVote\n              {...this.props}\n              callback={this.props.loadData}\n            />\n        }\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    height={'100%'}\n                    width={`${forVotesPerc}%`}\n                    style={{background:'rgba(0, 211, 149, 1)'}}\n                    borderRadius={ parseFloat(forVotesPerc)===100 ? '20px' : '20px 0 0 20px' }\n                  >\n                  </Flex>\n                  <Flex\n                    height={'100%'}\n                    width={`${againstVotesPerc}%`}\n                    style={{background:'rgba(211, 0, 0, 1)'}}\n                    borderRadius={ parseFloat(againstVotesPerc)===100 ? '20px' : '0 20px 20px 0' }\n                  >\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      minWidth={'10%'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    blockNumber:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    timelockDelay:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:`https://gov.idle.finance`,\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        blockNumber,\n        timelockDelay,\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.functionsUtil.getBlockNumber(),\n        this.governanceUtil.getTimelockDelay(),\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        blockNumber,\n        timelockDelay,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      blockNumber={this.state.blockNumber}\n                      loadUserData={this.loadData.bind(this)}\n                      timelockDelay={this.state.timelockDelay}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    const cachedKeyFound = this.state.cachedData[key.toLowerCase()];\n    const currentTime = parseInt(new Date().getTime()/1000);\n\n    if (!cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) ){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  clearCachedData={this.clearCachedData.bind(this)}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__2Ym_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__foI3b\",\"headerContainer\":\"Landing_headerContainer__TvHkH\",\"bgContainer\":\"Landing_bgContainer__2WN2x\",\"button\":\"Landing_button__1Dxq1\",\"graySection\":\"Landing_graySection__2p8Tj\",\"whiteSection\":\"Landing_whiteSection__3bI3Y\",\"howItWork\":\"Landing_howItWork__1ukLM\",\"skewBg\":\"Landing_skewBg__gqJRL\",\"bgHeart\":\"Landing_bgHeart__NA46m\",\"platformLogo\":\"Landing_platformLogo__1hJaf\",\"bulletCard\":\"Landing_bulletCard__1JBcJ\",\"bulletCardFirst\":\"Landing_bulletCardFirst__HI7ri\",\"bulletCardActive\":\"Landing_bulletCardActive__AVHnI\",\"bulletPoint\":\"Landing_bulletPoint__uVUzZ\",\"bulletRight\":\"Landing_bulletRight__3vjg5\",\"bulletTop\":\"Landing_bulletTop__2qDPm\",\"bulletLeft\":\"Landing_bulletLeft__MYQV4\",\"bulletBottom\":\"Landing_bulletBottom__1vQq-\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__1bIB1\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__mqq0k\",\"bulletMobile\":\"Landing_bulletMobile__1dlqp\",\"carouselItem\":\"Landing_carouselItem__2leMl\",\"pos1\":\"Landing_pos1__tMo3K\",\"carouselItemMobile\":\"Landing_carouselItemMobile__2GqCc\",\"pos2\":\"Landing_pos2__2HmVh\",\"pos3\":\"Landing_pos3__28UmQ\",\"bentTube\":\"Landing_bentTube__2dNhi\",\"bounceArrow\":\"Landing_bounceArrow__3SKSY\",\"bounce\":\"Landing_bounce__z5RHk\",\"rebalanceCircle\":\"Landing_rebalanceCircle__2UwcI\",\"spin\":\"Landing_spin__1_Jg0\",\"carouselDesc\":\"Landing_carouselDesc__351uo\",\"selected\":\"Landing_selected__190kp\",\"carouselNav\":\"Landing_carouselNav__3oCdi\",\"footer\":\"Landing_footer__1wRkb\",\"socialIcon\":\"Landing_socialIcon__1nHuK\",\"gradientBackground\":\"Landing_gradientBackground__2DtpV\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3844Y\",\"bentTubeRight\":\"Landing_bentTubeRight__2akHv\",\"bentTubeActive\":\"Landing_bentTubeActive__3rtbt\",\"bg1\":\"Landing_bg1__23mxk\"};"],"sourceRoot":""}