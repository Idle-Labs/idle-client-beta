{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","RoundButton/RoundButton.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","utilities/GovernanceUtil.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/tokens/DAI.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","swapout","boost","receive","default","withdraw","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","getUnclaimedTokens","_callee4","rewards","_context4","fixTokenDecimals","decimals","getAPR","_ref5","_callee5","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref6","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args5","_context5","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref8","_callee6","idleTokenAddress","idleSpeeds","_context6","_x5","_ref9","_callee7","cachedData","blocksPerYear","distribution","_context7","getCachedData","address","_x6","getUserDistribution","_callee9","availableTokens","fixByFrequency","totalSpeed","_args9","_context9","selectedStrategy","availableStrategies","asyncForEach","keys","_ref11","_callee8","_ref12","_ref13","idleSpeed","userPoolShare","tokenSpeed","_context8","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee11","output","totalAllocation","_args11","_context11","_ref15","_callee10","_ref16","_ref17","idleApr","_context10","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","tokenPrice","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","style","ref","_ref14","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","pop","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","Text","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","portfolioEquityQuickSelection","getAccountPortfolio","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","tokenEarningsPerc","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","getTokensToMigrate","apyLong","riskScore","yieldFarming","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","borderBottom","src_AssetsList_AssetsList","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","image","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","RoundButton","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","approve","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","params","callbackMigrate","callbackReceiptMigrate","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","migrationCallback","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","biconomyChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","route","src_TxProgressBar_TxProgressBar","migrationImage","migrationIcon","migrationText","migrationTextProps","functions","functionInfo","functionName","src_RoundButton_RoundButton","approveText","src_FastBalanceSelector_FastBalanceSelector","TokenMigration","migrationSucceeded","changeFromToken","convertTool","goToSection","tokenInfo","strategy","baseTokenConfig","destTokenConfig","migrateFunction","setStrategyToken","urlParams","param2","src_Migrate_Migrate","connectAndValidateAccount","BatchMigration","canClaim","batchTotals","canDeposit","batchDeposits","claim","hasDeposited","batchCompleted","claimSucceeded","strategyAvailableTokens","batchId","callbackClaim","callbackReceiptClaim","checkBatchs","currBatchIndex","batchIndex","batchTotal","batchDeposit","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","logs","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","govTokenApr","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","path","poolContract","CurvePool","depositContract","CurveDeposit","zapContract","CurveZap","CurveSwap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","idleTUSDYield","showAUM","protocol","aprTooltipMode","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","tokens","DAI","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","USDC","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","YDAI+YUSDC+YUSDT+YTUSD","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","contract","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","batchMigration","claimEnabled","subComponent","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","pow","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","s","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","contractName","c","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args6","idleTokensBalance","getDepositTimestamp","deposits","_args7","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args10","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveCachedRequest","filterCurveTxs","_callee12","allAvailableTokens","etherscanTxsToStore","cachedRequestData","_args12","_context12","processStoredTxs","txInfo","_callee13","_args13","_context13","_callee14","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args14","_context14","tokenMigrationToolParams","curveEnabled","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","isSwapOutTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref18","_callee19","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args19","_context19","baseTokenAddress","_ref19","_callee18","minedTxs","_context18","_ref20","_callee17","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context17","getCurveTokenPrice","_ref21","_callee15","_context15","getTransactionReceipt","_x11","_x12","log","topics","baseTokensConfig","t2","_ref22","_callee16","_context16","_x13","_x14","_x9","_x10","_ref23","_callee25","txsToProcess","_args25","_context25","_ref24","_callee24","_context24","_ref25","_callee23","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context23","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref26","_callee20","_context20","txReceipt","_x19","_x20","_ref27","_callee21","_context21","_x21","_x22","raw","_ref28","_callee22","_context22","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","cachedRequests","_ref29","_callee26","error_callback","config","_args26","_context26","catch","_x25","_ref30","_callee27","return_data","_args27","_context27","_x26","code","errorCode","getArrayPath","array","prop","shift","configs","checkUrlOrigin","_ref31","_callee29","googleEventsInfo","originOk","currentNetwork","_args29","_context29","ga","_ref32","_callee28","_context28","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref33","_callee30","_context30","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref34","_callee31","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args31","_context31","_x33","_ref35","_callee32","_context32","_x34","aprs","allocations","reduce","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee33","contractPaused","_args33","_context33","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref37","_callee36","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context36","allocationPromise","_ref38","_callee34","_context34","lastAmounts","call","_x36","_x37","availableTokenPromise","_ref39","_callee35","_context35","_x38","_x39","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x35","_ref40","_callee37","_context37","_x40","_x41","_ref41","_callee38","signedParameters","callback_receipt","_contract$methods","_context38","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","soliditySHA3","toBuffer","_ref42","_callee39","biconomyInfo","res","_context39","headers","x-api-key","_x47","_ref43","_callee40","messageToSign","_this$getSignaturePar","_context40","getNonce","_address","personal","sign","_x48","_x49","_x50","_x51","sendBiconomyTx","_ref44","_callee41","EIP712Domain","MetaTransaction","domainData","dataToSign","_context41","getChainId","verifyingContract","types","domain","primaryType","currentProvider","jsonrpc","response","_x52","_x53","_x54","_x55","_x56","_ref45","_callee42","contractAddr","walletAddr","allowance","_context42","getAllowance","_x57","_x58","_x59","_ref46","_callee43","_context43","_x60","_x61","_x62","methodName","txData","toTwosComplement","_ref47","_callee44","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref48","_ref49","curveAvgBuyPrice","curveTokenBalance","_ref50","_ref51","amountLentCurve1","redeemableBalanceCurve","_ref52","_ref53","earningPerYear","_ref54","_ref55","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref56","_ref57","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref58","_ref59","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref60","_ref61","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref62","_ref63","amountLentCurve2","redeemableBalanceCurve1","_ref64","_ref65","redeemableBalance2","_args44","_context44","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x63","_x64","_x65","_x66","_ref66","_callee45","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args45","_context45","_x67","clearCachedData","expirationDate","_ref67","_callee46","_ref68","_ref69","idleTokensTotalSupply","userShare","_context46","_x68","_x69","_ref70","_callee47","fixDecimals","_ref71","_ref72","_args47","_context47","_x70","_x71","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref73","_callee48","_context48","getProtocolBalance","_x72","_x73","_ref74","_callee49","_context49","_x74","_x75","getAprs","_ref75","_callee50","_context50","_x76","genericIdleCall","_ref76","_callee51","callParams","_args51","_context51","_x77","estimateGas","_ref77","_callee52","_contract$methods2","_args52","_context52","_x78","_x79","getTxDecodedLogs","_ref78","_callee54","logAddr","decodeLogs","internalTransfers","_context54","_ref79","_callee53","_context53","_x84","_x85","_x80","_x81","_x82","_x83","getBlockNumber","_callee55","_context55","getContractPastEvents","_ref81","_callee56","_args56","_context56","getPastEvents","_x86","_x87","_ref82","_callee57","_contract$methods3","_args57","_context57","_x88","_x89","_ref83","_callee58","_args58","_context58","_x90","_x91","apr2apy","getUnlentBalance","_ref84","_callee59","unlentBalance","_context59","_x92","_ref85","_callee61","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args61","_context61","_ref86","_callee60","_ref87","_ref88","protocolBalance","_context60","_x94","_x95","getGovTokensBalances","total","getTokenConversionRate","_x93","getUniswapConversionRate_path","_ref89","_callee62","unires","_context62","_x96","_ref90","_callee63","tokenConfigFrom","tokenConfigDest","_context63","_x97","_x98","getCurveDepositedTokens","_ref91","_callee64","idleTokensBalances","remainingCurveTokens","_args64","_context64","_x99","getCurveUnevenTokenAmounts","_ref92","_callee65","amounts","max_burn_amount","unevenAmounts","_context65","getCurveSwapContract","_x100","_x101","_callee66","curveRatesInfo","_context66","strategyTokens","getCurveAPYContract","_callee67","blocksForPrevTokenPrice","_ref95","_ref96","_tokenPrice","prevTokenPrice","blocksMultiplier","curveAPR","_context67","getCurveTokenSupply","_callee68","_context68","getCurvePoolContract","_callee69","_args69","_context69","_callee70","_args70","_context70","_ref100","_callee71","_ref101","_ref102","_context71","_x102","getCurveDepositContract","_callee72","depositContractInfo","_context72","getCurveZapContract","_callee73","zapContractInfo","_context73","_callee74","poolContractInfo","_context74","_callee75","_context75","getCurveIdleTokensAmounts","_callee77","max_slippage","curveTokenSupply","curveTokenShare","_args77","_context77","_ref108","_callee76","curveIdleTokens","_context76","_x103","getCurveTokensAmounts","_callee79","_args79","_context79","_ref110","_callee78","_ref111","_ref112","totalTokenSupply","_context78","_x104","getCurveAmounts","_ref113","_callee81","_args81","_context81","_ref114","_callee80","_context80","_x107","_x105","_x106","getCurveTokenAmount","_ref115","_callee82","_args82","_context82","_x108","getCurveSlippage","_ref116","_callee83","uneven_amounts","_ref117","_ref118","virtualPrice","Sv","_args83","_context83","_x109","_x110","getCompAPR","_ref119","_callee84","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","cTokenInfo","compValue","compoundAllocation","_ref120","_ref121","_args84","_context84","_x111","_x112","getCompSpeed","_ref122","_callee85","cTokenAddress","compSpeed","_context85","_x113","_ref123","_callee86","annualize","compoundAllocationPerc","_ref124","_ref125","cTokenTotalSupply","compoundPoolShare","_args86","_context86","_x114","_callee88","_args88","_context88","_ref127","_callee87","_ref128","_ref129","_context87","_x115","_callee90","_args90","_context90","_ref131","_callee89","_ref132","_ref133","compApr","_context89","_x116","getTokensCsv","_callee93","csv","_context93","prototype","sum","pv","cv","avg","_ref135","_callee92","_context92","_ref136","_callee91","header","rows","aprAvg","scoreAvg","lastRow","_context91","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x118","_x117","_callee95","_args95","_context95","_ref138","_callee94","compTokenBalance","_context94","_x119","speed","getGovTokensUserDistributionSpeed","_ref139","_callee97","govTokensUserDistribution","_args97","_context97","_ref140","_callee96","_context96","_x121","_x120","_ref141","_callee99","govTokensDistribution","_args99","_context99","_ref142","_callee98","govSpeed","_context98","_x123","_x122","_ref143","_callee101","_args101","_context101","_ref144","_callee100","_ref145","_ref146","compoundInfo","_context100","_x126","_x124","_x125","_callee103","_args103","_context103","_ref148","_callee102","tokenConversionRate","fromTokenConfig","_context102","_x127","getGovTokenConfigByAddress","_callee104","checkShowBalance","govTokensEarnings","_args104","_context104","acc","govTokenAmount","_callee107","govTokenConfigForced","_args107","_context107","_ref151","_callee106","govTokensAmounts","_context106","_ref152","_callee105","govTokenAddress","_context105","_x129","_x130","_x128","_callee108","_args108","_context108","_callee109","_ref155","_ref156","gain","fees","_args109","_context109","_ref157","_callee110","_args110","_context110","_x131","getAggregatedStats","_callee114","avgAPR","totalAUM","_args114","_context114","_ref159","_callee113","_context113","_ref160","_callee112","oldTokenAllocation","oldTokenTotalAllocation","_context112","_ref161","_callee111","_ref162","_ref163","tokenBalanceConverted","_context111","_x134","_x133","_x132","getTokenApy","_ref164","_callee115","_context115","_x135","_callee118","_args118","_context118","_ref166","_callee117","_context117","_ref167","_callee116","_ref168","_context116","_x137","_x136","getProtocolsTokensBalances","_callee120","tokenBalances","minTokenBalance","protocolsTokens","_args120","_context120","_ref170","_callee119","tokenContract","_context119","_x138","_ref171","_callee121","_args121","_context121","_x139","_x140","_x141","_ref172","_callee122","_args122","_context122","_x142","_x143","_ref173","_callee123","_ref174","_ref175","_context123","protocolScore","getTokenScoreApi","_x144","_x145","_ref176","_callee124","_context124","_x146","_x147","_ref177","_callee126","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args126","_context126","_ref178","_callee125","addrIndex","protocolApr","protocolApy","_context125","_x149","_x150","_x148","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","src_ExtLink_ExtLink","react_router_dom","link","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","unshift","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","showAPYDisclaimer","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","initToken","curveConfig","withdrawSlippage","_amount","min_amounts","coin_index","min_amount","_token_amount","calculateSlippage","isGreaterThan","getFastBalanceSelector","setMaxSlippage","normalizedAmount","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","showSlippage","curveTokenName","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","tokenBalanceChanged","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_BuyModal","components_ShareModal","CardIconButton","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","approveCallback","normalizeIdleTokenBalance","idleTokenBalanceChanged","hasCurveTokens","getMigrationParams","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","txStatus","claimCallback","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","getCurrentDelegate","getCurrentVotes","votes","queueProposal","proposalId","_args8","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","getDelegatesChanges","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","getDelegatesVotesChanges","getDelegates","all_votes","delegateAccounts","_args16","getVotes","_e$returnValues","returnValues","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args20","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","DelegateVesting","newDelegate","delegatee","currentDelegate","idleTokenDelegated","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","governanceUtil","delegatesChanges","lastDelegateTx","delegator","toDelegate","revoke","changeDelegate","delegateTokens","setDelegateDifferentWallet","DashboardHeader","govModalOpened","isDashboard","isGovernance","governanceRoute","dashboardRoute","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","currTime","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","accountBalance","accountBalanceToken","accountBalanceLow","web3Infura","checkPreflight","rejectAccountConnect","accountValidationPending","rejectValidation","enableUnderlyingWithdraw","checkNetwork","userRejectedValidation","transactionConnectionModalIsOpen","openNoWeb3BrowserModal","openConnectionPendingModal","openUserRejectedConnectionModal","closeUserRejectedValidationModal","openUserRejectedValidationModal","openConnectionErrorModal","openTransactionErrorModal","openWrongNetworkModal","openLowFundsModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","contractInfo","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","net","getId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","now","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","checkNewDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","f","constant","inputs","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","_this5","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.93c156f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__1G5iO\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__3HlA5\",\"bgContainer\":\"PageNotFound_bgContainer__16Bn7\",\"list\":\"PageNotFound_list__rJgDr\",\"textContainer\":\"PageNotFound_textContainer__2hI3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__3RZVU\",\"empty\":\"Header_empty__1vLS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3loA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__30U-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__ciXDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__2Fu1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__3-tUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__fYFu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__Km4rQ\",\"newPill\":\"CryptoInput_newPill__6lu6P\",\"mainInput\":\"CryptoInput_mainInput__H7-Y7\",\"button\":\"CryptoInput_button__2c5mT\",\"gradientButton\":\"CryptoInput_gradientButton__3fhnj\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__33Yn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__XoI9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__4jmT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__1Tm4t\",\"headerBgFiller\":\"Tos_headerBgFiller__1Elt6\",\"bgContainer\":\"Tos_bgContainer__Bqzo0\",\"list\":\"Tos_list__2AtPw\",\"textContainer\":\"Tos_textContainer__xCW50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__3aRBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__Bj_aP\",\"hidden\":\"DashboardCard_hidden__13XeU\",\"interactive\":\"DashboardCard_interactive__34cn8\",\"active\":\"DashboardCard_active__3L5-p\",\"rainbow\":\"DashboardCard_rainbow__3z92q\",\"disabled\":\"DashboardCard_disabled__2kZdZ\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#4f4f4f',\n        swap:'#3d53c0',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        boost:'#ffff00',\n        receive:'#4f4f4f',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        withdraw:'#4f4f4f',\n      },\n      actionBg:{\n        send:'#dadada',\n        swap:'#ced6ff',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        boost:'#ff7979',\n        default:'#dadada',\n        receive:'#dadada',\n        migrate:'#ced6ff',\n        withdraw:'#dadada',\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds){\n      return this.functionsUtil.BNify(idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,distribution);\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n          }\n          output = oldContractBalanceFormatted;\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency}` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  fieldComponent={AssetField}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI');\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'Swap':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.value);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!amountLent.isNaN() && !idleTokenPrice.isNaN() && !earnings.isNaN() && !earningsYear.isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    // Load portfolio if account is set\n    if (this.props.account){\n\n      const newState = {};\n\n      // Get deposited tokens\n      const portfolio = await this.functionsUtil.getAccountPortfolio(this.props.availableTokens,this.props.account);\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = this.props.availableTokens[token];\n\n          const [tokenAprs,idleTokenPrice,tokenScore,avgBuyPrice,amountLent] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getIdleTokenPrice(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n          const tokenEarningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n          const tokenEarnings = amountLentToken ? amountLentToken.times(tokenEarningsPerc) : 0;\n\n          // console.log(token,idleTokenPrice.toFixed(5),avgBuyPrice[token].toFixed(5),amountLentToken.toFixed(5),tokenEarningsPerc.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,this.props.availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings.plus(govTokensTotalBalance);\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100)).plus(govTokensTotalBalance);\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <CountUp\n                    delay={0}\n                    decimals={8}\n                    decimal={'.'}\n                    separator={''}\n                    useEasing={false}\n                    duration={31536000}\n                    end={parseFloat(earningsEnd)}\n                    start={parseFloat(earningsStart)}\n                    formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,9,8) }\n                  >\n                    {({ countUpRef, start }) => (\n                      <span\n                        ref={countUpRef}\n                        style={{\n                          lineHeight:1,\n                          color:this.props.theme.colors.copyColor,\n                          fontFamily:this.props.theme.fonts.counter,\n                          fontWeight: this.props.isMobile ? 600 : 700,\n                          fontSize:this.props.isMobile ? '21px' : '1.7em',\n                        }}\n                      />\n                    )}\n                  </CountUp>\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      // Get tokens to migrate\n      const tokensToMigrate = await this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy);\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(this.props.availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Load and process Etherscan Txs\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      await this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(this.props.availableTokens))\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(this.props.availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <>\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.14],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          mainColor={'white'}\n          contrastColor={'white'}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          width={ this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px']) }\n          style={ this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null) }\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:false,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,this.props.tokenConfig,this.props.account);\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    const newState = {\n      loading,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod,params) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback();\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // console.log('Migration params',oldIdleTokens,minAmountForRebalance,migrationContractInfo.name, migrationMethod, migrationParams);\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          // Send migration tx\n          this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                    }}\n                  >\n                    {\n                      this.state.migrationContractApproved ? (\n                        this.state.processing.migrate.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              hash={this.state.processing.migrate.txHash}\n                              endMessage={`Finalizing migration request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                              sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        )\n                      ) : (\n                        this.state.processing.approve.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              waitText={`Approve estimated in`}\n                              hash={this.state.processing.approve.txHash}\n                              endMessage={`Finalizing approve request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.approveText ? this.props.approveText : (\n                                  <>To migrate your { !this.props.isMigrationTool ? 'old' : '' } {this.state.oldTokenName} you need to approve our Smart-Contract first.</>\n                                )\n                              }\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approveMigration.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        )\n                      )\n                    }\n                  </DashboardCard>\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\n// import GovernorAlphaComp from '../contracts/GovernorAlpha.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.2',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:4,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','y'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'YDAI+YUSDC+YUSDT+YTUSD',\n      token:'YDAI+YUSDC+YUSDT+YTUSD',\n      address:'0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0xbbc81d23ea2c3ec7e56d39296f0cbb648873a5d3'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveSwap,\n      name:'idleCurveSwap',\n      address:'0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x16de59092dae5ccf4a1e6439d611fd0653f0bd01',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0xd6ad7a6750a7593e092a9b218d66c0a814a3436e',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0x83f798e925bcd4017eb265844fddabb448f1707d',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:2\n        },\n      },\n      idleTUSDYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'TUSD',\n        token:'idleTUSDYield',\n        address:'0x73a052500105205d34daf004eab301916da8190f',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:3\n        },\n      },\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in earnings\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    /*\n    GovernanceCompound:{\n      abi:GovernorAlphaComp,\n      address:'0xc0da01a04c3f3e0be433606045bb7017a7323e38'\n    },\n    */\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'YDAI+YUSDC+YUSDT+YTUSD':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'iEarn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until it is converted to the Idle Token V4.',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Withdraw':\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hash.toLowerCase());\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hash.toLowerCase()] = tx;\n                }\n              });\n\n              // Save new etherscan txs\n              this.saveCachedRequest(etherscanBaseEndpoint,false,etherscanBaseTxs);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n\n        const etherscanTxsToStore = {};\n\n        Object.keys(etherscanTxs).forEach(txHash => {\n          const txInfo = etherscanTxs[txHash];\n          if (txInfo.blockNumber){\n            etherscanTxsToStore[txHash] = txInfo;\n          }\n        });\n\n        const cachedRequestData = {\n          data:{\n            result:etherscanTxsToStore\n          }\n        };\n\n        this.saveCachedRequest(etherscanBaseEndpoint,false,cachedRequestData);\n      }\n    }\n\n    // this.customLog('etherscanTxs',etherscanTxs);\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (enabledTokens.includes(tx.token.toUpperCase())) )\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        const isSwapOutTx = !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveEnabled && curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x2aa8f408dd1d4653ef3c5c38a4c9241e615d94b7208bbbe1d2e19b3053fae8de'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens);\n    }\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[]) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice/* && txHash.toLowerCase() !== '0x000000000000000000000000000'.toLowerCase()*/){\n          return false;\n        }\n        // const txFound = etherscanTxs.find(etherscanTx => (etherscanTx.hash === tx.transactionHash && etherscanTx.status === tx.status) );\n        // if (txFound){\n        //   return false;\n        // }\n\n        if (txPending && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n    }\n\n    if (localStorage) {\n      const timestamp = parseInt(new Date().getTime()/1000);\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      return this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return false;\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key]){\n        return cachedRequests[key].data;\n      }\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n        return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n      }\n    }\n\n    const data = await axios\n                        .get(endpoint)\n                        .catch(err => {\n                          console.error('Error getting request');\n                        });\n    if (localStorage) {\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      // this.customLog('executeMetaTransaction', [userAddress, functionSignature, messageToSign, `${messageToSign.length}`, r, s, v]);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    // const contract = this.getContractByName(contractName);\n    // this.customLog('enableERC20',contractName,contract,address);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n            output = tokenAllocation.totalAllocationWithUnlent;\n          }\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account),\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [idleTokenPrice1,idleTokenBalance2,govTokensBalance] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token),\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // this.customLog('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance.toFixed(4),output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedData(cachedDataKey);\n      if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    if (blockNumber !== 'latest'){\n      this.setCachedData(cachedDataKey,tokenPrice);\n    }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=120) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  getCachedData = (key,defaultValue=null) => {\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      const cachedData = this.props.cachedData[key.toLowerCase()];\n      if (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000)){\n        return cachedData.data;\n      }\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      return this.setCachedData(cachedDataKey,tokenBalance);\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationWithUnlent:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.protocolsBalances = protocolsBalances;\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',tokenConfigDest.address,price);\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          return this.setCachedData(cachedDataKey,curveApy);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,tokenConfig.decimals);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = tokenBalance;\n      });\n    }\n\n    return tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18)\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [virtualPrice,tokenAmount] = await Promise.all([\n        this.genericContractCall(migrationContract.name,'get_virtual_price'),\n        this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // this.customLog('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let compAPR = this.BNify(0);\n\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      let compoundAllocation = null;\n\n      cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'totalSupply');\n\n      // this.customLog('getCompAPR',cTokenInfo.token,cTokenIdleSupply ? cTokenIdleSupply.toString() : null);\n\n      if (cTokenIdleSupply){\n        let [tokenDecimals,exchangeRate] = await Promise.all([\n          this.getTokenDecimals(cTokenInfo.token),\n          this.genericContractCall(cTokenInfo.token,cTokenInfo.functions.exchangeRate.name,cTokenInfo.functions.exchangeRate.params)\n        ]);\n\n        if (exchangeRate){\n          exchangeRate = this.fixTokenDecimals(exchangeRate,cTokenInfo.decimals);\n          compoundAllocation = this.fixTokenDecimals(cTokenIdleSupply,tokenDecimals,exchangeRate);\n          // this.customLog('getCompAPR',token,compValue.toString(),cTokenIdleSupply.toString(),exchangeRate.toString(),tokenDecimals.toString(),compoundAllocation.toString());\n        }\n      }\n\n      if (compoundAllocation){\n        compoundAllocation = await this.convertTokenBalance(compoundAllocation,token,tokenConfig,false);\n        compAPR = compValue.div(compoundAllocation).times(100);\n\n        // this.customLog('getCompAPR',cTokenInfo.token,compConversionRate.toString(),compDistribution.toString(),compValue.toString(),cTokenIdleSupply.toString(),compoundAllocation.toString(),compAPR.toString()+'%');\n\n        this.setCachedData(cachedDataKey,compAPR);\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            this.setCachedData(cachedDataKey,compDistribution);\n\n            return compDistribution;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,unit) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (unit){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return govTokensEarnings;\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // this.customLog(strategy,token,totalAllocation.toString(),totalAUM.toString());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(totalAllocation.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // this.customLog(strategy,token,'old',oldTokenTotalAllocation.toString(),totalAUM.toString());\n          }\n\n          // debugger;\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        return this.setCachedData(cachedDataKey,conversionRate);\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          return this.setCachedData(cachedDataKey,tokenScore);\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          const compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n\n          if (compAPR){\n            protocolApr = protocolApr.plus(compAPR);\n            protocolApy = protocolApy.plus(compAPR);\n          }\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null,\n      protocolsAprs,\n      protocolsApys\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAprs);\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Finance'}\n                  date={'August 12th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Goverance'}\n                  date={'November 17th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\n// import Toggler from '../Toggler/Toggler';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Text, Heading, Box, Icon } from 'rimble-ui';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:showAPYDisclaimer ? apyLong : null,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            showLoader:false,\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Flex, Icon, Text, Box } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  state = {\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        my={[0,2]}\n                        size={'3em'}\n                        name={tool.icon}\n                      />\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const [curveTokensAmounts,curveIdleTokensAmounts] = await Promise.all([\n      this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n      this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n    ])\n\n    const amounts = this.state.redeemUnevenAmounts ? curveIdleTokensAmounts : null;\n\n    let withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,amounts);\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    if (inputChanged || selectedTokenChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    } else {\n      buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    if (this.state.redeemUnevenAmounts){\n      inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    } else {\n      inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  changeToken = selectedToken => {\n    const tokenConfig = this.state.availableTokens[selectedToken];\n    this.setState({\n      tokenConfig,\n      selectedToken\n    });\n  }\n\n  initToken = async () => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = curveConfig.availableTokens[this.props.tokenConfig.idle.token];\n\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    // const max_burn_amount = this.functionsUtil.normalizeTokenAmount(curveTokenBalance,curvePoolContract.decimals).toString();\n    // const amounts = this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,0);\n    // let redeemUnevenAmounts = await this.functionsUtil.getCurveUnevenTokenAmounts(amounts,max_burn_amount);\n\n    const unevenAmounts = [];\n\n    let tokenConfig = this.props.tokenConfig ? this.props.tokenConfig : this.state.tokenConfig;\n    let selectedToken = this.props.selectedToken ? this.props.selectedToken : this.state.selectedToken;\n    let availableTokens = this.state.availableTokens;\n\n    if (!availableTokens){\n      availableTokens = this.functionsUtil.getCurveAvailableTokens();\n      if (!selectedToken){\n        selectedToken = Object.keys(availableTokens)[0];\n        tokenConfig = availableTokens[selectedToken];\n      }\n    }\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curveTokenConfig,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  redeem = async () => {\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,_amount,false);\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount,amounts,coin_index,_token_amount.toFixed(),min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_token_amount, coin_index, min_amount], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage)) ? (\n                    <Box\n                      mb={3}\n                      width={1}\n                    >\n                      {\n                        !this.props.selectedToken && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              onChange={this.changeToken}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                            />\n                          </Box>\n                      }\n                      {\n                        this.state.showMaxSlippage && showSlippage && (\n                          <Box\n                            width={1}\n                            mt={ !this.props.selectedToken ? 2 : 0 }\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text>\n                                Choose max slippage:\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={`Max additional slippage on top of the one shown below`}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [0.2,0.5,1,5].map( slippage => (\n                                  <FastBalanceSelector\n                                    cardProps={{\n                                      p:1\n                                    }}\n                                    textProps={{\n                                      fontSize:1\n                                    }}\n                                    percentage={slippage}\n                                    key={`selector_${slippage}`}\n                                    onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                    isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Box>\n                        )\n                      }\n                    </Box>\n                  ) : this.state.redeemUnevenAmounts && this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    minWidth={'21%'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'50%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ this.state.withdrawSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(2)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(2)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'50%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {\n                          this.state.redeemUnevenAmounts ? `${this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} ${curveTokenName}` : `${this.state.redeemableBalance.toFixed(this.props.isMobile ? 2 : 4)} ${this.state.selectedToken}`\n                        }\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={`This fee is charged on positive returns generated by Idle`}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n           <Flex\n             mr={2}\n             p={['4px','7px']}\n             borderRadius={'50%'}\n             alignItems={'center'}\n             justifyContent={'center'}\n             backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n           >\n             <Icon\n               align={'center'}\n               color={'redeem'}\n               name={this.props.icon}\n               size={ this.props.isMobile ? '1.2em' : '1.4em' }\n             />\n           </Flex>\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async getTokenApy(){\n    const tokenApy = this.state.tokenApy || await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (this.state.tokenApy !== tokenApy){\n      this.setState({\n        tokenApy\n      });\n    }\n    return tokenApy;\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.getTokenApy();\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.30,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.25],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.35,0.30],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.35,0.30],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  */\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Tooltip } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    maxSlippage:0.2,\n    tokenConfig:null,\n    depositSlippage:null,\n    redeemableBalance:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n\n      // console.log(this.state.tokenConfig.idle.token,toMigrate,migrationParams);\n    }\n\n    return migrationParams;\n  }\n\n  async initToken(){\n\n    let migrationContractApproved = false;\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      // Check migration contract\n      migrationContractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n\n    let redeemableBalance = this.functionsUtil.BNify(this.props.idleTokenBalance);\n    if (redeemableBalance){\n      const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n      if (idleTokenPrice){\n        redeemableBalance = redeemableBalance.times(idleTokenPrice);\n      }\n    } else {\n      redeemableBalance = this.functionsUtil.BNify(0);\n    }\n\n    const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(redeemableBalance,18);\n    const depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n\n    // Copy token config\n    const tokenConfig = Object.assign({},this.props.tokenConfig);\n\n    // Add migration info\n    const oldContract = {\n      abi:this.props.tokenConfig.idle.abi,\n      name:this.props.tokenConfig.idle.token,\n      token:this.props.tokenConfig.idle.token,\n      address:this.props.tokenConfig.idle.address\n    };\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n    };\n\n    this.setState({\n      tokenConfig,\n      depositSlippage,\n      redeemableBalance,\n      migrationContractApproved\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokenConfig){\n      return null;\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    this.state.migrationContractApproved && (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            this.state.tokenConfig ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  isMigrationTool={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool ${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                const color = tokenInfo.color.hex;\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={tokenName}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, iEarn and Idle V2 with just one transaction and with no cost.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,totalSupply,null);\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.BNify(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,delegates)\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        state: \"Active\",\n        end_time: null,\n        start_time: createdState.start_time,\n        trx_hash: null\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          state: \"Canceled\",\n          end_time: null,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            state: \"Succeeded\",\n            end_time: null,\n            trx_hash: null,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            state: \"Queued\",\n            end_time: null,\n            start_time: queuedBlockInfo.timestamp,\n            trx_hash: queuedEvent.transactionHash\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            state: \"Executed\",\n            end_time: null,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    idleTokenDelegated:false,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account),\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let idleTokenDelegated = false;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Token Delegated\n        idleTokenDelegated = currentDelegate && currentDelegate.toLowerCase() === this.props.account.toLowerCase();\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        idleTokenDelegated,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'#3f4e9a'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            this.state.vestingContractDelegated && this.state.delegatee ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  Follow the next steps to delegate your tokens:\n                </Text>\n                <Flex\n                  mt={1}\n                  mb={2}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  {\n                    this.state.delegateDifferentWallet ? (\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                    ) : (\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.idleTokenDelegated ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.idleTokenDelegated ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Delegate Tokens\n                        </Text>\n                      </Flex>\n                    )\n                  }\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.vestingContractDelegated ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.vestingContractDelegated ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={1}\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'#3f4e9a'}\n                      textAlign={'left'}\n                    >\n                      Delegate Vesting\n                    </Text>\n                  </Flex>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && !this.state.vestingContractDelegated && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : this.state.vestingContractDelegated ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          ) : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          ) : !this.state.vestingContractDelegated && (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        {\n          !this.state.vestingContractDelegated && \n            <Checkbox\n              mt={1}\n              required={false}\n              color={'#f3f6ff'}\n              label={`Delegate to different wallet`}\n              checked={this.state.delegateDifferentWallet}\n              onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n            />\n        }\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enaugh funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  contracts: [],\n  account: {},\n  accountBalance: {},\n  accountBalanceToken: {},\n  accountBalanceLow: {},\n  tokenConfig: {},\n  web3: {},\n  web3Infura: {},\n  initWeb3: () => {},\n  biconomy: {},\n  simpleID: {},\n  initSimpleID: () => {},\n  transactions: {},\n  checkPreflight: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  initializeContracts: () => {},\n  getAccountBalance: () => {},\n  getTokenDecimals: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  accountInizialized: false,\n  contractsInitialized: false,\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {}\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {},\n      connectionError: {}\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {}\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils = () => {\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n\n    // window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if (connectorName === 'Infura' && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // if (call_callback){\n        //   alert('confirmationCallback')\n        // }\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas  } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          // this.functionsUtil.customLog('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      // this.functionsUtil.customLog('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    if (['pending','success','confirmed'].includes(transaction.status.toLowerCase())){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.account}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.BNify(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.BNify(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    console.log(inputs,action);\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = this.props.proposal.id;\n\n    console.log(proposalId,vote);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.props.votes.lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={2}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.props.balance.gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued';\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        <CastVote\n          {...this.props}\n          callback={this.props.loadData}\n        />\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                    borderRadius={'20px 0 0 20px'}\n                    style={{background:'rgba(0, 211, 149, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      borderRadius={'20px 0 0 20px'}\n                      style={{background:'rgba(0, 211, 149, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                    borderRadius={'0 20px 20px 0'}\n                    style={{background:'rgba(211, 0, 0, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${againstVotesPerc}%`}\n                      borderRadius={'0 20px 20px 0'}\n                      style={{background:'rgba(211, 0, 0, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      minWidth={'10%'}\n                      width={`${againstVotesPerc}%`}\n                      justifyContent={parseFloat(againstVotesPerc)<=10 ? 'flex-start' : 'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Blockie } from \"rimble-ui\";\nimport StatsCard from '../../StatsCard/StatsCard';\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={delegate.delegate}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:`https://gov.idle.finance`,\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      loadUserData={this.loadData.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import ERC20 from '../abis/tokens/DAI.js';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null) => {\n    if (!this.state.cachedData[key.toLowerCase()] || JSON.stringify(this.state.cachedData[key.toLowerCase()]) !== JSON.stringify(data)){\n      const expirationDate = TTL ? parseInt(new Date().getTime()/1000)+(TTL) : null;\n      // console.log('setCachedData',key);\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1fxux\",\"link\":\"Footer_link__2ZyxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__3LsWh\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__3buhf\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1ZEqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__3FM3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__ShSGs\",\"genericSelector\":\"GenericSelector_genericSelector__36y-l\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__16UDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__6-FCa\",\"headerContainer\":\"Landing_headerContainer__2su89\",\"bgContainer\":\"Landing_bgContainer__srd1P\",\"button\":\"Landing_button__37B6t\",\"graySection\":\"Landing_graySection__1Qz0S\",\"whiteSection\":\"Landing_whiteSection__1mX5m\",\"howItWork\":\"Landing_howItWork__2sVu4\",\"skewBg\":\"Landing_skewBg__d4FEJ\",\"bgHeart\":\"Landing_bgHeart__1Ylz-\",\"platformLogo\":\"Landing_platformLogo__3kL_M\",\"bulletCard\":\"Landing_bulletCard__z5toL\",\"bulletCardFirst\":\"Landing_bulletCardFirst__1kr7D\",\"bulletCardActive\":\"Landing_bulletCardActive__1-c54\",\"bulletPoint\":\"Landing_bulletPoint__sXkeK\",\"bulletRight\":\"Landing_bulletRight__24r1L\",\"bulletTop\":\"Landing_bulletTop__1D98q\",\"bulletLeft\":\"Landing_bulletLeft__Yeirx\",\"bulletBottom\":\"Landing_bulletBottom__OdDmd\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__WOkHg\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__1t9j_\",\"bulletMobile\":\"Landing_bulletMobile__2_A1d\",\"carouselItem\":\"Landing_carouselItem__iAvJJ\",\"pos1\":\"Landing_pos1__BEcBQ\",\"carouselItemMobile\":\"Landing_carouselItemMobile__9dvMX\",\"pos2\":\"Landing_pos2__2VA0X\",\"pos3\":\"Landing_pos3__2cKcn\",\"bentTube\":\"Landing_bentTube__10LD1\",\"bounceArrow\":\"Landing_bounceArrow__1mS5k\",\"bounce\":\"Landing_bounce__3i1p8\",\"rebalanceCircle\":\"Landing_rebalanceCircle__5B-sA\",\"spin\":\"Landing_spin__itue9\",\"carouselDesc\":\"Landing_carouselDesc__10ELo\",\"selected\":\"Landing_selected__3Tblg\",\"carouselNav\":\"Landing_carouselNav__1KJNZ\",\"footer\":\"Landing_footer__U-Goi\",\"socialIcon\":\"Landing_socialIcon__1AsMX\",\"gradientBackground\":\"Landing_gradientBackground__3tbgP\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3pniz\",\"bentTubeRight\":\"Landing_bentTubeRight__17O9r\",\"bentTubeActive\":\"Landing_bentTubeActive__1ZzDg\",\"bg1\":\"Landing_bg1__xhb36\"};"],"sourceRoot":""}